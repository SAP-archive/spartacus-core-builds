{"version":3,"file":"client-error-handling.service.d.ts","sources":["client-error-handling.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { ClientToken } from '../models/client-token.model';\nimport { ClientTokenService } from './client-token.service';\n/**\n * Service for handling `Authorization` header and errors for requests that\n * require client token (eg. user registration).\n */\nexport declare class ClientErrorHandlingService {\n    protected clientTokenService: ClientTokenService;\n    constructor(clientTokenService: ClientTokenService);\n    /**\n     * Refreshes client token and retries the request with the new token.\n     *\n     * @param request\n     * @param httpHandler\n     */\n    handleExpiredClientToken(request: HttpRequest<any>, next: HttpHandler): Observable<any>;\n    /**\n     * Clones the requests and provided `Authorization` header.\n     *\n     * @param request\n     * @param token\n     */\n    protected createNewRequestWithNewToken(request: HttpRequest<any>, token: ClientToken): HttpRequest<any>;\n}\n"]}