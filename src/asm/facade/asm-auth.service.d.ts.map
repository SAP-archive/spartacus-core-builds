{"version":3,"file":"asm-auth.service.d.ts","sources":["/home/travis/build/SAP/cloud-commerce-spartacus-storefront/dist/core/src/asm/facade/asm-auth.service.d.ts"],"sourcesContent":["import { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../../auth/facade/auth.service';\nimport { UserToken } from '../../auth/models/token-types.model';\nimport { StateWithAsm } from '../store/asm-state';\nexport declare class AsmAuthService {\n    protected store: Store<StateWithAsm>;\n    protected authService: AuthService;\n    constructor(store: Store<StateWithAsm>, authService: AuthService);\n    /**\n     * Loads a user token for a customer support agent\n     * @param userId\n     * @param password\n     */\n    authorizeCustomerSupportAgent(userId: string, password: string): void;\n    /**\n     * Starts an ASM customer emulation session.\n     * A customer emulation session is stoped by calling logout().\n     * @param customerSupportAgentToken\n     * @param customerId\n     */\n    startCustomerEmulationSession(customerSupportAgentToken: UserToken, customerId: string): void;\n    /**\n     * Utility function to determine if a given token is a customer emulation session token.\n     * @param userToken\n     */\n    isCustomerEmulationToken(userToken: UserToken): boolean;\n    /**\n     * Returns the customer support agent's token\n     */\n    getCustomerSupportAgentToken(): Observable<UserToken>;\n    /**\n     * Returns the customer support agent's token loading status\n     */\n    getCustomerSupportAgentTokenLoading(): Observable<boolean>;\n    /**\n     * Logout a customer support agent\n     */\n    logoutCustomerSupportAgent(): void;\n}\n"],"names":[],"mappings":"AAAA;;;;;;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;"}