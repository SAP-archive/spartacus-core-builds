{"version":3,"file":"checkout-delivery.service.d.ts","sources":["checkout-delivery.service.d.ts"],"names":[],"mappingssourcesContent":["import { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { UserIdService } from '../../auth/user-auth/facade/user-id.service';\nimport { ActiveCartService } from '../../cart/facade/active-cart.service';\nimport { Address, AddressValidation } from '../../model/address.model';\nimport { DeliveryMode } from '../../model/order.model';\nimport { StateWithProcess } from '../../process/store/process-state';\nimport { LoaderState } from '../../state/utils/loader/loader-state';\nimport { StateWithCheckout } from '../store/checkout-state';\nexport declare class CheckoutDeliveryService {\n    protected checkoutStore: Store<StateWithCheckout | StateWithProcess<void>>;\n    protected activeCartService: ActiveCartService;\n    protected userIdService: UserIdService;\n    constructor(checkoutStore: Store<StateWithCheckout | StateWithProcess<void>>, activeCartService: ActiveCartService, userIdService: UserIdService);\n    /**\n     * Get supported delivery modes\n     */\n    getSupportedDeliveryModes(): Observable<DeliveryMode[]>;\n    /**\n     * Get selected delivery mode\n     */\n    getSelectedDeliveryMode(): Observable<DeliveryMode>;\n    /**\n     * Get selected delivery mode code\n     */\n    getSelectedDeliveryModeCode(): Observable<string>;\n    /**\n     * Get delivery address\n     */\n    getDeliveryAddress(): Observable<Address>;\n    /**\n     * Get status about successfully set Delivery Address\n     */\n    getSetDeliveryAddressProcess(): Observable<LoaderState<void>>;\n    /**\n     * Clear info about process of setting Delivery Address\n     */\n    resetSetDeliveryAddressProcess(): void;\n    /**\n     * Get status about of set Delivery Mode process\n     */\n    getSetDeliveryModeProcess(): Observable<LoaderState<void>>;\n    /**\n     * Clear info about process of setting Delivery Mode\n     */\n    resetSetDeliveryModeProcess(): void;\n    /**\n     * Clear info about process of setting Supported Delivery Modes\n     */\n    resetLoadSupportedDeliveryModesProcess(): void;\n    /**\n     * Get status about of set supported Delivery Modes process\n     */\n    getLoadSupportedDeliveryModeProcess(): Observable<LoaderState<void>>;\n    /**\n     * Clear supported delivery modes loaded in last checkout process\n     */\n    clearCheckoutDeliveryModes(): void;\n    /**\n     * Get address verification results\n     */\n    getAddressVerificationResults(): Observable<AddressValidation | string>;\n    /**\n     * Create and set a delivery address using the address param\n     * @param address : the Address to be created and set\n     */\n    createAndSetAddress(address: Address): void;\n    /**\n     * Load supported delivery modes\n     */\n    loadSupportedDeliveryModes(): void;\n    /**\n     * Set delivery mode\n     * @param mode : The delivery mode to be set\n     */\n    setDeliveryMode(mode: string): void;\n    /**\n     * Verifies the address\n     * @param address : the address to be verified\n     */\n    verifyAddress(address: Address): void;\n    /**\n     * Set delivery address\n     * @param address : The address to be set\n     */\n    setDeliveryAddress(address: Address): void;\n    /**\n     * Clear address verification results\n     */\n    clearAddressVerificationResults(): void;\n    /**\n     * Clear address already setup in last checkout process\n     */\n    clearCheckoutDeliveryAddress(): void;\n    /**\n     * Clear selected delivery mode setup in last checkout process\n     */\n    clearCheckoutDeliveryMode(): void;\n    /**\n     * Clear address and delivery mode already setup in last checkout process\n     */\n    clearCheckoutDeliveryDetails(): void;\n    protected actionAllowed(): boolean;\n}\n"]}