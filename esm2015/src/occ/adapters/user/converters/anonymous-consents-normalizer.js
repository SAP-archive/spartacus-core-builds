import { Injectable } from '@angular/core';
import { AnonymousConsentsService } from '../../../../anonymous-consents/facade/anonymous-consents.service';
import * as i0 from "@angular/core";
import * as i1 from "../../../../anonymous-consents/facade/anonymous-consents.service";
export class AnonymousConsentNormalizer {
    constructor(anonymousConsentsService) {
        this.anonymousConsentsService = anonymousConsentsService;
    }
    convert(source, target = []) {
        target = this.anonymousConsentsService.decodeAndDeserialize(source);
        return target;
    }
}
AnonymousConsentNormalizer.ɵprov = i0.ɵɵdefineInjectable({ factory: function AnonymousConsentNormalizer_Factory() { return new AnonymousConsentNormalizer(i0.ɵɵinject(i1.AnonymousConsentsService)); }, token: AnonymousConsentNormalizer, providedIn: "root" });
AnonymousConsentNormalizer.decorators = [
    { type: Injectable, args: [{ providedIn: 'root' },] }
];
AnonymousConsentNormalizer.ctorParameters = () => [
    { type: AnonymousConsentsService }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5vbnltb3VzLWNvbnNlbnRzLW5vcm1hbGl6ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlL3NyYy9vY2MvYWRhcHRlcnMvdXNlci9jb252ZXJ0ZXJzL2Fub255bW91cy1jb25zZW50cy1ub3JtYWxpemVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sa0VBQWtFLENBQUM7OztBQUs1RyxNQUFNLE9BQU8sMEJBQTBCO0lBRXJDLFlBQXNCLHdCQUFrRDtRQUFsRCw2QkFBd0IsR0FBeEIsd0JBQXdCLENBQTBCO0lBQUcsQ0FBQztJQUU1RSxPQUFPLENBQUMsTUFBYyxFQUFFLFNBQTZCLEVBQUU7UUFDckQsTUFBTSxHQUFHLElBQUksQ0FBQyx3QkFBd0IsQ0FBQyxvQkFBb0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNwRSxPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDOzs7O1lBUkYsVUFBVSxTQUFDLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRTs7O1lBSnpCLHdCQUF3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFub255bW91c0NvbnNlbnRzU2VydmljZSB9IGZyb20gJy4uLy4uLy4uLy4uL2Fub255bW91cy1jb25zZW50cy9mYWNhZGUvYW5vbnltb3VzLWNvbnNlbnRzLnNlcnZpY2UnO1xuaW1wb3J0IHsgQW5vbnltb3VzQ29uc2VudCB9IGZyb20gJy4uLy4uLy4uLy4uL21vZGVsL2NvbnNlbnQubW9kZWwnO1xuaW1wb3J0IHsgQ29udmVydGVyIH0gZnJvbSAnLi4vLi4vLi4vLi4vdXRpbC9jb252ZXJ0ZXIuc2VydmljZSc7XG5cbkBJbmplY3RhYmxlKHsgcHJvdmlkZWRJbjogJ3Jvb3QnIH0pXG5leHBvcnQgY2xhc3MgQW5vbnltb3VzQ29uc2VudE5vcm1hbGl6ZXJcbiAgaW1wbGVtZW50cyBDb252ZXJ0ZXI8c3RyaW5nLCBBbm9ueW1vdXNDb25zZW50W10+IHtcbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGFub255bW91c0NvbnNlbnRzU2VydmljZTogQW5vbnltb3VzQ29uc2VudHNTZXJ2aWNlKSB7fVxuXG4gIGNvbnZlcnQoc291cmNlOiBzdHJpbmcsIHRhcmdldDogQW5vbnltb3VzQ29uc2VudFtdID0gW10pOiBBbm9ueW1vdXNDb25zZW50W10ge1xuICAgIHRhcmdldCA9IHRoaXMuYW5vbnltb3VzQ29uc2VudHNTZXJ2aWNlLmRlY29kZUFuZERlc2VyaWFsaXplKHNvdXJjZSk7XG4gICAgcmV0dXJuIHRhcmdldDtcbiAgfVxufVxuIl19