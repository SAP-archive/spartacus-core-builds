import { CheckoutActions } from '../actions/index';
export const initialState = {
    entities: {},
    selected: undefined,
};
export function reducer(state = initialState, action) {
    switch (action.type) {
        case CheckoutActions.LOAD_PAYMENT_TYPES_SUCCESS: {
            const paymentTypes = action.payload;
            const entities = paymentTypes.reduce((paymentTypesEntities, name) => {
                return Object.assign(Object.assign({}, paymentTypesEntities), { [name.code]: name });
            }, Object.assign({}, state.entities));
            return Object.assign(Object.assign({}, state), { entities });
        }
        case CheckoutActions.SET_PAYMENT_TYPE_SUCCESS: {
            return Object.assign(Object.assign({}, state), { selected: action.payload.paymentType.code });
        }
        case CheckoutActions.CLEAR_CHECKOUT_DATA: {
            return Object.assign(Object.assign({}, state), { selected: undefined });
        }
        case CheckoutActions.CHECKOUT_CLEAR_MISCS_DATA: {
            return initialState;
        }
    }
    return state;
}
export const getPaymentTypesEntites = (state) => state.entities;
export const getSelectedPaymentType = (state) => state.selected;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGF5bWVudC10eXBlcy5yZWR1Y2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZS9zcmMvY2hlY2tvdXQvc3RvcmUvcmVkdWNlcnMvcGF5bWVudC10eXBlcy5yZWR1Y2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUduRCxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQXNCO0lBQzdDLFFBQVEsRUFBRSxFQUFFO0lBQ1osUUFBUSxFQUFFLFNBQVM7Q0FDcEIsQ0FBQztBQUVGLE1BQU0sVUFBVSxPQUFPLENBQ3JCLEtBQUssR0FBRyxZQUFZLEVBQ3BCLE1BRzBDO0lBRTFDLFFBQVEsTUFBTSxDQUFDLElBQUksRUFBRTtRQUNuQixLQUFLLGVBQWUsQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO1lBQy9DLE1BQU0sWUFBWSxHQUFrQixNQUFNLENBQUMsT0FBTyxDQUFDO1lBQ25ELE1BQU0sUUFBUSxHQUFHLFlBQVksQ0FBQyxNQUFNLENBQ2xDLENBQ0Usb0JBQXFELEVBQ3JELElBQWlCLEVBQ2pCLEVBQUU7Z0JBQ0YsdUNBQ0ssb0JBQW9CLEtBQ3ZCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLElBQUksSUFDakI7WUFDSixDQUFDLG9CQUVJLEtBQUssQ0FBQyxRQUFRLEVBRXBCLENBQUM7WUFFRix1Q0FDSyxLQUFLLEtBQ1IsUUFBUSxJQUNSO1NBQ0g7UUFFRCxLQUFLLGVBQWUsQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO1lBQzdDLHVDQUNLLEtBQUssS0FDUixRQUFRLEVBQUUsTUFBTSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsSUFBSSxJQUN6QztTQUNIO1FBRUQsS0FBSyxlQUFlLENBQUMsbUJBQW1CLENBQUMsQ0FBQztZQUN4Qyx1Q0FDSyxLQUFLLEtBQ1IsUUFBUSxFQUFFLFNBQVMsSUFDbkI7U0FDSDtRQUVELEtBQUssZUFBZSxDQUFDLHlCQUF5QixDQUFDLENBQUM7WUFDOUMsT0FBTyxZQUFZLENBQUM7U0FDckI7S0FDRjtJQUVELE9BQU8sS0FBSyxDQUFDO0FBQ2YsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLHNCQUFzQixHQUFHLENBQUMsS0FBd0IsRUFBRSxFQUFFLENBQ2pFLEtBQUssQ0FBQyxRQUFRLENBQUM7QUFDakIsTUFBTSxDQUFDLE1BQU0sc0JBQXNCLEdBQUcsQ0FBQyxLQUF3QixFQUFFLEVBQUUsQ0FDakUsS0FBSyxDQUFDLFFBQVEsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBheW1lbnRUeXBlIH0gZnJvbSAnLi4vLi4vLi4vbW9kZWwvY2FydC5tb2RlbCc7XG5pbXBvcnQgeyBDaGVja291dEFjdGlvbnMgfSBmcm9tICcuLi9hY3Rpb25zL2luZGV4JztcbmltcG9ydCB7IFBheW1lbnRUeXBlc1N0YXRlIH0gZnJvbSAnLi4vY2hlY2tvdXQtc3RhdGUnO1xuXG5leHBvcnQgY29uc3QgaW5pdGlhbFN0YXRlOiBQYXltZW50VHlwZXNTdGF0ZSA9IHtcbiAgZW50aXRpZXM6IHt9LFxuICBzZWxlY3RlZDogdW5kZWZpbmVkLFxufTtcblxuZXhwb3J0IGZ1bmN0aW9uIHJlZHVjZXIoXG4gIHN0YXRlID0gaW5pdGlhbFN0YXRlLFxuICBhY3Rpb246XG4gICAgfCBDaGVja291dEFjdGlvbnMuUGF5bWVudFR5cGVzQWN0aW9uXG4gICAgfCBDaGVja291dEFjdGlvbnMuQ2xlYXJDaGVja291dERhdGFcbiAgICB8IENoZWNrb3V0QWN0aW9ucy5DaGVja291dENsZWFyTWlzY3NEYXRhXG4pOiBQYXltZW50VHlwZXNTdGF0ZSB7XG4gIHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcbiAgICBjYXNlIENoZWNrb3V0QWN0aW9ucy5MT0FEX1BBWU1FTlRfVFlQRVNfU1VDQ0VTUzoge1xuICAgICAgY29uc3QgcGF5bWVudFR5cGVzOiBQYXltZW50VHlwZVtdID0gYWN0aW9uLnBheWxvYWQ7XG4gICAgICBjb25zdCBlbnRpdGllcyA9IHBheW1lbnRUeXBlcy5yZWR1Y2UoXG4gICAgICAgIChcbiAgICAgICAgICBwYXltZW50VHlwZXNFbnRpdGllczogeyBbY29kZTogc3RyaW5nXTogUGF5bWVudFR5cGUgfSxcbiAgICAgICAgICBuYW1lOiBQYXltZW50VHlwZVxuICAgICAgICApID0+IHtcbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgLi4ucGF5bWVudFR5cGVzRW50aXRpZXMsXG4gICAgICAgICAgICBbbmFtZS5jb2RlXTogbmFtZSxcbiAgICAgICAgICB9O1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgLi4uc3RhdGUuZW50aXRpZXMsXG4gICAgICAgIH1cbiAgICAgICk7XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICBlbnRpdGllcyxcbiAgICAgIH07XG4gICAgfVxuXG4gICAgY2FzZSBDaGVja291dEFjdGlvbnMuU0VUX1BBWU1FTlRfVFlQRV9TVUNDRVNTOiB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgc2VsZWN0ZWQ6IGFjdGlvbi5wYXlsb2FkLnBheW1lbnRUeXBlLmNvZGUsXG4gICAgICB9O1xuICAgIH1cblxuICAgIGNhc2UgQ2hlY2tvdXRBY3Rpb25zLkNMRUFSX0NIRUNLT1VUX0RBVEE6IHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICBzZWxlY3RlZDogdW5kZWZpbmVkLFxuICAgICAgfTtcbiAgICB9XG5cbiAgICBjYXNlIENoZWNrb3V0QWN0aW9ucy5DSEVDS09VVF9DTEVBUl9NSVNDU19EQVRBOiB7XG4gICAgICByZXR1cm4gaW5pdGlhbFN0YXRlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBzdGF0ZTtcbn1cblxuZXhwb3J0IGNvbnN0IGdldFBheW1lbnRUeXBlc0VudGl0ZXMgPSAoc3RhdGU6IFBheW1lbnRUeXBlc1N0YXRlKSA9PlxuICBzdGF0ZS5lbnRpdGllcztcbmV4cG9ydCBjb25zdCBnZXRTZWxlY3RlZFBheW1lbnRUeXBlID0gKHN0YXRlOiBQYXltZW50VHlwZXNTdGF0ZSkgPT5cbiAgc3RhdGUuc2VsZWN0ZWQ7XG4iXX0=