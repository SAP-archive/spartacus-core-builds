{"version":3,"file":"occ-fields.service.d.ts","sources":["/home/travis/build/SAP/cloud-commerce-spartacus-storefront/dist/core/src/occ/services/occ-fields.service.d.ts"],"sourcesContent":["import { ScopedData } from '../../model/scoped-data';\nimport { HttpClient } from '@angular/common/http';\nexport interface ScopedDataWithUrl {\n    /** Url (with fields) to load scoped data */\n    url?: string;\n    /** scoped data model */\n    scopedData: ScopedData<any>;\n}\n/**\n * Intermediate model to accommodate all data needed to perform occ fields optimizations\n * wrapping ScopedData with url and fields\n */\nexport interface OccFieldsModel extends ScopedDataWithUrl {\n    /** extracted fields object, used to extract data from broader model */\n    fields?: object;\n}\n/**\n * Grouped rest calls with optimal urls\n *\n * One url groups all scopes it covers with related occFieldsModels\n */\nexport interface OccOptimimalUrlGroups {\n    [optimalUrl: string]: {\n        [scope: string]: OccFieldsModel;\n    };\n}\n/**\n * Helper service for optimizing endpoint calls to occ backend\n */\nexport declare class OccFieldsService {\n    protected http: HttpClient;\n    constructor(http: HttpClient);\n    protected FIELDS_PARAM: string;\n    /**\n     * Merge similar occ endpoints calls by merging fields parameter\n     *\n     * We assume that different scopes are defined by different fields parameters,\n     * so we are grouping all requests with the same urls (except fields definition)\n     * and merging into one request with fields that will satisfy all separate ones.\n     *\n     * @param models\n     */\n    getOptimalUrlGroups(models: ScopedDataWithUrl[]): OccOptimimalUrlGroups;\n    /**\n     * Extract fields parameter from occ endpoint url\n     *\n     * @param urlWithFields\n     */\n    private splitFields;\n    /**\n     * Combine url with field parameters\n     *\n     * @param url\n     * @param fields\n     */\n    private getUrlWithFields;\n}\n"],"names":[],"mappings":"AAAA;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;"}