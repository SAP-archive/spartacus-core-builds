{"version":3,"file":"customer-coupon.service.d.ts","sources":["customer-coupon.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { UserIdService } from '../../auth/user-auth/facade/user-id.service';\nimport { CustomerCouponSearchResult } from '../../model/customer-coupon.model';\nimport { StateWithProcess } from '../../process/store/process-state';\nimport { StateWithUser } from '../store/user-state';\nexport declare class CustomerCouponService {\n    protected store: Store<StateWithUser | StateWithProcess<void>>;\n    protected userIdService: UserIdService;\n    constructor(store: Store<StateWithUser | StateWithProcess<void>>, userIdService: UserIdService);\n    /**\n     * Retrieves customer's coupons\n     * @param pageSize page size\n     * @param currentPage current page\n     * @param sort sort\n     */\n    loadCustomerCoupons(pageSize: number, currentPage?: number, sort?: string): void;\n    /**\n     * Returns customer coupon search result\n     * @param pageSize page size\n     */\n    getCustomerCoupons(pageSize: number): Observable<CustomerCouponSearchResult>;\n    /**\n     * Returns a loaded flag for customer coupons\n     */\n    getCustomerCouponsLoaded(): Observable<boolean>;\n    /**\n     * Returns a loading flag for customer coupons\n     */\n    getCustomerCouponsLoading(): Observable<boolean>;\n    /**\n     * Subscribe a CustomerCoupon Notification\n     * @param couponCode a customer coupon code\n     */\n    subscribeCustomerCoupon(couponCode: string): void;\n    /**\n     * Returns the subscribe customer coupon notification process loading flag\n     */\n    getSubscribeCustomerCouponResultLoading(): Observable<boolean>;\n    /**\n     * Returns the subscribe customer coupon notification process success flag\n     */\n    getSubscribeCustomerCouponResultSuccess(): Observable<boolean>;\n    /**\n     * Returns the subscribe customer coupon notification process error flag\n     */\n    getSubscribeCustomerCouponResultError(): Observable<boolean>;\n    /**\n     * Unsubscribe a CustomerCoupon Notification\n     * @param couponCode a customer coupon code\n     */\n    unsubscribeCustomerCoupon(couponCode: string): void;\n    /**\n     * Returns the unsubscribe customer coupon notification process loading flag\n     */\n    getUnsubscribeCustomerCouponResultLoading(): Observable<boolean>;\n    /**\n     * Returns the unsubscribe customer coupon notification process success flag\n     */\n    getUnsubscribeCustomerCouponResultSuccess(): Observable<boolean>;\n    /**\n     * Returns the unsubscribe customer coupon notification process error flag\n     */\n    getUnsubscribeCustomerCouponResultError(): Observable<boolean>;\n    /**\n     * Claim a CustomerCoupon\n     * @param couponCode a customer coupon code\n     */\n    claimCustomerCoupon(couponCode: string): void;\n    /**\n     * Returns the claim customer coupon notification process success flag\n     */\n    getClaimCustomerCouponResultSuccess(): Observable<boolean>;\n    /**\n     * Returns the claim customer coupon notification process loading flag\n     */\n    getClaimCustomerCouponResultLoading(): Observable<boolean>;\n}\n"]}