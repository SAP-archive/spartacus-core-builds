{"version":3,"file":"wish-list.effect.d.ts","sources":["wish-list.effect.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Actions } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../../../auth/facade/auth.service';\nimport { CartConnector } from '../../connectors/cart/cart.connector';\nimport { SaveCartConnector } from '../../connectors/save-cart/save-cart.connecter';\nimport { CartActions } from '../actions';\nimport { StateWithMultiCart } from '../multi-cart-state';\nexport declare class WishListEffects {\n    private actions$;\n    private cartConnector;\n    private saveCartConnector;\n    private authService;\n    private store;\n    createWishList$: Observable<CartActions.CreateWishListSuccess | CartActions.CreateWishListFail>;\n    loadWishList$: Observable<CartActions.LoadWishListSuccess | CartActions.RemoveCart | CartActions.CreateWishList | CartActions.LoadWishListFail>;\n    resetWishList$: Observable<CartActions.LoadWishListSuccess | CartActions.LoadWishListFail>;\n    constructor(actions$: Actions, cartConnector: CartConnector, saveCartConnector: SaveCartConnector, authService: AuthService, store: Store<StateWithMultiCart>);\n}\n"]}