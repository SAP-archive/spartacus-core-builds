import { createFeatureSelector, createSelector, } from '@ngrx/store';
import { entityValueSelector } from '../../../state/utils/entity-loader/entity-loader.selectors';
import { entityHasPendingProcessesSelector, entityIsStableSelector, entityProcessesLoaderStateSelector, } from '../../../state/utils/entity-processes-loader/entity-processes-loader.selectors';
import { MULTI_CART_FEATURE, } from '../multi-cart-state';
export var getMultiCartState = createFeatureSelector(MULTI_CART_FEATURE);
var ɵ0 = function (state) { return state.carts; };
export var getMultiCartEntities = createSelector(getMultiCartState, ɵ0);
export var getCartEntitySelectorFactory = function (cartId) {
    return createSelector(getMultiCartEntities, function (state) {
        return entityProcessesLoaderStateSelector(state, cartId);
    });
};
export var getCartSelectorFactory = function (cartId) {
    return createSelector(getMultiCartEntities, function (state) {
        return entityValueSelector(state, cartId);
    });
};
export var getCartIsStableSelectorFactory = function (cartId) {
    return createSelector(getMultiCartEntities, function (state) {
        return entityIsStableSelector(state, cartId);
    });
};
export var getCartHasPendingProcessesSelectorFactory = function (cartId) {
    return createSelector(getMultiCartEntities, function (state) {
        return entityHasPendingProcessesSelector(state, cartId);
    });
};
export var getCartEntriesSelectorFactory = function (cartId) {
    return createSelector(getCartSelectorFactory(cartId), function (state) {
        return state && state.entries ? state.entries : [];
    });
};
export var getCartEntrySelectorFactory = function (cartId, productCode) {
    return createSelector(getCartEntriesSelectorFactory(cartId), function (state) {
        return state
            ? state.find(function (entry) { return entry.product.code === productCode; })
            : undefined;
    });
};
var ɵ1 = function (state) { return state.active; };
export var getActiveCartId = createSelector(getMultiCartState, ɵ1);
var ɵ2 = function (state) { return state.wishList; };
export var getWishListId = createSelector(getMultiCartState, ɵ2);
export { ɵ0, ɵ1, ɵ2 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGktY2FydC5zZWxlY3Rvci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFydGFjdXMvY29yZS8iLCJzb3VyY2VzIjpbInNyYy9jYXJ0L3N0b3JlL3NlbGVjdG9ycy9tdWx0aS1jYXJ0LnNlbGVjdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCxxQkFBcUIsRUFDckIsY0FBYyxHQUVmLE1BQU0sYUFBYSxDQUFDO0FBR3JCLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLDREQUE0RCxDQUFDO0FBRWpHLE9BQU8sRUFDTCxpQ0FBaUMsRUFDakMsc0JBQXNCLEVBQ3RCLGtDQUFrQyxHQUNuQyxNQUFNLGdGQUFnRixDQUFDO0FBRXhGLE9BQU8sRUFFTCxrQkFBa0IsR0FFbkIsTUFBTSxxQkFBcUIsQ0FBQztBQUU3QixNQUFNLENBQUMsSUFBTSxpQkFBaUIsR0FHMUIscUJBQXFCLENBQWlCLGtCQUFrQixDQUFDLENBQUM7U0FLeEIsVUFBQyxLQUFxQixJQUFLLE9BQUEsS0FBSyxDQUFDLEtBQUssRUFBWCxDQUFXO0FBSDVFLE1BQU0sQ0FBQyxJQUFNLG9CQUFvQixHQUc3QixjQUFjLENBQUMsaUJBQWlCLEtBQXlDLENBQUM7QUFFOUUsTUFBTSxDQUFDLElBQU0sNEJBQTRCLEdBQUcsVUFDMUMsTUFBYztJQUVkLE9BQU8sY0FBYyxDQUNuQixvQkFBb0IsRUFDcEIsVUFBQyxLQUF1QztRQUN0QyxPQUFBLGtDQUFrQyxDQUFDLEtBQUssRUFBRSxNQUFNLENBQUM7SUFBakQsQ0FBaUQsQ0FDcEQsQ0FBQztBQUNKLENBQUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxJQUFNLHNCQUFzQixHQUFHLFVBQ3BDLE1BQWM7SUFFZCxPQUFPLGNBQWMsQ0FDbkIsb0JBQW9CLEVBQ3BCLFVBQUMsS0FBdUM7UUFDdEMsT0FBQSxtQkFBbUIsQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDO0lBQWxDLENBQWtDLENBQ3JDLENBQUM7QUFDSixDQUFDLENBQUM7QUFFRixNQUFNLENBQUMsSUFBTSw4QkFBOEIsR0FBRyxVQUM1QyxNQUFjO0lBRWQsT0FBTyxjQUFjLENBQ25CLG9CQUFvQixFQUNwQixVQUFDLEtBQXVDO1FBQ3RDLE9BQUEsc0JBQXNCLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQztJQUFyQyxDQUFxQyxDQUN4QyxDQUFDO0FBQ0osQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLElBQU0seUNBQXlDLEdBQUcsVUFDdkQsTUFBYztJQUVkLE9BQU8sY0FBYyxDQUNuQixvQkFBb0IsRUFDcEIsVUFBQyxLQUF1QztRQUN0QyxPQUFBLGlDQUFpQyxDQUFDLEtBQUssRUFBRSxNQUFNLENBQUM7SUFBaEQsQ0FBZ0QsQ0FDbkQsQ0FBQztBQUNKLENBQUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxJQUFNLDZCQUE2QixHQUFHLFVBQzNDLE1BQWM7SUFFZCxPQUFPLGNBQWMsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsRUFBRSxVQUFDLEtBQVc7UUFDaEUsT0FBTyxLQUFLLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0lBQ3JELENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLElBQU0sMkJBQTJCLEdBQUcsVUFDekMsTUFBYyxFQUNkLFdBQW1CO0lBRW5CLE9BQU8sY0FBYyxDQUNuQiw2QkFBNkIsQ0FBQyxNQUFNLENBQUMsRUFDckMsVUFBQyxLQUFtQjtRQUNsQixPQUFPLEtBQUs7WUFDVixDQUFDLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxVQUFDLEtBQUssSUFBSyxPQUFBLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxLQUFLLFdBQVcsRUFBbEMsQ0FBa0MsQ0FBQztZQUMzRCxDQUFDLENBQUMsU0FBUyxDQUFDO0lBQ2hCLENBQUMsQ0FDRixDQUFDO0FBQ0osQ0FBQyxDQUFDO1NBS29DLFVBQUMsS0FBcUIsSUFBSyxPQUFBLEtBQUssQ0FBQyxNQUFNLEVBQVosQ0FBWTtBQUg3RSxNQUFNLENBQUMsSUFBTSxlQUFlLEdBR3hCLGNBQWMsQ0FBQyxpQkFBaUIsS0FBMEMsQ0FBQztTQU83RSxVQUFDLEtBQXFCLElBQUssT0FBQSxLQUFLLENBQUMsUUFBUSxFQUFkLENBQWM7QUFMM0MsTUFBTSxDQUFDLElBQU0sYUFBYSxHQUd0QixjQUFjLENBQ2hCLGlCQUFpQixLQUVsQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgY3JlYXRlRmVhdHVyZVNlbGVjdG9yLFxuICBjcmVhdGVTZWxlY3RvcixcbiAgTWVtb2l6ZWRTZWxlY3Rvcixcbn0gZnJvbSAnQG5ncngvc3RvcmUnO1xuaW1wb3J0IHsgQ2FydCB9IGZyb20gJy4uLy4uLy4uL21vZGVsL2NhcnQubW9kZWwnO1xuaW1wb3J0IHsgT3JkZXJFbnRyeSB9IGZyb20gJy4uLy4uLy4uL21vZGVsL29yZGVyLm1vZGVsJztcbmltcG9ydCB7IGVudGl0eVZhbHVlU2VsZWN0b3IgfSBmcm9tICcuLi8uLi8uLi9zdGF0ZS91dGlscy9lbnRpdHktbG9hZGVyL2VudGl0eS1sb2FkZXIuc2VsZWN0b3JzJztcbmltcG9ydCB7IEVudGl0eVByb2Nlc3Nlc0xvYWRlclN0YXRlIH0gZnJvbSAnLi4vLi4vLi4vc3RhdGUvdXRpbHMvZW50aXR5LXByb2Nlc3Nlcy1sb2FkZXIvZW50aXR5LXByb2Nlc3Nlcy1sb2FkZXItc3RhdGUnO1xuaW1wb3J0IHtcbiAgZW50aXR5SGFzUGVuZGluZ1Byb2Nlc3Nlc1NlbGVjdG9yLFxuICBlbnRpdHlJc1N0YWJsZVNlbGVjdG9yLFxuICBlbnRpdHlQcm9jZXNzZXNMb2FkZXJTdGF0ZVNlbGVjdG9yLFxufSBmcm9tICcuLi8uLi8uLi9zdGF0ZS91dGlscy9lbnRpdHktcHJvY2Vzc2VzLWxvYWRlci9lbnRpdHktcHJvY2Vzc2VzLWxvYWRlci5zZWxlY3RvcnMnO1xuaW1wb3J0IHsgUHJvY2Vzc2VzTG9hZGVyU3RhdGUgfSBmcm9tICcuLi8uLi8uLi9zdGF0ZS91dGlscy9wcm9jZXNzZXMtbG9hZGVyL3Byb2Nlc3Nlcy1sb2FkZXItc3RhdGUnO1xuaW1wb3J0IHtcbiAgTXVsdGlDYXJ0U3RhdGUsXG4gIE1VTFRJX0NBUlRfRkVBVFVSRSxcbiAgU3RhdGVXaXRoTXVsdGlDYXJ0LFxufSBmcm9tICcuLi9tdWx0aS1jYXJ0LXN0YXRlJztcblxuZXhwb3J0IGNvbnN0IGdldE11bHRpQ2FydFN0YXRlOiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhNdWx0aUNhcnQsXG4gIE11bHRpQ2FydFN0YXRlXG4+ID0gY3JlYXRlRmVhdHVyZVNlbGVjdG9yPE11bHRpQ2FydFN0YXRlPihNVUxUSV9DQVJUX0ZFQVRVUkUpO1xuXG5leHBvcnQgY29uc3QgZ2V0TXVsdGlDYXJ0RW50aXRpZXM6IE1lbW9pemVkU2VsZWN0b3I8XG4gIFN0YXRlV2l0aE11bHRpQ2FydCxcbiAgRW50aXR5UHJvY2Vzc2VzTG9hZGVyU3RhdGU8Q2FydD5cbj4gPSBjcmVhdGVTZWxlY3RvcihnZXRNdWx0aUNhcnRTdGF0ZSwgKHN0YXRlOiBNdWx0aUNhcnRTdGF0ZSkgPT4gc3RhdGUuY2FydHMpO1xuXG5leHBvcnQgY29uc3QgZ2V0Q2FydEVudGl0eVNlbGVjdG9yRmFjdG9yeSA9IChcbiAgY2FydElkOiBzdHJpbmdcbik6IE1lbW9pemVkU2VsZWN0b3I8U3RhdGVXaXRoTXVsdGlDYXJ0LCBQcm9jZXNzZXNMb2FkZXJTdGF0ZTxDYXJ0Pj4gPT4ge1xuICByZXR1cm4gY3JlYXRlU2VsZWN0b3IoXG4gICAgZ2V0TXVsdGlDYXJ0RW50aXRpZXMsXG4gICAgKHN0YXRlOiBFbnRpdHlQcm9jZXNzZXNMb2FkZXJTdGF0ZTxDYXJ0PikgPT5cbiAgICAgIGVudGl0eVByb2Nlc3Nlc0xvYWRlclN0YXRlU2VsZWN0b3Ioc3RhdGUsIGNhcnRJZClcbiAgKTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRDYXJ0U2VsZWN0b3JGYWN0b3J5ID0gKFxuICBjYXJ0SWQ6IHN0cmluZ1xuKTogTWVtb2l6ZWRTZWxlY3RvcjxTdGF0ZVdpdGhNdWx0aUNhcnQsIENhcnQ+ID0+IHtcbiAgcmV0dXJuIGNyZWF0ZVNlbGVjdG9yKFxuICAgIGdldE11bHRpQ2FydEVudGl0aWVzLFxuICAgIChzdGF0ZTogRW50aXR5UHJvY2Vzc2VzTG9hZGVyU3RhdGU8Q2FydD4pID0+XG4gICAgICBlbnRpdHlWYWx1ZVNlbGVjdG9yKHN0YXRlLCBjYXJ0SWQpXG4gICk7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0Q2FydElzU3RhYmxlU2VsZWN0b3JGYWN0b3J5ID0gKFxuICBjYXJ0SWQ6IHN0cmluZ1xuKTogTWVtb2l6ZWRTZWxlY3RvcjxTdGF0ZVdpdGhNdWx0aUNhcnQsIGJvb2xlYW4+ID0+IHtcbiAgcmV0dXJuIGNyZWF0ZVNlbGVjdG9yKFxuICAgIGdldE11bHRpQ2FydEVudGl0aWVzLFxuICAgIChzdGF0ZTogRW50aXR5UHJvY2Vzc2VzTG9hZGVyU3RhdGU8Q2FydD4pID0+XG4gICAgICBlbnRpdHlJc1N0YWJsZVNlbGVjdG9yKHN0YXRlLCBjYXJ0SWQpXG4gICk7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0Q2FydEhhc1BlbmRpbmdQcm9jZXNzZXNTZWxlY3RvckZhY3RvcnkgPSAoXG4gIGNhcnRJZDogc3RyaW5nXG4pOiBNZW1vaXplZFNlbGVjdG9yPFN0YXRlV2l0aE11bHRpQ2FydCwgYm9vbGVhbj4gPT4ge1xuICByZXR1cm4gY3JlYXRlU2VsZWN0b3IoXG4gICAgZ2V0TXVsdGlDYXJ0RW50aXRpZXMsXG4gICAgKHN0YXRlOiBFbnRpdHlQcm9jZXNzZXNMb2FkZXJTdGF0ZTxDYXJ0PikgPT5cbiAgICAgIGVudGl0eUhhc1BlbmRpbmdQcm9jZXNzZXNTZWxlY3RvcihzdGF0ZSwgY2FydElkKVxuICApO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldENhcnRFbnRyaWVzU2VsZWN0b3JGYWN0b3J5ID0gKFxuICBjYXJ0SWQ6IHN0cmluZ1xuKTogTWVtb2l6ZWRTZWxlY3RvcjxTdGF0ZVdpdGhNdWx0aUNhcnQsIE9yZGVyRW50cnlbXT4gPT4ge1xuICByZXR1cm4gY3JlYXRlU2VsZWN0b3IoZ2V0Q2FydFNlbGVjdG9yRmFjdG9yeShjYXJ0SWQpLCAoc3RhdGU6IENhcnQpID0+IHtcbiAgICByZXR1cm4gc3RhdGUgJiYgc3RhdGUuZW50cmllcyA/IHN0YXRlLmVudHJpZXMgOiBbXTtcbiAgfSk7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0Q2FydEVudHJ5U2VsZWN0b3JGYWN0b3J5ID0gKFxuICBjYXJ0SWQ6IHN0cmluZyxcbiAgcHJvZHVjdENvZGU6IHN0cmluZ1xuKTogTWVtb2l6ZWRTZWxlY3RvcjxTdGF0ZVdpdGhNdWx0aUNhcnQsIE9yZGVyRW50cnk+ID0+IHtcbiAgcmV0dXJuIGNyZWF0ZVNlbGVjdG9yKFxuICAgIGdldENhcnRFbnRyaWVzU2VsZWN0b3JGYWN0b3J5KGNhcnRJZCksXG4gICAgKHN0YXRlOiBPcmRlckVudHJ5W10pID0+IHtcbiAgICAgIHJldHVybiBzdGF0ZVxuICAgICAgICA/IHN0YXRlLmZpbmQoKGVudHJ5KSA9PiBlbnRyeS5wcm9kdWN0LmNvZGUgPT09IHByb2R1Y3RDb2RlKVxuICAgICAgICA6IHVuZGVmaW5lZDtcbiAgICB9XG4gICk7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0QWN0aXZlQ2FydElkOiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhNdWx0aUNhcnQsXG4gIHN0cmluZ1xuPiA9IGNyZWF0ZVNlbGVjdG9yKGdldE11bHRpQ2FydFN0YXRlLCAoc3RhdGU6IE11bHRpQ2FydFN0YXRlKSA9PiBzdGF0ZS5hY3RpdmUpO1xuXG5leHBvcnQgY29uc3QgZ2V0V2lzaExpc3RJZDogTWVtb2l6ZWRTZWxlY3RvcjxcbiAgU3RhdGVXaXRoTXVsdGlDYXJ0LFxuICBzdHJpbmdcbj4gPSBjcmVhdGVTZWxlY3RvcihcbiAgZ2V0TXVsdGlDYXJ0U3RhdGUsXG4gIChzdGF0ZTogTXVsdGlDYXJ0U3RhdGUpID0+IHN0YXRlLndpc2hMaXN0XG4pO1xuIl19