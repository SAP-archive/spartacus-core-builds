import { StateUtils } from '../../../state/utils/index';
import { USER_PAYMENT_METHODS } from '../user-state';
export const LOAD_USER_PAYMENT_METHODS = '[User] Load User Payment Methods';
export const LOAD_USER_PAYMENT_METHODS_FAIL = '[User] Load User Payment Methods Fail';
export const LOAD_USER_PAYMENT_METHODS_SUCCESS = '[User] Load User Payment Methods Success';
export const SET_DEFAULT_USER_PAYMENT_METHOD = '[User] Set Default User Payment Method';
export const SET_DEFAULT_USER_PAYMENT_METHOD_FAIL = '[User] Set Default User Payment Method Fail';
export const SET_DEFAULT_USER_PAYMENT_METHOD_SUCCESS = '[User] Set Default User Payment Method Success';
export const DELETE_USER_PAYMENT_METHOD = '[User] Delete User Payment Method';
export const DELETE_USER_PAYMENT_METHOD_FAIL = '[User] Delete User Payment Method Fail';
export const DELETE_USER_PAYMENT_METHOD_SUCCESS = '[User] Delete User  Payment Method Success';
export class LoadUserPaymentMethods extends StateUtils.LoaderLoadAction {
    constructor(payload) {
        super(USER_PAYMENT_METHODS);
        this.payload = payload;
        this.type = LOAD_USER_PAYMENT_METHODS;
    }
}
export class LoadUserPaymentMethodsFail extends StateUtils.LoaderFailAction {
    constructor(payload) {
        super(USER_PAYMENT_METHODS, payload);
        this.payload = payload;
        this.type = LOAD_USER_PAYMENT_METHODS_FAIL;
    }
}
export class LoadUserPaymentMethodsSuccess extends StateUtils.LoaderSuccessAction {
    constructor(payload) {
        super(USER_PAYMENT_METHODS);
        this.payload = payload;
        this.type = LOAD_USER_PAYMENT_METHODS_SUCCESS;
    }
}
export class SetDefaultUserPaymentMethod extends StateUtils.LoaderLoadAction {
    constructor(payload) {
        super(USER_PAYMENT_METHODS);
        this.payload = payload;
        this.type = SET_DEFAULT_USER_PAYMENT_METHOD;
    }
}
export class SetDefaultUserPaymentMethodFail extends StateUtils.LoaderFailAction {
    constructor(payload) {
        super(USER_PAYMENT_METHODS, payload);
        this.payload = payload;
        this.type = SET_DEFAULT_USER_PAYMENT_METHOD_FAIL;
    }
}
export class SetDefaultUserPaymentMethodSuccess extends StateUtils.LoaderSuccessAction {
    constructor(payload) {
        super(USER_PAYMENT_METHODS);
        this.payload = payload;
        this.type = SET_DEFAULT_USER_PAYMENT_METHOD_SUCCESS;
    }
}
export class DeleteUserPaymentMethod extends StateUtils.LoaderLoadAction {
    constructor(payload) {
        super(USER_PAYMENT_METHODS);
        this.payload = payload;
        this.type = DELETE_USER_PAYMENT_METHOD;
    }
}
export class DeleteUserPaymentMethodFail extends StateUtils.LoaderFailAction {
    constructor(payload) {
        super(USER_PAYMENT_METHODS, payload);
        this.payload = payload;
        this.type = DELETE_USER_PAYMENT_METHOD_FAIL;
    }
}
export class DeleteUserPaymentMethodSuccess extends StateUtils.LoaderSuccessAction {
    constructor(payload) {
        super(USER_PAYMENT_METHODS);
        this.payload = payload;
        this.type = DELETE_USER_PAYMENT_METHOD_SUCCESS;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGF5bWVudC1tZXRob2RzLmFjdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmUvc3JjL3VzZXIvc3RvcmUvYWN0aW9ucy9wYXltZW50LW1ldGhvZHMuYWN0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUN4RCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFckQsTUFBTSxDQUFDLE1BQU0seUJBQXlCLEdBQUcsa0NBQWtDLENBQUM7QUFDNUUsTUFBTSxDQUFDLE1BQU0sOEJBQThCLEdBQ3pDLHVDQUF1QyxDQUFDO0FBQzFDLE1BQU0sQ0FBQyxNQUFNLGlDQUFpQyxHQUM1QywwQ0FBMEMsQ0FBQztBQUU3QyxNQUFNLENBQUMsTUFBTSwrQkFBK0IsR0FDMUMsd0NBQXdDLENBQUM7QUFDM0MsTUFBTSxDQUFDLE1BQU0sb0NBQW9DLEdBQy9DLDZDQUE2QyxDQUFDO0FBQ2hELE1BQU0sQ0FBQyxNQUFNLHVDQUF1QyxHQUNsRCxnREFBZ0QsQ0FBQztBQUVuRCxNQUFNLENBQUMsTUFBTSwwQkFBMEIsR0FBRyxtQ0FBbUMsQ0FBQztBQUM5RSxNQUFNLENBQUMsTUFBTSwrQkFBK0IsR0FDMUMsd0NBQXdDLENBQUM7QUFDM0MsTUFBTSxDQUFDLE1BQU0sa0NBQWtDLEdBQzdDLDRDQUE0QyxDQUFDO0FBRS9DLE1BQU0sT0FBTyxzQkFBdUIsU0FBUSxVQUFVLENBQUMsZ0JBQWdCO0lBRXJFLFlBQW1CLE9BQWU7UUFDaEMsS0FBSyxDQUFDLG9CQUFvQixDQUFDLENBQUM7UUFEWCxZQUFPLEdBQVAsT0FBTyxDQUFRO1FBRHpCLFNBQUksR0FBRyx5QkFBeUIsQ0FBQztJQUcxQyxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sMEJBQTJCLFNBQVEsVUFBVSxDQUFDLGdCQUFnQjtJQUV6RSxZQUFtQixPQUFZO1FBQzdCLEtBQUssQ0FBQyxvQkFBb0IsRUFBRSxPQUFPLENBQUMsQ0FBQztRQURwQixZQUFPLEdBQVAsT0FBTyxDQUFLO1FBRHRCLFNBQUksR0FBRyw4QkFBOEIsQ0FBQztJQUcvQyxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sNkJBQThCLFNBQVEsVUFBVSxDQUFDLG1CQUFtQjtJQUUvRSxZQUFtQixPQUF5QjtRQUMxQyxLQUFLLENBQUMsb0JBQW9CLENBQUMsQ0FBQztRQURYLFlBQU8sR0FBUCxPQUFPLENBQWtCO1FBRG5DLFNBQUksR0FBRyxpQ0FBaUMsQ0FBQztJQUdsRCxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sMkJBQTRCLFNBQVEsVUFBVSxDQUFDLGdCQUFnQjtJQUUxRSxZQUFtQixPQUFZO1FBQzdCLEtBQUssQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO1FBRFgsWUFBTyxHQUFQLE9BQU8sQ0FBSztRQUR0QixTQUFJLEdBQUcsK0JBQStCLENBQUM7SUFHaEQsQ0FBQztDQUNGO0FBRUQsTUFBTSxPQUFPLCtCQUFnQyxTQUFRLFVBQVUsQ0FBQyxnQkFBZ0I7SUFFOUUsWUFBbUIsT0FBWTtRQUM3QixLQUFLLENBQUMsb0JBQW9CLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFEcEIsWUFBTyxHQUFQLE9BQU8sQ0FBSztRQUR0QixTQUFJLEdBQUcsb0NBQW9DLENBQUM7SUFHckQsQ0FBQztDQUNGO0FBRUQsTUFBTSxPQUFPLGtDQUFtQyxTQUFRLFVBQVUsQ0FBQyxtQkFBbUI7SUFFcEYsWUFBbUIsT0FBWTtRQUM3QixLQUFLLENBQUMsb0JBQW9CLENBQUMsQ0FBQztRQURYLFlBQU8sR0FBUCxPQUFPLENBQUs7UUFEdEIsU0FBSSxHQUFHLHVDQUF1QyxDQUFDO0lBR3hELENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyx1QkFBd0IsU0FBUSxVQUFVLENBQUMsZ0JBQWdCO0lBRXRFLFlBQW1CLE9BQVk7UUFDN0IsS0FBSyxDQUFDLG9CQUFvQixDQUFDLENBQUM7UUFEWCxZQUFPLEdBQVAsT0FBTyxDQUFLO1FBRHRCLFNBQUksR0FBRywwQkFBMEIsQ0FBQztJQUczQyxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sMkJBQTRCLFNBQVEsVUFBVSxDQUFDLGdCQUFnQjtJQUUxRSxZQUFtQixPQUFZO1FBQzdCLEtBQUssQ0FBQyxvQkFBb0IsRUFBRSxPQUFPLENBQUMsQ0FBQztRQURwQixZQUFPLEdBQVAsT0FBTyxDQUFLO1FBRHRCLFNBQUksR0FBRywrQkFBK0IsQ0FBQztJQUdoRCxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sOEJBQStCLFNBQVEsVUFBVSxDQUFDLG1CQUFtQjtJQUVoRixZQUFtQixPQUFZO1FBQzdCLEtBQUssQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO1FBRFgsWUFBTyxHQUFQLE9BQU8sQ0FBSztRQUR0QixTQUFJLEdBQUcsa0NBQWtDLENBQUM7SUFHbkQsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGF5bWVudERldGFpbHMgfSBmcm9tICcuLi8uLi8uLi9tb2RlbC9jYXJ0Lm1vZGVsJztcbmltcG9ydCB7IFN0YXRlVXRpbHMgfSBmcm9tICcuLi8uLi8uLi9zdGF0ZS91dGlscy9pbmRleCc7XG5pbXBvcnQgeyBVU0VSX1BBWU1FTlRfTUVUSE9EUyB9IGZyb20gJy4uL3VzZXItc3RhdGUnO1xuXG5leHBvcnQgY29uc3QgTE9BRF9VU0VSX1BBWU1FTlRfTUVUSE9EUyA9ICdbVXNlcl0gTG9hZCBVc2VyIFBheW1lbnQgTWV0aG9kcyc7XG5leHBvcnQgY29uc3QgTE9BRF9VU0VSX1BBWU1FTlRfTUVUSE9EU19GQUlMID1cbiAgJ1tVc2VyXSBMb2FkIFVzZXIgUGF5bWVudCBNZXRob2RzIEZhaWwnO1xuZXhwb3J0IGNvbnN0IExPQURfVVNFUl9QQVlNRU5UX01FVEhPRFNfU1VDQ0VTUyA9XG4gICdbVXNlcl0gTG9hZCBVc2VyIFBheW1lbnQgTWV0aG9kcyBTdWNjZXNzJztcblxuZXhwb3J0IGNvbnN0IFNFVF9ERUZBVUxUX1VTRVJfUEFZTUVOVF9NRVRIT0QgPVxuICAnW1VzZXJdIFNldCBEZWZhdWx0IFVzZXIgUGF5bWVudCBNZXRob2QnO1xuZXhwb3J0IGNvbnN0IFNFVF9ERUZBVUxUX1VTRVJfUEFZTUVOVF9NRVRIT0RfRkFJTCA9XG4gICdbVXNlcl0gU2V0IERlZmF1bHQgVXNlciBQYXltZW50IE1ldGhvZCBGYWlsJztcbmV4cG9ydCBjb25zdCBTRVRfREVGQVVMVF9VU0VSX1BBWU1FTlRfTUVUSE9EX1NVQ0NFU1MgPVxuICAnW1VzZXJdIFNldCBEZWZhdWx0IFVzZXIgUGF5bWVudCBNZXRob2QgU3VjY2Vzcyc7XG5cbmV4cG9ydCBjb25zdCBERUxFVEVfVVNFUl9QQVlNRU5UX01FVEhPRCA9ICdbVXNlcl0gRGVsZXRlIFVzZXIgUGF5bWVudCBNZXRob2QnO1xuZXhwb3J0IGNvbnN0IERFTEVURV9VU0VSX1BBWU1FTlRfTUVUSE9EX0ZBSUwgPVxuICAnW1VzZXJdIERlbGV0ZSBVc2VyIFBheW1lbnQgTWV0aG9kIEZhaWwnO1xuZXhwb3J0IGNvbnN0IERFTEVURV9VU0VSX1BBWU1FTlRfTUVUSE9EX1NVQ0NFU1MgPVxuICAnW1VzZXJdIERlbGV0ZSBVc2VyICBQYXltZW50IE1ldGhvZCBTdWNjZXNzJztcblxuZXhwb3J0IGNsYXNzIExvYWRVc2VyUGF5bWVudE1ldGhvZHMgZXh0ZW5kcyBTdGF0ZVV0aWxzLkxvYWRlckxvYWRBY3Rpb24ge1xuICByZWFkb25seSB0eXBlID0gTE9BRF9VU0VSX1BBWU1FTlRfTUVUSE9EUztcbiAgY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IHN0cmluZykge1xuICAgIHN1cGVyKFVTRVJfUEFZTUVOVF9NRVRIT0RTKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgTG9hZFVzZXJQYXltZW50TWV0aG9kc0ZhaWwgZXh0ZW5kcyBTdGF0ZVV0aWxzLkxvYWRlckZhaWxBY3Rpb24ge1xuICByZWFkb25seSB0eXBlID0gTE9BRF9VU0VSX1BBWU1FTlRfTUVUSE9EU19GQUlMO1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgcGF5bG9hZDogYW55KSB7XG4gICAgc3VwZXIoVVNFUl9QQVlNRU5UX01FVEhPRFMsIHBheWxvYWQpO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBMb2FkVXNlclBheW1lbnRNZXRob2RzU3VjY2VzcyBleHRlbmRzIFN0YXRlVXRpbHMuTG9hZGVyU3VjY2Vzc0FjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBMT0FEX1VTRVJfUEFZTUVOVF9NRVRIT0RTX1NVQ0NFU1M7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBwYXlsb2FkOiBQYXltZW50RGV0YWlsc1tdKSB7XG4gICAgc3VwZXIoVVNFUl9QQVlNRU5UX01FVEhPRFMpO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBTZXREZWZhdWx0VXNlclBheW1lbnRNZXRob2QgZXh0ZW5kcyBTdGF0ZVV0aWxzLkxvYWRlckxvYWRBY3Rpb24ge1xuICByZWFkb25seSB0eXBlID0gU0VUX0RFRkFVTFRfVVNFUl9QQVlNRU5UX01FVEhPRDtcbiAgY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IGFueSkge1xuICAgIHN1cGVyKFVTRVJfUEFZTUVOVF9NRVRIT0RTKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgU2V0RGVmYXVsdFVzZXJQYXltZW50TWV0aG9kRmFpbCBleHRlbmRzIFN0YXRlVXRpbHMuTG9hZGVyRmFpbEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBTRVRfREVGQVVMVF9VU0VSX1BBWU1FTlRfTUVUSE9EX0ZBSUw7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBwYXlsb2FkOiBhbnkpIHtcbiAgICBzdXBlcihVU0VSX1BBWU1FTlRfTUVUSE9EUywgcGF5bG9hZCk7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIFNldERlZmF1bHRVc2VyUGF5bWVudE1ldGhvZFN1Y2Nlc3MgZXh0ZW5kcyBTdGF0ZVV0aWxzLkxvYWRlclN1Y2Nlc3NBY3Rpb24ge1xuICByZWFkb25seSB0eXBlID0gU0VUX0RFRkFVTFRfVVNFUl9QQVlNRU5UX01FVEhPRF9TVUNDRVNTO1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgcGF5bG9hZDogYW55KSB7XG4gICAgc3VwZXIoVVNFUl9QQVlNRU5UX01FVEhPRFMpO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBEZWxldGVVc2VyUGF5bWVudE1ldGhvZCBleHRlbmRzIFN0YXRlVXRpbHMuTG9hZGVyTG9hZEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBERUxFVEVfVVNFUl9QQVlNRU5UX01FVEhPRDtcbiAgY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IGFueSkge1xuICAgIHN1cGVyKFVTRVJfUEFZTUVOVF9NRVRIT0RTKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgRGVsZXRlVXNlclBheW1lbnRNZXRob2RGYWlsIGV4dGVuZHMgU3RhdGVVdGlscy5Mb2FkZXJGYWlsQWN0aW9uIHtcbiAgcmVhZG9ubHkgdHlwZSA9IERFTEVURV9VU0VSX1BBWU1FTlRfTUVUSE9EX0ZBSUw7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBwYXlsb2FkOiBhbnkpIHtcbiAgICBzdXBlcihVU0VSX1BBWU1FTlRfTUVUSE9EUywgcGF5bG9hZCk7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIERlbGV0ZVVzZXJQYXltZW50TWV0aG9kU3VjY2VzcyBleHRlbmRzIFN0YXRlVXRpbHMuTG9hZGVyU3VjY2Vzc0FjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBERUxFVEVfVVNFUl9QQVlNRU5UX01FVEhPRF9TVUNDRVNTO1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgcGF5bG9hZDogYW55KSB7XG4gICAgc3VwZXIoVVNFUl9QQVlNRU5UX01FVEhPRFMpO1xuICB9XG59XG5cbi8vIGFjdGlvbiB0eXBlc1xuZXhwb3J0IHR5cGUgVXNlclBheW1lbnRNZXRob2RzQWN0aW9uID1cbiAgfCBMb2FkVXNlclBheW1lbnRNZXRob2RzXG4gIHwgTG9hZFVzZXJQYXltZW50TWV0aG9kc0ZhaWxcbiAgfCBMb2FkVXNlclBheW1lbnRNZXRob2RzU3VjY2Vzc1xuICB8IFNldERlZmF1bHRVc2VyUGF5bWVudE1ldGhvZFxuICB8IFNldERlZmF1bHRVc2VyUGF5bWVudE1ldGhvZEZhaWxcbiAgfCBTZXREZWZhdWx0VXNlclBheW1lbnRNZXRob2RTdWNjZXNzXG4gIHwgRGVsZXRlVXNlclBheW1lbnRNZXRob2RcbiAgfCBEZWxldGVVc2VyUGF5bWVudE1ldGhvZEZhaWxcbiAgfCBEZWxldGVVc2VyUGF5bWVudE1ldGhvZFN1Y2Nlc3M7XG4iXX0=