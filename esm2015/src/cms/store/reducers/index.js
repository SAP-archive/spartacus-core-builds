import { InjectionToken } from '@angular/core';
import { combineReducers, } from '@ngrx/store';
import { AuthActions } from '../../../auth/store/actions/index';
import { PageType } from '../../../model/cms.model';
import { SiteContextActions } from '../../../site-context/store/actions/index';
import { entityLoaderReducer } from '../../../state/utils/entity-loader/entity-loader.reducer';
import { entityReducer } from '../../../state/utils/entity/entity.reducer';
import { COMPONENT_ENTITY, NAVIGATION_DETAIL_ENTITY, } from '../cms-state';
import * as fromComponentsReducer from './components.reducer';
import * as fromNavigation from './navigation-entry-item.reducer';
import * as fromPageReducer from './page-data.reducer';
import * as fromPageIndexReducer from './page-index.reducer';
export function getReducers() {
    return {
        page: combineReducers({
            pageData: fromPageReducer.reducer,
            index: combineReducers({
                content: entityLoaderReducer(PageType.CONTENT_PAGE, fromPageIndexReducer.reducer(PageType.CONTENT_PAGE)),
                product: entityLoaderReducer(PageType.PRODUCT_PAGE, fromPageIndexReducer.reducer(PageType.PRODUCT_PAGE)),
                category: entityLoaderReducer(PageType.CATEGORY_PAGE, fromPageIndexReducer.reducer(PageType.CATEGORY_PAGE)),
                catalog: entityLoaderReducer(PageType.CATALOG_PAGE, fromPageIndexReducer.reducer(PageType.CATALOG_PAGE)),
            }),
        }),
        components: entityReducer(COMPONENT_ENTITY, fromComponentsReducer.reducer),
        navigation: entityLoaderReducer(NAVIGATION_DETAIL_ENTITY, fromNavigation.reducer),
    };
}
export const reducerToken = new InjectionToken('CmsReducers');
export const reducerProvider = {
    provide: reducerToken,
    useFactory: getReducers,
};
export function clearCmsState(reducer) {
    return function (state, action) {
        if (action.type === SiteContextActions.LANGUAGE_CHANGE ||
            action.type === AuthActions.LOGOUT ||
            action.type === AuthActions.LOGIN) {
            state = undefined;
        }
        return reducer(state, action);
    };
}
export const metaReducers = [clearCmsState];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlL3NyYy9jbXMvc3RvcmUvcmVkdWNlcnMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGNBQWMsRUFBWSxNQUFNLGVBQWUsQ0FBQztBQUN6RCxPQUFPLEVBSUwsZUFBZSxHQUVoQixNQUFNLGFBQWEsQ0FBQztBQUNyQixPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDaEUsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLDJDQUEyQyxDQUFDO0FBQy9FLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLDBEQUEwRCxDQUFDO0FBQy9GLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQztBQUUzRSxPQUFPLEVBRUwsZ0JBQWdCLEVBQ2hCLHdCQUF3QixHQUV6QixNQUFNLGNBQWMsQ0FBQztBQUN0QixPQUFPLEtBQUsscUJBQXFCLE1BQU0sc0JBQXNCLENBQUM7QUFDOUQsT0FBTyxLQUFLLGNBQWMsTUFBTSxpQ0FBaUMsQ0FBQztBQUNsRSxPQUFPLEtBQUssZUFBZSxNQUFNLHFCQUFxQixDQUFDO0FBQ3ZELE9BQU8sS0FBSyxvQkFBb0IsTUFBTSxzQkFBc0IsQ0FBQztBQUU3RCxNQUFNLFVBQVUsV0FBVztJQUN6QixPQUFPO1FBQ0wsSUFBSSxFQUFFLGVBQWUsQ0FBQztZQUNwQixRQUFRLEVBQUUsZUFBZSxDQUFDLE9BQU87WUFDakMsS0FBSyxFQUFFLGVBQWUsQ0FBQztnQkFDckIsT0FBTyxFQUFFLG1CQUFtQixDQUMxQixRQUFRLENBQUMsWUFBWSxFQUNyQixvQkFBb0IsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxDQUNwRDtnQkFDRCxPQUFPLEVBQUUsbUJBQW1CLENBQzFCLFFBQVEsQ0FBQyxZQUFZLEVBQ3JCLG9CQUFvQixDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLENBQ3BEO2dCQUNELFFBQVEsRUFBRSxtQkFBbUIsQ0FDM0IsUUFBUSxDQUFDLGFBQWEsRUFDdEIsb0JBQW9CLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsQ0FDckQ7Z0JBQ0QsT0FBTyxFQUFFLG1CQUFtQixDQUMxQixRQUFRLENBQUMsWUFBWSxFQUNyQixvQkFBb0IsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxDQUNwRDthQUNGLENBQUM7U0FDSCxDQUFDO1FBQ0YsVUFBVSxFQUFFLGFBQWEsQ0FBQyxnQkFBZ0IsRUFBRSxxQkFBcUIsQ0FBQyxPQUFPLENBQUM7UUFDMUUsVUFBVSxFQUFFLG1CQUFtQixDQUM3Qix3QkFBd0IsRUFDeEIsY0FBYyxDQUFDLE9BQU8sQ0FDdkI7S0FDRixDQUFDO0FBQ0osQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FFcEIsSUFBSSxjQUFjLENBQTZCLGFBQWEsQ0FBQyxDQUFDO0FBRW5FLE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FBYTtJQUN2QyxPQUFPLEVBQUUsWUFBWTtJQUNyQixVQUFVLEVBQUUsV0FBVztDQUN4QixDQUFDO0FBRUYsTUFBTSxVQUFVLGFBQWEsQ0FDM0IsT0FBNEM7SUFFNUMsT0FBTyxVQUFVLEtBQUssRUFBRSxNQUFNO1FBQzVCLElBQ0UsTUFBTSxDQUFDLElBQUksS0FBSyxrQkFBa0IsQ0FBQyxlQUFlO1lBQ2xELE1BQU0sQ0FBQyxJQUFJLEtBQUssV0FBVyxDQUFDLE1BQU07WUFDbEMsTUFBTSxDQUFDLElBQUksS0FBSyxXQUFXLENBQUMsS0FBSyxFQUNqQztZQUNBLEtBQUssR0FBRyxTQUFTLENBQUM7U0FDbkI7UUFDRCxPQUFPLE9BQU8sQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDaEMsQ0FBQyxDQUFDO0FBQ0osQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBZ0MsQ0FBQyxhQUFhLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGlvblRva2VuLCBQcm92aWRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgQWN0aW9uLFxuICBBY3Rpb25SZWR1Y2VyLFxuICBBY3Rpb25SZWR1Y2VyTWFwLFxuICBjb21iaW5lUmVkdWNlcnMsXG4gIE1ldGFSZWR1Y2VyLFxufSBmcm9tICdAbmdyeC9zdG9yZSc7XG5pbXBvcnQgeyBBdXRoQWN0aW9ucyB9IGZyb20gJy4uLy4uLy4uL2F1dGgvc3RvcmUvYWN0aW9ucy9pbmRleCc7XG5pbXBvcnQgeyBQYWdlVHlwZSB9IGZyb20gJy4uLy4uLy4uL21vZGVsL2Ntcy5tb2RlbCc7XG5pbXBvcnQgeyBTaXRlQ29udGV4dEFjdGlvbnMgfSBmcm9tICcuLi8uLi8uLi9zaXRlLWNvbnRleHQvc3RvcmUvYWN0aW9ucy9pbmRleCc7XG5pbXBvcnQgeyBlbnRpdHlMb2FkZXJSZWR1Y2VyIH0gZnJvbSAnLi4vLi4vLi4vc3RhdGUvdXRpbHMvZW50aXR5LWxvYWRlci9lbnRpdHktbG9hZGVyLnJlZHVjZXInO1xuaW1wb3J0IHsgZW50aXR5UmVkdWNlciB9IGZyb20gJy4uLy4uLy4uL3N0YXRlL3V0aWxzL2VudGl0eS9lbnRpdHkucmVkdWNlcic7XG5pbXBvcnQgeyBOb2RlSXRlbSB9IGZyb20gJy4uLy4uL21vZGVsL25vZGUtaXRlbS5tb2RlbCc7XG5pbXBvcnQge1xuICBDbXNTdGF0ZSxcbiAgQ09NUE9ORU5UX0VOVElUWSxcbiAgTkFWSUdBVElPTl9ERVRBSUxfRU5USVRZLFxuICBTdGF0ZVdpdGhDbXMsXG59IGZyb20gJy4uL2Ntcy1zdGF0ZSc7XG5pbXBvcnQgKiBhcyBmcm9tQ29tcG9uZW50c1JlZHVjZXIgZnJvbSAnLi9jb21wb25lbnRzLnJlZHVjZXInO1xuaW1wb3J0ICogYXMgZnJvbU5hdmlnYXRpb24gZnJvbSAnLi9uYXZpZ2F0aW9uLWVudHJ5LWl0ZW0ucmVkdWNlcic7XG5pbXBvcnQgKiBhcyBmcm9tUGFnZVJlZHVjZXIgZnJvbSAnLi9wYWdlLWRhdGEucmVkdWNlcic7XG5pbXBvcnQgKiBhcyBmcm9tUGFnZUluZGV4UmVkdWNlciBmcm9tICcuL3BhZ2UtaW5kZXgucmVkdWNlcic7XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRSZWR1Y2VycygpOiBBY3Rpb25SZWR1Y2VyTWFwPENtc1N0YXRlPiB7XG4gIHJldHVybiB7XG4gICAgcGFnZTogY29tYmluZVJlZHVjZXJzKHtcbiAgICAgIHBhZ2VEYXRhOiBmcm9tUGFnZVJlZHVjZXIucmVkdWNlcixcbiAgICAgIGluZGV4OiBjb21iaW5lUmVkdWNlcnMoe1xuICAgICAgICBjb250ZW50OiBlbnRpdHlMb2FkZXJSZWR1Y2VyPHN0cmluZz4oXG4gICAgICAgICAgUGFnZVR5cGUuQ09OVEVOVF9QQUdFLFxuICAgICAgICAgIGZyb21QYWdlSW5kZXhSZWR1Y2VyLnJlZHVjZXIoUGFnZVR5cGUuQ09OVEVOVF9QQUdFKVxuICAgICAgICApLFxuICAgICAgICBwcm9kdWN0OiBlbnRpdHlMb2FkZXJSZWR1Y2VyPHN0cmluZz4oXG4gICAgICAgICAgUGFnZVR5cGUuUFJPRFVDVF9QQUdFLFxuICAgICAgICAgIGZyb21QYWdlSW5kZXhSZWR1Y2VyLnJlZHVjZXIoUGFnZVR5cGUuUFJPRFVDVF9QQUdFKVxuICAgICAgICApLFxuICAgICAgICBjYXRlZ29yeTogZW50aXR5TG9hZGVyUmVkdWNlcjxzdHJpbmc+KFxuICAgICAgICAgIFBhZ2VUeXBlLkNBVEVHT1JZX1BBR0UsXG4gICAgICAgICAgZnJvbVBhZ2VJbmRleFJlZHVjZXIucmVkdWNlcihQYWdlVHlwZS5DQVRFR09SWV9QQUdFKVxuICAgICAgICApLFxuICAgICAgICBjYXRhbG9nOiBlbnRpdHlMb2FkZXJSZWR1Y2VyPHN0cmluZz4oXG4gICAgICAgICAgUGFnZVR5cGUuQ0FUQUxPR19QQUdFLFxuICAgICAgICAgIGZyb21QYWdlSW5kZXhSZWR1Y2VyLnJlZHVjZXIoUGFnZVR5cGUuQ0FUQUxPR19QQUdFKVxuICAgICAgICApLFxuICAgICAgfSksXG4gICAgfSksXG4gICAgY29tcG9uZW50czogZW50aXR5UmVkdWNlcihDT01QT05FTlRfRU5USVRZLCBmcm9tQ29tcG9uZW50c1JlZHVjZXIucmVkdWNlciksXG4gICAgbmF2aWdhdGlvbjogZW50aXR5TG9hZGVyUmVkdWNlcjxOb2RlSXRlbT4oXG4gICAgICBOQVZJR0FUSU9OX0RFVEFJTF9FTlRJVFksXG4gICAgICBmcm9tTmF2aWdhdGlvbi5yZWR1Y2VyXG4gICAgKSxcbiAgfTtcbn1cblxuZXhwb3J0IGNvbnN0IHJlZHVjZXJUb2tlbjogSW5qZWN0aW9uVG9rZW48QWN0aW9uUmVkdWNlck1hcDxcbiAgQ21zU3RhdGVcbj4+ID0gbmV3IEluamVjdGlvblRva2VuPEFjdGlvblJlZHVjZXJNYXA8Q21zU3RhdGU+PignQ21zUmVkdWNlcnMnKTtcblxuZXhwb3J0IGNvbnN0IHJlZHVjZXJQcm92aWRlcjogUHJvdmlkZXIgPSB7XG4gIHByb3ZpZGU6IHJlZHVjZXJUb2tlbixcbiAgdXNlRmFjdG9yeTogZ2V0UmVkdWNlcnMsXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gY2xlYXJDbXNTdGF0ZShcbiAgcmVkdWNlcjogQWN0aW9uUmVkdWNlcjxTdGF0ZVdpdGhDbXMsIEFjdGlvbj5cbik6IEFjdGlvblJlZHVjZXI8U3RhdGVXaXRoQ21zLCBBY3Rpb24+IHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChzdGF0ZSwgYWN0aW9uKSB7XG4gICAgaWYgKFxuICAgICAgYWN0aW9uLnR5cGUgPT09IFNpdGVDb250ZXh0QWN0aW9ucy5MQU5HVUFHRV9DSEFOR0UgfHxcbiAgICAgIGFjdGlvbi50eXBlID09PSBBdXRoQWN0aW9ucy5MT0dPVVQgfHxcbiAgICAgIGFjdGlvbi50eXBlID09PSBBdXRoQWN0aW9ucy5MT0dJTlxuICAgICkge1xuICAgICAgc3RhdGUgPSB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHJldHVybiByZWR1Y2VyKHN0YXRlLCBhY3Rpb24pO1xuICB9O1xufVxuXG5leHBvcnQgY29uc3QgbWV0YVJlZHVjZXJzOiBNZXRhUmVkdWNlcjxTdGF0ZVdpdGhDbXM+W10gPSBbY2xlYXJDbXNTdGF0ZV07XG4iXX0=