{"version":3,"file":"routing-config.d.ts","sources":["routing-config.d.ts"],"names":[],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { RoutesConfig } from '../routes-config';\nexport declare const enum RouteLoadStrategy {\n    /**\n     * Don't reload the data on navigation if it was loaded before\n     */\n    ONCE = \"once\",\n    /**\n     * Always reload the data on navigation\n     */\n    ALWAYS = \"always\"\n}\nexport declare abstract class RoutingConfig {\n    routing?: {\n        /**\n         * Configuration of semantic routes. Key is route's name. Value is the config specific to this route.\n         */\n        routes?: RoutesConfig;\n        /**\n         * When true, it closes the storefront for unauthorized users, except from routes that have individual config flag `protected: false`\n         */\n        protected?: boolean;\n        /**\n         * Global load strategy which is used as a fallback for loading data on each navigation\n         */\n        loadStrategy?: RouteLoadStrategy;\n    };\n}\n"]}