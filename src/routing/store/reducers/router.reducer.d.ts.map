{"version":3,"file":"router.reducer.d.ts","sources":["router.reducer.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { InjectionToken, Provider } from '@angular/core';\nimport { RouterStateSnapshot } from '@angular/router';\nimport * as fromNgrxRouter from '@ngrx/router-store';\nimport { ActionReducerMap } from '@ngrx/store';\nimport { RoutingConfigService } from '../../configurable-routes/routing-config.service';\nimport { ActivatedRouterStateSnapshot, RouterState, State } from '../routing-state';\nexport declare const initialState: RouterState;\nexport declare function getReducers(): ActionReducerMap<State>;\nexport declare function reducer(state: RouterState, action: any): RouterState;\nexport declare const reducerToken: InjectionToken<ActionReducerMap<State>>;\nexport declare const reducerProvider: Provider;\nexport declare class CustomSerializer implements fromNgrxRouter.RouterStateSerializer<ActivatedRouterStateSnapshot> {\n    private routingConfig;\n    serialize(routerState: RouterStateSnapshot): ActivatedRouterStateSnapshot;\n    /**\n     * Returns the semantic route name for given page label.\n     *\n     * *NOTE*: It works only for simple static urls that are equal to the page label\n     * of cms-driven content page. For example: `/my-account/address-book`.\n     *\n     * It doesn't work for URLs with dynamic parameters. But such case can be handled\n     * by reading the defined `data.cxRoute` from the Angular Routes.\n     *\n     * @param path path to be found in the routing config\n     */\n    private lookupSemanticRoute;\n    constructor(routingConfig: RoutingConfigService);\n}\n"]}