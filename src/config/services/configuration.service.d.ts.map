{"version":3,"file":"configuration.service.d.ts","sources":["configuration.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { OnDestroy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { UnifiedInjector } from '../../lazy-loading/unified-injector';\nexport declare class ConfigurationService implements OnDestroy {\n    protected rootConfig: any;\n    protected defaultConfig: any;\n    protected unifiedInjector: UnifiedInjector;\n    /**\n     * Will emit unified configuration when some ambient configuration will appear\n     *\n     * Ambient configuration can appear when we lazy load module with configuration\n     */\n    readonly unifiedConfig$: Observable<any>;\n    /**\n     * Global application configuration\n     */\n    readonly config: any;\n    private readonly ambientDefaultConfig;\n    private readonly ambientConfig;\n    private subscription;\n    constructor(rootConfig: any, defaultConfig: any, unifiedInjector: UnifiedInjector, config: any);\n    private feedUnifiedConfig;\n    private processConfig;\n    private emitUnifiedConfig;\n    ngOnDestroy(): void;\n}\n"]}