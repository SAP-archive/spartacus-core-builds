/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { InjectionToken } from '@angular/core';
import { combineReducers } from '@ngrx/store';
import { loaderReducer } from '../../../state/utils/loader/loader.reducer';
import { ANONYMOUS_CONSENTS, } from '../anonymous-consents-state';
import * as fromAnonymousConsentsBanner from './anonymous-consents-banner.reducer';
import * as fromAnonymousConsentsUpdate from './anonymous-consents-update.reducer';
import * as fromAnonymousConsents from './anonymous-consents.reducer';
/**
 * @return {?}
 */
export function getReducers() {
    return {
        templates: loaderReducer(ANONYMOUS_CONSENTS),
        consents: fromAnonymousConsents.reducer,
        ui: combineReducers({
            bannerDismissed: fromAnonymousConsentsBanner.reducer,
            updated: fromAnonymousConsentsUpdate.reducer,
        }),
    };
}
/** @type {?} */
export var reducerToken = new InjectionToken('AnonymousConsentsReducers');
/** @type {?} */
export var reducerProvider = {
    provide: reducerToken,
    useFactory: getReducers,
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ac3BhcnRhY3VzL2NvcmUvIiwic291cmNlcyI6WyJzcmMvYW5vbnltb3VzLWNvbnNlbnRzL3N0b3JlL3JlZHVjZXJzL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFZLE1BQU0sZUFBZSxDQUFDO0FBQ3pELE9BQU8sRUFBb0IsZUFBZSxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBRWhFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQztBQUMzRSxPQUFPLEVBRUwsa0JBQWtCLEdBQ25CLE1BQU0sNkJBQTZCLENBQUM7QUFDckMsT0FBTyxLQUFLLDJCQUEyQixNQUFNLHFDQUFxQyxDQUFDO0FBQ25GLE9BQU8sS0FBSywyQkFBMkIsTUFBTSxxQ0FBcUMsQ0FBQztBQUNuRixPQUFPLEtBQUsscUJBQXFCLE1BQU0sOEJBQThCLENBQUM7Ozs7QUFFdEUsTUFBTSxVQUFVLFdBQVc7SUFDekIsT0FBTztRQUNMLFNBQVMsRUFBRSxhQUFhLENBQW9CLGtCQUFrQixDQUFDO1FBQy9ELFFBQVEsRUFBRSxxQkFBcUIsQ0FBQyxPQUFPO1FBQ3ZDLEVBQUUsRUFBRSxlQUFlLENBQUM7WUFDbEIsZUFBZSxFQUFFLDJCQUEyQixDQUFDLE9BQU87WUFDcEQsT0FBTyxFQUFFLDJCQUEyQixDQUFDLE9BQU87U0FDN0MsQ0FBQztLQUNILENBQUM7QUFDSixDQUFDOztBQUVELE1BQU0sS0FBTyxZQUFZLEdBRXJCLElBQUksY0FBYyxDQUNwQiwyQkFBMkIsQ0FDNUI7O0FBRUQsTUFBTSxLQUFPLGVBQWUsR0FBYTtJQUN2QyxPQUFPLEVBQUUsWUFBWTtJQUNyQixVQUFVLEVBQUUsV0FBVztDQUN4QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGlvblRva2VuLCBQcm92aWRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWN0aW9uUmVkdWNlck1hcCwgY29tYmluZVJlZHVjZXJzIH0gZnJvbSAnQG5ncngvc3RvcmUnO1xuaW1wb3J0IHsgQ29uc2VudFRlbXBsYXRlIH0gZnJvbSAnLi4vLi4vLi4vbW9kZWwvY29uc2VudC5tb2RlbCc7XG5pbXBvcnQgeyBsb2FkZXJSZWR1Y2VyIH0gZnJvbSAnLi4vLi4vLi4vc3RhdGUvdXRpbHMvbG9hZGVyL2xvYWRlci5yZWR1Y2VyJztcbmltcG9ydCB7XG4gIEFub255bW91c0NvbnNlbnRzU3RhdGUsXG4gIEFOT05ZTU9VU19DT05TRU5UUyxcbn0gZnJvbSAnLi4vYW5vbnltb3VzLWNvbnNlbnRzLXN0YXRlJztcbmltcG9ydCAqIGFzIGZyb21Bbm9ueW1vdXNDb25zZW50c0Jhbm5lciBmcm9tICcuL2Fub255bW91cy1jb25zZW50cy1iYW5uZXIucmVkdWNlcic7XG5pbXBvcnQgKiBhcyBmcm9tQW5vbnltb3VzQ29uc2VudHNVcGRhdGUgZnJvbSAnLi9hbm9ueW1vdXMtY29uc2VudHMtdXBkYXRlLnJlZHVjZXInO1xuaW1wb3J0ICogYXMgZnJvbUFub255bW91c0NvbnNlbnRzIGZyb20gJy4vYW5vbnltb3VzLWNvbnNlbnRzLnJlZHVjZXInO1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0UmVkdWNlcnMoKTogQWN0aW9uUmVkdWNlck1hcDxBbm9ueW1vdXNDb25zZW50c1N0YXRlPiB7XG4gIHJldHVybiB7XG4gICAgdGVtcGxhdGVzOiBsb2FkZXJSZWR1Y2VyPENvbnNlbnRUZW1wbGF0ZVtdPihBTk9OWU1PVVNfQ09OU0VOVFMpLFxuICAgIGNvbnNlbnRzOiBmcm9tQW5vbnltb3VzQ29uc2VudHMucmVkdWNlcixcbiAgICB1aTogY29tYmluZVJlZHVjZXJzKHtcbiAgICAgIGJhbm5lckRpc21pc3NlZDogZnJvbUFub255bW91c0NvbnNlbnRzQmFubmVyLnJlZHVjZXIsXG4gICAgICB1cGRhdGVkOiBmcm9tQW5vbnltb3VzQ29uc2VudHNVcGRhdGUucmVkdWNlcixcbiAgICB9KSxcbiAgfTtcbn1cblxuZXhwb3J0IGNvbnN0IHJlZHVjZXJUb2tlbjogSW5qZWN0aW9uVG9rZW48XG4gIEFjdGlvblJlZHVjZXJNYXA8QW5vbnltb3VzQ29uc2VudHNTdGF0ZT5cbj4gPSBuZXcgSW5qZWN0aW9uVG9rZW48QWN0aW9uUmVkdWNlck1hcDxBbm9ueW1vdXNDb25zZW50c1N0YXRlPj4oXG4gICdBbm9ueW1vdXNDb25zZW50c1JlZHVjZXJzJ1xuKTtcblxuZXhwb3J0IGNvbnN0IHJlZHVjZXJQcm92aWRlcjogUHJvdmlkZXIgPSB7XG4gIHByb3ZpZGU6IHJlZHVjZXJUb2tlbixcbiAgdXNlRmFjdG9yeTogZ2V0UmVkdWNlcnMsXG59O1xuIl19