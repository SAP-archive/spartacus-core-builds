/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { createFeatureSelector, createSelector, } from '@ngrx/store';
import { CART_FEATURE, } from '../cart-state';
import { loaderLoadingSelector, loaderSuccessSelector, loaderValueSelector, } from '../../../state/utils/loader/loader.selectors';
/** @type {?} */
export var getCartContentSelector = function (state) { return state.content; };
/** @type {?} */
export var getRefreshSelector = function (state) { return state.refresh; };
/** @type {?} */
export var getEntriesSelector = function (state) { return state.entries; };
/** @type {?} */
export var getCartMergeCompleteSelector = function (state) {
    return state.cartMergeComplete;
};
/** @type {?} */
export var getCartsState = createFeatureSelector(CART_FEATURE);
/** @type {?} */
export var getActiveCartState = createSelector(getCartsState, function (cartsState) { return cartsState.active; });
/** @type {?} */
export var getCartState = createSelector(getActiveCartState, function (state) { return loaderValueSelector(state); });
/** @type {?} */
export var getCartContent = createSelector(getCartState, getCartContentSelector);
/** @type {?} */
export var getRefresh = createSelector(getCartState, getRefreshSelector);
/** @type {?} */
export var getLoaded = createSelector(getActiveCartState, function (state) {
    return loaderSuccessSelector(state) &&
        !loaderLoadingSelector(state) &&
        !loaderValueSelector(state).refresh;
});
/** @type {?} */
export var getCartMergeComplete = createSelector(getCartState, getCartMergeCompleteSelector);
/** @type {?} */
export var getEntriesMap = createSelector(getCartState, getEntriesSelector);
/** @type {?} */
export var getEntrySelectorFactory = function (productCode) {
    return createSelector(getEntriesMap, function (entries) {
        if (entries) {
            return entries[productCode];
        }
    });
};
/** @type {?} */
export var getEntries = createSelector(getEntriesMap, function (entities) {
    return Object.keys(entities).map(function (code) { return entities[code]; });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FydC5zZWxlY3Rvci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFydGFjdXMvY29yZS8iLCJzb3VyY2VzIjpbInNyYy9jYXJ0L3N0b3JlL3NlbGVjdG9ycy9jYXJ0LnNlbGVjdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQ0wscUJBQXFCLEVBQ3JCLGNBQWMsR0FFZixNQUFNLGFBQWEsQ0FBQztBQUNyQixPQUFPLEVBQ0wsWUFBWSxHQUliLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFDTCxxQkFBcUIsRUFDckIscUJBQXFCLEVBQ3JCLG1CQUFtQixHQUNwQixNQUFNLDhDQUE4QyxDQUFDOztBQUl0RCxNQUFNLEtBQU8sc0JBQXNCLEdBQUcsVUFBQyxLQUFnQixJQUFLLE9BQUEsS0FBSyxDQUFDLE9BQU8sRUFBYixDQUFhOztBQUN6RSxNQUFNLEtBQU8sa0JBQWtCLEdBQUcsVUFBQyxLQUFnQixJQUFLLE9BQUEsS0FBSyxDQUFDLE9BQU8sRUFBYixDQUFhOztBQUNyRSxNQUFNLEtBQU8sa0JBQWtCLEdBQUcsVUFBQyxLQUFnQixJQUFLLE9BQUEsS0FBSyxDQUFDLE9BQU8sRUFBYixDQUFhOztBQUNyRSxNQUFNLEtBQU8sNEJBQTRCLEdBQUcsVUFBQyxLQUFnQjtJQUMzRCxPQUFBLEtBQUssQ0FBQyxpQkFBaUI7QUFBdkIsQ0FBdUI7O0FBRXpCLE1BQU0sS0FBTyxhQUFhLEdBR3RCLHFCQUFxQixDQUFhLFlBQVksQ0FBQzs7QUFFbkQsTUFBTSxLQUFPLGtCQUFrQixHQUczQixjQUFjLENBQ2hCLGFBQWEsRUFDYixVQUFDLFVBQXNCLElBQUssT0FBQSxVQUFVLENBQUMsTUFBTSxFQUFqQixDQUFpQixDQUM5Qzs7QUFFRCxNQUFNLEtBQU8sWUFBWSxHQUdyQixjQUFjLENBQ2hCLGtCQUFrQixFQUNsQixVQUFBLEtBQUssSUFBSSxPQUFBLG1CQUFtQixDQUFDLEtBQUssQ0FBQyxFQUExQixDQUEwQixDQUNwQzs7QUFFRCxNQUFNLEtBQU8sY0FBYyxHQUd2QixjQUFjLENBQ2hCLFlBQVksRUFDWixzQkFBc0IsQ0FDdkI7O0FBRUQsTUFBTSxLQUFPLFVBQVUsR0FHbkIsY0FBYyxDQUNoQixZQUFZLEVBQ1osa0JBQWtCLENBQ25COztBQUVELE1BQU0sS0FBTyxTQUFTLEdBQW1DLGNBQWMsQ0FDckUsa0JBQWtCLEVBQ2xCLFVBQUEsS0FBSztJQUNILE9BQUEscUJBQXFCLENBQUMsS0FBSyxDQUFDO1FBQzVCLENBQUMscUJBQXFCLENBQUMsS0FBSyxDQUFDO1FBQzdCLENBQUMsbUJBQW1CLENBQUMsS0FBSyxDQUFDLENBQUMsT0FBTztBQUZuQyxDQUVtQyxDQUN0Qzs7QUFFRCxNQUFNLEtBQU8sb0JBQW9CLEdBRzdCLGNBQWMsQ0FDaEIsWUFBWSxFQUNaLDRCQUE0QixDQUM3Qjs7QUFFRCxNQUFNLEtBQU8sYUFBYSxHQUd0QixjQUFjLENBQ2hCLFlBQVksRUFDWixrQkFBa0IsQ0FDbkI7O0FBRUQsTUFBTSxLQUFPLHVCQUF1QixHQUFHLFVBQ3JDLFdBQVc7SUFFWCxPQUFPLGNBQWMsQ0FDbkIsYUFBYSxFQUNiLFVBQUEsT0FBTztRQUNMLElBQUksT0FBTyxFQUFFO1lBQ1gsT0FBTyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUM7U0FDN0I7SUFDSCxDQUFDLENBQ0YsQ0FBQztBQUNKLENBQUM7O0FBRUQsTUFBTSxLQUFPLFVBQVUsR0FBMEMsY0FBYyxDQUM3RSxhQUFhLEVBQ2IsVUFBQSxRQUFRO0lBQ04sT0FBTyxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxVQUFBLElBQUksSUFBSSxPQUFBLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBZCxDQUFjLENBQUMsQ0FBQztBQUMzRCxDQUFDLENBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBjcmVhdGVGZWF0dXJlU2VsZWN0b3IsXG4gIGNyZWF0ZVNlbGVjdG9yLFxuICBNZW1vaXplZFNlbGVjdG9yLFxufSBmcm9tICdAbmdyeC9zdG9yZSc7XG5pbXBvcnQge1xuICBDQVJUX0ZFQVRVUkUsXG4gIENhcnRzU3RhdGUsXG4gIENhcnRTdGF0ZSxcbiAgU3RhdGVXaXRoQ2FydCxcbn0gZnJvbSAnLi4vY2FydC1zdGF0ZSc7XG5pbXBvcnQge1xuICBsb2FkZXJMb2FkaW5nU2VsZWN0b3IsXG4gIGxvYWRlclN1Y2Nlc3NTZWxlY3RvcixcbiAgbG9hZGVyVmFsdWVTZWxlY3Rvcixcbn0gZnJvbSAnLi4vLi4vLi4vc3RhdGUvdXRpbHMvbG9hZGVyL2xvYWRlci5zZWxlY3RvcnMnO1xuaW1wb3J0IHsgTG9hZGVyU3RhdGUgfSBmcm9tICcuLi8uLi8uLi9zdGF0ZS91dGlscy9sb2FkZXIvbG9hZGVyLXN0YXRlJztcbmltcG9ydCB7IFVJQ2FydCwgVUlPcmRlckVudHJ5IH0gZnJvbSAnLi4vLi4vbW9kZWwnO1xuXG5leHBvcnQgY29uc3QgZ2V0Q2FydENvbnRlbnRTZWxlY3RvciA9IChzdGF0ZTogQ2FydFN0YXRlKSA9PiBzdGF0ZS5jb250ZW50O1xuZXhwb3J0IGNvbnN0IGdldFJlZnJlc2hTZWxlY3RvciA9IChzdGF0ZTogQ2FydFN0YXRlKSA9PiBzdGF0ZS5yZWZyZXNoO1xuZXhwb3J0IGNvbnN0IGdldEVudHJpZXNTZWxlY3RvciA9IChzdGF0ZTogQ2FydFN0YXRlKSA9PiBzdGF0ZS5lbnRyaWVzO1xuZXhwb3J0IGNvbnN0IGdldENhcnRNZXJnZUNvbXBsZXRlU2VsZWN0b3IgPSAoc3RhdGU6IENhcnRTdGF0ZSkgPT5cbiAgc3RhdGUuY2FydE1lcmdlQ29tcGxldGU7XG5cbmV4cG9ydCBjb25zdCBnZXRDYXJ0c1N0YXRlOiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhDYXJ0LFxuICBDYXJ0c1N0YXRlXG4+ID0gY3JlYXRlRmVhdHVyZVNlbGVjdG9yPENhcnRzU3RhdGU+KENBUlRfRkVBVFVSRSk7XG5cbmV4cG9ydCBjb25zdCBnZXRBY3RpdmVDYXJ0U3RhdGU6IE1lbW9pemVkU2VsZWN0b3I8XG4gIFN0YXRlV2l0aENhcnQsXG4gIExvYWRlclN0YXRlPENhcnRTdGF0ZT5cbj4gPSBjcmVhdGVTZWxlY3RvcihcbiAgZ2V0Q2FydHNTdGF0ZSxcbiAgKGNhcnRzU3RhdGU6IENhcnRzU3RhdGUpID0+IGNhcnRzU3RhdGUuYWN0aXZlXG4pO1xuXG5leHBvcnQgY29uc3QgZ2V0Q2FydFN0YXRlOiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhDYXJ0LFxuICBDYXJ0U3RhdGVcbj4gPSBjcmVhdGVTZWxlY3RvcihcbiAgZ2V0QWN0aXZlQ2FydFN0YXRlLFxuICBzdGF0ZSA9PiBsb2FkZXJWYWx1ZVNlbGVjdG9yKHN0YXRlKVxuKTtcblxuZXhwb3J0IGNvbnN0IGdldENhcnRDb250ZW50OiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhDYXJ0LFxuICBVSUNhcnRcbj4gPSBjcmVhdGVTZWxlY3RvcihcbiAgZ2V0Q2FydFN0YXRlLFxuICBnZXRDYXJ0Q29udGVudFNlbGVjdG9yXG4pO1xuXG5leHBvcnQgY29uc3QgZ2V0UmVmcmVzaDogTWVtb2l6ZWRTZWxlY3RvcjxcbiAgU3RhdGVXaXRoQ2FydCxcbiAgYm9vbGVhblxuPiA9IGNyZWF0ZVNlbGVjdG9yKFxuICBnZXRDYXJ0U3RhdGUsXG4gIGdldFJlZnJlc2hTZWxlY3RvclxuKTtcblxuZXhwb3J0IGNvbnN0IGdldExvYWRlZDogTWVtb2l6ZWRTZWxlY3RvcjxhbnksIGJvb2xlYW4+ID0gY3JlYXRlU2VsZWN0b3IoXG4gIGdldEFjdGl2ZUNhcnRTdGF0ZSxcbiAgc3RhdGUgPT5cbiAgICBsb2FkZXJTdWNjZXNzU2VsZWN0b3Ioc3RhdGUpICYmXG4gICAgIWxvYWRlckxvYWRpbmdTZWxlY3RvcihzdGF0ZSkgJiZcbiAgICAhbG9hZGVyVmFsdWVTZWxlY3RvcihzdGF0ZSkucmVmcmVzaFxuKTtcblxuZXhwb3J0IGNvbnN0IGdldENhcnRNZXJnZUNvbXBsZXRlOiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhDYXJ0LFxuICBib29sZWFuXG4+ID0gY3JlYXRlU2VsZWN0b3IoXG4gIGdldENhcnRTdGF0ZSxcbiAgZ2V0Q2FydE1lcmdlQ29tcGxldGVTZWxlY3RvclxuKTtcblxuZXhwb3J0IGNvbnN0IGdldEVudHJpZXNNYXA6IE1lbW9pemVkU2VsZWN0b3I8XG4gIGFueSxcbiAgeyBbY29kZTogc3RyaW5nXTogVUlPcmRlckVudHJ5IH1cbj4gPSBjcmVhdGVTZWxlY3RvcihcbiAgZ2V0Q2FydFN0YXRlLFxuICBnZXRFbnRyaWVzU2VsZWN0b3Jcbik7XG5cbmV4cG9ydCBjb25zdCBnZXRFbnRyeVNlbGVjdG9yRmFjdG9yeSA9IChcbiAgcHJvZHVjdENvZGVcbik6IE1lbW9pemVkU2VsZWN0b3I8YW55LCBVSU9yZGVyRW50cnk+ID0+IHtcbiAgcmV0dXJuIGNyZWF0ZVNlbGVjdG9yKFxuICAgIGdldEVudHJpZXNNYXAsXG4gICAgZW50cmllcyA9PiB7XG4gICAgICBpZiAoZW50cmllcykge1xuICAgICAgICByZXR1cm4gZW50cmllc1twcm9kdWN0Q29kZV07XG4gICAgICB9XG4gICAgfVxuICApO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldEVudHJpZXM6IE1lbW9pemVkU2VsZWN0b3I8YW55LCBVSU9yZGVyRW50cnlbXT4gPSBjcmVhdGVTZWxlY3RvcihcbiAgZ2V0RW50cmllc01hcCxcbiAgZW50aXRpZXMgPT4ge1xuICAgIHJldHVybiBPYmplY3Qua2V5cyhlbnRpdGllcykubWFwKGNvZGUgPT4gZW50aXRpZXNbY29kZV0pO1xuICB9XG4pO1xuIl19