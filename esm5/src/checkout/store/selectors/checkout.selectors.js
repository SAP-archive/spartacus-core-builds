import { createFeatureSelector, createSelector, } from '@ngrx/store';
import { StateLoaderSelectors } from '../../../state/utils/index';
import { CHECKOUT_FEATURE, } from '../checkout-state';
var getDeliveryAddressSelector = function (state) { return state.address; };
var ɵ0 = getDeliveryAddressSelector;
var getDeliveryModeSelector = function (state) {
    return state.deliveryMode;
};
var ɵ1 = getDeliveryModeSelector;
var getPaymentDetailsSelector = function (state) {
    return state.paymentDetails;
};
var ɵ2 = getPaymentDetailsSelector;
var getOrderDetailsSelector = function (state) {
    return state.orderDetails;
};
var ɵ3 = getOrderDetailsSelector;
export var getCheckoutState = createFeatureSelector(CHECKOUT_FEATURE);
var ɵ4 = function (checkoutState) { return checkoutState.steps; };
export var getCheckoutStepsState = createSelector(getCheckoutState, ɵ4);
var ɵ5 = function (state) {
    return StateLoaderSelectors.loaderValueSelector(state);
};
export var getCheckoutSteps = createSelector(getCheckoutStepsState, ɵ5);
export var getDeliveryAddress = createSelector(getCheckoutSteps, getDeliveryAddressSelector);
export var getDeliveryMode = createSelector(getCheckoutSteps, getDeliveryModeSelector);
var ɵ6 = function (deliveryMode) {
    return (deliveryMode &&
        Object.keys(deliveryMode.supported).map(function (code) { return deliveryMode.supported[code]; }));
};
export var getSupportedDeliveryModes = createSelector(getDeliveryMode, ɵ6);
var ɵ7 = function (deliveryMode) {
    return deliveryMode && deliveryMode.selected;
};
export var getSelectedDeliveryModeCode = createSelector(getDeliveryMode, ɵ7);
var ɵ8 = function (deliveryMode) {
    if (deliveryMode.selected !== '') {
        if (Object.keys(deliveryMode.supported).length === 0) {
            return null;
        }
        return deliveryMode.supported[deliveryMode.selected];
    }
};
export var getSelectedDeliveryMode = createSelector(getDeliveryMode, ɵ8);
export var getPaymentDetails = createSelector(getCheckoutSteps, getPaymentDetailsSelector);
export var getCheckoutOrderDetails = createSelector(getCheckoutSteps, getOrderDetailsSelector);
var ɵ9 = function (state) {
    return StateLoaderSelectors.loaderSuccessSelector(state) &&
        !StateLoaderSelectors.loaderLoadingSelector(state);
};
export var getCheckoutDetailsLoaded = createSelector(getCheckoutStepsState, ɵ9);
export { ɵ0, ɵ1, ɵ2, ɵ3, ɵ4, ɵ5, ɵ6, ɵ7, ɵ8, ɵ9 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tvdXQuc2VsZWN0b3JzLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHNwYXJ0YWN1cy9jb3JlLyIsInNvdXJjZXMiOlsic3JjL2NoZWNrb3V0L3N0b3JlL3NlbGVjdG9ycy9jaGVja291dC5zZWxlY3RvcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLHFCQUFxQixFQUNyQixjQUFjLEdBRWYsTUFBTSxhQUFhLENBQUM7QUFJckIsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFFbEUsT0FBTyxFQUdMLGdCQUFnQixHQUVqQixNQUFNLG1CQUFtQixDQUFDO0FBRTNCLElBQU0sMEJBQTBCLEdBQUcsVUFBQyxLQUF5QixJQUFLLE9BQUEsS0FBSyxDQUFDLE9BQU8sRUFBYixDQUFhLENBQUM7O0FBQ2hGLElBQU0sdUJBQXVCLEdBQUcsVUFBQyxLQUF5QjtJQUN4RCxPQUFBLEtBQUssQ0FBQyxZQUFZO0FBQWxCLENBQWtCLENBQUM7O0FBQ3JCLElBQU0seUJBQXlCLEdBQUcsVUFBQyxLQUF5QjtJQUMxRCxPQUFBLEtBQUssQ0FBQyxjQUFjO0FBQXBCLENBQW9CLENBQUM7O0FBQ3ZCLElBQU0sdUJBQXVCLEdBQUcsVUFBQyxLQUF5QjtJQUN4RCxPQUFBLEtBQUssQ0FBQyxZQUFZO0FBQWxCLENBQWtCLENBQUM7O0FBRXJCLE1BQU0sQ0FBQyxJQUFNLGdCQUFnQixHQUd6QixxQkFBcUIsQ0FBZ0IsZ0JBQWdCLENBQUMsQ0FBQztTQU96RCxVQUFDLGFBQTRCLElBQUssT0FBQSxhQUFhLENBQUMsS0FBSyxFQUFuQixDQUFtQjtBQUx2RCxNQUFNLENBQUMsSUFBTSxxQkFBcUIsR0FHOUIsY0FBYyxDQUNoQixnQkFBZ0IsS0FFakIsQ0FBQztTQUt3QyxVQUFDLEtBQUs7SUFDOUMsT0FBQSxvQkFBb0IsQ0FBQyxtQkFBbUIsQ0FBQyxLQUFLLENBQUM7QUFBL0MsQ0FBK0M7QUFKakQsTUFBTSxDQUFDLElBQU0sZ0JBQWdCLEdBR3pCLGNBQWMsQ0FBQyxxQkFBcUIsS0FFdkMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxJQUFNLGtCQUFrQixHQUczQixjQUFjLENBQUMsZ0JBQWdCLEVBQUUsMEJBQTBCLENBQUMsQ0FBQztBQUVqRSxNQUFNLENBQUMsSUFBTSxlQUFlLEdBTXhCLGNBQWMsQ0FBQyxnQkFBZ0IsRUFBRSx1QkFBdUIsQ0FBQyxDQUFDO1NBSzFCLFVBQUMsWUFBWTtJQUMvQyxPQUFPLENBQ0wsWUFBWTtRQUNaLE1BQU0sQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEdBQUcsQ0FDckMsVUFBQyxJQUFJLElBQUssT0FBQSxZQUFZLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUE1QixDQUE0QixDQUN2QyxDQUNGLENBQUM7QUFDSixDQUFDO0FBVkQsTUFBTSxDQUFDLElBQU0seUJBQXlCLEdBR2xDLGNBQWMsQ0FBQyxlQUFlLEtBT2hDLENBQUM7U0FLaUMsVUFBQyxZQUFZO0lBQy9DLE9BQU8sWUFBWSxJQUFJLFlBQVksQ0FBQyxRQUFRLENBQUM7QUFDL0MsQ0FBQztBQUxELE1BQU0sQ0FBQyxJQUFNLDJCQUEyQixHQUdwQyxjQUFjLENBQUMsZUFBZSxLQUVoQyxDQUFDO1NBS2lDLFVBQUMsWUFBWTtJQUMvQyxJQUFJLFlBQVksQ0FBQyxRQUFRLEtBQUssRUFBRSxFQUFFO1FBQ2hDLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtZQUNwRCxPQUFPLElBQUksQ0FBQztTQUNiO1FBQ0QsT0FBTyxZQUFZLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsQ0FBQztLQUN0RDtBQUNILENBQUM7QUFWRCxNQUFNLENBQUMsSUFBTSx1QkFBdUIsR0FHaEMsY0FBYyxDQUFDLGVBQWUsS0FPaEMsQ0FBQztBQUVILE1BQU0sQ0FBQyxJQUFNLGlCQUFpQixHQUcxQixjQUFjLENBQUMsZ0JBQWdCLEVBQUUseUJBQXlCLENBQUMsQ0FBQztBQUVoRSxNQUFNLENBQUMsSUFBTSx1QkFBdUIsR0FHaEMsY0FBYyxDQUFDLGdCQUFnQixFQUFFLHVCQUF1QixDQUFDLENBQUM7U0FPNUQsVUFBQyxLQUFLO0lBQ0osT0FBQSxvQkFBb0IsQ0FBQyxxQkFBcUIsQ0FBQyxLQUFLLENBQUM7UUFDakQsQ0FBQyxvQkFBb0IsQ0FBQyxxQkFBcUIsQ0FBQyxLQUFLLENBQUM7QUFEbEQsQ0FDa0Q7QUFQdEQsTUFBTSxDQUFDLElBQU0sd0JBQXdCLEdBR2pDLGNBQWMsQ0FDaEIscUJBQXFCLEtBSXRCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBjcmVhdGVGZWF0dXJlU2VsZWN0b3IsXG4gIGNyZWF0ZVNlbGVjdG9yLFxuICBNZW1vaXplZFNlbGVjdG9yLFxufSBmcm9tICdAbmdyeC9zdG9yZSc7XG5pbXBvcnQgeyBBZGRyZXNzIH0gZnJvbSAnLi4vLi4vLi4vbW9kZWwvYWRkcmVzcy5tb2RlbCc7XG5pbXBvcnQgeyBQYXltZW50RGV0YWlscyB9IGZyb20gJy4uLy4uLy4uL21vZGVsL2NhcnQubW9kZWwnO1xuaW1wb3J0IHsgRGVsaXZlcnlNb2RlLCBPcmRlciB9IGZyb20gJy4uLy4uLy4uL21vZGVsL29yZGVyLm1vZGVsJztcbmltcG9ydCB7IFN0YXRlTG9hZGVyU2VsZWN0b3JzIH0gZnJvbSAnLi4vLi4vLi4vc3RhdGUvdXRpbHMvaW5kZXgnO1xuaW1wb3J0IHsgTG9hZGVyU3RhdGUgfSBmcm9tICcuLi8uLi8uLi9zdGF0ZS91dGlscy9sb2FkZXIvbG9hZGVyLXN0YXRlJztcbmltcG9ydCB7XG4gIENoZWNrb3V0U3RhdGUsXG4gIENoZWNrb3V0U3RlcHNTdGF0ZSxcbiAgQ0hFQ0tPVVRfRkVBVFVSRSxcbiAgU3RhdGVXaXRoQ2hlY2tvdXQsXG59IGZyb20gJy4uL2NoZWNrb3V0LXN0YXRlJztcblxuY29uc3QgZ2V0RGVsaXZlcnlBZGRyZXNzU2VsZWN0b3IgPSAoc3RhdGU6IENoZWNrb3V0U3RlcHNTdGF0ZSkgPT4gc3RhdGUuYWRkcmVzcztcbmNvbnN0IGdldERlbGl2ZXJ5TW9kZVNlbGVjdG9yID0gKHN0YXRlOiBDaGVja291dFN0ZXBzU3RhdGUpID0+XG4gIHN0YXRlLmRlbGl2ZXJ5TW9kZTtcbmNvbnN0IGdldFBheW1lbnREZXRhaWxzU2VsZWN0b3IgPSAoc3RhdGU6IENoZWNrb3V0U3RlcHNTdGF0ZSkgPT5cbiAgc3RhdGUucGF5bWVudERldGFpbHM7XG5jb25zdCBnZXRPcmRlckRldGFpbHNTZWxlY3RvciA9IChzdGF0ZTogQ2hlY2tvdXRTdGVwc1N0YXRlKSA9PlxuICBzdGF0ZS5vcmRlckRldGFpbHM7XG5cbmV4cG9ydCBjb25zdCBnZXRDaGVja291dFN0YXRlOiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhDaGVja291dCxcbiAgQ2hlY2tvdXRTdGF0ZVxuPiA9IGNyZWF0ZUZlYXR1cmVTZWxlY3RvcjxDaGVja291dFN0YXRlPihDSEVDS09VVF9GRUFUVVJFKTtcblxuZXhwb3J0IGNvbnN0IGdldENoZWNrb3V0U3RlcHNTdGF0ZTogTWVtb2l6ZWRTZWxlY3RvcjxcbiAgU3RhdGVXaXRoQ2hlY2tvdXQsXG4gIExvYWRlclN0YXRlPENoZWNrb3V0U3RlcHNTdGF0ZT5cbj4gPSBjcmVhdGVTZWxlY3RvcihcbiAgZ2V0Q2hlY2tvdXRTdGF0ZSxcbiAgKGNoZWNrb3V0U3RhdGU6IENoZWNrb3V0U3RhdGUpID0+IGNoZWNrb3V0U3RhdGUuc3RlcHNcbik7XG5cbmV4cG9ydCBjb25zdCBnZXRDaGVja291dFN0ZXBzOiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhDaGVja291dCxcbiAgQ2hlY2tvdXRTdGVwc1N0YXRlXG4+ID0gY3JlYXRlU2VsZWN0b3IoZ2V0Q2hlY2tvdXRTdGVwc1N0YXRlLCAoc3RhdGUpID0+XG4gIFN0YXRlTG9hZGVyU2VsZWN0b3JzLmxvYWRlclZhbHVlU2VsZWN0b3Ioc3RhdGUpXG4pO1xuXG5leHBvcnQgY29uc3QgZ2V0RGVsaXZlcnlBZGRyZXNzOiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhDaGVja291dCxcbiAgQWRkcmVzc1xuPiA9IGNyZWF0ZVNlbGVjdG9yKGdldENoZWNrb3V0U3RlcHMsIGdldERlbGl2ZXJ5QWRkcmVzc1NlbGVjdG9yKTtcblxuZXhwb3J0IGNvbnN0IGdldERlbGl2ZXJ5TW9kZTogTWVtb2l6ZWRTZWxlY3RvcjxcbiAgU3RhdGVXaXRoQ2hlY2tvdXQsXG4gIHtcbiAgICBzdXBwb3J0ZWQ6IHsgW2NvZGU6IHN0cmluZ106IERlbGl2ZXJ5TW9kZSB9O1xuICAgIHNlbGVjdGVkOiBzdHJpbmc7XG4gIH1cbj4gPSBjcmVhdGVTZWxlY3RvcihnZXRDaGVja291dFN0ZXBzLCBnZXREZWxpdmVyeU1vZGVTZWxlY3Rvcik7XG5cbmV4cG9ydCBjb25zdCBnZXRTdXBwb3J0ZWREZWxpdmVyeU1vZGVzOiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhDaGVja291dCxcbiAgRGVsaXZlcnlNb2RlW11cbj4gPSBjcmVhdGVTZWxlY3RvcihnZXREZWxpdmVyeU1vZGUsIChkZWxpdmVyeU1vZGUpID0+IHtcbiAgcmV0dXJuIChcbiAgICBkZWxpdmVyeU1vZGUgJiZcbiAgICBPYmplY3Qua2V5cyhkZWxpdmVyeU1vZGUuc3VwcG9ydGVkKS5tYXAoXG4gICAgICAoY29kZSkgPT4gZGVsaXZlcnlNb2RlLnN1cHBvcnRlZFtjb2RlXVxuICAgIClcbiAgKTtcbn0pO1xuXG5leHBvcnQgY29uc3QgZ2V0U2VsZWN0ZWREZWxpdmVyeU1vZGVDb2RlOiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhDaGVja291dCxcbiAgc3RyaW5nXG4+ID0gY3JlYXRlU2VsZWN0b3IoZ2V0RGVsaXZlcnlNb2RlLCAoZGVsaXZlcnlNb2RlKSA9PiB7XG4gIHJldHVybiBkZWxpdmVyeU1vZGUgJiYgZGVsaXZlcnlNb2RlLnNlbGVjdGVkO1xufSk7XG5cbmV4cG9ydCBjb25zdCBnZXRTZWxlY3RlZERlbGl2ZXJ5TW9kZTogTWVtb2l6ZWRTZWxlY3RvcjxcbiAgU3RhdGVXaXRoQ2hlY2tvdXQsXG4gIERlbGl2ZXJ5TW9kZVxuPiA9IGNyZWF0ZVNlbGVjdG9yKGdldERlbGl2ZXJ5TW9kZSwgKGRlbGl2ZXJ5TW9kZSkgPT4ge1xuICBpZiAoZGVsaXZlcnlNb2RlLnNlbGVjdGVkICE9PSAnJykge1xuICAgIGlmIChPYmplY3Qua2V5cyhkZWxpdmVyeU1vZGUuc3VwcG9ydGVkKS5sZW5ndGggPT09IDApIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gZGVsaXZlcnlNb2RlLnN1cHBvcnRlZFtkZWxpdmVyeU1vZGUuc2VsZWN0ZWRdO1xuICB9XG59KTtcblxuZXhwb3J0IGNvbnN0IGdldFBheW1lbnREZXRhaWxzOiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhDaGVja291dCxcbiAgUGF5bWVudERldGFpbHNcbj4gPSBjcmVhdGVTZWxlY3RvcihnZXRDaGVja291dFN0ZXBzLCBnZXRQYXltZW50RGV0YWlsc1NlbGVjdG9yKTtcblxuZXhwb3J0IGNvbnN0IGdldENoZWNrb3V0T3JkZXJEZXRhaWxzOiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhDaGVja291dCxcbiAgT3JkZXJcbj4gPSBjcmVhdGVTZWxlY3RvcihnZXRDaGVja291dFN0ZXBzLCBnZXRPcmRlckRldGFpbHNTZWxlY3Rvcik7XG5cbmV4cG9ydCBjb25zdCBnZXRDaGVja291dERldGFpbHNMb2FkZWQ6IE1lbW9pemVkU2VsZWN0b3I8XG4gIFN0YXRlV2l0aENoZWNrb3V0LFxuICBib29sZWFuXG4+ID0gY3JlYXRlU2VsZWN0b3IoXG4gIGdldENoZWNrb3V0U3RlcHNTdGF0ZSxcbiAgKHN0YXRlKSA9PlxuICAgIFN0YXRlTG9hZGVyU2VsZWN0b3JzLmxvYWRlclN1Y2Nlc3NTZWxlY3RvcihzdGF0ZSkgJiZcbiAgICAhU3RhdGVMb2FkZXJTZWxlY3RvcnMubG9hZGVyTG9hZGluZ1NlbGVjdG9yKHN0YXRlKVxuKTtcbiJdfQ==