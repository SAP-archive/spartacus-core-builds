import { createFeatureSelector, createSelector, } from '@ngrx/store';
import { StateLoaderSelectors } from '../../../state/utils/index';
import { CART_FEATURE, } from '../cart-state';
const getCartContentSelector = (state) => state.content;
const ɵ0 = getCartContentSelector;
const getCartRefreshSelector = (state) => state.refresh;
const ɵ1 = getCartRefreshSelector;
const getCartEntriesSelector = (state) => state.entries;
const ɵ2 = getCartEntriesSelector;
const getCartMergeCompleteSelector = (state) => state.cartMergeComplete;
const ɵ3 = getCartMergeCompleteSelector;
export const getCartsState = createFeatureSelector(CART_FEATURE);
const ɵ4 = (cartsState) => cartsState.active;
export const getActiveCartState = createSelector(getCartsState, ɵ4);
const ɵ5 = state => StateLoaderSelectors.loaderValueSelector(state);
export const getCartState = createSelector(getActiveCartState, ɵ5);
export const getCartContent = createSelector(getCartState, getCartContentSelector);
export const getCartRefresh = createSelector(getCartState, getCartRefreshSelector);
const ɵ6 = state => (StateLoaderSelectors.loaderSuccessSelector(state) &&
    !StateLoaderSelectors.loaderLoadingSelector(state) &&
    !StateLoaderSelectors.loaderValueSelector(state).refresh) ||
    (StateLoaderSelectors.loaderErrorSelector(state) &&
        !StateLoaderSelectors.loaderLoadingSelector(state) &&
        !StateLoaderSelectors.loaderValueSelector(state).refresh);
export const getCartLoaded = createSelector(getActiveCartState, ɵ6);
const ɵ7 = state => StateLoaderSelectors.loaderLoadingSelector(state);
export const getCartLoading = createSelector(getActiveCartState, ɵ7);
export const getCartMergeComplete = createSelector(getCartState, getCartMergeCompleteSelector);
export const getCartEntriesMap = createSelector(getCartState, getCartEntriesSelector);
export const getCartEntrySelectorFactory = (productCode) => {
    return createSelector(getCartEntriesMap, entries => {
        if (entries) {
            return entries[productCode];
        }
    });
};
const ɵ8 = entities => {
    return Object.keys(entities).map(code => entities[code]);
};
export const getCartEntries = createSelector(getCartEntriesMap, ɵ8);
const ɵ9 = content => content.user;
export const getCartUser = createSelector(getCartContent, ɵ9);
export { ɵ0, ɵ1, ɵ2, ɵ3, ɵ4, ɵ5, ɵ6, ɵ7, ɵ8, ɵ9 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FydC5zZWxlY3Rvci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFydGFjdXMvY29yZS8iLCJzb3VyY2VzIjpbInNyYy9jYXJ0L3N0b3JlL3NlbGVjdG9ycy9jYXJ0LnNlbGVjdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCxxQkFBcUIsRUFDckIsY0FBYyxHQUVmLE1BQU0sYUFBYSxDQUFDO0FBR3JCLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRWxFLE9BQU8sRUFHTCxZQUFZLEdBRWIsTUFBTSxlQUFlLENBQUM7QUFHdkIsTUFBTSxzQkFBc0IsR0FBRyxDQUFDLEtBQWdCLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUM7O0FBQ25FLE1BQU0sc0JBQXNCLEdBQUcsQ0FBQyxLQUFnQixFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDOztBQUNuRSxNQUFNLHNCQUFzQixHQUFHLENBQUMsS0FBZ0IsRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQzs7QUFDbkUsTUFBTSw0QkFBNEIsR0FBRyxDQUFDLEtBQWdCLEVBQUUsRUFBRSxDQUN4RCxLQUFLLENBQUMsaUJBQWlCLENBQUM7O0FBRTFCLE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FHdEIscUJBQXFCLENBQWEsWUFBWSxDQUFDLENBQUM7V0FPbEQsQ0FBQyxVQUFzQixFQUFFLEVBQUUsQ0FBQyxVQUFVLENBQUMsTUFBTTtBQUwvQyxNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FHM0IsY0FBYyxDQUNoQixhQUFhLEtBRWQsQ0FBQztXQUtxQyxLQUFLLENBQUMsRUFBRSxDQUM3QyxvQkFBb0IsQ0FBQyxtQkFBbUIsQ0FBQyxLQUFLLENBQUM7QUFKakQsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUdyQixjQUFjLENBQUMsa0JBQWtCLEtBRXBDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxjQUFjLEdBR3ZCLGNBQWMsQ0FBQyxZQUFZLEVBQUUsc0JBQXNCLENBQUMsQ0FBQztBQUV6RCxNQUFNLENBQUMsTUFBTSxjQUFjLEdBR3ZCLGNBQWMsQ0FBQyxZQUFZLEVBQUUsc0JBQXNCLENBQUMsQ0FBQztXQU92RCxLQUFLLENBQUMsRUFBRSxDQUNOLENBQUMsb0JBQW9CLENBQUMscUJBQXFCLENBQUMsS0FBSyxDQUFDO0lBQ2hELENBQUMsb0JBQW9CLENBQUMscUJBQXFCLENBQUMsS0FBSyxDQUFDO0lBQ2xELENBQUMsb0JBQW9CLENBQUMsbUJBQW1CLENBQUMsS0FBSyxDQUFDLENBQUMsT0FBTyxDQUFDO0lBQzNELENBQUMsb0JBQW9CLENBQUMsbUJBQW1CLENBQUMsS0FBSyxDQUFDO1FBQzlDLENBQUMsb0JBQW9CLENBQUMscUJBQXFCLENBQUMsS0FBSyxDQUFDO1FBQ2xELENBQUMsb0JBQW9CLENBQUMsbUJBQW1CLENBQUMsS0FBSyxDQUFDLENBQUMsT0FBTyxDQUFDO0FBWC9ELE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FHdEIsY0FBYyxDQUNoQixrQkFBa0IsS0FRbkIsQ0FBQztXQUtxQyxLQUFLLENBQUMsRUFBRSxDQUM3QyxvQkFBb0IsQ0FBQyxxQkFBcUIsQ0FBQyxLQUFLLENBQUM7QUFKbkQsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUd2QixjQUFjLENBQUMsa0JBQWtCLEtBRXBDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FHN0IsY0FBYyxDQUFDLFlBQVksRUFBRSw0QkFBNEIsQ0FBQyxDQUFDO0FBRS9ELE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUcxQixjQUFjLENBQUMsWUFBWSxFQUFFLHNCQUFzQixDQUFDLENBQUM7QUFFekQsTUFBTSxDQUFDLE1BQU0sMkJBQTJCLEdBQUcsQ0FDekMsV0FBbUIsRUFDMEIsRUFBRTtJQUMvQyxPQUFPLGNBQWMsQ0FBQyxpQkFBaUIsRUFBRSxPQUFPLENBQUMsRUFBRTtRQUNqRCxJQUFJLE9BQU8sRUFBRTtZQUNYLE9BQU8sT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1NBQzdCO0lBQ0gsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUM7V0FLb0MsUUFBUSxDQUFDLEVBQUU7SUFDL0MsT0FBTyxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0FBQzNELENBQUM7QUFMRCxNQUFNLENBQUMsTUFBTSxjQUFjLEdBR3ZCLGNBQWMsQ0FBQyxpQkFBaUIsS0FFbEMsQ0FBQztXQUtnQyxPQUFPLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxJQUFJO0FBSDFELE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FHcEIsY0FBYyxDQUFDLGNBQWMsS0FBMEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGNyZWF0ZUZlYXR1cmVTZWxlY3RvcixcbiAgY3JlYXRlU2VsZWN0b3IsXG4gIE1lbW9pemVkU2VsZWN0b3IsXG59IGZyb20gJ0BuZ3J4L3N0b3JlJztcbmltcG9ydCB7IENhcnQgfSBmcm9tICcuLi8uLi8uLi9tb2RlbC9jYXJ0Lm1vZGVsJztcbmltcG9ydCB7IE9yZGVyRW50cnkgfSBmcm9tICcuLi8uLi8uLi9tb2RlbC9vcmRlci5tb2RlbCc7XG5pbXBvcnQgeyBTdGF0ZUxvYWRlclNlbGVjdG9ycyB9IGZyb20gJy4uLy4uLy4uL3N0YXRlL3V0aWxzL2luZGV4JztcbmltcG9ydCB7IExvYWRlclN0YXRlIH0gZnJvbSAnLi4vLi4vLi4vc3RhdGUvdXRpbHMvbG9hZGVyL2xvYWRlci1zdGF0ZSc7XG5pbXBvcnQge1xuICBDYXJ0c1N0YXRlLFxuICBDYXJ0U3RhdGUsXG4gIENBUlRfRkVBVFVSRSxcbiAgU3RhdGVXaXRoQ2FydCxcbn0gZnJvbSAnLi4vY2FydC1zdGF0ZSc7XG5pbXBvcnQgeyBVc2VyIH0gZnJvbSAnLi4vLi4vLi4vbW9kZWwvbWlzYy5tb2RlbCc7XG5cbmNvbnN0IGdldENhcnRDb250ZW50U2VsZWN0b3IgPSAoc3RhdGU6IENhcnRTdGF0ZSkgPT4gc3RhdGUuY29udGVudDtcbmNvbnN0IGdldENhcnRSZWZyZXNoU2VsZWN0b3IgPSAoc3RhdGU6IENhcnRTdGF0ZSkgPT4gc3RhdGUucmVmcmVzaDtcbmNvbnN0IGdldENhcnRFbnRyaWVzU2VsZWN0b3IgPSAoc3RhdGU6IENhcnRTdGF0ZSkgPT4gc3RhdGUuZW50cmllcztcbmNvbnN0IGdldENhcnRNZXJnZUNvbXBsZXRlU2VsZWN0b3IgPSAoc3RhdGU6IENhcnRTdGF0ZSkgPT5cbiAgc3RhdGUuY2FydE1lcmdlQ29tcGxldGU7XG5cbmV4cG9ydCBjb25zdCBnZXRDYXJ0c1N0YXRlOiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhDYXJ0LFxuICBDYXJ0c1N0YXRlXG4+ID0gY3JlYXRlRmVhdHVyZVNlbGVjdG9yPENhcnRzU3RhdGU+KENBUlRfRkVBVFVSRSk7XG5cbmV4cG9ydCBjb25zdCBnZXRBY3RpdmVDYXJ0U3RhdGU6IE1lbW9pemVkU2VsZWN0b3I8XG4gIFN0YXRlV2l0aENhcnQsXG4gIExvYWRlclN0YXRlPENhcnRTdGF0ZT5cbj4gPSBjcmVhdGVTZWxlY3RvcihcbiAgZ2V0Q2FydHNTdGF0ZSxcbiAgKGNhcnRzU3RhdGU6IENhcnRzU3RhdGUpID0+IGNhcnRzU3RhdGUuYWN0aXZlXG4pO1xuXG5leHBvcnQgY29uc3QgZ2V0Q2FydFN0YXRlOiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhDYXJ0LFxuICBDYXJ0U3RhdGVcbj4gPSBjcmVhdGVTZWxlY3RvcihnZXRBY3RpdmVDYXJ0U3RhdGUsIHN0YXRlID0+XG4gIFN0YXRlTG9hZGVyU2VsZWN0b3JzLmxvYWRlclZhbHVlU2VsZWN0b3Ioc3RhdGUpXG4pO1xuXG5leHBvcnQgY29uc3QgZ2V0Q2FydENvbnRlbnQ6IE1lbW9pemVkU2VsZWN0b3I8XG4gIFN0YXRlV2l0aENhcnQsXG4gIENhcnRcbj4gPSBjcmVhdGVTZWxlY3RvcihnZXRDYXJ0U3RhdGUsIGdldENhcnRDb250ZW50U2VsZWN0b3IpO1xuXG5leHBvcnQgY29uc3QgZ2V0Q2FydFJlZnJlc2g6IE1lbW9pemVkU2VsZWN0b3I8XG4gIFN0YXRlV2l0aENhcnQsXG4gIGJvb2xlYW5cbj4gPSBjcmVhdGVTZWxlY3RvcihnZXRDYXJ0U3RhdGUsIGdldENhcnRSZWZyZXNoU2VsZWN0b3IpO1xuXG5leHBvcnQgY29uc3QgZ2V0Q2FydExvYWRlZDogTWVtb2l6ZWRTZWxlY3RvcjxcbiAgU3RhdGVXaXRoQ2FydCxcbiAgYm9vbGVhblxuPiA9IGNyZWF0ZVNlbGVjdG9yKFxuICBnZXRBY3RpdmVDYXJ0U3RhdGUsXG4gIHN0YXRlID0+XG4gICAgKFN0YXRlTG9hZGVyU2VsZWN0b3JzLmxvYWRlclN1Y2Nlc3NTZWxlY3RvcihzdGF0ZSkgJiZcbiAgICAgICFTdGF0ZUxvYWRlclNlbGVjdG9ycy5sb2FkZXJMb2FkaW5nU2VsZWN0b3Ioc3RhdGUpICYmXG4gICAgICAhU3RhdGVMb2FkZXJTZWxlY3RvcnMubG9hZGVyVmFsdWVTZWxlY3RvcihzdGF0ZSkucmVmcmVzaCkgfHxcbiAgICAoU3RhdGVMb2FkZXJTZWxlY3RvcnMubG9hZGVyRXJyb3JTZWxlY3RvcihzdGF0ZSkgJiZcbiAgICAgICFTdGF0ZUxvYWRlclNlbGVjdG9ycy5sb2FkZXJMb2FkaW5nU2VsZWN0b3Ioc3RhdGUpICYmXG4gICAgICAhU3RhdGVMb2FkZXJTZWxlY3RvcnMubG9hZGVyVmFsdWVTZWxlY3RvcihzdGF0ZSkucmVmcmVzaClcbik7XG5cbmV4cG9ydCBjb25zdCBnZXRDYXJ0TG9hZGluZzogTWVtb2l6ZWRTZWxlY3RvcjxcbiAgYW55LFxuICBib29sZWFuXG4+ID0gY3JlYXRlU2VsZWN0b3IoZ2V0QWN0aXZlQ2FydFN0YXRlLCBzdGF0ZSA9PlxuICBTdGF0ZUxvYWRlclNlbGVjdG9ycy5sb2FkZXJMb2FkaW5nU2VsZWN0b3Ioc3RhdGUpXG4pO1xuXG5leHBvcnQgY29uc3QgZ2V0Q2FydE1lcmdlQ29tcGxldGU6IE1lbW9pemVkU2VsZWN0b3I8XG4gIFN0YXRlV2l0aENhcnQsXG4gIGJvb2xlYW5cbj4gPSBjcmVhdGVTZWxlY3RvcihnZXRDYXJ0U3RhdGUsIGdldENhcnRNZXJnZUNvbXBsZXRlU2VsZWN0b3IpO1xuXG5leHBvcnQgY29uc3QgZ2V0Q2FydEVudHJpZXNNYXA6IE1lbW9pemVkU2VsZWN0b3I8XG4gIFN0YXRlV2l0aENhcnQsXG4gIHsgW2NvZGU6IHN0cmluZ106IE9yZGVyRW50cnkgfVxuPiA9IGNyZWF0ZVNlbGVjdG9yKGdldENhcnRTdGF0ZSwgZ2V0Q2FydEVudHJpZXNTZWxlY3Rvcik7XG5cbmV4cG9ydCBjb25zdCBnZXRDYXJ0RW50cnlTZWxlY3RvckZhY3RvcnkgPSAoXG4gIHByb2R1Y3RDb2RlOiBzdHJpbmdcbik6IE1lbW9pemVkU2VsZWN0b3I8U3RhdGVXaXRoQ2FydCwgT3JkZXJFbnRyeT4gPT4ge1xuICByZXR1cm4gY3JlYXRlU2VsZWN0b3IoZ2V0Q2FydEVudHJpZXNNYXAsIGVudHJpZXMgPT4ge1xuICAgIGlmIChlbnRyaWVzKSB7XG4gICAgICByZXR1cm4gZW50cmllc1twcm9kdWN0Q29kZV07XG4gICAgfVxuICB9KTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRDYXJ0RW50cmllczogTWVtb2l6ZWRTZWxlY3RvcjxcbiAgU3RhdGVXaXRoQ2FydCxcbiAgT3JkZXJFbnRyeVtdXG4+ID0gY3JlYXRlU2VsZWN0b3IoZ2V0Q2FydEVudHJpZXNNYXAsIGVudGl0aWVzID0+IHtcbiAgcmV0dXJuIE9iamVjdC5rZXlzKGVudGl0aWVzKS5tYXAoY29kZSA9PiBlbnRpdGllc1tjb2RlXSk7XG59KTtcblxuZXhwb3J0IGNvbnN0IGdldENhcnRVc2VyOiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhDYXJ0LFxuICBVc2VyXG4+ID0gY3JlYXRlU2VsZWN0b3IoZ2V0Q2FydENvbnRlbnQsIGNvbnRlbnQgPT4gY29udGVudC51c2VyKTtcbiJdfQ==