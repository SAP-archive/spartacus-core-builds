{"version":3,"file":"state-config.d.ts","sources":["state-config.d.ts"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["export declare enum StorageSyncType {\n    NO_STORAGE = \"NO_STORAGE\",\n    LOCAL_STORAGE = \"LOCAL_STORAGE\",\n    SESSION_STORAGE = \"SESSION_STORAGE\"\n}\nexport declare enum StateTransferType {\n    TRANSFER_STATE = \"SSR\"\n}\nexport declare abstract class StateConfig {\n    state?: {\n        /**\n         * @deprecated Since 3.0, to synchronize state from the browser storage, use StatePersistentService\n         */\n        storageSync?: {\n            /**\n             * A key name for the data stored in `localStorage`.\n             * Default is `DEFAULT_LOCAL_STORAGE_KEY`.\n             */\n            localStorageKeyName?: string;\n            /**\n             * A key name for the data stored in `sessionStorage`.\n             * Default is `DEFAULT_SESSION_STORAGE_KEY`.\n             */\n            sessionStorageKeyName?: string;\n            /**\n             * A set of state keys that should be synced with the specified browser's storage.\n             */\n            keys?: {\n                [key: string]: StorageSyncType;\n            };\n            /**\n             * A set of keys not to sync with the specified browser's storage.\n             */\n            excludeKeys?: {\n                [key: string]: StorageSyncType;\n            };\n        };\n        ssrTransfer?: {\n            keys?: {\n                /**\n                 * A set of state keys that should be transferred from server.\n                 */\n                [key: string]: StateTransferType;\n            };\n        };\n    };\n}\n"]}