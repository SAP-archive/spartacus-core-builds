export const LOAD_BASE_SITE = '[Site-context] Load BaseSite';
export const LOAD_BASE_SITE_FAIL = '[Site-context] Load BaseSite Fail';
export const LOAD_BASE_SITE_SUCCESS = '[Site-context] Load BaseSite Success';
export const LOAD_BASE_SITES = '[Site-context] Load BaseSites';
export const LOAD_BASE_SITES_FAIL = '[Site-context] Load BaseSites Fail';
export const LOAD_BASE_SITES_SUCCESS = '[Site-context] Load BaseSites Success';
export const SET_ACTIVE_BASE_SITE = '[Site-context] Set Active BaseSite';
export const BASE_SITE_CHANGE = '[Site-context] BaseSite Change';
export class LoadBaseSite {
    constructor() {
        this.type = LOAD_BASE_SITE;
    }
}
export class LoadBaseSiteFail {
    constructor(payload) {
        this.payload = payload;
        this.type = LOAD_BASE_SITE_FAIL;
    }
}
export class LoadBaseSiteSuccess {
    constructor(payload) {
        this.payload = payload;
        this.type = LOAD_BASE_SITE_SUCCESS;
    }
}
export class LoadBaseSites {
    constructor() {
        this.type = LOAD_BASE_SITES;
    }
}
export class LoadBaseSitesFail {
    constructor(payload) {
        this.payload = payload;
        this.type = LOAD_BASE_SITES_FAIL;
    }
}
export class LoadBaseSitesSuccess {
    constructor(payload) {
        this.payload = payload;
        this.type = LOAD_BASE_SITES_SUCCESS;
    }
}
export class SetActiveBaseSite {
    constructor(payload) {
        this.payload = payload;
        this.type = SET_ACTIVE_BASE_SITE;
    }
}
export class BaseSiteChange {
    constructor() {
        this.type = BASE_SITE_CHANGE;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS1zaXRlLmFjdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmUvc3JjL3NpdGUtY29udGV4dC9zdG9yZS9hY3Rpb25zL2Jhc2Utc2l0ZS5hY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0EsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFHLDhCQUE4QixDQUFDO0FBQzdELE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFHLG1DQUFtQyxDQUFDO0FBQ3ZFLE1BQU0sQ0FBQyxNQUFNLHNCQUFzQixHQUFHLHNDQUFzQyxDQUFDO0FBRTdFLE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FBRywrQkFBK0IsQ0FBQztBQUMvRCxNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBRyxvQ0FBb0MsQ0FBQztBQUN6RSxNQUFNLENBQUMsTUFBTSx1QkFBdUIsR0FBRyx1Q0FBdUMsQ0FBQztBQUUvRSxNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBRyxvQ0FBb0MsQ0FBQztBQUN6RSxNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBRyxnQ0FBZ0MsQ0FBQztBQUVqRSxNQUFNLE9BQU8sWUFBWTtJQUF6QjtRQUNXLFNBQUksR0FBRyxjQUFjLENBQUM7SUFDakMsQ0FBQztDQUFBO0FBRUQsTUFBTSxPQUFPLGdCQUFnQjtJQUUzQixZQUFtQixPQUFZO1FBQVosWUFBTyxHQUFQLE9BQU8sQ0FBSztRQUR0QixTQUFJLEdBQUcsbUJBQW1CLENBQUM7SUFDRixDQUFDO0NBQ3BDO0FBRUQsTUFBTSxPQUFPLG1CQUFtQjtJQUU5QixZQUFtQixPQUFpQjtRQUFqQixZQUFPLEdBQVAsT0FBTyxDQUFVO1FBRDNCLFNBQUksR0FBRyxzQkFBc0IsQ0FBQztJQUNBLENBQUM7Q0FDekM7QUFFRCxNQUFNLE9BQU8sYUFBYTtJQUExQjtRQUNXLFNBQUksR0FBRyxlQUFlLENBQUM7SUFDbEMsQ0FBQztDQUFBO0FBRUQsTUFBTSxPQUFPLGlCQUFpQjtJQUU1QixZQUFtQixPQUFZO1FBQVosWUFBTyxHQUFQLE9BQU8sQ0FBSztRQUR0QixTQUFJLEdBQUcsb0JBQW9CLENBQUM7SUFDSCxDQUFDO0NBQ3BDO0FBRUQsTUFBTSxPQUFPLG9CQUFvQjtJQUUvQixZQUFtQixPQUFtQjtRQUFuQixZQUFPLEdBQVAsT0FBTyxDQUFZO1FBRDdCLFNBQUksR0FBRyx1QkFBdUIsQ0FBQztJQUNDLENBQUM7Q0FDM0M7QUFFRCxNQUFNLE9BQU8saUJBQWlCO0lBRTVCLFlBQW1CLE9BQWU7UUFBZixZQUFPLEdBQVAsT0FBTyxDQUFRO1FBRHpCLFNBQUksR0FBRyxvQkFBb0IsQ0FBQztJQUNBLENBQUM7Q0FDdkM7QUFFRCxNQUFNLE9BQU8sY0FBYztJQUEzQjtRQUNXLFNBQUksR0FBRyxnQkFBZ0IsQ0FBQztJQUNuQyxDQUFDO0NBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBY3Rpb24gfSBmcm9tICdAbmdyeC9zdG9yZSc7XG5pbXBvcnQgeyBCYXNlU2l0ZSB9IGZyb20gJy4uLy4uLy4uL21vZGVsL21pc2MubW9kZWwnO1xuXG5leHBvcnQgY29uc3QgTE9BRF9CQVNFX1NJVEUgPSAnW1NpdGUtY29udGV4dF0gTG9hZCBCYXNlU2l0ZSc7XG5leHBvcnQgY29uc3QgTE9BRF9CQVNFX1NJVEVfRkFJTCA9ICdbU2l0ZS1jb250ZXh0XSBMb2FkIEJhc2VTaXRlIEZhaWwnO1xuZXhwb3J0IGNvbnN0IExPQURfQkFTRV9TSVRFX1NVQ0NFU1MgPSAnW1NpdGUtY29udGV4dF0gTG9hZCBCYXNlU2l0ZSBTdWNjZXNzJztcblxuZXhwb3J0IGNvbnN0IExPQURfQkFTRV9TSVRFUyA9ICdbU2l0ZS1jb250ZXh0XSBMb2FkIEJhc2VTaXRlcyc7XG5leHBvcnQgY29uc3QgTE9BRF9CQVNFX1NJVEVTX0ZBSUwgPSAnW1NpdGUtY29udGV4dF0gTG9hZCBCYXNlU2l0ZXMgRmFpbCc7XG5leHBvcnQgY29uc3QgTE9BRF9CQVNFX1NJVEVTX1NVQ0NFU1MgPSAnW1NpdGUtY29udGV4dF0gTG9hZCBCYXNlU2l0ZXMgU3VjY2Vzcyc7XG5cbmV4cG9ydCBjb25zdCBTRVRfQUNUSVZFX0JBU0VfU0lURSA9ICdbU2l0ZS1jb250ZXh0XSBTZXQgQWN0aXZlIEJhc2VTaXRlJztcbmV4cG9ydCBjb25zdCBCQVNFX1NJVEVfQ0hBTkdFID0gJ1tTaXRlLWNvbnRleHRdIEJhc2VTaXRlIENoYW5nZSc7XG5cbmV4cG9ydCBjbGFzcyBMb2FkQmFzZVNpdGUgaW1wbGVtZW50cyBBY3Rpb24ge1xuICByZWFkb25seSB0eXBlID0gTE9BRF9CQVNFX1NJVEU7XG59XG5cbmV4cG9ydCBjbGFzcyBMb2FkQmFzZVNpdGVGYWlsIGltcGxlbWVudHMgQWN0aW9uIHtcbiAgcmVhZG9ubHkgdHlwZSA9IExPQURfQkFTRV9TSVRFX0ZBSUw7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBwYXlsb2FkOiBhbnkpIHt9XG59XG5cbmV4cG9ydCBjbGFzcyBMb2FkQmFzZVNpdGVTdWNjZXNzIGltcGxlbWVudHMgQWN0aW9uIHtcbiAgcmVhZG9ubHkgdHlwZSA9IExPQURfQkFTRV9TSVRFX1NVQ0NFU1M7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBwYXlsb2FkOiBCYXNlU2l0ZSkge31cbn1cblxuZXhwb3J0IGNsYXNzIExvYWRCYXNlU2l0ZXMgaW1wbGVtZW50cyBBY3Rpb24ge1xuICByZWFkb25seSB0eXBlID0gTE9BRF9CQVNFX1NJVEVTO1xufVxuXG5leHBvcnQgY2xhc3MgTG9hZEJhc2VTaXRlc0ZhaWwgaW1wbGVtZW50cyBBY3Rpb24ge1xuICByZWFkb25seSB0eXBlID0gTE9BRF9CQVNFX1NJVEVTX0ZBSUw7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBwYXlsb2FkOiBhbnkpIHt9XG59XG5cbmV4cG9ydCBjbGFzcyBMb2FkQmFzZVNpdGVzU3VjY2VzcyBpbXBsZW1lbnRzIEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBMT0FEX0JBU0VfU0lURVNfU1VDQ0VTUztcbiAgY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IEJhc2VTaXRlW10pIHt9XG59XG5cbmV4cG9ydCBjbGFzcyBTZXRBY3RpdmVCYXNlU2l0ZSBpbXBsZW1lbnRzIEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBTRVRfQUNUSVZFX0JBU0VfU0lURTtcbiAgY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IHN0cmluZykge31cbn1cblxuZXhwb3J0IGNsYXNzIEJhc2VTaXRlQ2hhbmdlIGltcGxlbWVudHMgQWN0aW9uIHtcbiAgcmVhZG9ubHkgdHlwZSA9IEJBU0VfU0lURV9DSEFOR0U7XG59XG5cbi8vIGFjdGlvbiB0eXBlc1xuZXhwb3J0IHR5cGUgQmFzZVNpdGVBY3Rpb24gPVxuICB8IExvYWRCYXNlU2l0ZVxuICB8IExvYWRCYXNlU2l0ZUZhaWxcbiAgfCBMb2FkQmFzZVNpdGVTdWNjZXNzXG4gIHwgTG9hZEJhc2VTaXRlc1xuICB8IExvYWRCYXNlU2l0ZXNGYWlsXG4gIHwgTG9hZEJhc2VTaXRlc1N1Y2Nlc3NcbiAgfCBTZXRBY3RpdmVCYXNlU2l0ZVxuICB8IEJhc2VTaXRlQ2hhbmdlO1xuIl19