{"version":3,"file":"spartacus-core.js","sources":["../../../projects/core/src/config/utils/deep-merge.ts","../../../projects/core/src/config/config-tokens.ts","../../../projects/core/src/config/config-providers.ts","../../../projects/core/src/anonymous-consents/config/default-anonymous-consents-config.ts","../../../projects/core/src/occ/utils/occ-constants.ts","../../../projects/core/src/window/window-ref.ts","../../../projects/core/src/routing/configurable-routes/config/routing-config.ts","../../../projects/core/src/routing/configurable-routes/routing-config.service.ts","../../../projects/core/src/routing/configurable-routes/url-translation/path-utils.ts","../../../projects/core/src/routing/configurable-routes/url-translation/url-parsing.service.ts","../../../projects/core/src/routing/configurable-routes/url-translation/semantic-path.service.ts","../../../projects/core/src/routing/store/actions/router.action.ts","../../../projects/core/src/routing/store/routing-state.ts","../../../projects/core/src/routing/store/selectors/routing.selector.ts","../../../projects/core/src/routing/services/activated-routes.service.ts","../../../projects/core/src/routing/facade/routing-params.service.ts","../../../projects/core/src/routing/facade/routing.service.ts","../../../projects/core/src/auth/user-auth/services/auth-redirect-storage.service.ts","../../../projects/core/src/auth/user-auth/services/auth-redirect.service.ts","../../../projects/core/src/auth/user-auth/services/auth-storage.service.ts","../../../projects/core/src/site-context/config/site-context-config.ts","../../../projects/core/src/occ/config/occ-config.ts","../../../projects/core/src/auth/user-auth/config/auth-config.ts","../../../projects/core/src/auth/user-auth/models/oauth-flow.ts","../../../projects/core/src/auth/user-auth/services/auth-config.service.ts","../../../projects/core/src/auth/user-auth/services/oauth-lib-wrapper.service.ts","../../../projects/core/src/auth/user-auth/store/actions/login-logout.action.ts","../../../projects/core/src/auth/user-auth/facade/user-id.service.ts","../../../projects/core/src/auth/user-auth/facade/auth.service.ts","../../../projects/core/src/model/address.model.ts","../../../projects/core/src/model/cart.model.ts","../../../projects/core/src/model/cms.model.ts","../../../projects/core/src/model/consent.model.ts","../../../projects/core/src/model/image.model.ts","../../../projects/core/src/model/org-unit.model.ts","../../../projects/core/src/model/product-interest.model.ts","../../../projects/core/src/model/product.model.ts","../../../projects/core/src/model/replenishment-order.model.ts","../../../projects/core/src/state/utils/entity/entity.action.ts","../../../projects/core/src/state/utils/loader/loader.action.ts","../../../projects/core/src/state/utils/entity-loader/entity-loader.action.ts","../../../projects/core/src/state/utils/loader/loader.reducer.ts","../../../projects/core/src/state/utils/loader/loader.selectors.ts","../../../projects/core/src/state/utils/entity-loader/entity-loader.selectors.ts","../../../projects/core/src/state/utils/entity/entity.reducer.ts","../../../projects/core/src/state/utils/entity-loader/entity-loader.reducer.ts","../../../projects/core/src/state/utils/processes-loader/processes-loader.action.ts","../../../projects/core/src/state/utils/entity-processes-loader/entity-processes-loader.action.ts","../../../projects/core/src/state/utils/processes-loader/processes-loader.selectors.ts","../../../projects/core/src/state/utils/processes-loader/processes-loader.reducer.ts","../../../projects/core/src/state/utils/entity-processes-loader/entity-processes-loader.selectors.ts","../../../projects/core/src/state/utils/entity-processes-loader/entity-processes-loader.reducer.ts","../../../projects/core/src/state/utils/entity/entity.selectors.ts","../../../projects/core/src/state/utils/get-state-slice.ts","../../../projects/core/src/state/utils/serializer.ts","../../../projects/core/src/anonymous-consents/store/anonymous-consents-state.ts","../../../projects/core/src/anonymous-consents/store/actions/anonymous-consents.action.ts","../../../projects/core/src/anonymous-consents/store/selectors/feature.selector.ts","../../../projects/core/src/anonymous-consents/store/selectors/anonymous-consent-templates.selectors.ts","../../../projects/core/src/anonymous-consents/store/selectors/anonymous-consent-ui.selectors.ts","../../../projects/core/src/anonymous-consents/store/selectors/anonymous-consents.selectors.ts","../../../projects/core/src/anonymous-consents/facade/anonymous-consents.service.ts","../../../projects/core/src/config/utils/dynamic-template.ts","../../../projects/core/src/site-context/config/context-config-utils.ts","../../../projects/core/src/site-context/providers/context-ids.ts","../../../projects/core/src/site-context/store/actions/base-site.action.ts","../../../projects/core/src/site-context/store/actions/currencies.action.ts","../../../projects/core/src/site-context/store/actions/languages.action.ts","../../../projects/core/src/site-context/store/state.ts","../../../projects/core/src/site-context/store/selectors/site-context.selector.ts","../../../projects/core/src/site-context/store/selectors/base-site.selectors.ts","../../../projects/core/src/site-context/store/selectors/currencies.selectors.ts","../../../projects/core/src/site-context/store/selectors/languages.selectors.ts","../../../projects/core/src/site-context/facade/base-site.service.ts","../../../projects/core/src/util/http-params-uri.encoder.ts","../../../projects/core/src/occ/occ-models/occ-endpoints.model.ts","../../../projects/core/src/occ/services/occ-endpoints.service.ts","../../../projects/core/src/occ/utils/interceptor-util.ts","../../../projects/core/src/auth/client-auth/store/client-auth-state.ts","../../../projects/core/src/auth/client-auth/store/actions/client-token.action.ts","../../../projects/core/src/auth/client-auth/store/selectors/feature.selector.ts","../../../projects/core/src/auth/client-auth/store/selectors/client-token.selectors.ts","../../../projects/core/src/auth/client-auth/services/client-token.service.ts","../../../projects/core/src/auth/client-auth/services/client-error-handling.service.ts","../../../projects/core/src/auth/client-auth/http-interceptors/client-token.interceptor.ts","../../../projects/core/src/auth/client-auth/http-interceptors/index.ts","../../../projects/core/src/state/config/default-state-config.ts","../../../projects/core/src/state/config/state-config.ts","../../../projects/core/src/state/reducers/storage-sync.reducer.ts","../../../projects/core/src/state/services/state-persistence.service.ts","../../../projects/core/src/auth/user-auth/services/auth-state-persistence.service.ts","../../../projects/core/src/state/reducers/transfer-state.reducer.ts","../../../projects/core/src/state/reducers/index.ts","../../../projects/core/src/state/state.module.ts","../../../projects/core/src/util/normalize-http-error.ts","../../../projects/core/src/auth/client-auth/services/client-authentication-token.service.ts","../../../projects/core/src/auth/client-auth/store/effects/client-token.effect.ts","../../../projects/core/src/auth/client-auth/store/effects/index.ts","../../../projects/core/src/auth/client-auth/store/reducers/index.ts","../../../projects/core/src/auth/client-auth/store/client-auth-store.module.ts","../../../projects/core/src/auth/client-auth/client-auth.module.ts","../../../projects/core/src/config/config-initializer/config-initializer.ts","../../../projects/core/src/config/config-initializer/config-initializer.service.ts","../../../projects/core/src/config/config-validator/config-validator.ts","../../../projects/core/src/auth/user-auth/config/base-url-config-validator.ts","../../../projects/core/src/auth/user-auth/config/default-auth-config.ts","../../../projects/core/src/event/utils/merging-subject.ts","../../../projects/core/src/event/event.service.ts","../../../projects/core/src/util/create-from.ts","../../../projects/core/src/state/event/state-event.service.ts","../../../projects/core/src/auth/user-auth/events/user-auth.events.ts","../../../projects/core/src/auth/user-auth/events/login-event.builder.ts","../../../projects/core/src/auth/user-auth/events/logout-event.builder.ts","../../../projects/core/src/auth/user-auth/events/user-auth-event.module.ts","../../../projects/core/src/global-message/store/actions/global-message.actions.ts","../../../projects/core/src/global-message/store/global-message-state.ts","../../../projects/core/src/global-message/store/selectors/feature.selector.ts","../../../projects/core/src/global-message/store/selectors/global-message.selectors.ts","../../../projects/core/src/global-message/facade/global-message.service.ts","../../../projects/core/src/global-message/models/global-message.model.ts","../../../projects/core/src/auth/user-auth/services/auth-http-header.service.ts","../../../projects/core/src/auth/user-auth/http-interceptors/auth.interceptor.ts","../../../projects/core/src/auth/user-auth/http-interceptors/token-revocation.interceptor.ts","../../../projects/core/src/auth/user-auth/http-interceptors/index.ts","../../../projects/core/src/auth/user-auth/user-auth.module.ts","../../../projects/core/src/auth/auth.module.ts","../../../projects/core/src/auth/user-auth/guards/auth.guard.ts","../../../projects/core/src/auth/user-auth/guards/not-auth.guard.ts","../../../projects/core/src/asm/connectors/asm.adapter.ts","../../../projects/core/src/occ/adapters/asm/default-occ-asm-config.ts","../../../projects/core/src/asm/config/asm-config.ts","../../../projects/core/src/asm/connectors/converters.ts","../../../projects/core/src/lazy-loading/events/module-initialized-event.ts","../../../projects/core/src/util/combined-injector.ts","../../../projects/core/src/lazy-loading/lazy-modules.service.ts","../../../projects/core/src/lazy-loading/unified-injector.ts","../../../projects/core/src/util/rxjs/get-last-value-sync.ts","../../../projects/core/src/util/converter.service.ts","../../../projects/core/src/occ/adapters/asm/occ-asm.adapter.ts","../../../projects/core/src/occ/adapters/asm/asm-occ.module.ts","../../../projects/core/src/cart/connectors/cart/cart.adapter.ts","../../../projects/core/src/cart/connectors/cart/converters.ts","../../../projects/core/src/cart/connectors/entry/cart-entry.adapter.ts","../../../projects/core/src/cart/connectors/save-cart/save-cart.adapter.ts","../../../projects/core/src/cart/connectors/voucher/cart-voucher.adapter.ts","../../../projects/core/src/product/connectors/product/converters.ts","../../../projects/core/src/occ/adapters/cart/converters/occ-cart-normalizer.ts","../../../projects/core/src/occ/adapters/cart/default-occ-cart-config.ts","../../../projects/core/src/cart/connectors/entry/converters.ts","../../../projects/core/src/occ/adapters/cart/occ-cart-entry.adapter.ts","../../../projects/core/src/cart/connectors/voucher/converters.ts","../../../projects/core/src/occ/adapters/cart/occ-cart-voucher.adapter.ts","../../../projects/core/src/occ/adapters/cart/occ-cart.adapter.ts","../../../projects/core/src/cart/connectors/save-cart/converters.ts","../../../projects/core/src/occ/adapters/cart/occ-save-cart.adapter.ts","../../../projects/core/src/occ/adapters/cart/cart-occ.module.ts","../../../projects/core/src/checkout/connectors/checkout/checkout.adapter.ts","../../../projects/core/src/checkout/connectors/checkout/converters.ts","../../../projects/core/src/checkout/connectors/cost-center/checkout-cost-center.adapter.ts","../../../projects/core/src/checkout/connectors/delivery/checkout-delivery.adapter.ts","../../../projects/core/src/checkout/connectors/checkout/checkout.connector.ts","../../../projects/core/src/checkout/connectors/cost-center/checkout-cost-center.connector.ts","../../../projects/core/src/checkout/connectors/delivery/checkout-delivery.connector.ts","../../../projects/core/src/checkout/connectors/delivery/converters.ts","../../../projects/core/src/checkout/connectors/payment-type/payment-type.adapter.ts","../../../projects/core/src/checkout/connectors/payment-type/payment-type.connector.ts","../../../projects/core/src/checkout/connectors/payment-type/converters.ts","../../../projects/core/src/checkout/connectors/payment/checkout-payment.adapter.ts","../../../projects/core/src/checkout/connectors/payment/checkout-payment.connector.ts","../../../projects/core/src/checkout/connectors/payment/converters.ts","../../../projects/core/src/checkout/connectors/replenishment-order/checkout-replenishment-order.adapter.ts","../../../projects/core/src/checkout/connectors/replenishment-order/checkout-replenishment-order.connector.ts","../../../projects/core/src/checkout/connectors/replenishment-order/converters.ts","../../../projects/core/src/occ/adapters/checkout/converters/occ-order-normalizer.ts","../../../projects/core/src/util/time-utils.ts","../../../projects/core/src/occ/adapters/checkout/converters/occ-replenishment-order-form-serializer.ts","../../../projects/core/src/occ/adapters/checkout/converters/occ-replenishment-order-normalizer.ts","../../../projects/core/src/occ/adapters/checkout/default-occ-checkout-config.ts","../../../projects/core/src/occ/adapters/checkout/occ-checkout-cost-center.adapter.ts","../../../projects/core/src/user/connectors/address/converters.ts","../../../projects/core/src/occ/adapters/checkout/occ-checkout-delivery.adapter.ts","../../../projects/core/src/occ/adapters/checkout/occ-checkout-payment-type.adapter.ts","../../../projects/core/src/occ/adapters/checkout/occ-checkout-payment.adapter.ts","../../../projects/core/src/cms/page/page-meta.resolver.ts","../../../projects/core/src/checkout/store/actions/address-verification.action.ts","../../../projects/core/src/checkout/store/actions/card-types.action.ts","../../../projects/core/src/cart/store/multi-cart-state.ts","../../../projects/core/src/process/store/process-state.ts","../../../projects/core/src/checkout/store/checkout-state.ts","../../../projects/core/src/checkout/store/actions/checkout.action.ts","../../../projects/core/src/checkout/store/actions/order-types.action.ts","../../../projects/core/src/checkout/store/actions/payment-types.action.ts","../../../projects/core/src/checkout/store/actions/replenishment-order.action.ts","../../../projects/core/src/checkout/events/checkout.events.ts","../../../projects/core/src/checkout/events/checkout-event.builder.ts","../../../projects/core/src/checkout/events/checkout-event.module.ts","../../../projects/core/src/cart/store/actions/cart-entry.action.ts","../../../projects/core/src/cart/store/actions/cart-voucher.action.ts","../../../projects/core/src/cart/store/actions/cart.action.ts","../../../projects/core/src/cart/store/actions/multi-cart.action.ts","../../../projects/core/src/cart/utils/utils.ts","../../../projects/core/src/cart/store/actions/wish-list.action.ts","../../../projects/core/src/cart/store/selectors/multi-cart.selector.ts","../../../projects/core/src/cart/facade/multi-cart.service.ts","../../../projects/core/src/util/glob-utils.ts","../../../projects/core/src/util/glob.service.ts","../../../projects/core/src/routing/services/url-matcher.service.ts","../../../projects/core/src/routing/configurable-routes/configurable-routes.service.ts","../../../projects/core/src/routing/configurable-routes/url-translation/product-url.pipe.ts","../../../projects/core/src/routing/configurable-routes/url-translation/url.pipe.ts","../../../projects/core/src/routing/configurable-routes/url-translation/url.module.ts","../../../projects/core/src/routing/external-routes/external-routes-config.ts","../../../projects/core/src/routing/external-routes/external-routes.guard.ts","../../../projects/core/src/routing/external-routes/external-routes.providers.ts","../../../projects/core/src/routing/external-routes/external-routes.service.ts","../../../projects/core/src/routing/external-routes/external-routes.module.ts","../../../projects/core/src/routing/models/page-context.model.ts","../../../projects/core/src/routing/protected-routes/protected-routes.service.ts","../../../projects/core/src/routing/protected-routes/protected-routes.guard.ts","../../../projects/core/src/routing/store/effects/router.effect.ts","../../../projects/core/src/routing/store/effects/index.ts","../../../projects/core/src/routing/store/reducers/router.reducer.ts","../../../projects/core/src/routing/routing.module.ts","../../../projects/core/src/routing/url-matcher/default-url-matcher.ts","../../../projects/core/src/checkout/http-interceptors/checkout-cart.interceptor.ts","../../../projects/core/src/checkout/http-interceptors/index.ts","../../../projects/core/src/util/regex-pattern.ts","../../../projects/core/src/cart/store/reducers/multi-cart.reducer.ts","../../../projects/core/src/cart/facade/active-cart.service.ts","../../../projects/core/src/cms/model/page.model.ts","../../../projects/core/src/i18n/translation.service.ts","../../../projects/core/src/cms/store/cms-state.ts","../../../projects/core/src/cms/store/actions/components.action.ts","../../../projects/core/src/cms/store/actions/navigation-entry-item.action.ts","../../../projects/core/src/cms/store/actions/page.action.ts","../../../projects/core/src/cms/store/selectors/feature.selectors.ts","../../../projects/core/src/cms/store/selectors/components.selectors.ts","../../../projects/core/src/cms/store/selectors/navigation-entry-item.selectors.ts","../../../projects/core/src/cms/store/selectors/page.selectors.ts","../../../projects/core/src/cms/utils/cms-utils.ts","../../../projects/core/src/cms/facade/cms.service.ts","../../../projects/core/src/cms/page/routing/default-route-page-meta.resolver.ts","../../../projects/core/src/cms/page/routing/routing-page-meta.resolver.ts","../../../projects/core/src/cms/page/base-page-meta.resolver.ts","../../../projects/core/src/checkout/services/checkout-page-meta.resolver.ts","../../../projects/core/src/user/connectors/address/user-address.adapter.ts","../../../projects/core/src/user/connectors/address/user-address.connector.ts","../../../projects/core/src/checkout/store/effects/address-verification.effect.ts","../../../projects/core/src/checkout/store/effects/card-types.effect.ts","../../../projects/core/src/user/store/actions/billing-countries.action.ts","../../../projects/core/src/user/store/actions/consignment-tracking.action.ts","../../../projects/core/src/user/store/user-state.ts","../../../projects/core/src/process/store/selectors/feature.selector.ts","../../../projects/core/src/process/store/selectors/process.selectors.ts","../../../projects/core/src/user/store/actions/customer-coupon.action.ts","../../../projects/core/src/user/store/actions/delivery-countries.action.ts","../../../projects/core/src/user/store/actions/forgot-password.action.ts","../../../projects/core/src/user/store/actions/notification-preference.action.ts","../../../projects/core/src/user/store/actions/order-details.action.ts","../../../projects/core/src/user/store/actions/order-return-request.action.ts","../../../projects/core/src/user/store/actions/payment-methods.action.ts","../../../projects/core/src/user/store/actions/product-interests.actions.ts","../../../projects/core/src/user/store/actions/regions.action.ts","../../../projects/core/src/user/store/actions/replenishment-order-details.action.ts","../../../projects/core/src/user/store/actions/reset-password.action.ts","../../../projects/core/src/user/store/actions/titles.action.ts","../../../projects/core/src/user/store/actions/update-email.action.ts","../../../projects/core/src/user/store/actions/update-password.action.ts","../../../projects/core/src/user/store/actions/user-addresses.action.ts","../../../projects/core/src/user/store/actions/user-consents.action.ts","../../../projects/core/src/user/store/actions/user-cost-center.action.ts","../../../projects/core/src/user/store/actions/user-details.action.ts","../../../projects/core/src/user/store/actions/user-misc.action.ts","../../../projects/core/src/user/store/actions/user-orders.action.ts","../../../projects/core/src/user/store/actions/user-register.action.ts","../../../projects/core/src/user/store/actions/user-replenishment-orders.action.ts","../../../projects/core/src/util/rxjs/withdraw-on.ts","../../../projects/core/src/checkout/store/effects/checkout.effect.ts","../../../projects/core/src/checkout/store/effects/payment-types.effect.ts","../../../projects/core/src/checkout/store/effects/replenishment-order.effect.ts","../../../projects/core/src/checkout/store/effects/index.ts","../../../projects/core/src/checkout/store/reducers/address-verification.reducer.ts","../../../projects/core/src/checkout/store/reducers/card-types.reducer.ts","../../../projects/core/src/checkout/store/reducers/checkout.reducer.ts","../../../projects/core/src/checkout/store/reducers/order-types.reducer.ts","../../../projects/core/src/checkout/store/reducers/payment-types.reducer.ts","../../../projects/core/src/checkout/store/reducers/index.ts","../../../projects/core/src/checkout/store/checkout-store.module.ts","../../../projects/core/src/checkout/checkout.module.ts","../../../projects/core/src/checkout/store/selectors/checkout.selectors.ts","../../../projects/core/src/checkout/store/selectors/address-verification.selectors.ts","../../../projects/core/src/checkout/store/selectors/card-types.selectors.ts","../../../projects/core/src/checkout/store/selectors/order-types.selectors.ts","../../../projects/core/src/checkout/store/selectors/payment-types.selectors.ts","../../../projects/core/src/checkout/facade/checkout-cost-center.service.ts","../../../projects/core/src/checkout/facade/checkout-delivery.service.ts","../../../projects/core/src/checkout/facade/checkout-payment.service.ts","../../../projects/core/src/checkout/facade/checkout.service.ts","../../../projects/core/src/checkout/facade/payment-type.service.ts","../../../projects/core/src/occ/adapters/checkout/occ-checkout-replenishment-order.adapter.ts","../../../projects/core/src/occ/adapters/checkout/occ-checkout.adapter.ts","../../../projects/core/src/occ/adapters/checkout/checkout-occ.module.ts","../../../projects/core/src/cms/connectors/page/cms-page.adapter.ts","../../../projects/core/src/cms/connectors/component/converters.ts","../../../projects/core/src/occ/adapters/cms/occ-cms-component.adapter.ts","../../../projects/core/src/cms/config/cms-config.ts","../../../projects/core/src/occ/occ-models/occ.models.ts","../../../projects/core/src/occ/adapters/cms/converters/occ-cms-page-normalizer.ts","../../../projects/core/src/cms/connectors/page/converters.ts","../../../projects/core/src/occ/adapters/cms/occ-cms-page.adapter.ts","../../../projects/core/src/cms/connectors/component/cms-component.adapter.ts","../../../projects/core/src/occ/adapters/cms/cms-occ.module.ts","../../../projects/core/src/occ/adapters/cms/legacy-occ-cms-component.adapter.ts","../../../projects/core/src/occ/adapters/cost-center/converters/occ-cost-center-normalizer.ts","../../../projects/core/src/occ/adapters/cost-center/converters/occ-cost-center-serializer.ts","../../../projects/core/src/cost-center/connectors/cost-center/converters.ts","../../../projects/core/src/occ/adapters/cost-center/converters/occ-cost-center-list-normalizer.ts","../../../projects/core/src/features-config/config/features-config.ts","../../../projects/core/src/features-config/utils/feature-config-utils.ts","../../../projects/core/src/features-config/services/feature-config.service.ts","../../../projects/core/src/features-config/directives/feature-level.directive.ts","../../../projects/core/src/features-config/directives/feature.directive.ts","../../../projects/core/src/features-config/features-config.module.ts","../../../projects/core/src/config/services/configuration.service.ts","../../../projects/core/src/config/config.module.ts","../../../projects/core/src/occ/adapters/cost-center/default-occ-cost-centers-config.ts","../../../projects/core/src/occ/adapters/cost-center/cost-center-occ.module.ts","../../../projects/core/src/occ/adapters/product/converters/product-image-normalizer.ts","../../../projects/core/src/occ/adapters/product/converters/product-reference-normalizer.ts","../../../projects/core/src/occ/adapters/product/converters/occ-product-search-page-normalizer.ts","../../../projects/core/src/occ/adapters/product/converters/occ-product-references-list-normalizer.ts","../../../projects/core/src/occ/adapters/product/converters/product-name-normalizer.ts","../../../projects/core/src/product/connectors/references/converters.ts","../../../projects/core/src/occ/adapters/product/occ-product-references.adapter.ts","../../../projects/core/src/product/connectors/reviews/converters.ts","../../../projects/core/src/occ/adapters/product/occ-product-reviews.adapter.ts","../../../projects/core/src/product/connectors/search/converters.ts","../../../projects/core/src/occ/adapters/product/occ-product-search.adapter.ts","../../../projects/core/src/occ/utils/occ-fields.ts","../../../projects/core/src/occ/services/occ-fields.service.ts","../../../projects/core/src/occ/services/occ-requests-optimizer.service.ts","../../../projects/core/src/occ/adapters/product/occ-product.adapter.ts","../../../projects/core/src/product/connectors/product/product.adapter.ts","../../../projects/core/src/product/connectors/references/product-references.adapter.ts","../../../projects/core/src/product/connectors/reviews/product-reviews.adapter.ts","../../../projects/core/src/product/connectors/search/product-search.adapter.ts","../../../projects/core/src/product/model/product-scope.ts","../../../projects/core/src/occ/adapters/product/default-occ-product-config.ts","../../../projects/core/src/occ/adapters/product/product-occ.module.ts","../../../projects/core/src/site-context/connectors/converters.ts","../../../projects/core/src/occ/adapters/site-context/occ-site.adapter.ts","../../../projects/core/src/site-context/connectors/site.adapter.ts","../../../projects/core/src/occ/adapters/site-context/default-occ-site-context-config.ts","../../../projects/core/src/site-context/facade/currency.service.ts","../../../projects/core/src/site-context/facade/language.service.ts","../../../projects/core/src/occ/adapters/site-context/site-context.interceptor.ts","../../../projects/core/src/occ/adapters/site-context/site-context-occ.module.ts","../../../projects/core/src/occ/adapters/user/converters/anonymous-consents-normalizer.ts","../../../projects/core/src/occ/adapters/user/converters/occ-return-request-normalizer.ts","../../../projects/core/src/occ/adapters/user/converters/occ-user-interests-normalizer.ts","../../../projects/core/src/anonymous-consents/connectors/converters.ts","../../../projects/core/src/user/connectors/consent/converters.ts","../../../projects/core/src/occ/adapters/user/occ-anonymous-consent-templates.adapter.ts","../../../projects/core/src/user/connectors/customer-coupon/converters.ts","../../../projects/core/src/occ/adapters/user/occ-customer-coupon.adapter.ts","../../../projects/core/src/occ/adapters/user/occ-user-address.adapter.ts","../../../projects/core/src/occ/adapters/user/occ-user-consent.adapter.ts","../../../projects/core/src/user/connectors/interests/converters.ts","../../../projects/core/src/occ/adapters/user/occ-user-interests.adapter.ts","../../../projects/core/src/user/connectors/notification-preference/converters.ts","../../../projects/core/src/user/connectors/notification-preference/user-notification-preference.adapter.ts","../../../projects/core/src/user/connectors/notification-preference/user-notification-preference.connector.ts","../../../projects/core/src/occ/adapters/user/occ-user-notification-preference.adapter.ts","../../../projects/core/src/user/connectors/order/converters.ts","../../../projects/core/src/occ/adapters/user/occ-user-order.adapter.ts","../../../projects/core/src/occ/adapters/user/occ-user-payment.adapter.ts","../../../projects/core/src/user/connectors/replenishment-order/converters.ts","../../../projects/core/src/occ/adapters/user/occ-user-replenishment-order.adapter.ts","../../../projects/core/src/user/connectors/user/converters.ts","../../../projects/core/src/occ/adapters/user/occ-user.adapter.ts","../../../projects/core/src/anonymous-consents/connectors/anonymous-consent-templates.adapter.ts","../../../projects/core/src/user/connectors/consent/user-consent.adapter.ts","../../../projects/core/src/user/connectors/cost-center/user-cost-center.adapter.ts","../../../projects/core/src/user/connectors/customer-coupon/customer-coupon.adapter.ts","../../../projects/core/src/user/connectors/interests/user-interests.adapter.ts","../../../projects/core/src/user/connectors/order/user-order.adapter.ts","../../../projects/core/src/user/connectors/payment/user-payment.adapter.ts","../../../projects/core/src/user/connectors/replenishment-order/user-replenishment-order.adapter.ts","../../../projects/core/src/user/connectors/replenishment-order/user-replenishment-order.connector.ts","../../../projects/core/src/user/connectors/user/user.adapter.ts","../../../projects/core/src/occ/adapters/user/converters/occ-address-list-normalizer.ts","../../../projects/core/src/occ/adapters/user/default-occ-user-config.ts","../../../projects/core/src/occ/adapters/user/occ-user-cost-centers.adapter.ts","../../../projects/core/src/occ/adapters/user/user-occ.module.ts","../../../projects/core/src/occ/config-loader/java-reg-exp-converter.ts","../../../projects/core/src/util/ssr.tokens.ts","../../../projects/core/src/occ/config-loader/occ-loaded-config-converter.ts","../../../projects/core/src/occ/config-loader/occ-sites-config-loader.ts","../../../projects/core/src/occ/config-loader/occ-config-loader.service.ts","../../../projects/core/src/occ/config-loader/occ-config-loader.module.ts","../../../projects/core/src/occ/config/config-from-meta-tag-factory.ts","../../../projects/core/src/occ/config/default-occ-config.ts","../../../projects/core/src/occ/config/occ-config-validator.ts","../../../projects/core/src/occ/interceptors/with-credentials.interceptor.ts","../../../projects/core/src/occ/occ.module.ts","../../../projects/core/src/occ/services/loading-scopes.service.ts","../../../projects/core/src/anonymous-consents/config/anonymous-consents-config.ts","../../../projects/core/src/anonymous-consents/http-interceptors/anonymous-consents-interceptor.ts","../../../projects/core/src/anonymous-consents/http-interceptors/index.ts","../../../projects/core/src/user/store/selectors/feature.selector.ts","../../../projects/core/src/user/store/selectors/billing-countries.selectors.ts","../../../projects/core/src/user/store/selectors/consignment-tracking.selectors.ts","../../../projects/core/src/user/store/selectors/customer-coupons.selectors.ts","../../../projects/core/src/user/store/selectors/delivery-countries.selectors.ts","../../../projects/core/src/user/store/selectors/notification-preference.selectors.ts","../../../projects/core/src/user/store/selectors/order-details.selectors.ts","../../../projects/core/src/user/store/selectors/order-return-request.selectors.ts","../../../projects/core/src/user/store/selectors/payment-methods.selectors.ts","../../../projects/core/src/user/store/selectors/product-interests.selectors.ts","../../../projects/core/src/user/store/selectors/regions.selectors.ts","../../../projects/core/src/user/store/selectors/replenishment-order-details.selectors.ts","../../../projects/core/src/user/store/selectors/reset-password.selectors.ts","../../../projects/core/src/user/store/selectors/titles.selectors.ts","../../../projects/core/src/user/store/selectors/user-addresses.selectors.ts","../../../projects/core/src/user/store/selectors/user-consents.selectors.ts","../../../projects/core/src/user/store/selectors/user-cost-center.selectors.ts","../../../projects/core/src/user/store/selectors/user-details.selectors.ts","../../../projects/core/src/user/store/selectors/user-orders.selectors.ts","../../../projects/core/src/user/store/selectors/user-replenishment-orders.selectors.ts","../../../projects/core/src/user/facade/user-consent.service.ts","../../../projects/core/src/anonymous-consents/connectors/anonymous-consent-templates.connector.ts","../../../projects/core/src/anonymous-consents/store/effects/anonymous-consents.effect.ts","../../../projects/core/src/anonymous-consents/store/effects/index.ts","../../../projects/core/src/site-context/connectors/site.connector.ts","../../../projects/core/src/site-context/providers/context-service-map.ts","../../../projects/core/src/site-context/config/base-site-config-validator.ts","../../../projects/core/src/site-context/config/default-site-context-config.ts","../../../projects/core/src/site-context/services/site-context-params.service.ts","../../../projects/core/src/site-context/services/site-context-url-serializer.ts","../../../projects/core/src/site-context/services/site-context-routes-handler.ts","../../../projects/core/src/site-context/providers/context-service-providers.ts","../../../projects/core/src/site-context/providers/site-context-params-providers.ts","../../../projects/core/src/site-context/store/effects/base-site.effect.ts","../../../projects/core/src/site-context/store/effects/currencies.effect.ts","../../../projects/core/src/site-context/store/effects/languages.effect.ts","../../../projects/core/src/site-context/store/effects/index.ts","../../../projects/core/src/site-context/store/reducers/base-site.reducer.ts","../../../projects/core/src/site-context/store/reducers/currencies.reducer.ts","../../../projects/core/src/site-context/store/reducers/languages.reducer.ts","../../../projects/core/src/site-context/store/reducers/index.ts","../../../projects/core/src/site-context/store/site-context-store.module.ts","../../../projects/core/src/site-context/site-context.module.ts","../../../projects/core/src/anonymous-consents/store/reducers/anonymous-consents-banner.reducer.ts","../../../projects/core/src/anonymous-consents/store/reducers/anonymous-consents-update.reducer.ts","../../../projects/core/src/anonymous-consents/store/reducers/anonymous-consents.reducer.ts","../../../projects/core/src/anonymous-consents/store/reducers/index.ts","../../../projects/core/src/anonymous-consents/services/anonymous-consents-state-persistence.service.ts","../../../projects/core/src/anonymous-consents/store/anonymous-consents-store.module.ts","../../../projects/core/src/anonymous-consents/anonymous-consents.module.ts","../../../projects/core/src/asm/config/default-asm-config.ts","../../../projects/core/src/user/facade/user.service.ts","../../../projects/core/src/asm/services/asm-auth-storage.service.ts","../../../projects/core/src/asm/store/actions/asm-ui.action.ts","../../../projects/core/src/asm/store/asm-state.ts","../../../projects/core/src/asm/store/actions/customer.action.ts","../../../projects/core/src/asm/store/actions/logout-agent.action.ts","../../../projects/core/src/asm/facade/csagent-auth.service.ts","../../../projects/core/src/asm/services/asm-auth-http-header.service.ts","../../../projects/core/src/global-message/config/global-message-config.ts","../../../projects/core/src/global-message/models/response-status.model.ts","../../../projects/core/src/global-message/http-interceptors/handlers/http-error.handler.ts","../../../projects/core/src/global-message/http-interceptors/handlers/bad-gateway/bad-gateway.handler.ts","../../../projects/core/src/global-message/http-interceptors/handlers/bad-request/bad-request.handler.ts","../../../projects/core/src/global-message/http-interceptors/handlers/conflict/conflict.handler.ts","../../../projects/core/src/global-message/http-interceptors/handlers/forbidden/forbidden.handler.ts","../../../projects/core/src/global-message/http-interceptors/handlers/gateway/gateway-timeout.handler.ts","../../../projects/core/src/global-message/http-interceptors/handlers/internal-server/internal-server.handler.ts","../../../projects/core/src/global-message/http-interceptors/handlers/not-found/not-found.handler.ts","../../../projects/core/src/global-message/http-interceptors/handlers/unknown-error/unknown-error.handler.ts","../../../projects/core/src/util/applicable.ts","../../../projects/core/src/global-message/http-interceptors/http-error.interceptor.ts","../../../projects/core/src/global-message/http-interceptors/index.ts","../../../projects/core/src/global-message/store/reducers/global-message.reducer.ts","../../../projects/core/src/global-message/store/reducers/index.ts","../../../projects/core/src/global-message/store/global-message-store.module.ts","../../../projects/core/src/util/compare-equal-objects.ts","../../../projects/core/src/global-message/store/effects/global-message.effect.ts","../../../projects/core/src/global-message/config/default-global-message-config.ts","../../../projects/core/src/global-message/global-message.module.ts","../../../projects/core/src/asm/services/asm-auth.service.ts","../../../projects/core/src/asm/connectors/asm.connector.ts","../../../projects/core/src/asm/store/effects/customer.effect.ts","../../../projects/core/src/asm/store/effects/index.ts","../../../projects/core/src/asm/store/reducers/asm-ui.reducer.ts","../../../projects/core/src/asm/store/reducers/index.ts","../../../projects/core/src/asm/store/selectors/feature.selector.ts","../../../projects/core/src/asm/store/selectors/asm-ui.selectors.ts","../../../projects/core/src/asm/store/selectors/customer-search.selectors.ts","../../../projects/core/src/asm/services/asm-state-persistence.service.ts","../../../projects/core/src/asm/store/asm-store.module.ts","../../../projects/core/src/asm/asm.module.ts","../../../projects/core/src/asm/facade/asm.service.ts","../../../projects/core/src/cart/connectors/entry/cart-entry.connector.ts","../../../projects/core/src/cart/store/effects/cart-entry.effect.ts","../../../projects/core/src/cart/connectors/voucher/cart-voucher.connector.ts","../../../projects/core/src/cart/store/effects/cart-voucher.effect.ts","../../../projects/core/src/cart/connectors/cart/cart.connector.ts","../../../projects/core/src/cart/store/effects/cart.effect.ts","../../../projects/core/src/cart/connectors/save-cart/save-cart.connecter.ts","../../../projects/core/src/cart/store/effects/wish-list.effect.ts","../../../projects/core/src/cart/store/reducers/index.ts","../../../projects/core/src/cart/services/multi-cart-state-persistence.service.ts","../../../projects/core/src/cart/cart-persistence.module.ts","../../../projects/core/src/cart/event/cart.events.ts","../../../projects/core/src/cart/event/cart-event.builder.ts","../../../projects/core/src/cart/event/cart-event.module.ts","../../../projects/core/src/cart/services/cart-page-meta.resolver.ts","../../../projects/core/src/cart/store/effects/multi-cart.effect.ts","../../../projects/core/src/cart/store/multi-cart-store.module.ts","../../../projects/core/src/cart/cart.module.ts","../../../projects/core/src/cart/config/cart-config.ts","../../../projects/core/src/cart/facade/cart-voucher.service.ts","../../../projects/core/src/cart/services/cart-config.service.ts","../../../projects/core/src/cart/facade/selective-cart.service.ts","../../../projects/core/src/cart/facade/wish-list.service.ts","../../../projects/core/src/cms/config/default-cms-config.ts","../../../projects/core/src/cms/page/content-page-meta.resolver.ts","../../../projects/core/src/cms/page/page.module.ts","../../../projects/core/src/util/rxjs/buffer-debounce-time.ts","../../../projects/core/src/cms/config/cms-structure.config.ts","../../../projects/core/src/cms/services/cms-structure-config.service.ts","../../../projects/core/src/cms/connectors/component/cms-component.connector.ts","../../../projects/core/src/cms/store/effects/components.effect.ts","../../../projects/core/src/cms/store/effects/navigation-entry-item.effect.ts","../../../projects/core/src/cms/connectors/page/cms-page.connector.ts","../../../projects/core/src/cms/store/effects/page.effect.ts","../../../projects/core/src/cms/store/effects/index.ts","../../../projects/core/src/cms/store/reducers/components.reducer.ts","../../../projects/core/src/cms/store/reducers/navigation-entry-item.reducer.ts","../../../projects/core/src/cms/store/reducers/page-data.reducer.ts","../../../projects/core/src/cms/store/reducers/page-index.reducer.ts","../../../projects/core/src/cms/store/reducers/index.ts","../../../projects/core/src/cms/store/cms-store.module.ts","../../../projects/core/src/cms/cms.module.ts","../../../projects/core/src/util/rxjs/unite-latest.ts","../../../projects/core/src/cms/facade/page-meta.service.ts","../../../projects/core/src/smart-edit/services/smart-edit.service.ts","../../../projects/core/src/cms/services/dynamic-attribute.service.ts","../../../projects/core/src/config/config-initializer/config-initializer.module.ts","../../../projects/core/src/config/config-validator/config-validator.module.ts","../../../projects/core/src/config/utils/get-cookie.ts","../../../projects/core/src/config/test-config.module.ts","../../../projects/core/src/i18n/date.pipe.ts","../../../projects/core/src/i18n/translate.pipe.ts","../../../projects/core/src/i18n/config/i18n-config.ts","../../../projects/core/src/i18n/translation-chunk.service.ts","../../../projects/core/src/i18n/config/default-i18n-config.ts","../../../projects/core/src/i18n/i18next/i18next-init.ts","../../../projects/core/src/i18n/i18next/i18next-providers.ts","../../../projects/core/src/i18n/i18next/i18next-translation.service.ts","../../../projects/core/src/i18n/i18n.module.ts","../../../projects/core/src/i18n/testing/mock-translate.ts","../../../projects/core/src/i18n/testing/mock-translate.pipe.ts","../../../projects/core/src/i18n/testing/mock-translation.service.ts","../../../projects/core/src/i18n/testing/mock-date.pipe.ts","../../../projects/core/src/i18n/testing/i18n-testing.module.ts","../../../projects/core/src/cost-center/cost-center.module.ts","../../../projects/core/src/personalization/config/default-personalization-config.ts","../../../projects/core/src/personalization/config/personalization-config.ts","../../../projects/core/src/personalization/http-interceptors/occ-personalization-id.interceptor.ts","../../../projects/core/src/personalization/http-interceptors/occ-personalization-time.interceptor.ts","../../../projects/core/src/personalization/http-interceptors/index.ts","../../../projects/core/src/personalization/personalization.module.ts","../../../projects/core/src/personalization/services/personalization-context.service.ts","../../../projects/core/src/process/store/reducers/index.ts","../../../projects/core/src/process/store/process-store.module.ts","../../../projects/core/src/process/process.module.ts","../../../projects/core/src/product/connectors/product/product.connector.ts","../../../projects/core/src/product/connectors/references/product-references.connector.ts","../../../projects/core/src/product/connectors/reviews/product-reviews.connector.ts","../../../projects/core/src/product/connectors/search/product-search.connector.ts","../../../projects/core/src/product/store/actions/product-references.action.ts","../../../projects/core/src/product/store/actions/product-reviews.action.ts","../../../projects/core/src/product/store/actions/product-search.action.ts","../../../projects/core/src/product/store/product-state.ts","../../../projects/core/src/state/utils/scoped-loader/entity-scoped-loader.actions.ts","../../../projects/core/src/product/store/actions/product.action.ts","../../../projects/core/src/product/store/effects/product-references.effect.ts","../../../projects/core/src/product/store/effects/product-reviews.effect.ts","../../../projects/core/src/product/store/effects/product-search.effect.ts","../../../projects/core/src/product/store/effects/product.effect.ts","../../../projects/core/src/product/store/effects/index.ts","../../../projects/core/src/product/store/reducers/product-references.reducer.ts","../../../projects/core/src/product/store/reducers/product-reviews.reducer.ts","../../../projects/core/src/product/store/reducers/product-search.reducer.ts","../../../projects/core/src/state/utils/scoped-loader/scoped-loader.reducer.ts","../../../projects/core/src/state/utils/scoped-loader/entity-scoped-loader.reducer.ts","../../../projects/core/src/product/store/reducers/index.ts","../../../projects/core/src/product/store/selectors/feature.selector.ts","../../../projects/core/src/product/store/selectors/product-references.selectors.ts","../../../projects/core/src/product/store/selectors/product-reviews.selectors.ts","../../../projects/core/src/product/store/selectors/product-search.selectors.ts","../../../projects/core/src/product/store/selectors/product.selectors.ts","../../../projects/core/src/product/facade/product-reference.service.ts","../../../projects/core/src/product/facade/product-review.service.ts","../../../projects/core/src/product/facade/product-search.service.ts","../../../projects/core/src/product/services/product-loading.service.ts","../../../projects/core/src/product/facade/product.service.ts","../../../projects/core/src/product/facade/searchbox.service.ts","../../../projects/core/src/product/services/category-page-meta.resolver.ts","../../../projects/core/src/product/services/coupon-search-page-meta.resolver.ts","../../../projects/core/src/product/services/product-page-meta.resolver.ts","../../../projects/core/src/product/services/search-page-meta.resolver.ts","../../../projects/core/src/product/store/product-store.module.ts","../../../projects/core/src/product/product.module.ts","../../../projects/core/src/smart-edit/http-interceptors/cms-ticket.interceptor.ts","../../../projects/core/src/smart-edit/http-interceptors/index.ts","../../../projects/core/src/smart-edit/smart-edit.module.ts","../../../projects/core/src/user/connectors/consent/user-consent.connector.ts","../../../projects/core/src/user/connectors/cost-center/user-cost-center.connector.ts","../../../projects/core/src/user/connectors/customer-coupon/customer-coupon.connector.ts","../../../projects/core/src/user/connectors/interests/user-interests.connector.ts","../../../projects/core/src/user/connectors/order/user-order.connector.ts","../../../projects/core/src/user/connectors/payment/user-payment.connector.ts","../../../projects/core/src/user/connectors/user/user.connector.ts","../../../projects/core/src/user/facade/consent.service.ts","../../../projects/core/src/user/facade/customer-coupon.service.ts","../../../projects/core/src/user/facade/order-return-request.service.ts","../../../projects/core/src/user/facade/user-address.service.ts","../../../projects/core/src/user/facade/user-cost-center.service.ts","../../../projects/core/src/user/facade/user-interests.service.ts","../../../projects/core/src/user/facade/user-notification-preference.service.ts","../../../projects/core/src/user/facade/user-order.service.ts","../../../projects/core/src/user/facade/user-payment.service.ts","../../../projects/core/src/user/facade/user-replenishment-order.service.ts","../../../projects/core/src/user/store/reducers/billing-countries.reducer.ts","../../../projects/core/src/user/store/reducers/consignment-tracking.reducer.ts","../../../projects/core/src/user/store/reducers/customer-coupon.reducer.ts","../../../projects/core/src/user/store/reducers/delivery-countries.reducer.ts","../../../projects/core/src/user/store/reducers/notification-preference.reducer.ts","../../../projects/core/src/user/store/reducers/order-details.reducer.ts","../../../projects/core/src/user/store/reducers/order-return-request.reducer.ts","../../../projects/core/src/user/store/reducers/payment-methods.reducer.ts","../../../projects/core/src/user/store/reducers/product-interests.reducer.ts","../../../projects/core/src/user/store/reducers/regions.reducer.ts","../../../projects/core/src/user/store/reducers/replenishment-order-details.reducer.ts","../../../projects/core/src/user/store/reducers/reset-password.reducer.ts","../../../projects/core/src/user/store/reducers/titles.reducer.ts","../../../projects/core/src/user/store/reducers/user-addresses.reducer.ts","../../../projects/core/src/user/store/reducers/user-consents.reducer.ts","../../../projects/core/src/user/store/reducers/user-cost-center.reducer.ts","../../../projects/core/src/user/store/reducers/user-details.reducer.ts","../../../projects/core/src/user/store/reducers/user-orders.reducer.ts","../../../projects/core/src/user/store/reducers/user-replenishment-orders.reducer.ts","../../../projects/core/src/user/store/reducers/index.ts","../../../projects/core/src/user/store/effects/billing-countries.effect.ts","../../../projects/core/src/user/store/effects/clear-miscs-data.effect.ts","../../../projects/core/src/user/store/effects/consignment-tracking.effect.ts","../../../projects/core/src/user/store/effects/customer-coupon.effect.ts","../../../projects/core/src/user/store/effects/delivery-countries.effect.ts","../../../projects/core/src/user/store/effects/forgot-password.effect.ts","../../../projects/core/src/user/store/effects/notification-preference.effect.ts","../../../projects/core/src/user/store/effects/order-details.effect.ts","../../../projects/core/src/user/store/effects/order-return-request.effect.ts","../../../projects/core/src/user/store/effects/payment-methods.effect.ts","../../../projects/core/src/user/store/effects/product-interests.effect.ts","../../../projects/core/src/user/store/effects/regions.effect.ts","../../../projects/core/src/user/store/effects/replenishment-order-details.effect.ts","../../../projects/core/src/user/store/effects/reset-password.effect.ts","../../../projects/core/src/user/store/effects/titles.effect.ts","../../../projects/core/src/user/store/effects/update-email.effect.ts","../../../projects/core/src/user/store/effects/update-password.effect.ts","../../../projects/core/src/user/store/effects/user-addresses.effect.ts","../../../projects/core/src/user/store/effects/user-consents.effect.ts","../../../projects/core/src/user/store/effects/user-cost-center.effect.ts","../../../projects/core/src/user/store/effects/user-details.effect.ts","../../../projects/core/src/user/store/effects/user-orders.effect.ts","../../../projects/core/src/user/store/effects/user-register.effect.ts","../../../projects/core/src/user/store/effects/user-replenishment-orders.effect.ts","../../../projects/core/src/user/store/effects/index.ts","../../../projects/core/src/user/store/user-store.module.ts","../../../projects/core/src/user/user.module.ts","../../../projects/core/src/util/external-js-file-loader/external-js-file-loader.service.ts","../../../projects/core/public_api.ts","../../../projects/core/spartacus-core.ts"],"names":["RoutingSelector.getRouterState","RoutingSelector.getPageContext","RoutingSelector.getNextPageContext","RoutingActions.ChangeNextPageContext","RoutingSelector.isNavigating","RoutingActions.RouteGoByUrlAction","RoutingActions.RouteBackAction","RoutingActions.RouteForwardAction","RoutingActions.RouteGoAction","AuthActions.Login","AuthActions.Logout","loaderResetMeta","StateUtils.LoaderLoadAction","StateUtils.LoaderSuccessAction","StateUtils.LoaderFailAction","StateUtils.LoaderResetAction","StateUtils.loaderValueSelector","StateUtils.loaderLoadingSelector","StateUtils.loaderSuccessSelector","StateUtils.loaderErrorSelector","AnonymousConsentsActions.LoadAnonymousConsentTemplates","AnonymousConsentsSelectors.getAnonymousConsentTemplatesValue","AnonymousConsentsSelectors.getAnonymousConsentTemplate","AnonymousConsentsSelectors.getAnonymousConsentTemplatesLoading","AnonymousConsentsSelectors.getAnonymousConsentTemplatesSuccess","AnonymousConsentsSelectors.getAnonymousConsentTemplatesError","AnonymousConsentsActions.ResetLoadAnonymousConsentTemplates","AnonymousConsentsSelectors.getAnonymousConsents","AnonymousConsentsActions.SetAnonymousConsents","AnonymousConsentsSelectors.getAnonymousConsentByTemplateCode","AnonymousConsentsActions.GiveAnonymousConsent","AnonymousConsentsActions.WithdrawAnonymousConsent","AnonymousConsentsActions.ToggleAnonymousConsentsBannerDissmissed","AnonymousConsentsSelectors.getAnonymousConsentsBannerDismissed","AnonymousConsentsSelectors.getAnonymousConsentTemplatesUpdate","AnonymousConsentsActions.ToggleAnonymousConsentTemplatesUpdated","AnonymousConsentsActions.AnonymousConsentCheckUpdatedVersions","SiteContextSelectors.getActiveBaseSite","SiteContextSelectors.getAllBaseSites","SiteContextActions.LoadBaseSites","SiteContextActions.SetActiveBaseSite","ClientAuthSelectors.getClientTokenState","ClientAuthActions.LoadClientToken","ClientAuthActions.LOAD_CLIENT_TOKEN","ClientAuthActions.LoadClientTokenSuccess","ClientAuthActions.LoadClientTokenFail","AuthActions.LOGIN","AuthActions.LOGOUT","GlobalMessageSelectors.getGlobalMessageEntities","GlobalMessageActions.AddMessage","GlobalMessageActions.RemoveMessage","GlobalMessageActions.RemoveMessagesByType","interceptors","NOT_FOUND_SYMBOL","StateUtils.EntityLoadAction","StateUtils.EntityFailAction","StateUtils.EntitySuccessAction","StateUtils.EntityLoaderResetAction","CheckoutActions.PLACE_ORDER_SUCCESS","MultiCartSelectors.getCartSelectorFactory","MultiCartSelectors.getCartEntitySelectorFactory","MultiCartSelectors.getCartIsStableSelectorFactory","CartActions.CreateCart","CartActions.MergeCart","CartActions.LoadCart","MultiCartSelectors.getCartEntriesSelectorFactory","CartActions.CartAddEntry","CartActions.CartRemoveEntry","CartActions.CartUpdateEntry","MultiCartSelectors.getCartEntrySelectorFactory","CartActions.AddEmailToCart","CartActions.DeleteCart","RoutingActions.ROUTER_GO","RoutingActions.ROUTER_GO_BY_URL","SiteContextActions.LANGUAGE_CHANGE","RoutingActions.ROUTER_BACK","RoutingActions.ROUTER_FORWARD","effects","getReducers","fromNgrxRouter.ROUTER_NAVIGATION","fromNgrxRouter.ROUTER_ERROR","fromNgrxRouter.ROUTER_CANCEL","fromNgrxRouter.ROUTER_NAVIGATED","reducerToken","reducerProvider","CartActions.LOAD_CART_SUCCESS","CartActions.CREATE_CART_SUCCESS","CartActions.CREATE_CART","CartActions.SET_ACTIVE_CART_ID","CartActions.REMOVE_CART","CartActions.DELETE_CART_SUCCESS","CartActions.CLEAR_CART_STATE","CartActions.CREATE_WISH_LIST_SUCCESS","CartActions.LOAD_WISH_LIST_SUCCESS","CartActions.SET_TEMP_CART","MultiCartSelectors.getActiveCartId","StateUtils.entitySelector","StateUtils.initialLoaderState","StateUtils.entityLoaderStateSelector","CmsSelectors.getPageData","CmsSelectors.componentsLoaderStateSelectorFactory","CmsActions.LoadCmsComponent","CmsSelectors.componentsSelectorFactory","CmsSelectors.getCurrentSlotSelectorFactory","CmsSelectors.getNavigationEntryItems","CmsActions.LoadCmsNavigationItems","CmsActions.LoadCmsPageData","CmsSelectors.getPageComponentTypes","CmsSelectors.getPageStateIndexLoaderState","CmsSelectors.getPageStateIndexValue","CmsActions.CmsSetPageFailIndex","CheckoutActions.VERIFY_ADDRESS","CheckoutActions.VerifyAddressSuccess","CheckoutActions.VerifyAddressFail","CheckoutActions.LOAD_CARD_TYPES","CheckoutActions.LoadCardTypesSuccess","CheckoutActions.LoadCardTypesFail","SiteContextActions.CURRENCY_CHANGE","CheckoutActions.ADD_DELIVERY_ADDRESS","CheckoutActions.SetDeliveryAddress","UserActions.LoadUserAddresses","CheckoutActions.AddDeliveryAddressFail","CheckoutActions.SET_DELIVERY_ADDRESS","CheckoutActions.SetDeliveryAddressSuccess","CheckoutActions.ClearCheckoutDeliveryMode","CheckoutActions.ClearSupportedDeliveryModes","CheckoutActions.ResetLoadSupportedDeliveryModesProcess","CheckoutActions.LoadSupportedDeliveryModes","CheckoutActions.SetDeliveryAddressFail","CheckoutActions.LOAD_SUPPORTED_DELIVERY_MODES","CheckoutActions.LoadSupportedDeliveryModesSuccess","CheckoutActions.LoadSupportedDeliveryModesFail","CheckoutActions.ResetLoadPaymentTypesProcess","CheckoutActions.CheckoutClearMiscsData","CheckoutActions.ClearCheckoutData","CheckoutActions.SET_DELIVERY_MODE","CheckoutActions.SetDeliveryModeSuccess","CheckoutActions.SetDeliveryModeFail","CheckoutActions.CREATE_PAYMENT_DETAILS","CheckoutActions.CreatePaymentDetailsSuccess","UserActions.LoadUserPaymentMethods","CheckoutActions.CreatePaymentDetailsFail","CheckoutActions.SET_PAYMENT_DETAILS","CheckoutActions.SetPaymentDetailsSuccess","CheckoutActions.SetPaymentDetailsFail","CheckoutActions.PLACE_ORDER","CartActions.RemoveCart","CheckoutActions.PlaceOrderSuccess","CheckoutActions.PlaceOrderFail","CheckoutActions.LOAD_CHECKOUT_DETAILS","CheckoutActions.LoadCheckoutDetailsSuccess","CheckoutActions.LoadCheckoutDetailsFail","CartActions.MERGE_CART_SUCCESS","CheckoutActions.LoadCheckoutDetails","CheckoutActions.CLEAR_CHECKOUT_DELIVERY_ADDRESS","CheckoutActions.ClearCheckoutDeliveryAddressSuccess","CheckoutActions.ClearCheckoutDeliveryAddressFail","CheckoutActions.CLEAR_CHECKOUT_DELIVERY_MODE","CheckoutActions.ClearCheckoutDeliveryModeSuccess","CheckoutActions.ClearCheckoutDeliveryModeFail","CheckoutActions.SET_COST_CENTER","CheckoutActions.SetCostCenterSuccess","CheckoutActions.ClearCheckoutDeliveryAddress","CheckoutActions.SetCostCenterFail","CheckoutActions.LOAD_PAYMENT_TYPES","CheckoutActions.LoadPaymentTypesSuccess","CheckoutActions.LoadPaymentTypesFail","CheckoutActions.SET_PAYMENT_TYPE","CartActions.LoadCartSuccess","CheckoutActions.SetPaymentTypeSuccess","CheckoutActions.SetPaymentTypeFail","CheckoutActions.SCHEDULE_REPLENISHMENT_ORDER","CheckoutActions.ScheduleReplenishmentOrderSuccess","CheckoutActions.ScheduleReplenishmentOrderFail","initialState","reducer","CheckoutActions.VERIFY_ADDRESS_SUCCESS","CheckoutActions.VERIFY_ADDRESS_FAIL","CheckoutActions.CLEAR_ADDRESS_VERIFICATION_RESULTS","CheckoutActions.LOAD_CARD_TYPES_SUCCESS","CheckoutActions.CHECKOUT_CLEAR_MISCS_DATA","CheckoutActions.SET_PAYMENT_TYPE_SUCCESS","CheckoutActions.SET_COST_CENTER_SUCCESS","CheckoutActions.ADD_DELIVERY_ADDRESS_SUCCESS","CheckoutActions.SET_DELIVERY_ADDRESS_SUCCESS","CheckoutActions.LOAD_SUPPORTED_DELIVERY_MODES_SUCCESS","CheckoutActions.SET_DELIVERY_MODE_SUCCESS","CheckoutActions.CREATE_PAYMENT_DETAILS_SUCCESS","CheckoutActions.SET_PAYMENT_DETAILS_SUCCESS","CheckoutActions.CREATE_PAYMENT_DETAILS_FAIL","CheckoutActions.SCHEDULE_REPLENISHMENT_ORDER_SUCCESS","CheckoutActions.CLEAR_CHECKOUT_DATA","CheckoutActions.CLEAR_CHECKOUT_STEP","CheckoutActions.CLEAR_SUPPORTED_DELIVERY_MODES","CheckoutActions.LOAD_CHECKOUT_DETAILS_SUCCESS","CheckoutActions.SET_ORDER_TYPE","CheckoutActions.LOAD_PAYMENT_TYPES_SUCCESS","fromCheckout.reducer","fromCardTypes.reducer","fromAddressVerification.reducer","fromPaymentTypes.reducer","fromOrderTypes.reducer","getAddressVerificationResults","fromReducer.getAddressVerificationResults","getCardTypesEntites","fromReducer.getCardTypesEntites","getPaymentTypesEntites","fromReducer.getPaymentTypesEntites","getSelectedPaymentType","fromReducer.getSelectedPaymentType","CheckoutActions.SetCostCenter","CheckoutSelectors.getCostCenter","CheckoutSelectors.getSupportedDeliveryModes","CheckoutSelectors.getSelectedDeliveryMode","CheckoutSelectors.getSelectedDeliveryModeCode","CheckoutSelectors.getDeliveryAddress","CheckoutActions.ResetSetDeliveryAddressProcess","CheckoutActions.ResetSetDeliveryModeProcess","CheckoutSelectors.getAddressVerificationResults","CheckoutActions.AddDeliveryAddress","CheckoutActions.SetDeliveryMode","CheckoutActions.VerifyAddress","CheckoutActions.ClearAddressVerificationResults","CheckoutSelectors.getAllCardTypes","CheckoutSelectors.getPaymentDetails","CheckoutActions.ResetSetPaymentDetailsProcess","CheckoutActions.LoadCardTypes","CheckoutActions.CreatePaymentDetails","CheckoutActions.SetPaymentDetails","CheckoutActions.PaymentProcessSuccess","CheckoutActions.PlaceOrder","CheckoutActions.ScheduleReplenishmentOrder","CheckoutActions.ClearPlaceOrder","CheckoutActions.ClearCheckoutStep","CheckoutSelectors.getCheckoutDetailsLoaded","CheckoutSelectors.getCheckoutOrderDetails","CheckoutActions.SetOrderType","CheckoutSelectors.getSelectedOrderType","CheckoutSelectors.getAllPaymentTypes","CheckoutActions.LoadPaymentTypes","CheckoutActions.SetPaymentType","CheckoutSelectors.getSelectedPaymentType","CheckoutSelectors.getPoNumer","SiteContextSelectors.getAllCurrencies","SiteContextActions.LoadCurrencies","SiteContextSelectors.getActiveCurrency","SiteContextActions.SetActiveCurrency","SiteContextSelectors.getAllLanguages","SiteContextActions.LoadLanguages","SiteContextSelectors.getActiveLanguage","SiteContextActions.SetActiveLanguage","headers","UserActions.LoadUserConsents","UsersSelectors.getConsentsValue","UsersSelectors.getConsentsLoading","UsersSelectors.getConsentsSuccess","UsersSelectors.getConsentsError","UserActions.ResetLoadUserConsents","UsersSelectors.getConsentByTemplateId","UserActions.GiveUserConsent","UserActions.ResetGiveUserConsentProcess","UserActions.WithdrawUserConsent","UserActions.ResetWithdrawUserConsentProcess","AnonymousConsentsActions.ANONYMOUS_CONSENT_CHECK_UPDATED_VERSIONS","AnonymousConsentsActions.LoadAnonymousConsentTemplatesFail","AnonymousConsentsActions.LOAD_ANONYMOUS_CONSENT_TEMPLATES","AnonymousConsentsActions.LoadAnonymousConsentTemplatesSuccess","UserActions.REGISTER_USER_SUCCESS","UserActions.TransferAnonymousConsent","SiteContextActions.LOAD_BASE_SITE","SiteContextActions.LoadBaseSiteSuccess","SiteContextActions.LoadBaseSiteFail","SiteContextActions.LOAD_BASE_SITES","SiteContextActions.LoadBaseSitesSuccess","SiteContextActions.LoadBaseSitesFail","SiteContextActions.LOAD_CURRENCIES","SiteContextActions.LoadCurrenciesSuccess","SiteContextActions.LoadCurrenciesFail","SiteContextActions.SET_ACTIVE_CURRENCY","SiteContextActions.CurrencyChange","SiteContextActions.LOAD_LANGUAGES","SiteContextActions.LoadLanguagesSuccess","SiteContextActions.LoadLanguagesFail","SiteContextActions.SET_ACTIVE_LANGUAGE","SiteContextActions.LanguageChange","SiteContextActions.LOAD_BASE_SITE_SUCCESS","SiteContextActions.SET_ACTIVE_BASE_SITE","SiteContextActions.LOAD_BASE_SITES_SUCCESS","SiteContextActions.LOAD_CURRENCIES_SUCCESS","SiteContextActions.LOAD_LANGUAGES_SUCCESS","fromLanguages.reducer","fromCurrencies.reducer","fromBaseSite.reducer","AnonymousConsentsActions.TOGGLE_ANONYMOUS_CONSENTS_BANNER_DISMISSED","AnonymousConsentsActions.TOGGLE_ANONYMOUS_CONSENT_TEMPLATES_UPDATED","AnonymousConsentsActions.GIVE_ANONYMOUS_CONSENT","AnonymousConsentsActions.WITHDRAW_ANONYMOUS_CONSENT","AnonymousConsentsActions.SET_ANONYMOUS_CONSENTS","fromAnonymousConsents.reducer","fromAnonymousConsentsBanner.reducer","fromAnonymousConsentsUpdate.reducer","UsersSelectors.getDetails","UserActions.LoadUserDetails","UserActions.RegisterUser","UserActions.RegisterGuest","UserActions.ResetRegisterUserProcess","UserActions.RemoveUser","UserActions.RemoveUserReset","UsersSelectors.getAllTitles","UserActions.LoadTitles","UsersSelectors.getResetPassword","UserActions.UpdateUserDetails","UserActions.ResetUpdateUserDetails","UserActions.ResetPassword","UserActions.ForgotPasswordEmailRequest","UserActions.UpdateEmailAction","UserActions.ResetUpdateEmailAction","UserActions.UpdatePassword","UserActions.UpdatePasswordReset","AsmActions.LogoutCustomerSupportAgent","GlobalMessageActions.ADD_MESSAGE","GlobalMessageActions.REMOVE_MESSAGE","GlobalMessageActions.REMOVE_MESSAGES_BY_TYPE","fromGlobalMessage.reducer","GlobalMessageSelectors.getGlobalMessageEntitiesByType","GlobalMessageSelectors.getGlobalMessageCountByType","AsmActions.CUSTOMER_SEARCH","AsmActions.CustomerSearchSuccess","AsmActions.CustomerSearchFail","AsmActions.ASM_UI_UPDATE","fromAsmUiReducer.reducer","AsmActions.LOGOUT_CUSTOMER_SUPPORT_AGENT","metaReducers","AsmSelectors.getAsmUi","AsmActions.AsmUiUpdate","AsmActions.CustomerSearch","AsmActions.CustomerSearchReset","AsmSelectors.getCustomerSearchResults","AsmSelectors.getCustomerSearchResultsLoading","CartActions.CART_ADD_ENTRY","CartActions.CartAddEntrySuccess","CartActions.CartAddEntryFail","CartActions.CART_REMOVE_ENTRY","CartActions.CartRemoveEntrySuccess","CartActions.CartRemoveEntryFail","CartActions.CART_UPDATE_ENTRY","CartActions.CartUpdateEntrySuccess","CartActions.CartUpdateEntryFail","CartActions.CART_ADD_VOUCHER","CartActions.CartAddVoucherSuccess","CartActions.CartAddVoucherFail","CartActions.CartProcessesDecrement","CartActions.CART_REMOVE_VOUCHER","CartActions.CartRemoveVoucherSuccess","CartActions.CartRemoveVoucherFail","CartActions.LOAD_CART","CartActions.LoadCartFail","CartActions.MergeCartSuccess","CartActions.CreateCartSuccess","CartActions.SetTempCart","CartActions.CreateCartFail","CartActions.MERGE_CART","CartActions.CART_ADD_VOUCHER_SUCCESS","CartActions.CART_ADD_ENTRY_SUCCESS","CartActions.CART_REMOVE_ENTRY_SUCCESS","CartActions.CART_UPDATE_ENTRY_SUCCESS","CartActions.CART_REMOVE_VOUCHER_SUCCESS","CheckoutActions.CLEAR_CHECKOUT_DELIVERY_MODE_SUCCESS","CartActions.ResetCartDetails","CartActions.ADD_EMAIL_TO_CART","CartActions.AddEmailToCartSuccess","CartActions.AddEmailToCartFail","CartActions.DELETE_CART","CartActions.DeleteCartSuccess","CartActions.DeleteCartFail","CartActions.CREATE_WISH_LIST","CartActions.CreateWishListSuccess","CartActions.CreateWishListFail","CartActions.LOAD_WISH_LIST","CartActions.LoadWishListSuccess","CartActions.CreateWishList","CartActions.LoadWishListFail","MultiCartSelectors.getWishListId","MultiCartSelectors.getMultiCartState","CartActions.ClearCartState","CartActions.SetActiveCartId","CartActions.CART_ADD_ENTRY_FAIL","CartActions.CartProcessesIncrement","CartActions.CartAddVoucher","CartActions.CartRemoveVoucher","CartActions.CartResetAddVoucher","CartActions.LoadWishList","CmsActions.LOAD_CMS_COMPONENT","CmsActions.LoadCmsComponentSuccess","CmsActions.LoadCmsComponentFail","CmsActions.LOAD_CMS_NAVIGATION_ITEMS","CmsActions.LoadCmsNavigationItemsSuccess","CmsActions.LoadCmsNavigationItemsFail","CmsActions.LOAD_CMS_PAGE_DATA","CmsActions.CmsGetComponentFromPage","CmsActions.LoadCmsPageDataSuccess","CmsActions.CmsSetPageSuccessIndex","CmsActions.LoadCmsPageDataFail","CmsActions.LOAD_CMS_COMPONENT_FAIL","CmsActions.CMS_GET_COMPONENT_FROM_PAGE","CmsActions.LOAD_CMS_COMPONENT_SUCCESS","CmsActions.LOAD_CMS_NAVIGATION_ITEMS_SUCCESS","CmsActions.LOAD_CMS_PAGE_DATA_SUCCESS","CmsActions.LOAD_CMS_PAGE_DATA_FAIL","CmsActions.CMS_SET_PAGE_FAIL_INDEX","CmsActions.CMS_SET_PAGE_SUCCESS_INDEX","fromPageReducer.reducer","fromPageIndexReducer.reducer","fromComponentsReducer.reducer","fromNavigation.reducer","ProductActions.LOAD_PRODUCT_REFERENCES","ProductActions.LoadProductReferencesSuccess","ProductActions.LoadProductReferencesFail","ProductActions.LOAD_PRODUCT_REVIEWS","ProductActions.LoadProductReviewsSuccess","ProductActions.LoadProductReviewsFail","ProductActions.POST_PRODUCT_REVIEW","ProductActions.PostProductReviewSuccess","ProductActions.PostProductReviewFail","ProductActions.POST_PRODUCT_REVIEW_SUCCESS","ProductActions.SEARCH_PRODUCTS","ProductActions.SearchProductsSuccess","ProductActions.SearchProductsFail","ProductActions.GET_PRODUCT_SUGGESTIONS","ProductActions.GetProductSuggestionsSuccess","ProductActions.GetProductSuggestionsFail","ProductActions.LOAD_PRODUCT","ProductActions.LoadProductSuccess","ProductActions.LoadProductFail","ProductActions.LOAD_PRODUCT_REFERENCES_SUCCESS","ProductActions.CLEAN_PRODUCT_REFERENCES","ProductActions.LOAD_PRODUCT_REVIEWS_SUCCESS","ProductActions.SEARCH_PRODUCTS_SUCCESS","ProductActions.GET_PRODUCT_SUGGESTIONS_SUCCESS","ProductActions.CLEAR_PRODUCT_SEARCH_RESULT","fromProductsSearch.reducer","fromProductReviews.reducer","fromProductReferences.reducer","getSearchResults","fromProductSearch.getSearchResults","getAuxSearchResults","fromProductSearch.getAuxSearchResults","getProductSuggestions","fromProductSearch.getProductSuggestions","ProductActions.LoadProductReferences","ProductSelectors.getSelectedProductReferencesFactory","ProductActions.CleanProductReferences","ProductSelectors.getSelectedProductReviewsFactory","ProductActions.LoadProductReviews","ProductActions.PostProductReview","ProductActions.SearchProducts","ProductSelectors.getSearchResults","ProductActions.ClearProductSearchResult","ProductSelectors.getSelectedProductStateFactory","ProductSelectors.getSelectedProductLoadingFactory","ProductActions.LoadProduct","ProductSelectors.getSelectedProductFactory","ProductActions.LOAD_PRODUCT_SUCCESS","ProductActions.LOAD_PRODUCT_FAIL","ProductSelectors.getSelectedProductSuccessFactory","ProductSelectors.getSelectedProductErrorFactory","ProductSelectors.getAuxSearchResults","ProductSelectors.getProductSuggestions","ProductActions.GetProductSuggestions","UserActions.LoadCustomerCoupons","UsersSelectors.getCustomerCouponsState","UsersSelectors.getCustomerCouponsLoaded","UsersSelectors.getCustomerCouponsLoading","UserActions.SubscribeCustomerCoupon","UserActions.UnsubscribeCustomerCoupon","UserActions.ClaimCustomerCoupon","UserActions.CreateOrderReturnRequest","UsersSelectors.getOrderReturnRequest","UsersSelectors.getOrderReturnRequestListState","UserActions.LoadOrderReturnRequest","UserActions.LoadOrderReturnRequestList","UserActions.ClearOrderReturnRequestList","UsersSelectors.getOrderReturnRequestLoading","UsersSelectors.getOrderReturnRequestSuccess","UserActions.ClearOrderReturnRequest","UserActions.CancelOrderReturnRequest","UserActions.ResetCancelReturnProcess","UserActions.AddUserAddress","UserActions.UpdateUserAddress","UserActions.DeleteUserAddress","UsersSelectors.getAddresses","UsersSelectors.getAddressesLoading","UsersSelectors.getAddressesLoadedSuccess","UserActions.LoadDeliveryCountries","UsersSelectors.getAllDeliveryCountries","UsersSelectors.countrySelectorFactory","UserActions.LoadRegions","UserActions.ClearRegions","UsersSelectors.getRegionsDataAndLoading","UserActions.LoadActiveCostCenters","UsersSelectors.getCostCentersState","UserActions.LoadProductInterests","UsersSelectors.getInterests","UsersSelectors.getInterestsState","UsersSelectors.getInterestsLoading","UserActions.RemoveProductInterest","UserActions.AddProductInterest","UserActions.ResetAddInterestState","UserActions.ResetRemoveInterestState","UserActions.ClearProductInterests","UsersSelectors.getPreferences","UsersSelectors.getEnabledPreferences","UserActions.LoadNotificationPreferences","UserActions.ClearNotificationPreferences","UsersSelectors.getPreferencesLoading","UserActions.UpdateNotificationPreferences","UserActions.ResetNotificationPreferences","UsersSelectors.getOrderDetails","UserActions.LoadOrderDetails","UserActions.ClearOrderDetails","UsersSelectors.getOrdersState","UsersSelectors.getOrdersLoaded","UserActions.LoadUserOrders","UserActions.ClearUserOrders","UsersSelectors.getConsignmentTracking","UserActions.LoadConsignmentTracking","UserActions.ClearConsignmentTracking","UserActions.CancelOrder","UserActions.ResetCancelOrderProcess","UsersSelectors.getPaymentMethods","UsersSelectors.getPaymentMethodsLoading","UsersSelectors.getPaymentMethodsLoadedSuccess","UserActions.SetDefaultUserPaymentMethod","UserActions.DeleteUserPaymentMethod","UsersSelectors.getAllBillingCountries","UserActions.LoadBillingCountries","UserActions.LoadReplenishmentOrderDetails","UsersSelectors.getReplenishmentOrderDetailsValue","UsersSelectors.getReplenishmentOrderDetailsLoading","UsersSelectors.getReplenishmentOrderDetailsSuccess","UsersSelectors.getReplenishmentOrderDetailsError","UserActions.ClearReplenishmentOrderDetails","UserActions.CancelReplenishmentOrder","UserActions.ClearCancelReplenishmentOrder","UsersSelectors.getReplenishmentOrdersState","UsersSelectors.getReplenishmentOrdersLoading","UsersSelectors.getReplenishmentOrdersError","UsersSelectors.getReplenishmentOrdersSuccess","UserActions.LoadUserReplenishmentOrders","UserActions.ClearUserReplenishmentOrders","UserActions.LOAD_BILLING_COUNTRIES_SUCCESS","UserActions.CLEAR_USER_MISCS_DATA","UserActions.LOAD_CONSIGNMENT_TRACKING_SUCCESS","UserActions.CLEAR_CONSIGNMENT_TRACKING","fromActions.LOAD_CUSTOMER_COUPONS_SUCCESS","fromActions.SUBSCRIBE_CUSTOMER_COUPON_SUCCESS","fromActions.UNSUBSCRIBE_CUSTOMER_COUPON_SUCCESS","UserActions.LOAD_DELIVERY_COUNTRIES_SUCCESS","UserActions.LOAD_NOTIFICATION_PREFERENCES_FAIL","UserActions.LOAD_NOTIFICATION_PREFERENCES_SUCCESS","UserActions.UPDATE_NOTIFICATION_PREFERENCES_SUCCESS","UserActions.LOAD_ORDER_DETAILS_SUCCESS","UserActions.LOAD_ORDER_RETURN_REQUEST_LIST_SUCCESS","UserActions.LOAD_USER_PAYMENT_METHODS_SUCCESS","UserActions.LOAD_USER_PAYMENT_METHODS_FAIL","UserActions.LOAD_PRODUCT_INTERESTS_SUCCESS","UserActions.LOAD_PRODUCT_INTERESTS_FAIL","UserActions.LOAD_REGIONS_SUCCESS","UserActions.LOAD_REPLENISHMENT_ORDER_DETAILS_SUCCESS","UserActions.CANCEL_REPLENISHMENT_ORDER_SUCCESS","UserActions.RESET_PASSWORD_SUCCESS","UserActions.LOAD_TITLES_SUCCESS","UserActions.LOAD_USER_ADDRESSES_FAIL","UserActions.LOAD_USER_ADDRESSES_SUCCESS","UserActions.LOAD_USER_CONSENTS_SUCCESS","UserActions.GIVE_USER_CONSENT_SUCCESS","UserActions.LOAD_ACTIVE_COST_CENTERS_FAIL","UserActions.LOAD_ACTIVE_COST_CENTERS_SUCCESS","UserActions.LOAD_USER_DETAILS_SUCCESS","UserActions.UPDATE_USER_DETAILS_SUCCESS","UserActions.LOAD_USER_ORDERS_SUCCESS","UserActions.LOAD_USER_ORDERS_FAIL","UserActions.LOAD_USER_REPLENISHMENT_ORDERS_SUCCESS","fromUserDetailsReducer.reducer","fromAddressesReducer.reducer","fromBillingCountriesReducer.reducer","fromUserConsentsReducer.reducer","fromPaymentReducer.reducer","fromUserOrdersReducer.reducer","fromOrderDetailsReducer.reducer","fromUserReplenishmentOrdersReducer.reducer","fromOrderReturnRequestReducer.reducer","fromDeliveryCountries.reducer","fromTitlesReducer.reducer","fromRegionsReducer.reducer","fromResetPasswordReducer.reducer","fromConsignmentTrackingReducer.reducer","fromCustomerCouponReducer.reducer","fromNotificationPreferenceReducer.reducer","fromInterestsReducer.reducer","fromCostCenterReducer.reducer","fromReplenishmentOrderDetailsReducer.reducer","UserActions.LOAD_BILLING_COUNTRIES","UserActions.LoadBillingCountriesSuccess","UserActions.LoadBillingCountriesFail","UserActions.ClearUserMiscsData","UserActions.LOAD_CONSIGNMENT_TRACKING","UserActions.LoadConsignmentTrackingSuccess","UserActions.LoadConsignmentTrackingFail","fromCustomerCouponsAction.LOAD_CUSTOMER_COUPONS","fromCustomerCouponsAction.LoadCustomerCouponsSuccess","fromCustomerCouponsAction.LoadCustomerCouponsFail","fromCustomerCouponsAction.SUBSCRIBE_CUSTOMER_COUPON","fromCustomerCouponsAction.SubscribeCustomerCouponSuccess","fromCustomerCouponsAction.SubscribeCustomerCouponFail","fromCustomerCouponsAction.UNSUBSCRIBE_CUSTOMER_COUPON","fromCustomerCouponsAction.UnsubscribeCustomerCouponSuccess","fromCustomerCouponsAction.UnsubscribeCustomerCouponFail","fromCustomerCouponsAction.CLAIM_CUSTOMER_COUPON","fromCustomerCouponsAction.ClaimCustomerCouponSuccess","fromCustomerCouponsAction.ClaimCustomerCouponFail","UserActions.LOAD_DELIVERY_COUNTRIES","UserActions.LoadDeliveryCountriesSuccess","UserActions.LoadDeliveryCountriesFail","UserActions.FORGOT_PASSWORD_EMAIL_REQUEST","UserActions.ForgotPasswordEmailRequestSuccess","UserActions.ForgotPasswordEmailRequestFail","UserActions.LOAD_NOTIFICATION_PREFERENCES","UserActions.LoadNotificationPreferencesSuccess","UserActions.LoadNotificationPreferencesFail","UserActions.UPDATE_NOTIFICATION_PREFERENCES","UserActions.UpdateNotificationPreferencesSuccess","UserActions.UpdateNotificationPreferencesFail","UserActions.LOAD_ORDER_DETAILS","UserActions.LoadOrderDetailsSuccess","UserActions.LoadOrderDetailsFail","UserActions.CANCEL_ORDER","UserActions.CancelOrderSuccess","UserActions.CancelOrderFail","UserActions.CREATE_ORDER_RETURN_REQUEST","UserActions.CreateOrderReturnRequestSuccess","UserActions.CreateOrderReturnRequestFail","UserActions.LOAD_ORDER_RETURN_REQUEST","UserActions.LoadOrderReturnRequestSuccess","UserActions.LoadOrderReturnRequestFail","UserActions.CANCEL_ORDER_RETURN_REQUEST","UserActions.CancelOrderReturnRequestSuccess","UserActions.CancelOrderReturnRequestFail","UserActions.LOAD_ORDER_RETURN_REQUEST_LIST","UserActions.LoadOrderReturnRequestListSuccess","UserActions.LoadOrderReturnRequestListFail","UserActions.LOAD_USER_PAYMENT_METHODS","UserActions.LoadUserPaymentMethodsSuccess","UserActions.LoadUserPaymentMethodsFail","UserActions.SET_DEFAULT_USER_PAYMENT_METHOD","UserActions.SetDefaultUserPaymentMethodSuccess","UserActions.SetDefaultUserPaymentMethodFail","UserActions.DELETE_USER_PAYMENT_METHOD","UserActions.DeleteUserPaymentMethodSuccess","UserActions.DeleteUserPaymentMethodFail","UserActions.LOAD_PRODUCT_INTERESTS","UserActions.LoadProductInterestsSuccess","UserActions.LoadProductInterestsFail","UserActions.REMOVE_PRODUCT_INTEREST","UserActions.RemoveProductInterestSuccess","UserActions.RemoveProductInterestFail","UserActions.ADD_PRODUCT_INTEREST","UserActions.AddProductInterestSuccess","UserActions.AddProductInterestFail","UserActions.LOAD_REGIONS","UserActions.LoadRegionsSuccess","UserActions.LoadRegionsFail","UserActions.CLEAR_REGIONS","UserActions.LOAD_REPLENISHMENT_ORDER_DETAILS","UserActions.LoadReplenishmentOrderDetailsSuccess","UserActions.LoadReplenishmentOrderDetailsFail","UserActions.CANCEL_REPLENISHMENT_ORDER","UserActions.CancelReplenishmentOrderSuccess","UserActions.CancelReplenishmentOrderFail","UserActions.RESET_PASSWORD","UserActions.ResetPasswordSuccess","UserActions.ResetPasswordFail","UserActions.LOAD_TITLES","UserActions.LoadTitlesSuccess","UserActions.LoadTitlesFail","UserActions.UPDATE_EMAIL","UserActions.UpdateEmailSuccessAction","UserActions.UpdateEmailErrorAction","UserActions.UPDATE_PASSWORD","UserActions.UpdatePasswordSuccess","UserActions.UpdatePasswordFail","UserActions.LOAD_USER_ADDRESSES","UserActions.LoadUserAddressesSuccess","UserActions.LoadUserAddressesFail","UserActions.ADD_USER_ADDRESS","UserActions.AddUserAddressSuccess","UserActions.AddUserAddressFail","UserActions.UPDATE_USER_ADDRESS","UserActions.UpdateUserAddressSuccess","UserActions.UpdateUserAddressFail","UserActions.DELETE_USER_ADDRESS","UserActions.DeleteUserAddressSuccess","UserActions.DeleteUserAddressFail","UserActions.ADD_USER_ADDRESS_SUCCESS","UserActions.UPDATE_USER_ADDRESS_SUCCESS","UserActions.DELETE_USER_ADDRESS_SUCCESS","UserActions.LOAD_USER_CONSENTS","UserActions.LoadUserConsentsSuccess","UserActions.LoadUserConsentsFail","UserActions.GIVE_USER_CONSENT","UserActions.TRANSFER_ANONYMOUS_CONSENT","UserActions.GiveUserConsentSuccess","UserActions.GiveUserConsentFail","UserActions.WITHDRAW_USER_CONSENT","UserActions.WithdrawUserConsentSuccess","UserActions.WithdrawUserConsentFail","UserActions.LOAD_ACTIVE_COST_CENTERS","UserActions.LoadActiveCostCentersSuccess","UserActions.LoadActiveCostCentersFail","UserActions.LOAD_USER_DETAILS","UserActions.LoadUserDetailsSuccess","UserActions.LoadUserDetailsFail","UserActions.UPDATE_USER_DETAILS","UserActions.UpdateUserDetailsSuccess","UserActions.UpdateUserDetailsFail","UserActions.LOAD_USER_ORDERS","UserActions.LoadUserOrdersSuccess","UserActions.LoadUserOrdersFail","UserActions.REGISTER_USER","UserActions.RegisterUserSuccess","UserActions.RegisterUserFail","UserActions.REGISTER_GUEST","UserActions.RegisterGuestSuccess","UserActions.RegisterGuestFail","UserActions.REMOVE_USER","UserActions.RemoveUserSuccess","UserActions.RemoveUserFail","UserActions.LOAD_USER_REPLENISHMENT_ORDERS","UserActions.LoadUserReplenishmentOrdersSuccess","UserActions.LoadUserReplenishmentOrdersFail"],"mappings":"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","sourcesContent":["export function isObject(item: any): boolean {\n  return item && typeof item === 'object' && !Array.isArray(item);\n}\n\nexport function deepMerge(target = {}, ...sources: any[]): any {\n  if (!sources.length) {\n    return target;\n  }\n  const source = sources.shift() || {};\n\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (source[key] instanceof Date) {\n        Object.assign(target, { [key]: source[key] });\n      } else if (isObject(source[key])) {\n        if (!target[key]) {\n          Object.assign(target, { [key]: {} });\n        }\n        deepMerge(target[key], source[key]);\n      } else {\n        Object.assign(target, { [key]: source[key] });\n      }\n    }\n  }\n\n  return deepMerge(target, ...sources);\n}\n","import { inject, InjectFlags, InjectionToken } from '@angular/core';\nimport { deepMerge } from './utils/deep-merge';\n\n/**\n * Global Configuration injection token, can be used to inject configuration to any part of the app\n */\nexport const Config = new InjectionToken('Configuration', {\n  providedIn: 'root',\n  factory: () => deepMerge({}, inject(DefaultConfig), inject(RootConfig)),\n});\n\n/**\n * Default Configuration token, used to build Global Configuration, built from DefaultConfigChunks\n */\nexport const DefaultConfig = new InjectionToken('DefaultConfiguration', {\n  providedIn: 'root',\n  factory: () =>\n    deepMerge({}, ...(inject(DefaultConfigChunk, InjectFlags.Optional) ?? [])),\n});\n\n/**\n * Root Configuration token, used to build Global Configuration, built from ConfigChunks\n */\nexport const RootConfig = new InjectionToken('RootConfiguration', {\n  providedIn: 'root',\n  factory: () =>\n    deepMerge({}, ...(inject(ConfigChunk, InjectFlags.Optional) ?? [])),\n});\n\n/**\n * Config chunk token, can be used to provide configuration chunk and contribute to the global configuration object.\n * Should not be used directly, use `provideConfig` or import `ConfigModule.withConfig` instead.\n */\nexport const ConfigChunk = new InjectionToken<object[]>('ConfigurationChunk');\n/**\n * Config chunk token, can be used to provide configuration chunk and contribute to the default configuration.\n * Should not be used directly, use `provideDefaultConfig` or `provideDefaultConfigFactory` instead.\n *\n * General rule is, that all config provided in libraries should be provided as default config.\n */\nexport const DefaultConfigChunk = new InjectionToken<object[]>(\n  'DefaultConfigurationChunk'\n);\n","import { FactoryProvider, ValueProvider } from '@angular/core';\nimport { ConfigChunk, DefaultConfigChunk } from './config-tokens';\n\n/**\n * Helper function to provide configuration chunk using ConfigChunk token\n *\n * To provide default configuration in libraries provideDefaultConfig should be used instead.\n *\n * @param config Config object to merge with the global configuration\n */\nexport function provideConfig(\n  config: any = {},\n  defaultConfig = false\n): ValueProvider {\n  return {\n    provide: defaultConfig ? DefaultConfigChunk : ConfigChunk,\n    useValue: config,\n    multi: true,\n  };\n}\n\n/**\n * Helper function to provide configuration with factory function, using ConfigChunk token\n *\n * To provide default configuration in libraries provideDefaultConfigFactory should be used instead.\n *\n * @param configFactory Factory Function that will generate config object\n * @param deps Optional dependencies to a factory function\n */\nexport function provideConfigFactory(\n  configFactory: Function,\n  deps?: any[],\n  defaultConfig = false\n): FactoryProvider {\n  return {\n    provide: defaultConfig ? DefaultConfigChunk : ConfigChunk,\n    useFactory: configFactory,\n    multi: true,\n    deps: deps,\n  };\n}\n\n/**\n * Helper function to provide default configuration chunk using DefaultConfigChunk token\n *\n * @param config Config object to merge with the default configuration\n */\nexport function provideDefaultConfig(config: any = {}): ValueProvider {\n  return {\n    provide: DefaultConfigChunk,\n    useValue: config,\n    multi: true,\n  };\n}\n\n/**\n * Helper function to provide default configuration with factory function, using DefaultConfigChunk token\n *\n * @param configFactory Factory Function that will generate config object\n * @param deps Optional dependencies to a factory function\n */\nexport function provideDefaultConfigFactory(\n  configFactory: Function,\n  deps?: any[]\n): FactoryProvider {\n  return {\n    provide: DefaultConfigChunk,\n    useFactory: configFactory,\n    multi: true,\n    deps: deps,\n  };\n}\n","import { AnonymousConsentsConfig } from './anonymous-consents-config';\n\nexport const defaultAnonymousConsentsConfig: AnonymousConsentsConfig = {\n  anonymousConsents: {\n    registerConsent: 'MARKETING_NEWSLETTER',\n    showLegalDescriptionInDialog: true,\n    requiredConsents: [],\n    consentManagementPage: {\n      showAnonymousConsents: true,\n      hideConsents: [],\n    },\n  },\n};\n","export const OCC_USER_ID_CURRENT = 'current';\nexport const OCC_USER_ID_ANONYMOUS = 'anonymous';\nexport const OCC_USER_ID_GUEST = 'guest';\n\nexport const OCC_CART_ID_CURRENT = 'current';\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\nimport { fromEvent, Observable, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, startWith } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WindowRef {\n  readonly document: Document;\n\n  constructor(@Inject(DOCUMENT) document) {\n    // it's a workaround to have document property properly typed\n    // see: https://github.com/angular/angular/issues/15640\n    this.document = document;\n  }\n\n  get nativeWindow(): Window {\n    return typeof window !== 'undefined' ? window : undefined;\n  }\n\n  get sessionStorage(): Storage {\n    return this.nativeWindow ? this.nativeWindow.sessionStorage : undefined;\n  }\n\n  get localStorage(): Storage {\n    return this.nativeWindow ? this.nativeWindow.localStorage : undefined;\n  }\n\n  /**\n   * Returns an observable for the window resize event and emits an event\n   * every 300ms in case of resizing. An event is simulated initially.\n   *\n   * If there's no window object available (i.e. in SSR), a null value is emitted.\n   */\n  get resize$(): Observable<any> {\n    if (!this.nativeWindow) {\n      return of(null);\n    } else {\n      return fromEvent(this.nativeWindow, 'resize').pipe(\n        debounceTime(300),\n        startWith({ target: this.nativeWindow }),\n        distinctUntilChanged()\n      );\n    }\n  }\n}\n","import { RoutesConfig } from '../routes-config';\nimport { Injectable } from '@angular/core';\nimport { Config } from '../../../config/config-tokens';\n\nexport const enum RouteLoadStrategy {\n  /**\n   * Don't reload the data on navigation if it was loaded before\n   */\n  ONCE = 'once',\n  /**\n   * Always reload the data on navigation\n   */\n  ALWAYS = 'always',\n}\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class RoutingConfig {\n  routing?: {\n    /**\n     * Configuration of semantic routes. Key is route's name. Value is the config specific to this route.\n     */\n    routes?: RoutesConfig;\n\n    /**\n     * When true, it closes the storefront for unauthorized users, except from routes that have individual config flag `protected: false`\n     */\n    protected?: boolean;\n\n    /**\n     * Global load strategy which is used as a fallback for loading data on each navigation\n     */\n    loadStrategy?: RouteLoadStrategy;\n  };\n}\n","import { Injectable, isDevMode } from '@angular/core';\nimport { RouteLoadStrategy, RoutingConfig } from './config/routing-config';\nimport { RouteConfig } from './routes-config';\n\n@Injectable({ providedIn: 'root' })\nexport class RoutingConfigService {\n  /**\n   * Reversed routing config for quick lookup of the route name by the configured path.\n   */\n  protected routeNamesByPath: { [path: string]: string };\n\n  constructor(protected config: RoutingConfig) {}\n\n  /**\n   * Returns the route config for the given route name.\n   */\n  getRouteConfig(routeName: string): RouteConfig {\n    const routeConfig = this.config?.routing?.routes;\n\n    const result = routeConfig && routeConfig[routeName];\n    if (!routeConfig || result === undefined) {\n      this.warn(`No path was configured for the named route '${routeName}'!`);\n    }\n    return result;\n  }\n\n  private warn(...args) {\n    if (isDevMode()) {\n      console.warn(...args);\n    }\n  }\n\n  /**\n   * Returns the configured route loading strategy.\n   */\n  getLoadStrategy(): RouteLoadStrategy {\n    return this.config?.routing?.loadStrategy ?? RouteLoadStrategy.ALWAYS;\n  }\n\n  /**\n   * Returns the route name of the configured path.\n   *\n   * For example, when the config is:\n   * ```\n   * routing: {\n   *   routes: {\n   *      addressBook: { paths: ['my-account/address-book'] }\n   *   }\n   * }\n   * ```\n   *\n   * the `getRouteName('my-account/address-book')` returns `'addressBook'`.\n   */\n  getRouteName(path: string) {\n    if (!this.routeNamesByPath) {\n      this.initRouteNamesByPath();\n    }\n    return this.routeNamesByPath[path];\n  }\n\n  /**\n   * Initializes the property `routeNamesByPath`.\n   *\n   * The original config allows for reading configured path by the route name.\n   * But this method builds up a structure with a 'reversed config'\n   * to read quickly the route name by the path.\n   */\n  protected initRouteNamesByPath() {\n    this.routeNamesByPath = {};\n\n    for (const [routeName, routeConfig] of Object.entries(\n      this.config?.routing?.routes\n    )) {\n      routeConfig?.paths?.forEach((path) => {\n        if (isDevMode() && this.routeNamesByPath[path]) {\n          console.error(\n            `The same path '${path}' is configured for two different route names: '${this.routeNamesByPath[path]}' and '${routeName}`\n          );\n        }\n        this.routeNamesByPath[path] = routeName;\n      });\n    }\n  }\n}\n","export const isParam = (segment: string): boolean => segment.startsWith(':');\n\nexport const getParamName = (segment: string): string => segment.slice(1); // it just removes leading ':'\n\nexport const ensureLeadingSlash = (path: string): string =>\n  path.startsWith('/') ? path : '/' + path;\n\nexport const removeLeadingSlash = (path: string): string =>\n  path.startsWith('/') ? path.slice(1) : path;\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UrlSegmentGroup, PRIMARY_OUTLET } from '@angular/router';\n\n@Injectable({ providedIn: 'root' })\nexport class UrlParsingService {\n  constructor(private router: Router) {}\n\n  getPrimarySegments(url: string): string[] {\n    const urlTree = this.router.parseUrl(url);\n    return this._getPrimarySegmentsFromUrlTree(urlTree.root);\n  }\n\n  private _getPrimarySegmentsFromUrlTree(tree: UrlSegmentGroup): string[] {\n    const segments = tree.segments.map((s) => s.path);\n    const childrenSegments = tree.children[PRIMARY_OUTLET]\n      ? this._getPrimarySegmentsFromUrlTree(tree.children[PRIMARY_OUTLET])\n      : [];\n    return segments.concat(childrenSegments);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ParamsMapping, RouteConfig } from '../routes-config';\nimport { RoutingConfigService } from '../routing-config.service';\nimport { getParamName, isParam } from './path-utils';\nimport { UrlCommand, UrlCommandRoute, UrlCommands } from './url-command';\nimport { UrlParsingService } from './url-parsing.service';\n\n@Injectable({ providedIn: 'root' })\nexport class SemanticPathService {\n  readonly ROOT_URL = ['/'];\n\n  constructor(\n    protected routingConfigService: RoutingConfigService,\n    protected urlParser: UrlParsingService\n  ) {}\n\n  /**\n   * Returns the first path alias configured for a given route name. It adds `/` at the beginning.\n   */\n  get(routeName: string): string {\n    const routeConfig = this.routingConfigService.getRouteConfig(routeName);\n    return routeConfig && Array.isArray(routeConfig.paths)\n      ? '/' + routeConfig.paths[0]\n      : undefined;\n  }\n\n  /**\n   * Transforms the array of url commands. Each command can be:\n   * a) string - will be left untouched\n   * b) object { cxRoute: <route name> } - will be replaced with semantic path\n   * c) object { cxRoute: <route name>, params: { ... } } - same as above, but with passed params\n   *\n   * If the first command is the object with the `cxRoute` property, returns an absolute url (with the first element of the array `'/'`)\n   */\n  transform(commands: UrlCommands): any[] {\n    if (!Array.isArray(commands)) {\n      commands = [commands];\n    }\n\n    const result: string[] = [];\n    for (const command of commands) {\n      if (!this.isRouteCommand(command)) {\n        // don't modify segment that is not route command:\n        result.push(command);\n      } else {\n        // generate array with url segments for given route command:\n        const partialResult = this.generateUrlPart(command);\n\n        if (partialResult === null) {\n          return this.ROOT_URL;\n        }\n\n        result.push(...partialResult);\n      }\n    }\n\n    if (this.shouldOutputAbsolute(commands)) {\n      result.unshift('/');\n    }\n\n    return result;\n  }\n\n  private isRouteCommand(command: UrlCommand): boolean {\n    return command && Boolean(command.cxRoute);\n  }\n\n  private shouldOutputAbsolute(commands: UrlCommands): boolean {\n    return this.isRouteCommand(commands[0]);\n  }\n\n  private generateUrlPart(command: UrlCommandRoute): string[] | null {\n    this.standarizeRouteCommand(command);\n\n    if (!command.cxRoute) {\n      return null;\n    }\n\n    const routeConfig = this.routingConfigService.getRouteConfig(\n      command.cxRoute\n    );\n\n    // if no route translation was configured, return null:\n    if (!routeConfig || !routeConfig.paths) {\n      return null;\n    }\n\n    // find first path that can satisfy it's parameters with given parameters\n    const path = this.findPathWithFillableParams(routeConfig, command.params);\n\n    // if there is no configured path that can be satisfied with given params, return null\n    if (!path) {\n      return null;\n    }\n\n    const result = this.provideParamsValues(\n      path,\n      command.params,\n      routeConfig.paramsMapping\n    );\n\n    return result;\n  }\n\n  private standarizeRouteCommand(command: UrlCommandRoute): void {\n    command.params = command.params || {};\n  }\n\n  private provideParamsValues(\n    path: string,\n    params: object,\n    paramsMapping: ParamsMapping\n  ): string[] {\n    return this.urlParser.getPrimarySegments(path).map((segment) => {\n      if (isParam(segment)) {\n        const paramName = getParamName(segment);\n        const mappedParamName = this.getMappedParamName(\n          paramName,\n          paramsMapping\n        );\n        return params[mappedParamName];\n      }\n      return segment;\n    });\n  }\n\n  private findPathWithFillableParams(\n    routeConfig: RouteConfig,\n    params: object\n  ): string {\n    const foundPath = routeConfig.paths.find((path) =>\n      this.getParams(path).every((paramName) => {\n        const mappedParamName = this.getMappedParamName(\n          paramName,\n          routeConfig.paramsMapping\n        );\n\n        return params[mappedParamName] !== undefined;\n      })\n    );\n\n    if (foundPath === undefined || foundPath === null) {\n      return null;\n    }\n    return foundPath;\n  }\n\n  private getParams(path: string) {\n    return this.urlParser\n      .getPrimarySegments(path)\n      .filter(isParam)\n      .map(getParamName);\n  }\n\n  private getMappedParamName(paramName: string, paramsMapping: object): string {\n    if (paramsMapping) {\n      return paramsMapping[paramName] || paramName;\n    }\n    return paramName;\n  }\n}\n","import { NavigationExtras } from '@angular/router';\nimport { Action } from '@ngrx/store';\nimport { PageContext } from '../../../routing/models/page-context.model';\n\nexport const ROUTER_GO = '[Router] Go';\nexport const ROUTER_GO_BY_URL = '[Router] Go By Url';\nexport const ROUTER_BACK = '[Router] Back';\nexport const ROUTER_FORWARD = '[Router] Forward';\nexport const CHANGE_NEXT_PAGE_CONTEXT = '[Router] Change Next PageContext';\n\nexport class RouteGoAction implements Action {\n  readonly type = ROUTER_GO;\n  constructor(\n    public payload: {\n      path: string[];\n      query?: object;\n      extras?: NavigationExtras;\n    }\n  ) {}\n}\n\nexport class RouteGoByUrlAction implements Action {\n  readonly type = ROUTER_GO_BY_URL;\n  constructor(public payload: string) {}\n}\n\nexport class RouteBackAction implements Action {\n  readonly type = ROUTER_BACK;\n}\n\nexport class RouteForwardAction implements Action {\n  readonly type = ROUTER_FORWARD;\n}\n\nexport class ChangeNextPageContext implements Action {\n  readonly type = CHANGE_NEXT_PAGE_CONTEXT;\n  constructor(public payload: PageContext) {}\n}\n\nexport type RoutingAction =\n  | RouteGoAction\n  | RouteGoByUrlAction\n  | RouteBackAction\n  | RouteForwardAction\n  | ChangeNextPageContext;\n","import { Params } from '@angular/router';\nimport * as fromNgrxRouter from '@ngrx/router-store';\nimport { PageContext } from '../models/page-context.model';\n\nexport const ROUTING_FEATURE = 'router';\n\nexport interface RouterState\n  extends fromNgrxRouter.RouterReducerState<ActivatedRouterStateSnapshot> {\n  nextState?: ActivatedRouterStateSnapshot;\n}\n\nexport interface ActivatedRouterStateSnapshot {\n  url: string;\n  queryParams: Params;\n  params: Params;\n  context: PageContext;\n  cmsRequired: boolean;\n  semanticRoute?: string;\n}\n\nexport interface State {\n  [ROUTING_FEATURE]: RouterState;\n}\n","import {\n  createFeatureSelector,\n  createSelector,\n  MemoizedSelector,\n} from '@ngrx/store';\nimport { PageContext } from '../../models/page-context.model';\nimport { RouterState, ROUTING_FEATURE, State } from '../routing-state';\n\nexport const getRouterFeatureState: MemoizedSelector<\n  any,\n  State\n> = createFeatureSelector<State>(ROUTING_FEATURE);\n\nexport const getRouterState: MemoizedSelector<\n  any,\n  RouterState\n> = createSelector(getRouterFeatureState, (state) => state.router);\n\nexport const getSemanticRoute: MemoizedSelector<any, string> = createSelector(\n  getRouterState,\n  (routingState: RouterState) =>\n    (routingState.state && routingState.state.semanticRoute) || ''\n);\n\nexport const getPageContext: MemoizedSelector<\n  any,\n  PageContext\n> = createSelector(\n  getRouterState,\n  (routingState: RouterState) =>\n    (routingState.state && routingState.state.context) || { id: '' }\n);\n\nexport const getNextPageContext: MemoizedSelector<\n  any,\n  PageContext\n> = createSelector(\n  getRouterState,\n  (routingState: RouterState) =>\n    routingState.nextState && routingState.nextState.context\n);\n\nexport const isNavigating: MemoizedSelector<any, boolean> = createSelector(\n  getNextPageContext,\n  (context) => !!context\n);\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, NavigationEnd, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { filter, map, shareReplay, startWith } from 'rxjs/operators';\n\n/**\n * Helper service to expose all activated routes\n */\n@Injectable({ providedIn: 'root' })\nexport class ActivatedRoutesService {\n  constructor(protected router: Router) {}\n\n  /**\n   * Array of currently activated routes (from the root route to the leaf route).\n   */\n  readonly routes$: Observable<\n    ActivatedRouteSnapshot[]\n  > = this.router.events.pipe(\n    filter((event) => event instanceof NavigationEnd),\n    // tslint:disable-next-line: deprecation https://github.com/ReactiveX/rxjs/issues/4772\n    startWith(undefined), // emit value for consumer who subscribed lately after NavigationEnd event\n    map(() => {\n      let route = this.router.routerState.snapshot.root;\n      const routes: ActivatedRouteSnapshot[] = [route];\n\n      // traverse to the leaf route:\n      while ((route = route.firstChild)) {\n        routes.push(route);\n      }\n\n      return routes;\n    }),\n    shareReplay({ bufferSize: 1, refCount: true })\n  );\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { ActivatedRoutesService } from '../services/activated-routes.service';\n\n/**\n * Service to expose all parameters for the router, including child routes.\n * This is convenient in case the parent route (component) requires awareness\n * of child routes parameters.\n */\n@Injectable({ providedIn: 'root' })\nexport class RoutingParamsService {\n  protected readonly params$: Observable<{\n    [key: string]: string;\n  }> = this.activatedRoutesService.routes$.pipe(\n    map((routes) => this.findAllParam(routes)),\n    shareReplay({ refCount: true, bufferSize: 1 })\n  );\n\n  constructor(\n    protected router: Router,\n    protected activatedRoutesService: ActivatedRoutesService\n  ) {}\n\n  /**\n   * Get the list of all parameters of the full route. This includes\n   * active child routes.\n   */\n  getParams(): Observable<{ [key: string]: string }> {\n    return this.params$;\n  }\n\n  protected findAllParam(\n    routes: ActivatedRouteSnapshot[]\n  ): { [key: string]: string } {\n    return Object.assign({}, ...routes.map((route) => route.params));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NavigationExtras } from '@angular/router';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { WindowRef } from '../../window/window-ref';\nimport { SemanticPathService } from '../configurable-routes/url-translation/semantic-path.service';\nimport { UrlCommands } from '../configurable-routes/url-translation/url-command';\nimport { PageContext } from '../models/page-context.model';\nimport { RoutingActions } from '../store/actions/index';\nimport { RouterState } from '../store/routing-state';\nimport { RoutingSelector } from '../store/selectors/index';\nimport { RoutingParamsService } from './routing-params.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RoutingService {\n  constructor(\n    protected store: Store<RouterState>,\n    protected winRef: WindowRef,\n    protected semanticPathService: SemanticPathService,\n    protected routingParamsService: RoutingParamsService\n  ) {}\n\n  /**\n   * Get the list of all parameters of the full route. This includes\n   * active child routes.\n   */\n  getParams(): Observable<{ [key: string]: string }> {\n    return this.routingParamsService?.getParams();\n  }\n\n  /**\n   * Get the current router state\n   */\n  getRouterState(): Observable<RouterState> {\n    return this.store.pipe(select(RoutingSelector.getRouterState));\n  }\n\n  /**\n   * Get the `PageContext` from the state\n   */\n  getPageContext(): Observable<PageContext> {\n    return this.store.pipe(select(RoutingSelector.getPageContext));\n  }\n\n  /**\n   * Get the next `PageContext` from the state\n   */\n  getNextPageContext(): Observable<PageContext> {\n    return this.store.pipe(select(RoutingSelector.getNextPageContext));\n  }\n\n  /**\n   * Allow to change next page context for the ongoing navigation\n   *\n   * @param pageContext\n   */\n  changeNextPageContext(pageContext: PageContext) {\n    this.store.dispatch(new RoutingActions.ChangeNextPageContext(pageContext));\n  }\n\n  /**\n   * Get the `isNavigating` info from the state\n   */\n  isNavigating(): Observable<boolean> {\n    return this.store.pipe(select(RoutingSelector.isNavigating));\n  }\n\n  /**\n   * Navigation with a new state into history\n   * @param commands: url commands\n   * @param query\n   * @param extras: Represents the extra options used during navigation.\n   */\n  go(commands: UrlCommands, query?: object, extras?: NavigationExtras): void {\n    const path = this.semanticPathService.transform(commands);\n\n    return this.navigate(path, query, extras);\n  }\n\n  /**\n   * Navigation using URL\n   * @param url\n   */\n  goByUrl(url: string) {\n    this.store.dispatch(new RoutingActions.RouteGoByUrlAction(url));\n  }\n\n  /**\n   * Navigating back\n   */\n  back(): void {\n    const isLastPageInApp = this.winRef.document.referrer.includes(\n      this.winRef.nativeWindow.location.origin\n    );\n    if (isLastPageInApp) {\n      this.store.dispatch(new RoutingActions.RouteBackAction());\n      return;\n    }\n    this.go(['/']);\n    return;\n  }\n\n  /**\n   * Navigating forward\n   */\n  forward(): void {\n    this.store.dispatch(new RoutingActions.RouteForwardAction());\n  }\n\n  /**\n   * Navigation with a new state into history\n   * @param path\n   * @param query\n   * @param extras: Represents the extra options used during navigation.\n   */\n  protected navigate(\n    path: any[],\n    query?: object,\n    extras?: NavigationExtras\n  ): void {\n    this.store.dispatch(\n      new RoutingActions.RouteGoAction({\n        path,\n        query,\n        extras,\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n/**\n * Service serves storage role for AuthRedirectService.\n * Used by AuthStatePersistenceService to store redirect url for OAuth flows that rely on redirects.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthRedirectStorageService {\n  constructor() {}\n\n  private redirectUrl$: Observable<string> = new BehaviorSubject<string>(\n    undefined\n  );\n\n  /**\n   * Get redirect url after logging in.\n   *\n   * @returns observable with the redirect url as string\n   */\n  getRedirectUrl(): Observable<string> {\n    return this.redirectUrl$;\n  }\n\n  /**\n   * Set url to redirect to after login.\n   *\n   * @param redirectUrl\n   */\n  setRedirectUrl(redirectUrl: string): void {\n    (this.redirectUrl$ as BehaviorSubject<string>).next(redirectUrl);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { take } from 'rxjs/operators';\nimport { RoutingService } from '../../../routing/facade/routing.service';\nimport { AuthRedirectStorageService } from './auth-redirect-storage.service';\n\n/**\n * Responsible for saving last accessed page (or attempted) before login and for redirecting to that page after login.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthRedirectService {\n  /**\n   * This service is responsible for redirecting to the last page before authorization. \"The last page\" can be:\n   * 1. Just the previously opened page; or\n   * 2. The page that we just tried to open, but AuthGuard cancelled it\n   *\n   * For example:\n   * 1. The user opens the product page, then clicks /login link and signs in\n   *    -> Then we should redirect to the product page; or\n   * 2. The user opens the product page, then he clicks /my-account link,\n   *    but is automatically redirected to the login page by the AuthGuard, and he signs in\n   *    -> Then we should redirect to the my-account page, not the product page\n   */\n  constructor(\n    protected routing: RoutingService,\n    protected router: Router,\n    protected authRedirectStorageService: AuthRedirectStorageService\n  ) {}\n\n  private ignoredUrls = new Set<string>();\n  private lastAuthGuardNavigation: {\n    url: string;\n    navigationId: number;\n  };\n\n  /**\n   * Redirect to saved url (homepage if nothing is saved).\n   */\n  redirect() {\n    this.authRedirectStorageService\n      .getRedirectUrl()\n      .pipe(take(1))\n      .subscribe((redirectUrl) => {\n        if (redirectUrl === undefined) {\n          this.routing.go('/');\n        } else {\n          this.routing.goByUrl(redirectUrl);\n        }\n        this.authRedirectStorageService.setRedirectUrl(undefined);\n\n        this.lastAuthGuardNavigation = undefined;\n      });\n  }\n\n  /**\n   * Saves url of a page that user wanted to access, but wasn't yet logged in.\n   */\n  reportAuthGuard() {\n    const { url, navigationId } = this.getCurrentNavigation();\n    this.lastAuthGuardNavigation = { url, navigationId };\n    this.authRedirectStorageService.setRedirectUrl(url);\n  }\n\n  /**\n   * Saves url of a page that was accessed before entering a page only for not auth users.\n   */\n  reportNotAuthGuard() {\n    const { url, initialUrl, navigationId } = this.getCurrentNavigation();\n\n    this.ignoredUrls.add(url);\n\n    // Don't save redirect url if you've already come from page with NotAuthGuard (i.e. user has come from login to register)\n    if (!this.ignoredUrls.has(initialUrl)) {\n      // We compare the navigation id to find out if the url cancelled by AuthGuard (i.e. my-account) is more recent\n      // than the last opened page\n      if (\n        !this.lastAuthGuardNavigation ||\n        this.lastAuthGuardNavigation.navigationId < navigationId - 1\n      ) {\n        this.authRedirectStorageService.setRedirectUrl(initialUrl);\n\n        this.lastAuthGuardNavigation = undefined;\n      }\n    }\n  }\n\n  private getCurrentNavigation(): {\n    navigationId: number;\n    url: string;\n    initialUrl: string;\n  } {\n    const initialUrl = this.router.url;\n    const navigation = this.router.getCurrentNavigation();\n    const url = this.router.serializeUrl(navigation.finalUrl);\n    return {\n      navigationId: navigation.id,\n      url,\n      initialUrl,\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { OAuthStorage } from 'angular-oauth2-oidc';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { AuthToken } from '../models/auth-token.model';\n\n/**\n * Storage service for AuthToken. Used as a storage for angular-oauth2-oidc library.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthStorageService extends OAuthStorage {\n  /**\n   * Extracted keys that are not `JSON.stringify` from reading the angular-oauth2-oidc source code\n   */\n  protected static readonly nonStringifiedOAuthLibKeys = [\n    'PKCE_verifier',\n    'access_token',\n    'refresh_token',\n    'expires_at',\n    'access_token_stored_at',\n    'id_token',\n    'id_token_expires_at',\n    'id_token_stored_at',\n    'session_state',\n    'nonce',\n  ];\n\n  protected _token$: Observable<AuthToken> = new BehaviorSubject<AuthToken>(\n    {} as AuthToken\n  );\n\n  protected decode(key: string, value: any) {\n    if (AuthStorageService.nonStringifiedOAuthLibKeys.includes(key)) {\n      return value;\n    }\n    return JSON.stringify(value);\n  }\n\n  protected encode(key: string, value: any) {\n    if (AuthStorageService.nonStringifiedOAuthLibKeys.includes(key)) {\n      return value;\n    } else {\n      try {\n        return JSON.parse(value);\n      } catch {\n        return value;\n      }\n    }\n  }\n\n  /* Async API for spartacus use */\n\n  /**\n   * Returns complete token (all fields).\n   *\n   * @return observable emitting AuthToken\n   */\n  getToken(): Observable<AuthToken> {\n    return this._token$;\n  }\n\n  /**\n   * Set current value of token.\n   *\n   * @param token\n   */\n  setToken(token: AuthToken): void {\n    (this._token$ as BehaviorSubject<AuthToken>).next(token);\n  }\n\n  /* Sync API for OAuth lib use */\n\n  /**\n   * Get parameter from the token (eg. access_token)\n   *\n   * @param key\n   */\n  getItem(key: string): any {\n    let token;\n    this.getToken()\n      .subscribe((currentToken) => (token = currentToken))\n      .unsubscribe();\n    return this.decode(key, token?.[key]);\n  }\n\n  /**\n   * Removes parameter from the token (eg. access_token)\n   *\n   * @param key\n   */\n  removeItem(key: string): void {\n    const val = { ...(this._token$ as BehaviorSubject<AuthToken>).value };\n    delete val[key];\n    (this._token$ as BehaviorSubject<AuthToken>).next({\n      ...val,\n    });\n  }\n\n  /**\n   * Sets parameter of the token (eg. access_token)\n   *\n   * @param key\n   */\n  setItem(key: string, data: any): void {\n    if (key) {\n      (this._token$ as BehaviorSubject<AuthToken>).next({\n        ...(this._token$ as BehaviorSubject<AuthToken>).value,\n        [key]: this.encode(key, data),\n      });\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Config } from '../../config/config-tokens';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class SiteContextConfig {\n  context?: {\n    urlParameters?: string[];\n    [contextName: string]: string[];\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { Config } from '../../config/config-tokens';\nimport { SiteContextConfig } from '../../site-context/config/site-context-config';\nimport { OccEndpoints } from '../occ-models/occ-endpoints.model';\nimport { LoadingScopes } from './loading-scopes-config';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class OccConfig extends SiteContextConfig {\n  backend?: {\n    occ?: {\n      baseUrl?: string;\n      prefix?: string;\n      /**\n       * Indicates whether or not cross-site Access-Control requests should be made\n       * using credentials such as cookies, authorization headers or TLS client certificates\n       */\n      useWithCredentials?: boolean;\n\n      endpoints?: OccEndpoints;\n    };\n    media?: {\n      /**\n       * Media URLs are typically relative, so that the host can be configured.\n       * Configurable media baseURLs are useful for SEO, multi-site,\n       * switching environments, etc.\n       */\n      baseUrl?: string;\n    };\n    loadingScopes?: LoadingScopes;\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { AuthConfig as LibConfig } from 'angular-oauth2-oidc';\nimport { Config } from '../../../config/config-tokens';\n\n// siletRefreshTimeout - omitted as it is deprecated of typo\n// clientId - we need it for client credentials flow\n// dummyClientSecret - we need it for client credentials flow\n// loginUrl - similarly like the rest of endpoints we want to have full control over that\n// logoutUrl - similarly like the rest of endpoints we want to have full control over that\n// tokenEndpoint - similarly like the rest of endpoints we want to have full control over that\n// revocationEndpoint - similarly like the rest of endpoints we want to have full control over that\n// userinfoEndpoint - similarly like the rest of endpoints we want to have full control over that\n//\nexport type AuthLibConfig = Omit<\n  LibConfig,\n  | 'clientId'\n  | 'dummyClientSecret'\n  | 'siletRefreshTimeout'\n  | 'loginUrl'\n  | 'logoutUrl'\n  | 'tokenEndpoint'\n  | 'revocationEndpoint'\n  | 'userinfoEndpoint'\n>;\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class AuthConfig {\n  authentication?: {\n    /**\n     * OAuth client id.\n     */\n    client_id?: string;\n    /**\n     * Secret for client required by Hybris OAuth.\n     */\n    client_secret?: string;\n    /**\n     * Base url for auth server (for login, token, revoke endpoints).\n     */\n    baseUrl?: string;\n    /**\n     * Endpoint for getting token.\n     */\n    tokenEndpoint?: string;\n    /**\n     * Endpoint url for revoking tokens.\n     */\n    revokeEndpoint?: string;\n    /**\n     * Url for login redirect for Implicit and Authorization Code Flow.\n     */\n    loginUrl?: string;\n    /**\n     * Redirect url after logout.\n     */\n    logoutUrl?: string;\n    /**\n     * Userinfo endpoint.\n     */\n    userinfoEndpoint?: string;\n    /**\n     * Config for angular-oauth-oidc library.\n     */\n    OAuthLibConfig?: AuthLibConfig;\n  };\n}\n","/**\n * Supported OAuth flows.\n */\nexport enum OAuthFlow {\n  /**\n   * Flow when username and password is passed to the application and then the application through API fetches tokens from OAuth server.\n   */\n  ResourceOwnerPasswordFlow,\n  /**\n   * Flow with redirect to OAuth server where user inputs credentials and the are redirected back with token.\n   */\n  ImplicitFlow,\n  /**\n   * Similar to Implicit flow, but user is redirected with code that need to later exchange through API for a token.\n   */\n  AuthorizationCode,\n}\n","import { Injectable } from '@angular/core';\nimport { OccConfig } from '../../../occ/config/occ-config';\nimport { AuthConfig, AuthLibConfig } from '../config/auth-config';\nimport { OAuthFlow } from '../models/oauth-flow';\n\n/**\n * Utility service on top of the authorization config.\n * Provides handy defaults, when not everything is set in the configuration.\n * Use this service instead of direct configuration.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthConfigService {\n  constructor(\n    protected authConfig: AuthConfig,\n    protected occConfig: OccConfig\n  ) {}\n\n  /**\n   * Utility to make access to authentication config easier.\n   */\n  private get config(): AuthConfig['authentication'] {\n    return this.authConfig?.authentication ?? {};\n  }\n\n  /**\n   * Get client_id\n   *\n   * @return client_id\n   */\n  public getClientId(): string {\n    return this.config.client_id ?? '';\n  }\n\n  /**\n   * Get client_secret. OAuth server shouldn't require it from web apps (but Hybris OAuth server requires).\n   *\n   * @return client_secret\n   */\n  public getClientSecret(): string {\n    return this.config.client_secret ?? '';\n  }\n\n  /**\n   * Returns base url of the authorization server\n   */\n  public getBaseUrl(): string {\n    return (\n      this.config.baseUrl ??\n      (this.occConfig?.backend?.occ?.baseUrl ?? '') + '/authorizationserver'\n    );\n  }\n\n  /**\n   * Returns endpoint for getting the auth token\n   */\n  public getTokenEndpoint(): string {\n    const tokenEndpoint = this.config.tokenEndpoint ?? '';\n    return this.prefixEndpoint(tokenEndpoint);\n  }\n\n  /**\n   * Returns url for redirect to the authorization server to get token/code\n   */\n  public getLoginUrl(): string {\n    const loginUrl = this.config.loginUrl ?? '';\n    return this.prefixEndpoint(loginUrl);\n  }\n\n  /**\n   * Returns endpoint for token revocation (both access and refresh token).\n   */\n  public getRevokeEndpoint(): string {\n    const revokeEndpoint = this.config.revokeEndpoint ?? '';\n    return this.prefixEndpoint(revokeEndpoint);\n  }\n\n  /**\n   * Returns logout url to redirect to on logout.\n   */\n  public getLogoutUrl(): string {\n    const logoutUrl = this.config.logoutUrl ?? '';\n    return this.prefixEndpoint(logoutUrl);\n  }\n\n  /**\n   * Returns userinfo endpoint of the OAuth server.\n   */\n  public getUserinfoEndpoint(): string {\n    const userinfoEndpoint = this.config.userinfoEndpoint ?? '';\n    return this.prefixEndpoint(userinfoEndpoint);\n  }\n\n  /**\n   * Returns configuration specific for the angular-oauth2-oidc library.\n   */\n  public getOAuthLibConfig(): AuthLibConfig {\n    return this.config.OAuthLibConfig ?? {};\n  }\n\n  protected prefixEndpoint(endpoint: string): string {\n    let url = endpoint;\n    if (!url.startsWith('/')) {\n      url = '/' + url;\n    }\n    return `${this.getBaseUrl()}${url}`;\n  }\n\n  /**\n   * Returns the type of the OAuth flow based on auth config.\n   * Use when you have to perform particular action only in some of the OAuth flow scenarios.\n   */\n  public getOAuthFlow(): OAuthFlow {\n    const responseType = this.config.OAuthLibConfig?.responseType;\n    if (responseType) {\n      const types = responseType.split(' ');\n      if (types.includes('code')) {\n        return OAuthFlow.AuthorizationCode;\n      } else if (types.includes('token')) {\n        return OAuthFlow.ImplicitFlow;\n      } else {\n        return OAuthFlow.ResourceOwnerPasswordFlow;\n      }\n    }\n    return OAuthFlow.ResourceOwnerPasswordFlow;\n  }\n}\n","import { isPlatformServer } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { OAuthService, TokenResponse } from 'angular-oauth2-oidc';\nimport { WindowRef } from '../../../window/window-ref';\nimport { AuthConfigService } from './auth-config.service';\n\n/**\n * Wrapper service on the library OAuthService. Normalizes the lib API for services.\n * Use this service when you want to access low level OAuth library methods.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OAuthLibWrapperService {\n  constructor(\n    protected oAuthService: OAuthService,\n    protected authConfigService: AuthConfigService,\n    @Inject(PLATFORM_ID) protected platformId: Object,\n    protected winRef: WindowRef\n  ) {\n    this.initialize();\n  }\n\n  protected initialize() {\n    const isSSR = isPlatformServer(this.platformId);\n    this.oAuthService.configure({\n      tokenEndpoint: this.authConfigService.getTokenEndpoint(),\n      loginUrl: this.authConfigService.getLoginUrl(),\n      clientId: this.authConfigService.getClientId(),\n      dummyClientSecret: this.authConfigService.getClientSecret(),\n      revocationEndpoint: this.authConfigService.getRevokeEndpoint(),\n      logoutUrl: this.authConfigService.getLogoutUrl(),\n      userinfoEndpoint: this.authConfigService.getUserinfoEndpoint(),\n      issuer:\n        this.authConfigService.getOAuthLibConfig()?.issuer ??\n        this.authConfigService.getBaseUrl(),\n      redirectUri:\n        this.authConfigService.getOAuthLibConfig()?.redirectUri ?? !isSSR\n          ? this.winRef.nativeWindow.location.origin\n          : '',\n      ...this.authConfigService.getOAuthLibConfig(),\n    });\n  }\n\n  /**\n   * Authorize with ResourceOwnerPasswordFlow.\n   *\n   * @param userId\n   * @param password\n   *\n   * @return token response from the lib\n   */\n  authorizeWithPasswordFlow(\n    userId: string,\n    password: string\n  ): Promise<TokenResponse> {\n    return this.oAuthService.fetchTokenUsingPasswordFlow(userId, password);\n  }\n\n  /**\n   * Refresh access_token.\n   */\n  refreshToken(): void {\n    this.oAuthService.refreshToken();\n  }\n\n  /**\n   * Revoke access tokens and clear tokens in lib state.\n   */\n  revokeAndLogout(): Promise<any> {\n    return new Promise((resolve) => {\n      this.oAuthService\n        .revokeTokenAndLogout()\n        .catch(() => {\n          // when there would be some kind of error during revocation we can't do anything else, so at least we logout user.\n          this.oAuthService.logOut();\n        })\n        .finally(() => {\n          resolve();\n        });\n    });\n  }\n\n  /**\n   * Clear tokens in library state (no revocation).\n   */\n  logout(): void {\n    this.oAuthService.logOut();\n  }\n\n  /**\n   * Returns Open Id token. Might be empty, when it was not requested with the `responseType` config.\n   *\n   * @return id token\n   */\n  getIdToken(): string {\n    return this.oAuthService.getIdToken();\n  }\n\n  /**\n   * Initialize Implicit Flow or Authorization Code flows with the redirect to OAuth login url.\n   */\n  initLoginFlow() {\n    return this.oAuthService.initLoginFlow();\n  }\n\n  /**\n   * Tries to login user based on `code` or `token` present in the url.\n   */\n  tryLogin() {\n    return this.oAuthService.tryLogin({\n      // We don't load discovery document, because it doesn't contain revoke endpoint information\n      disableOAuth2StateCheck: true,\n    });\n  }\n}\n","import { Action } from '@ngrx/store';\n\nexport const LOGIN = '[Auth] Login';\nexport const LOGOUT = '[Auth] Logout';\n\nexport class Login implements Action {\n  readonly type = LOGIN;\n}\n\nexport class Logout implements Action {\n  readonly type = LOGOUT;\n}\n\n// action types\nexport type LoginLogoutAction = Login | Logout;\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject, Subscription } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport {\n  OCC_USER_ID_ANONYMOUS,\n  OCC_USER_ID_CURRENT,\n} from '../../../occ/utils/occ-constants';\n\n/**\n * This implementation is OCC specific.\n * Different backend might have completely different need regarding user id.\n * It might not need user id at all and work based on access_token.\n * To implement custom solution provide your own implementation and customize services that use UserIdService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserIdService {\n  private _userId: Observable<string> = new ReplaySubject<string>(1);\n\n  /**\n   * Sets current user id.\n   *\n   * @param userId\n   */\n  public setUserId(userId: string): void {\n    (this._userId as ReplaySubject<string>).next(userId);\n  }\n\n  /**\n   * This function provides the userId the OCC calls should use, depending\n   * on whether there is an active storefront session or not.\n   *\n   * It returns the userId of the current storefront user or 'anonymous'\n   * in the case there are no signed in user in the storefront.\n   *\n   * The user id of a regular customer session is 'current'. In the case of an\n   * asm customer emulation session, the userId will be the customerId.\n   */\n  public getUserId(): Observable<string> {\n    return this._userId;\n  }\n\n  /**\n   * @deprecated Use `takeUserId` method instead.\n   *\n   * Calls provided callback with current user id.\n   *\n   * @param cb callback function to invoke\n   */\n  public invokeWithUserId(cb: (userId: string) => any): Subscription {\n    return this.getUserId()\n      .pipe(take(1))\n      .subscribe((id) => cb(id));\n  }\n\n  /**\n   * Utility method if you need userId to perform single action (eg. dispatch call to API).\n   *\n   * @param loggedIn Set to true if you want the observable to emit id only for logged in user. Throws in case of anonymous user.\n   *\n   * @returns Observable that emits once and completes with the last userId value.\n   */\n  public takeUserId(loggedIn = false): Observable<string | never> {\n    return this.getUserId().pipe(\n      take(1),\n      map((userId) => {\n        if (loggedIn && userId === OCC_USER_ID_ANONYMOUS) {\n          throw new Error(\n            'Requested user id for logged user while user is not logged in.'\n          );\n        }\n        return userId;\n      })\n    );\n  }\n\n  /**\n   * Sets user id to the default value for logged out user.\n   */\n  public clearUserId(): void {\n    this.setUserId(OCC_USER_ID_ANONYMOUS);\n  }\n\n  /**\n   * Checks if the userId is of emulated user type.\n   */\n  public isEmulated(): Observable<boolean> {\n    return this.getUserId().pipe(\n      map(\n        (userId) =>\n          userId !== OCC_USER_ID_ANONYMOUS && userId !== OCC_USER_ID_CURRENT\n      )\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { OCC_USER_ID_CURRENT } from '../../../occ/utils/occ-constants';\nimport { RoutingService } from '../../../routing/facade/routing.service';\nimport { StateWithClientAuth } from '../../client-auth/store/client-auth-state';\nimport { AuthRedirectService } from '../services/auth-redirect.service';\nimport { AuthStorageService } from '../services/auth-storage.service';\nimport { OAuthLibWrapperService } from '../services/oauth-lib-wrapper.service';\nimport { AuthActions } from '../store/actions/index';\nimport { UserIdService } from './user-id.service';\n\n/**\n * Auth service for normal user authentication.\n * Use to check auth status, login/logout with different OAuth flows.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(\n    protected store: Store<StateWithClientAuth>,\n    protected userIdService: UserIdService,\n    protected oAuthLibWrapperService: OAuthLibWrapperService,\n    protected authStorageService: AuthStorageService,\n    protected authRedirectService: AuthRedirectService,\n    protected routingService: RoutingService\n  ) {}\n\n  /**\n   * Check params in url and if there is an code/token then try to login with those.\n   */\n  async checkOAuthParamsInUrl(): Promise<void> {\n    try {\n      const result = await this.oAuthLibWrapperService.tryLogin();\n      const token = this.authStorageService.getItem('access_token');\n      // We get the result in the code flow even if we did not logged in that why we also need to check if we have access_token\n      if (result && token) {\n        this.userIdService.setUserId(OCC_USER_ID_CURRENT);\n        this.store.dispatch(new AuthActions.Login());\n        this.authRedirectService.redirect();\n      }\n    } catch {}\n  }\n\n  /**\n   * Initialize Implicit/Authorization Code flow by redirecting to OAuth server.\n   */\n  loginWithRedirect(): boolean {\n    this.oAuthLibWrapperService.initLoginFlow();\n    return true;\n  }\n\n  /**\n   * Loads a new user token with Resource Owner Password Flow.\n   * @param userId\n   * @param password\n   */\n  async loginWithCredentials(userId: string, password: string): Promise<void> {\n    try {\n      await this.oAuthLibWrapperService.authorizeWithPasswordFlow(\n        userId,\n        password\n      );\n      // OCC specific user id handling. Customize when implementing different backend\n      this.userIdService.setUserId(OCC_USER_ID_CURRENT);\n\n      this.store.dispatch(new AuthActions.Login());\n\n      this.authRedirectService.redirect();\n    } catch {}\n  }\n\n  /**\n   * Revokes tokens and clears state for logged user (tokens, userId).\n   * To perform logout it is best to use `logout` method. Use this method with caution.\n   */\n  coreLogout(): Promise<any> {\n    this.userIdService.clearUserId();\n    return new Promise((resolve) => {\n      this.oAuthLibWrapperService.revokeAndLogout().finally(() => {\n        this.store.dispatch(new AuthActions.Logout());\n        resolve();\n      });\n    });\n  }\n\n  /**\n   * Returns `true` if the user is logged in; and `false` if the user is anonymous.\n   */\n  isUserLoggedIn(): Observable<boolean> {\n    return this.authStorageService.getToken().pipe(\n      map((userToken) => Boolean(userToken?.access_token)),\n      distinctUntilChanged()\n    );\n  }\n\n  /**\n   * Logout a storefront customer. It will initialize logout procedure by redirecting to the `logout` endpoint.\n   */\n  logout(): void {\n    this.routingService.go({ cxRoute: 'logout' });\n  }\n}\n","import { ErrorModel } from './misc.model';\n\nexport interface Country {\n  isocode?: string;\n  name?: string;\n}\n\nexport enum CountryType {\n  BILLING = 'BILLING',\n  SHIPPING = 'SHIPPING',\n}\n\nexport interface Region {\n  countryIso?: string;\n  isocode?: string;\n  isocodeShort?: string;\n  name?: string;\n}\n\nexport interface Address {\n  id?: string;\n\n  title?: string;\n  titleCode?: string;\n\n  email?: string;\n  firstName?: string;\n  lastName?: string;\n  companyName?: string;\n\n  line1?: string;\n  line2?: string;\n  postalCode?: string;\n  town?: string;\n  region?: Region;\n  district?: string;\n  country?: Country;\n  cellphone?: string;\n\n  defaultAddress?: boolean;\n  shippingAddress?: boolean;\n\n  formattedAddress?: string;\n  phone?: string;\n\n  visibleInAddressBook?: boolean;\n}\n\nexport interface AddressValidation {\n  decision?: string;\n  // TODO: Simplify with converter\n  errors?: { errors: ErrorModel[] };\n  suggestedAddresses?: Address[];\n}\n","import { Address } from './address.model';\nimport { Currency } from './misc.model';\nimport {\n  DeliveryMode,\n  OrderEntry,\n  PickupOrderEntryGroup,\n  PromotionOrderEntryConsumed,\n} from './order.model';\nimport { CostCenter } from './org-unit.model';\nimport { Price, Promotion } from './product.model';\n\nexport interface PromotionResult {\n  consumedEntries?: PromotionOrderEntryConsumed[];\n  description?: string;\n  promotion?: Promotion;\n}\n\nexport enum PromotionLocation {\n  ActiveCart = 'CART',\n  Checkout = 'CHECKOUT',\n  Order = 'ORDER',\n}\n\nexport enum B2BPaymentTypeEnum {\n  ACCOUNT_PAYMENT = 'ACCOUNT',\n  CARD_PAYMENT = 'CARD',\n}\n\nexport interface Voucher {\n  appliedValue?: Price;\n  code?: string;\n  currency?: Currency;\n  description?: string;\n  freeShipping?: boolean;\n  name?: string;\n  value?: number;\n  valueFormatted?: string;\n  valueString?: string;\n  voucherCode?: string;\n}\n\nexport interface DeliveryOrderEntryGroup {\n  deliveryAddress?: Address;\n  entries?: OrderEntry[];\n  quantity?: number;\n  totalPriceWithTax?: Price;\n}\n\nexport interface Principal {\n  name?: string;\n  uid?: string;\n}\n\nexport interface CardType {\n  code?: string;\n  name?: string;\n}\n\nexport interface PaymentType {\n  code?: string;\n  displayName?: string;\n}\n\nexport interface PaymentDetails {\n  accountHolderName?: string;\n  billingAddress?: Address;\n  cardNumber?: string;\n  cardType?: CardType;\n  cvn?: string;\n  defaultPayment?: boolean;\n  expiryMonth?: string;\n  expiryYear?: string;\n  id?: string;\n  issueNumber?: string;\n  saved?: boolean;\n  startMonth?: string;\n  startYear?: string;\n  subscriptionId?: string;\n}\n\nexport interface SaveCartResult {\n  savedCartData?: Cart;\n}\n\nexport interface Cart {\n  appliedOrderPromotions?: PromotionResult[];\n  appliedProductPromotions?: PromotionResult[];\n  appliedVouchers?: Voucher[];\n  calculated?: boolean;\n  code?: string;\n  costCenter?: CostCenter;\n  deliveryAddress?: Address;\n  deliveryCost?: Price;\n  deliveryItemsQuantity?: number;\n  deliveryMode?: DeliveryMode;\n  deliveryOrderGroups?: DeliveryOrderEntryGroup[];\n  description?: string;\n  entries?: OrderEntry[];\n  expirationTime?: Date;\n  guid?: string;\n  name?: string;\n  net?: boolean;\n  orderDiscounts?: Price;\n  paymentInfo?: PaymentDetails;\n  paymentType?: PaymentType;\n  pickupItemsQuantity?: number;\n  pickupOrderGroups?: PickupOrderEntryGroup[];\n  potentialOrderPromotions?: PromotionResult[];\n  potentialProductPromotions?: PromotionResult[];\n  productDiscounts?: Price;\n  purchaseOrderNumber?: string;\n  saveTime?: Date;\n  savedBy?: Principal;\n  site?: string;\n  store?: string;\n  subTotal?: Price;\n  totalDiscounts?: Price;\n  totalItems?: number;\n  totalPrice?: Price;\n  totalPriceWithTax?: Price;\n  totalTax?: Price;\n  totalUnitCount?: number;\n  user?: Principal;\n}\n\nexport interface CartModification {\n  deliveryModeChanged?: boolean;\n  entry?: OrderEntry;\n  quantity?: number;\n  quantityAdded?: number;\n  statusCode?: string;\n  statusMessage?: string;\n}\n","export interface CmsComponent {\n  modifiedTime?: Date;\n  name?: string;\n  otherProperties?: any;\n  typeCode?: string;\n  uid?: string;\n\n  /**\n   * Style classes can be added to the CMS banner component to enhance the UX.\n   * The style classes are typically derived from the (CMS) backend and should\n   * match an existing CSS selector.\n   *\n   * The styleClasses can contain a \"list\" of space separated style classes.\n   */\n  styleClasses?: string;\n}\n\nexport enum PageType {\n  CONTENT_PAGE = 'ContentPage',\n  PRODUCT_PAGE = 'ProductPage',\n  CATEGORY_PAGE = 'CategoryPage',\n  CATALOG_PAGE = 'CatalogPage',\n}\n\nexport interface CmsLinkComponent extends CmsComponent {\n  url?: string;\n  container?: boolean;\n  external?: boolean;\n  contentPage?: string;\n  contentPageLabelOrId?: string;\n  linkName?: string;\n  target?: string | boolean;\n\n  /**\n   * Style rules can be added to the CMS Link component to enhance the UX.\n   * The style attributes are typically derived from the (CMS) backend.\n   *\n   * The styleAttributes can contain a \"list\" of semicolon separated style rules.\n   */\n  styleAttributes?: string;\n}\n\nexport interface CmsSiteContextSelectorComponent extends CmsComponent {\n  context?: string;\n}\n\nexport interface CmsSearchBoxComponent extends CmsComponent {\n  container?: boolean;\n  maxSuggestions?: number;\n  maxProducts?: number;\n  displaySuggestions?: boolean;\n  displayProducts?: boolean;\n  displayProductImages?: boolean;\n  waitTimeBeforeRequest?: number;\n  minCharactersBeforeRequest?: number;\n}\n\nexport interface CmsParagraphComponent extends CmsComponent {\n  content?: string;\n  container?: string;\n  title?: string;\n}\n\nexport interface CMSTabParagraphContainer extends CmsComponent {\n  container?: string;\n  components?: string;\n}\n\nexport interface CmsBannerComponentMedia {\n  altText?: string;\n  code?: string;\n  mime?: string;\n  url?: string;\n}\n\nexport interface CmsResponsiveBannerComponentMedia {\n  desktop?: CmsBannerComponentMedia;\n  mobile?: CmsBannerComponentMedia;\n  tablet?: CmsBannerComponentMedia;\n  widescreen?: CmsBannerComponentMedia;\n}\n\nexport interface CmsBannerComponent extends CmsComponent {\n  headline?: string;\n  content?: string;\n  container?: string;\n  media?: CmsBannerComponentMedia | CmsResponsiveBannerComponentMedia;\n  urlLink?: string;\n  external?: string | boolean;\n}\n\nexport enum CmsBannerCarouselEffect {\n  FADE = 'FADE',\n  ZOOM = 'ZOOM',\n  CURTAIN = 'CURTAINX',\n  TURNDOWN = 'TURNDOWN',\n}\n\nexport interface CmsBannerCarouselComponent extends CmsComponent {\n  banners?: string;\n  effect?: CmsBannerCarouselEffect;\n}\n\nexport interface CmsProductCarouselComponent extends CmsComponent {\n  title?: string;\n  productCodes?: string;\n  container?: string;\n  popup?: string;\n  scroll?: string;\n}\n\nexport interface CmsProductReferencesComponent extends CmsComponent {\n  title?: string;\n  displayProductTitles?: string;\n  displayProductPrices?: string;\n  maximumNumberProducts?: number;\n  productReferenceTypes?: string;\n  container?: string;\n}\n\nexport interface CmsMiniCartComponent extends CmsComponent {\n  container?: string;\n  shownProductCount?: string;\n  title?: string;\n  totalDisplay?: string;\n  lightboxBannerComponent?: CmsBannerComponent;\n}\n\n// TODO: Upgrade model when Breadcrumbs will be finally used in project\nexport interface CmsBreadcrumbsComponent extends CmsComponent {\n  container?: string;\n}\n\nexport interface CmsNavigationNode {\n  uid?: string;\n  title?: string;\n  children?: Array<CmsNavigationNode>;\n  entries?: Array<CmsNavigationEntry>;\n}\n\nexport interface CmsNavigationEntry {\n  itemId?: string;\n  itemSuperType?: string;\n  itemType?: string;\n}\n\nexport interface CmsNavigationComponent extends CmsComponent {\n  container?: string;\n  styleClass?: string;\n  wrapAfter?: string;\n  notice?: string;\n  showLanguageCurrency?: string;\n  navigationNode?: CmsNavigationNode;\n}\n\nexport interface CmsProductFacetNavigationComponent extends CmsComponent {\n  container?: string;\n  activeFacetValueCode?: string;\n  searchResult?: string;\n  minPerFacet?: string;\n}\n","export interface ConsentTemplate {\n  id?: string;\n  name?: string;\n  description?: string;\n  version?: number;\n  currentConsent?: Consent;\n}\n\nexport interface Consent {\n  code?: string;\n  consentGivenDate?: Date;\n  consentWithdrawnDate?: Date;\n}\n\nexport interface AnonymousConsent {\n  templateCode?: string;\n  templateVersion?: number;\n  consentState?: ANONYMOUS_CONSENT_STATUS;\n}\n\nexport enum ANONYMOUS_CONSENT_STATUS {\n  GIVEN = 'GIVEN',\n  WITHDRAWN = 'WITHDRAWN',\n}\n\nexport const ANONYMOUS_CONSENTS_HEADER = 'X-Anonymous-Consents';\n","export interface Images {\n  [imageType: string]: ImageGroup | ImageGroup[];\n}\n\nexport interface Image {\n  altText?: string;\n  format?: string;\n  galleryIndex?: number;\n  imageType?: ImageType;\n  url?: string;\n}\n\nexport enum ImageType {\n  PRIMARY = 'PRIMARY',\n  GALLERY = 'GALLERY',\n}\n\nexport interface ImageGroup {\n  [format: string]: Image;\n}\n","import { Address } from './address.model';\nimport { User } from './misc.model';\n\n// TODO(#8876): Should we simplify the models only for the fields required by the B2B checkout?\nexport interface CostCenter {\n  active?: boolean;\n  code?: string;\n  name?: string;\n  unit?: B2BUnit;\n}\n\nexport enum B2BUserRole {\n  ADMIN = 'b2badmingroup',\n  CUSTOMER = 'b2bcustomergroup',\n  MANAGER = 'b2bmanagergroup',\n  APPROVER = 'b2bapprovergroup',\n}\n\nexport interface B2BUnit {\n  active?: boolean;\n  addresses?: Address[];\n  uid?: string;\n  name?: string;\n}\n\nexport interface B2BUser extends User {\n  active?: boolean;\n}\n\nexport interface B2BApprovalProcess {\n  code?: string;\n  name?: string;\n}\n\nexport interface OrderApprovalPermissionType {\n  code?: string;\n  name?: string;\n}\n","import { Product } from './product.model';\nimport { Pagination, Sort } from './unused.model';\n\nexport interface ProductInterestEntry {\n  interestType?: NotificationType;\n  dateAdded?: string;\n  expirationDate?: string;\n}\n\nexport interface ProductInterestEntryRelation {\n  product?: Product;\n  productInterestEntry?: ProductInterestEntry[];\n}\n\nexport interface ProductInterestSearchResult {\n  results?: ProductInterestEntryRelation[];\n  sorts?: Sort[];\n  pagination?: Pagination;\n}\n\nexport enum NotificationType {\n  BACK_IN_STOCK = 'BACK_IN_STOCK',\n}\n","import { Image, Images } from './image.model';\nimport { User } from './misc.model';\n\nexport interface VariantOptionQualifier {\n  image?: Image;\n  name?: string;\n  qualifier?: VariantQualifier;\n  value?: string;\n}\n\nexport interface PromotionRestriction {\n  description?: string;\n  restrictionType?: string;\n}\n\nexport interface FeatureUnit {\n  name?: string;\n  symbol?: string;\n  unitType?: string;\n}\n\nexport interface FeatureValue {\n  value?: string;\n}\n\nexport interface Feature {\n  code?: string;\n  comparable?: boolean;\n  description?: string;\n  featureUnit?: FeatureUnit;\n  featureValues?: FeatureValue[];\n  name?: string;\n  range?: boolean;\n  type?: string;\n}\n\nexport interface VariantCategory {\n  hasImage?: boolean;\n  name?: string;\n  priority?: number;\n}\n\nexport interface VariantValueCategory {\n  name?: string;\n  sequence?: number;\n  superCategories?: VariantCategory[];\n}\n\nexport enum VariantType {\n  SIZE = 'ApparelSizeVariantProduct',\n  STYLE = 'ApparelStyleVariantProduct',\n  COLOR = 'ElectronicsColorVariantProduct',\n}\n\nexport enum PriceType {\n  BUY = 'BUY',\n  FROM = 'FROM',\n}\n\nexport interface Price {\n  currencyIso?: string;\n  formattedValue?: string;\n  maxQuantity?: number;\n  minQuantity?: number;\n  priceType?: PriceType;\n  value?: number;\n}\n\nexport interface Stock {\n  stockLevel?: number;\n  stockLevelStatus?: string;\n}\n\nexport interface VariantOption {\n  code?: string;\n  priceData?: Price;\n  stock?: Stock;\n  url?: string;\n  variantOptionQualifiers?: VariantOptionQualifier[];\n}\n\nexport interface Promotion {\n  code?: string;\n  couldFireMessages?: string[];\n  description?: string;\n  enabled?: boolean;\n  endDate?: Date;\n  firedMessages?: string[];\n  priority?: number;\n  productBanner?: Image;\n  promotionGroup?: string;\n  promotionType?: string;\n  restrictions?: PromotionRestriction[];\n  startDate?: Date;\n  title?: string;\n}\n\nexport interface Category {\n  code?: string;\n  name?: string;\n  image?: Image;\n  url?: string;\n}\n\nexport interface Classification {\n  code?: string;\n  features?: Feature[];\n  name?: string;\n}\n\nexport interface FutureStock {\n  date?: Date;\n  formattedDate?: string;\n  stock?: Stock;\n}\n\nexport interface PriceRange {\n  maxPrice?: Price;\n  minPrice?: Price;\n}\n\nexport interface ProductReference {\n  description?: string;\n  preselected?: boolean;\n  quantity?: number;\n  referenceType?: string;\n  target?: Product;\n}\n\nexport interface Review {\n  alias?: string;\n  comment?: string;\n  date?: Date;\n  headline?: string;\n  id?: string;\n  principal?: User;\n  rating?: number;\n}\n\nexport interface VariantMatrixElement {\n  elements?: VariantMatrixElement[];\n  isLeaf?: boolean;\n  parentVariantCategory?: VariantCategory;\n  variantOption?: VariantOption;\n  variantValueCategory?: VariantValueCategory;\n}\n\nexport interface ProductReferences {\n  [referenceType: string]: ProductReference[];\n}\n\nexport interface BaseOption {\n  options?: VariantOption[];\n  selected?: VariantOption;\n  variantType?: VariantType;\n}\n\nexport interface Product {\n  availableForPickup?: boolean;\n  averageRating?: number;\n  baseOptions?: BaseOption[];\n  baseProduct?: string;\n  categories?: Category[];\n  classifications?: Classification[];\n  code?: string;\n  description?: string;\n  futureStocks?: FutureStock[];\n  images?: Images;\n  manufacturer?: string;\n  multidimensional?: boolean;\n  name?: string;\n  nameHtml?: string;\n  numberOfReviews?: number;\n  potentialPromotions?: Promotion[];\n  price?: Price;\n  priceRange?: PriceRange;\n  productReferences?: ProductReferences;\n  purchasable?: boolean;\n  reviews?: Review[];\n  stock?: Stock;\n  summary?: string;\n  url?: string;\n  variantMatrix?: VariantMatrixElement[];\n  variantOptions?: VariantOption[];\n  variantType?: VariantType;\n  volumePrices?: Price[];\n  volumePricesFlag?: boolean;\n}\n\nexport enum VariantQualifier {\n  SIZE = 'size',\n  STYLE = 'style',\n  COLOR = 'color',\n  THUMBNAIL = 'thumbnail',\n  PRODUCT = 'product',\n  ROLLUP_PROPERTY = 'rollupProperty',\n}\n","import { Address } from './address.model';\nimport {\n  DeliveryOrderEntryGroup,\n  PaymentDetails,\n  PaymentType,\n  Principal,\n  PromotionResult,\n  Voucher,\n} from './cart.model';\nimport { PaginationModel, SortModel } from './misc.model';\nimport { DeliveryMode, OrderEntry, PickupOrderEntryGroup } from './order.model';\nimport { CostCenter } from './org-unit.model';\nimport { Price } from './product.model';\n\nexport interface ReplenishmentOrder {\n  active?: boolean;\n  appliedOrderPromotions?: PromotionResult[];\n  appliedProductPromotions?: PromotionResult[];\n  appliedVouchers?: Voucher[];\n  calculated?: boolean;\n  code?: string;\n  costCenter?: CostCenter;\n  deliveryAddress?: Address;\n  deliveryCost?: Price;\n  deliveryItemsQuantity?: number;\n  deliveryMode?: DeliveryMode;\n  deliveryOrderGroups?: DeliveryOrderEntryGroup[];\n  description?: string;\n  entries?: OrderEntry[];\n  expirationTime?: string;\n  firstDate?: string;\n  guid?: string;\n  name?: string;\n  net?: boolean;\n  orderDiscounts?: Price;\n  paymentInfo?: PaymentDetails;\n  paymentStatus?: string;\n  paymentType?: PaymentType;\n  pickupItemsQuantity?: number;\n  pickupOrderGroups?: PickupOrderEntryGroup[];\n  potentialOrderPromotions?: PromotionResult[];\n  potentialProductPromotions?: PromotionResult[];\n  productDiscounts?: Price;\n  purchaseOrderNumber?: string;\n  replenishmentOrderCode?: string;\n  saveTime?: string;\n  savedBy?: Principal;\n  site?: string;\n  store?: string;\n  subTotal?: Price;\n  totalDiscounts?: Price;\n  totalItems?: number;\n  totalPrice?: Price;\n  totalPriceWithTax?: Price;\n  totalTax?: Price;\n  totalUnitCount?: number;\n  trigger?: Trigger;\n  user?: Principal;\n}\n\nexport interface ReplenishmentOrderList {\n  replenishmentOrders?: ReplenishmentOrder[];\n  pagination?: PaginationModel;\n  sorts?: SortModel[];\n}\n\nexport interface Trigger {\n  activationTime?: string;\n  displayTimeTable?: string;\n}\n\nexport interface ScheduleReplenishmentForm {\n  daysOfWeek?: DaysOfWeek[];\n  nthDayOfMonth?: string;\n  numberOfDays?: string;\n  numberOfWeeks?: string;\n  recurrencePeriod?: string;\n  replenishmentStartDate?: string;\n}\n\nexport enum DaysOfWeek {\n  MONDAY = 'MONDAY',\n  TUESDAY = 'TUESDAY',\n  WEDNESDAY = 'WEDNESDAY',\n  THURSDAY = 'THURSDAY',\n  FRIDAY = 'FRIDAY',\n  SATURDAY = 'SATURDAY',\n  SUNDAY = 'SUNDAY',\n}\n\nexport const recurrencePeriod = {\n  DAILY: 'DAILY',\n  WEEKLY: 'WEEKLY',\n  MONTHLY: 'MONTHLY',\n};\n\nexport enum ORDER_TYPE {\n  PLACE_ORDER = 'PLACE_ORDER',\n  SCHEDULE_REPLENISHMENT_ORDER = 'SCHEDULE_REPLENISHMENT_ORDER',\n}\n","import { Action } from '@ngrx/store';\n\nexport const ENTITY_REMOVE_ACTION = '[ENTITY] REMOVE';\nexport const ENTITY_REMOVE_ALL_ACTION = '[ENTITY] REMOVE ALL';\n\nexport interface EntityMeta {\n  entityType: string;\n  entityId: string | string[];\n  entityRemove?: boolean;\n}\n\nexport function entityMeta(type: string, id: string | string[]): EntityMeta {\n  return {\n    entityType: type,\n    entityId: id,\n  };\n}\n\nexport function entityRemoveMeta(\n  type: string,\n  id: string | string[]\n): EntityMeta {\n  return {\n    entityId: id,\n    entityType: type,\n    entityRemove: true,\n  };\n}\n\nexport function entityRemoveAllMeta(type: string): EntityMeta {\n  return {\n    entityId: null,\n    entityType: type,\n    entityRemove: true,\n  };\n}\n\nexport interface EntityAction extends Action {\n  readonly payload?: any;\n  readonly meta?: EntityMeta;\n}\n\nexport class EntityRemoveAction implements EntityAction {\n  type = ENTITY_REMOVE_ACTION;\n  readonly meta: EntityMeta;\n  constructor(entityType: string, id: string | string[]) {\n    this.meta = entityRemoveMeta(entityType, id);\n  }\n}\n\nexport class EntityRemoveAllAction implements EntityAction {\n  type = ENTITY_REMOVE_ALL_ACTION;\n  readonly meta: EntityMeta;\n  constructor(entityType: string) {\n    this.meta = entityRemoveAllMeta(entityType);\n  }\n}\n","import { Action } from '@ngrx/store';\n\nexport const LOADER_LOAD_ACTION = '[LOADER] LOAD';\nexport const LOADER_FAIL_ACTION = '[LOADER] FAIL';\nexport const LOADER_SUCCESS_ACTION = '[LOADER] SUCCESS';\nexport const LOADER_RESET_ACTION = '[LOADER] RESET';\n\nexport interface LoaderMeta {\n  entityType: string;\n  loader: {\n    load?: boolean;\n    error?: any;\n    success?: boolean;\n  };\n}\n\nexport interface LoaderAction extends Action {\n  readonly payload?: any;\n  readonly meta?: LoaderMeta;\n}\n\nexport function loadMeta(entityType: string): LoaderMeta {\n  return {\n    entityType: entityType,\n    loader: {\n      load: true,\n    },\n  };\n}\n\nexport function failMeta(entityType: string, error?: any): LoaderMeta {\n  return {\n    entityType: entityType,\n    loader: {\n      error: error ? error : true,\n    },\n  };\n}\n\nexport function successMeta(entityType: string): LoaderMeta {\n  return {\n    entityType: entityType,\n    loader: {\n      success: true,\n    },\n  };\n}\n\nexport function resetMeta(entityType: string): LoaderMeta {\n  return {\n    entityType: entityType,\n    loader: {},\n  };\n}\nexport class LoaderLoadAction implements LoaderAction {\n  type = LOADER_LOAD_ACTION;\n  readonly meta: LoaderMeta;\n  constructor(entityType: string) {\n    this.meta = loadMeta(entityType);\n  }\n}\n\nexport class LoaderFailAction implements LoaderAction {\n  type = LOADER_FAIL_ACTION;\n  readonly meta: LoaderMeta;\n  constructor(entityType: string, error?: any) {\n    this.meta = failMeta(entityType, error);\n  }\n}\n\nexport class LoaderSuccessAction implements LoaderAction {\n  type = LOADER_SUCCESS_ACTION;\n  readonly meta: LoaderMeta;\n  constructor(entityType: string) {\n    this.meta = successMeta(entityType);\n  }\n}\n\nexport class LoaderResetAction implements LoaderAction {\n  type = LOADER_RESET_ACTION;\n  readonly meta: LoaderMeta;\n  constructor(entityType: string) {\n    this.meta = resetMeta(entityType);\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { entityMeta, EntityMeta } from '../entity/entity.action';\nimport {\n  failMeta,\n  LoaderMeta,\n  loadMeta,\n  resetMeta,\n  successMeta,\n} from '../loader/loader.action';\n\nexport const ENTITY_LOAD_ACTION = '[ENTITY] LOAD';\nexport const ENTITY_FAIL_ACTION = '[ENTITY] LOAD FAIL';\nexport const ENTITY_SUCCESS_ACTION = '[ENTITY] LOAD SUCCESS';\nexport const ENTITY_RESET_ACTION = '[ENTITY] RESET';\n\nexport interface EntityLoaderMeta extends EntityMeta, LoaderMeta {}\n\nexport interface EntityLoaderAction extends Action {\n  readonly payload?: any;\n  readonly meta?: EntityLoaderMeta;\n}\n\nexport function entityLoadMeta(\n  entityType: string,\n  id: string | string[]\n): EntityLoaderMeta {\n  return {\n    ...loadMeta(entityType),\n    ...entityMeta(entityType, id),\n  };\n}\n\nexport function entityFailMeta(\n  entityType: string,\n  id: string | string[],\n  error?: any\n): EntityLoaderMeta {\n  return {\n    ...failMeta(entityType, error),\n    ...entityMeta(entityType, id),\n  };\n}\n\nexport function entitySuccessMeta(\n  entityType: string,\n  id: string | string[]\n): EntityLoaderMeta {\n  return {\n    ...successMeta(entityType),\n    ...entityMeta(entityType, id),\n  };\n}\n\nexport function entityResetMeta(\n  entityType: string,\n  id: string | string[]\n): EntityLoaderMeta {\n  return {\n    ...resetMeta(entityType),\n    ...entityMeta(entityType, id),\n  };\n}\n\nexport class EntityLoadAction implements EntityLoaderAction {\n  type = ENTITY_LOAD_ACTION;\n  readonly meta: EntityLoaderMeta;\n  constructor(entityType: string, id: string | string[]) {\n    this.meta = entityLoadMeta(entityType, id);\n  }\n}\n\nexport class EntityFailAction implements EntityLoaderAction {\n  type = ENTITY_FAIL_ACTION;\n  readonly meta: EntityLoaderMeta;\n  constructor(entityType: string, id: string | string[], error?: any) {\n    this.meta = entityFailMeta(entityType, id, error);\n  }\n}\n\nexport class EntitySuccessAction implements EntityLoaderAction {\n  type = ENTITY_SUCCESS_ACTION;\n  readonly meta: EntityLoaderMeta;\n  constructor(entityType: string, id: string | string[], public payload?: any) {\n    this.meta = entitySuccessMeta(entityType, id);\n  }\n}\n\nexport class EntityLoaderResetAction implements EntityLoaderAction {\n  type = ENTITY_RESET_ACTION;\n  readonly meta: EntityLoaderMeta;\n  constructor(entityType: string, id: string | string[]) {\n    this.meta = entityResetMeta(entityType, id);\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { LoaderState } from './loader-state';\nimport { LoaderAction } from './loader.action';\n\nexport const initialLoaderState: LoaderState<any> = {\n  loading: false,\n  error: false,\n  success: false,\n  value: undefined,\n};\n\n/**\n * Higher order reducer that adds generic loading flag to chunk of the state\n *\n * Utilizes \"loader\" meta field of actions to set specific flags for specific\n * action (LOAD, SUCCESS, FAIL, RESET)\n */\nexport function loaderReducer<T>(\n  entityType: string,\n  reducer?: (state: T, action: Action) => T\n): (state: LoaderState<T>, action: LoaderAction) => LoaderState<T> {\n  return (\n    state: LoaderState<T> = initialLoaderState,\n    action: LoaderAction\n  ): LoaderState<T> => {\n    if (\n      action.meta &&\n      action.meta.loader &&\n      action.meta.entityType === entityType\n    ) {\n      const entity = action.meta.loader;\n\n      if (entity.load) {\n        return {\n          ...state,\n          loading: true,\n          value: reducer ? reducer(state.value, action) : state.value,\n        };\n      } else if (entity.error) {\n        return {\n          ...state,\n          loading: false,\n          error: true,\n          success: false,\n          value: reducer ? reducer(state.value, action) : undefined,\n        };\n      } else if (entity.success) {\n        return {\n          ...state,\n          value: reducer ? reducer(state.value, action) : action.payload,\n          loading: false,\n          error: false,\n          success: true,\n        };\n      } else {\n        // reset state action\n        return {\n          ...initialLoaderState,\n          value: reducer\n            ? reducer(initialLoaderState.value, action)\n            : initialLoaderState.value,\n        };\n      }\n    }\n\n    if (reducer) {\n      const newValue = reducer(state.value, action);\n      if (newValue !== state.value) {\n        return { ...state, value: newValue };\n      }\n    }\n    return state;\n  };\n}\n","import { LoaderState } from './loader-state';\n\nexport function loaderValueSelector<T>(state: LoaderState<T>): T {\n  return state.value;\n}\n\nexport function loaderLoadingSelector<T>(state: LoaderState<T>): boolean {\n  return state.loading;\n}\n\nexport function loaderErrorSelector<T>(state: LoaderState<T>): boolean {\n  return state.error;\n}\n\nexport function loaderSuccessSelector<T>(state: LoaderState<T>): boolean {\n  return state.success;\n}\n","import { LoaderState } from '../loader/loader-state';\nimport { initialLoaderState } from '../loader/loader.reducer';\nimport { EntityLoaderState } from './entity-loader-state';\nimport {\n  loaderValueSelector,\n  loaderLoadingSelector,\n  loaderErrorSelector,\n  loaderSuccessSelector,\n} from '../loader';\n\nexport function entityLoaderStateSelector<T>(\n  state: EntityLoaderState<T>,\n  id: string\n): LoaderState<T> {\n  return state.entities[id] || initialLoaderState;\n}\n\nexport function entityValueSelector<T>(\n  state: EntityLoaderState<T>,\n  id: string\n): T {\n  const entityState = entityLoaderStateSelector(state, id);\n  return loaderValueSelector(entityState);\n}\n\nexport function entityLoadingSelector<T>(\n  state: EntityLoaderState<T>,\n  id: string\n): boolean {\n  const entityState = entityLoaderStateSelector(state, id);\n  return loaderLoadingSelector(entityState);\n}\n\nexport function entityErrorSelector<T>(\n  state: EntityLoaderState<T>,\n  id: string\n): boolean {\n  const entityState = entityLoaderStateSelector(state, id);\n  return loaderErrorSelector(entityState);\n}\n\nexport function entitySuccessSelector<T>(\n  state: EntityLoaderState<T>,\n  id: string\n): boolean {\n  const entityState = entityLoaderStateSelector(state, id);\n  return loaderSuccessSelector(entityState);\n}\n","import { Action } from '@ngrx/store';\n\nimport { EntityState } from './entity-state';\nimport { EntityAction } from './entity.action';\n\nexport const initialEntityState: EntityState<any> = { entities: {} };\n\n/**\n * Higher order reducer for reusing reducer logic for multiple entities\n *\n * Utilizes entityId meta field to target entity by id in actions\n */\nexport function entityReducer<T>(\n  entityType: string,\n  reducer: (state: T, action: Action) => T\n) {\n  return (\n    state: EntityState<T> = initialEntityState,\n    action: EntityAction\n  ): EntityState<T> => {\n    let ids: string[];\n    let partitionPayload = false;\n    if (\n      action.meta &&\n      action.meta.entityType === entityType &&\n      action.meta.entityId !== undefined\n    ) {\n      ids = [].concat(action.meta.entityId);\n\n      // remove selected entities\n      if (action.meta.entityRemove) {\n        if (action.meta.entityId === null) {\n          return initialEntityState;\n        } else {\n          let removed = false;\n          const newEntities = Object.keys(state.entities).reduce((acc, cur) => {\n            if (ids.includes(cur)) {\n              removed = true;\n            } else {\n              acc[cur] = state.entities[cur];\n            }\n            return acc;\n          }, {});\n\n          return removed ? { entities: newEntities } : state;\n        }\n      }\n\n      partitionPayload =\n        Array.isArray(action.meta.entityId) && Array.isArray(action.payload);\n    } else {\n      ids = Object.keys(state.entities);\n    }\n\n    const entityUpdates: { [id: string]: T } = {};\n\n    for (let i = 0; i < ids.length; i++) {\n      const id = ids[i];\n      const subAction = partitionPayload\n        ? { ...action, payload: action.payload[i] }\n        : action;\n      const newState = reducer(state.entities[id], subAction);\n      if (newState) {\n        entityUpdates[id] = newState;\n      }\n    }\n\n    if (Object.keys(entityUpdates).length > 0) {\n      return {\n        ...state,\n        entities: { ...state.entities, ...entityUpdates },\n      };\n    }\n\n    return state;\n  };\n}\n","import { entityReducer } from '../entity/entity.reducer';\nimport { loaderReducer } from '../loader/loader.reducer';\nimport { LoaderAction } from '../loader/loader.action';\nimport { EntityLoaderState } from './entity-loader-state';\nimport { EntityLoaderAction } from './entity-loader.action';\n\n/**\n * Higher order reducer that wraps LoaderReducer and EntityReducer enhancing\n * single state reducer to support multiple entities with generic loading flags\n */\nexport function entityLoaderReducer<T>(\n  entityType: string,\n  reducer?: (state: T, action: LoaderAction) => T\n): (\n  state: EntityLoaderState<T>,\n  action: EntityLoaderAction\n) => EntityLoaderState<T> {\n  return entityReducer(entityType, loaderReducer(entityType, reducer));\n}\n","import { Action } from '@ngrx/store';\nimport {\n  LoaderMeta,\n  resetMeta as loaderResetMeta,\n} from '../loader/loader.action';\n\nexport const PROCESSES_INCREMENT_ACTION = '[PROCESSES LOADER] INCREMENT';\nexport const PROCESSES_DECREMENT_ACTION = '[PROCESSES LOADER] DECREMENT';\nexport const PROCESSES_LOADER_RESET_ACTION = '[PROCESSES LOADER] RESET';\n\nexport interface ProcessesLoaderMeta extends LoaderMeta {\n  entityType: string;\n  processesCountDiff?: number;\n}\n\nexport interface ProcessesLoaderAction extends Action {\n  readonly payload?: any;\n  readonly meta?: ProcessesLoaderMeta;\n}\n\nexport function processesIncrementMeta(\n  entityType: string\n): ProcessesLoaderMeta {\n  return {\n    entityType: entityType,\n    loader: undefined,\n    processesCountDiff: 1,\n  };\n}\n\nexport function processesDecrementMeta(\n  entityType: string\n): ProcessesLoaderMeta {\n  return {\n    entityType: entityType,\n    loader: undefined,\n    processesCountDiff: -1,\n  };\n}\n\nexport function processesLoaderResetMeta(\n  entityType: string\n): ProcessesLoaderMeta {\n  // processes reset action is a reset action for loader reducer, but not the other way around\n  return {\n    ...loaderResetMeta(entityType),\n    processesCountDiff: null,\n  };\n}\n\nexport class ProcessesLoaderResetAction implements ProcessesLoaderAction {\n  type = PROCESSES_LOADER_RESET_ACTION;\n  readonly meta: ProcessesLoaderMeta;\n  constructor(entityType: string) {\n    this.meta = processesLoaderResetMeta(entityType);\n  }\n}\n\nexport class ProcessesIncrementAction implements ProcessesLoaderAction {\n  type = PROCESSES_INCREMENT_ACTION;\n  readonly meta: ProcessesLoaderMeta;\n  constructor(entityType: string) {\n    this.meta = processesIncrementMeta(entityType);\n  }\n}\n\nexport class ProcessesDecrementAction implements ProcessesLoaderAction {\n  type = PROCESSES_DECREMENT_ACTION;\n  readonly meta: ProcessesLoaderMeta;\n  constructor(entityType: string) {\n    this.meta = processesDecrementMeta(entityType);\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { entityMeta, EntityMeta } from '../entity/entity.action';\nimport {\n  processesDecrementMeta,\n  processesIncrementMeta,\n  ProcessesLoaderMeta,\n  processesLoaderResetMeta,\n} from '../processes-loader/processes-loader.action';\n\nexport const ENTITY_PROCESSES_LOADER_RESET_ACTION =\n  '[ENTITY] PROCESSES LOADER RESET';\nexport const ENTITY_PROCESSES_INCREMENT_ACTION = '[ENTITY] PROCESSES INCREMENT';\nexport const ENTITY_PROCESSES_DECREMENT_ACTION = '[ENTITY] PROCESSES DECREMENT';\n\nexport interface EntityProcessesLoaderMeta\n  extends EntityMeta,\n    ProcessesLoaderMeta {}\n\nexport interface EntityProcessesLoaderAction extends Action {\n  readonly payload?: any;\n  readonly meta?: EntityProcessesLoaderMeta;\n}\n\nexport function entityProcessesLoaderResetMeta(\n  entityType: string,\n  id: string | string[]\n): EntityProcessesLoaderMeta {\n  return {\n    ...processesLoaderResetMeta(entityType),\n    ...entityMeta(entityType, id),\n  };\n}\n\nexport function entityProcessesIncrementMeta(\n  entityType: string,\n  id: string | string[]\n): EntityProcessesLoaderMeta {\n  return {\n    ...processesIncrementMeta(entityType),\n    ...entityMeta(entityType, id),\n  };\n}\n\nexport function entityProcessesDecrementMeta(\n  entityType: string,\n  id: string | string[]\n): EntityProcessesLoaderMeta {\n  return {\n    ...processesDecrementMeta(entityType),\n    ...entityMeta(entityType, id),\n  };\n}\n\nexport class EntityProcessesLoaderResetAction\n  implements EntityProcessesLoaderAction {\n  type = ENTITY_PROCESSES_LOADER_RESET_ACTION;\n  readonly meta: EntityProcessesLoaderMeta;\n  constructor(entityType: string, id: string | string[]) {\n    this.meta = entityProcessesLoaderResetMeta(entityType, id);\n  }\n}\n\nexport class EntityProcessesIncrementAction\n  implements EntityProcessesLoaderAction {\n  type = ENTITY_PROCESSES_INCREMENT_ACTION;\n  readonly meta: EntityProcessesLoaderMeta;\n  constructor(entityType: string, id: string | string[]) {\n    this.meta = entityProcessesIncrementMeta(entityType, id);\n  }\n}\n\nexport class EntityProcessesDecrementAction\n  implements EntityProcessesLoaderAction {\n  type = ENTITY_PROCESSES_DECREMENT_ACTION;\n  readonly meta: EntityProcessesLoaderMeta;\n  constructor(entityType: string, id: string | string[]) {\n    this.meta = entityProcessesDecrementMeta(entityType, id);\n  }\n}\n","import { ProcessesLoaderState } from './processes-loader-state';\n\nexport function isStableSelector<T>(state: ProcessesLoaderState<T>): boolean {\n  return state.processesCount === 0 && !state.loading;\n}\n\nexport function hasPendingProcessesSelector<T>(\n  state: ProcessesLoaderState<T>\n): boolean {\n  return state.processesCount > 0;\n}\n","import { isDevMode } from '@angular/core';\nimport { Action } from '@ngrx/store';\nimport { initialLoaderState, loaderReducer } from '../loader/loader.reducer';\nimport { ProcessesLoaderState } from './processes-loader-state';\nimport { ProcessesLoaderAction } from './processes-loader.action';\n\nexport const initialProcessesState: ProcessesLoaderState<any> = {\n  processesCount: 0,\n};\n\n/**\n * Higher order reducer that adds processes count\n */\nexport function processesLoaderReducer<T>(\n  entityType: string,\n  reducer?: (state: T, action: Action) => T\n): (\n  state: ProcessesLoaderState<T>,\n  action: ProcessesLoaderAction\n) => ProcessesLoaderState<T> {\n  return (\n    state: ProcessesLoaderState<T> = {\n      ...initialProcessesState,\n      ...initialLoaderState,\n    },\n    action: ProcessesLoaderAction\n  ): ProcessesLoaderState<T> => {\n    const loaderState = loaderReducer(entityType, reducer)(state, action);\n    if (action.meta && action.meta.entityType === entityType) {\n      const processesCountDiff = action.meta.processesCountDiff;\n      if (isDevMode() && state.processesCount + processesCountDiff < 0) {\n        console.error(\n          `Action '${action.type}' sets processesCount to value < 0!\\n` +\n            'Make sure to keep processesCount in sync.\\n' +\n            'There should always be only one decrement action for each increment action.\\n' +\n            \"Make sure that you don't reset state in between those actions.\\n\",\n          action\n        );\n      }\n      if (processesCountDiff) {\n        return {\n          ...loaderState,\n          processesCount: state.processesCount\n            ? state.processesCount + processesCountDiff\n            : processesCountDiff,\n        };\n      } else if (processesCountDiff === null) {\n        // reset action\n        return {\n          ...loaderState,\n          ...initialProcessesState,\n        };\n      }\n    }\n\n    return loaderState;\n  };\n}\n","import { entityLoaderStateSelector } from '../entity-loader/entity-loader.selectors';\nimport { initialLoaderState } from '../loader/loader.reducer';\nimport {\n  initialProcessesState,\n  ProcessesLoaderState,\n} from '../processes-loader';\nimport {\n  hasPendingProcessesSelector,\n  isStableSelector,\n} from '../processes-loader/processes-loader.selectors';\nimport { EntityProcessesLoaderState } from './entity-processes-loader-state';\n\nconst initialProcessesLoaderState = {\n  ...initialLoaderState,\n  ...initialProcessesState,\n};\n\nexport function entityHasPendingProcessesSelector<T>(\n  state: EntityProcessesLoaderState<T>,\n  id: string\n): boolean {\n  const entityState = entityLoaderStateSelector(state, id);\n  return hasPendingProcessesSelector(entityState);\n}\n\nexport function entityIsStableSelector<T>(\n  state: EntityProcessesLoaderState<T>,\n  id: string\n): boolean {\n  const entityState = entityLoaderStateSelector(state, id);\n  return isStableSelector(entityState);\n}\n\nexport function entityProcessesLoaderStateSelector<T>(\n  state: EntityProcessesLoaderState<T>,\n  id: string\n): ProcessesLoaderState<T> {\n  return state.entities[id] || initialProcessesLoaderState;\n}\n","import { entityReducer } from '../entity/entity.reducer';\nimport { processesLoaderReducer } from '../processes-loader';\nimport { ProcessesLoaderAction } from '../processes-loader/processes-loader.action';\nimport { EntityProcessesLoaderState } from './entity-processes-loader-state';\nimport { EntityProcessesLoaderAction } from './entity-processes-loader.action';\n\n/**\n * Higher order reducer that wraps ProcessesLoaderReducer and EntityReducer enhancing\n * single state reducer to support multiple entities with generic processesCount flag\n */\nexport function entityProcessesLoaderReducer<T>(\n  entityType: string,\n  reducer?: (state: T, action: ProcessesLoaderAction) => T\n): (\n  state: EntityProcessesLoaderState<T>,\n  action: EntityProcessesLoaderAction\n) => EntityProcessesLoaderState<T> {\n  return entityReducer(entityType, processesLoaderReducer(entityType, reducer));\n}\n","import { EntityState } from './entity-state';\n\nexport function entitySelector<T>(state: EntityState<T>, id: string): T {\n  return state.entities[id] || undefined;\n}\n","import { deepMerge } from '../../config/utils/deep-merge';\nimport { StateTransferType, StorageSyncType } from '../config/state-config';\n\nconst OBJECT_SEPARATOR = '.';\n\nexport function getStateSliceValue<T, E>(keys: string, state: T): E {\n  return keys\n    .split(OBJECT_SEPARATOR)\n    .reduce(\n      (previous, current) => (previous ? previous[current] : undefined),\n      state\n    );\n}\n\nexport function createShellObject<T, E>(\n  key: string,\n  excludeKeys: string[],\n  value: T\n): E {\n  if (!key || !value || Object.keys(value).length === 0) {\n    return {} as E;\n  }\n\n  const shell = key.split(OBJECT_SEPARATOR).reduceRight((acc, previous) => {\n    return ({ [previous]: acc } as unknown) as T;\n  }, value);\n  return handleExclusions(key, excludeKeys, shell);\n}\n\nexport function getStateSlice<T, E>(\n  keys: string[],\n  excludeKeys: string[],\n  state: T\n): E {\n  if (keys && keys.length === 0) {\n    return {} as E;\n  }\n\n  let stateSlices = {};\n  for (const currentKey of keys) {\n    const stateValue = getStateSliceValue(currentKey, state);\n    const shell = createShellObject(currentKey, excludeKeys, stateValue);\n    stateSlices = deepMerge(stateSlices, shell);\n  }\n\n  return stateSlices as E;\n}\n\nexport function handleExclusions(\n  key: string,\n  excludeKeys: string[],\n  value: any\n): any {\n  const exclusionKeys = getExclusionKeys(key, excludeKeys);\n  if (exclusionKeys.length === 0) {\n    return value;\n  }\n\n  const finalValue = deepMerge({}, value);\n  for (const currentExclusionKey of exclusionKeys) {\n    const exclusionChunksSplit = currentExclusionKey.split(OBJECT_SEPARATOR);\n\n    let nestedTemp = finalValue;\n    for (let i = 0; i < exclusionChunksSplit.length; i++) {\n      const currentChunk = exclusionChunksSplit[i];\n\n      // last iteration\n      if (i === exclusionChunksSplit.length - 1) {\n        if (nestedTemp && nestedTemp[currentChunk]) {\n          delete nestedTemp[currentChunk];\n        }\n      } else {\n        nestedTemp = nestedTemp[currentChunk];\n      }\n    }\n  }\n\n  return finalValue;\n}\n\nexport function getExclusionKeys(key: string, excludeKeys: string[]): string[] {\n  if (!key || !excludeKeys) {\n    return [];\n  }\n\n  const exclusionKeys: string[] = [];\n  for (const exclusionKey of excludeKeys) {\n    if (exclusionKey.includes(key)) {\n      exclusionKeys.push(exclusionKey);\n    }\n  }\n\n  return exclusionKeys;\n}\n\nexport function filterKeysByType(\n  keys: { [key: string]: StorageSyncType | StateTransferType },\n  type: StorageSyncType | StateTransferType\n): string[] {\n  if (!keys) {\n    return [];\n  }\n  return Object.keys(keys).filter((key) => keys[key] === type);\n}\n","import { ListModel, EntitiesModel } from '../../model/index';\nimport { SearchConfig } from '../../product/model/search-config';\nimport { EntityListState } from './entity-list-state';\nimport { EntityLoaderState } from './entity-loader/entity-loader-state';\nimport { entityLoaderStateSelector } from './entity-loader/entity-loader.selectors';\nimport { LoaderState } from './loader/loader-state';\n\nconst ALL = 'all';\n\nexport function serializeSearchConfig(\n  config: SearchConfig,\n  id?: string\n): string {\n  return `${id ?? ''}?pageSize=${config.pageSize ?? ''}&currentPage=${\n    config.currentPage ?? ''\n  }&sort=${config.sort ?? ''}`;\n}\n\nexport function denormalizeSearch<T>(\n  state: EntityListState<T>,\n  params?: SearchConfig\n): LoaderState<EntitiesModel<T>> {\n  return denormalizeCustomB2BSearch<T>(state.list, state.entities, params);\n}\n\nexport function denormalizeCustomB2BSearch<T>(\n  list: EntityLoaderState<ListModel>,\n  entities: EntityLoaderState<T>,\n  params?: SearchConfig,\n  id?: string\n): LoaderState<EntitiesModel<T>> {\n  const serializedList: any = entityLoaderStateSelector(\n    list,\n    params ? serializeSearchConfig(params, id) : id ?? ALL\n  );\n  if (!serializedList.value || !serializedList.value.ids) {\n    return serializedList;\n  }\n  const res: LoaderState<EntitiesModel<T>> = Object.assign({}, serializedList, {\n    value: {\n      values: serializedList.value.ids.map(\n        (code) => entityLoaderStateSelector(entities, code).value\n      ),\n    },\n  });\n  if (params) {\n    res.value.pagination = serializedList.value.pagination;\n    res.value.sorts = serializedList.value.sorts;\n  }\n  return res;\n}\n\nexport function normalizeListPage<T>(\n  list: EntitiesModel<T>,\n  id: string\n): { values: T[]; page: ListModel } {\n  const values = list?.values || [];\n  const page: ListModel = {\n    ids: values.map((data) => data[id]),\n  };\n  if (list.pagination) {\n    page.pagination = list.pagination;\n  }\n  if (list.sorts) {\n    page.sorts = list.sorts;\n  }\n  return { values, page };\n}\n\nexport function serializeParams(\n  params: string | string[],\n  searchConfig: SearchConfig\n): string {\n  return [params, serializeSearchConfig(searchConfig)].toString();\n}\n","import { AnonymousConsent, ConsentTemplate } from '../../model/consent.model';\nimport { StateUtils } from '../../state';\n\nexport const ANONYMOUS_CONSENTS_STORE_FEATURE = 'anonymous-consents';\nexport const ANONYMOUS_CONSENTS = '[Anonymous Consents] Anonymous Consents';\n\nexport interface StateWithAnonymousConsents {\n  [ANONYMOUS_CONSENTS_STORE_FEATURE]: AnonymousConsentsState;\n}\n\nexport interface AnonymousConsentsState {\n  templates: StateUtils.LoaderState<ConsentTemplate[]>;\n  consents: AnonymousConsent[];\n  ui: {\n    bannerDismissed: boolean;\n    updated: boolean;\n  };\n}\n","import {\n  AnonymousConsent,\n  ConsentTemplate,\n} from '../../../model/consent.model';\nimport { StateUtils } from '../../../state/utils/index';\nimport { ANONYMOUS_CONSENTS } from '../anonymous-consents-state';\n\nexport const LOAD_ANONYMOUS_CONSENT_TEMPLATES =\n  '[Anonymous Consents] Load Anonymous Consent Templates';\nexport const LOAD_ANONYMOUS_CONSENT_TEMPLATES_SUCCESS =\n  '[Anonymous Consents] Load Anonymous Consent Templates Success';\nexport const LOAD_ANONYMOUS_CONSENT_TEMPLATES_FAIL =\n  '[Anonymous Consents] Load Anonymous Consent Templates Fail';\nexport const RESET_LOAD_ANONYMOUS_CONSENT_TEMPLATES =\n  '[Anonymous Consents] Reset Load Anonymous Consent Templates';\n\nexport const GET_ALL_ANONYMOUS_CONSENTS =\n  '[Anonymous Consents] Get All Anonymous Consents';\nexport const GET_ANONYMOUS_CONSENT =\n  '[Anonymous Consents] Get Anonymous Consent';\nexport const SET_ANONYMOUS_CONSENTS =\n  '[Anonymous Consents] Set Anonymous Consents';\nexport const GIVE_ANONYMOUS_CONSENT =\n  '[Anonymous Consents] Give Anonymous Consent';\nexport const WITHDRAW_ANONYMOUS_CONSENT =\n  '[Anonymous Consents] Withdraw Anonymous Consent';\n\nexport const TOGGLE_ANONYMOUS_CONSENTS_BANNER_DISMISSED =\n  '[Anonymous Consents] Toggle Anonymous Consents Banner Dismissed';\nexport const TOGGLE_ANONYMOUS_CONSENT_TEMPLATES_UPDATED =\n  '[Anonymous Consents] Anonymous Consent Templates Updated';\nexport const ANONYMOUS_CONSENT_CHECK_UPDATED_VERSIONS =\n  '[Anonymous Consents] Check Updated Versions';\n\nexport class LoadAnonymousConsentTemplates extends StateUtils.LoaderLoadAction {\n  readonly type = LOAD_ANONYMOUS_CONSENT_TEMPLATES;\n  constructor() {\n    super(ANONYMOUS_CONSENTS);\n  }\n}\n\nexport class LoadAnonymousConsentTemplatesSuccess extends StateUtils.LoaderSuccessAction {\n  readonly type = LOAD_ANONYMOUS_CONSENT_TEMPLATES_SUCCESS;\n  constructor(public payload: ConsentTemplate[]) {\n    super(ANONYMOUS_CONSENTS);\n  }\n}\nexport class LoadAnonymousConsentTemplatesFail extends StateUtils.LoaderFailAction {\n  readonly type = LOAD_ANONYMOUS_CONSENT_TEMPLATES_FAIL;\n  constructor(payload: any) {\n    super(ANONYMOUS_CONSENTS, payload);\n  }\n}\n\nexport class ResetLoadAnonymousConsentTemplates extends StateUtils.LoaderResetAction {\n  readonly type = RESET_LOAD_ANONYMOUS_CONSENT_TEMPLATES;\n  constructor() {\n    super(ANONYMOUS_CONSENTS);\n  }\n}\n\nexport class GetAllAnonymousConsents {\n  readonly type = GET_ALL_ANONYMOUS_CONSENTS;\n  constructor() {}\n}\n\nexport class GetAnonymousConsent {\n  readonly type = GET_ANONYMOUS_CONSENT;\n  constructor(public templateCode: string) {}\n}\n\nexport class SetAnonymousConsents {\n  readonly type = SET_ANONYMOUS_CONSENTS;\n  constructor(public payload: AnonymousConsent[]) {}\n}\n\nexport class GiveAnonymousConsent {\n  readonly type = GIVE_ANONYMOUS_CONSENT;\n  constructor(public templateCode: string) {}\n}\n\nexport class WithdrawAnonymousConsent {\n  readonly type = WITHDRAW_ANONYMOUS_CONSENT;\n  constructor(public templateCode: string) {}\n}\n\nexport class ToggleAnonymousConsentsBannerDissmissed {\n  readonly type = TOGGLE_ANONYMOUS_CONSENTS_BANNER_DISMISSED;\n  constructor(public dismissed: boolean) {}\n}\n\nexport class ToggleAnonymousConsentTemplatesUpdated {\n  readonly type = TOGGLE_ANONYMOUS_CONSENT_TEMPLATES_UPDATED;\n  constructor(public updated: boolean) {}\n}\n\nexport class AnonymousConsentCheckUpdatedVersions {\n  readonly type = ANONYMOUS_CONSENT_CHECK_UPDATED_VERSIONS;\n  constructor() {}\n}\n\nexport type AnonymousConsentsActions =\n  | LoadAnonymousConsentTemplates\n  | LoadAnonymousConsentTemplatesSuccess\n  | LoadAnonymousConsentTemplatesFail\n  | ResetLoadAnonymousConsentTemplates\n  | GetAllAnonymousConsents\n  | SetAnonymousConsents\n  | GetAnonymousConsent\n  | GiveAnonymousConsent\n  | WithdrawAnonymousConsent\n  | ToggleAnonymousConsentsBannerDissmissed\n  | ToggleAnonymousConsentTemplatesUpdated\n  | AnonymousConsentCheckUpdatedVersions;\n","import { createFeatureSelector, MemoizedSelector } from '@ngrx/store';\nimport {\n  AnonymousConsentsState,\n  ANONYMOUS_CONSENTS_STORE_FEATURE,\n  StateWithAnonymousConsents,\n} from '../anonymous-consents-state';\n\nexport const getAnonymousConsentState: MemoizedSelector<\n  StateWithAnonymousConsents,\n  AnonymousConsentsState\n> = createFeatureSelector<AnonymousConsentsState>(\n  ANONYMOUS_CONSENTS_STORE_FEATURE\n);\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { ConsentTemplate } from '../../../model/consent.model';\nimport { StateUtils } from '../../../state/utils/index';\nimport { LoaderState } from '../../../state/utils/loader/loader-state';\nimport { StateWithAnonymousConsents } from '../anonymous-consents-state';\nimport { getAnonymousConsentState } from './feature.selector';\n\nexport const getAnonymousConsentTemplatesState: MemoizedSelector<\n  StateWithAnonymousConsents,\n  LoaderState<ConsentTemplate[]>\n> = createSelector(getAnonymousConsentState, (state) => state.templates);\n\nexport const getAnonymousConsentTemplatesValue: MemoizedSelector<\n  StateWithAnonymousConsents,\n  ConsentTemplate[]\n> = createSelector(\n  getAnonymousConsentTemplatesState,\n  StateUtils.loaderValueSelector\n);\n\nexport const getAnonymousConsentTemplatesLoading: MemoizedSelector<\n  StateWithAnonymousConsents,\n  boolean\n> = createSelector(\n  getAnonymousConsentTemplatesState,\n  StateUtils.loaderLoadingSelector\n);\n\nexport const getAnonymousConsentTemplatesSuccess: MemoizedSelector<\n  StateWithAnonymousConsents,\n  boolean\n> = createSelector(\n  getAnonymousConsentTemplatesState,\n  StateUtils.loaderSuccessSelector\n);\n\nexport const getAnonymousConsentTemplatesError: MemoizedSelector<\n  StateWithAnonymousConsents,\n  boolean\n> = createSelector(\n  getAnonymousConsentTemplatesState,\n  StateUtils.loaderErrorSelector\n);\n\nexport const getAnonymousConsentTemplate = (\n  templateCode: string\n): MemoizedSelector<StateWithAnonymousConsents, ConsentTemplate> => {\n  return createSelector(getAnonymousConsentTemplatesValue, (templates) => {\n    return templates\n      ? templates.find((template) => template.id === templateCode)\n      : null;\n  });\n};\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { StateWithAnonymousConsents } from '../anonymous-consents-state';\nimport { getAnonymousConsentState } from './feature.selector';\n\nexport const getAnonymousConsentTemplatesUpdate: MemoizedSelector<\n  StateWithAnonymousConsents,\n  boolean\n> = createSelector(getAnonymousConsentState, (state) => state.ui.updated);\n\nexport const getAnonymousConsentsBannerDismissed: MemoizedSelector<\n  StateWithAnonymousConsents,\n  boolean\n> = createSelector(\n  getAnonymousConsentState,\n  (state) => state.ui.bannerDismissed\n);\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { AnonymousConsent } from '../../../model/consent.model';\nimport { StateWithAnonymousConsents } from '../anonymous-consents-state';\nimport { getAnonymousConsentState } from './feature.selector';\n\nexport const getAnonymousConsents: MemoizedSelector<\n  StateWithAnonymousConsents,\n  AnonymousConsent[]\n> = createSelector(getAnonymousConsentState, (state) => state.consents);\n\nexport const getAnonymousConsentByTemplateCode = (\n  templateCode: string\n): MemoizedSelector<StateWithAnonymousConsents, AnonymousConsent> =>\n  createSelector(getAnonymousConsents, (consents) =>\n    consents.find((consent) => consent.templateCode === templateCode)\n  );\n","import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { combineLatest, iif, Observable } from 'rxjs';\nimport { filter, map, switchMap, tap, withLatestFrom } from 'rxjs/operators';\nimport { AuthService } from '../../auth/user-auth/facade/auth.service';\nimport {\n  AnonymousConsent,\n  ANONYMOUS_CONSENT_STATUS,\n  ConsentTemplate,\n} from '../../model/index';\nimport { AnonymousConsentsActions } from '../store/actions/index';\nimport { StateWithAnonymousConsents } from '../store/anonymous-consents-state';\nimport { AnonymousConsentsSelectors } from '../store/selectors/index';\n\n@Injectable({ providedIn: 'root' })\nexport class AnonymousConsentsService {\n  constructor(\n    protected store: Store<StateWithAnonymousConsents>,\n    protected authService: AuthService\n  ) {}\n\n  /**\n   * Retrieves the anonymous consent templates.\n   */\n  loadTemplates(): void {\n    this.store.dispatch(\n      new AnonymousConsentsActions.LoadAnonymousConsentTemplates()\n    );\n  }\n\n  /**\n   * Conditionally triggers the load of the anonymous consent templates if:\n   *   - `loadIfMissing` parameter is set to `true`\n   *   - the `templates` in the store are `undefined`\n   *\n   * Otherwise it just returns the value from the store.\n   *\n   * @param loadIfMissing setting to `true` will trigger the load of the templates if the currently stored templates are `undefined`\n   */\n  getTemplates(loadIfMissing = false): Observable<ConsentTemplate[]> {\n    return iif(\n      () => loadIfMissing,\n      this.store.pipe(\n        select(AnonymousConsentsSelectors.getAnonymousConsentTemplatesValue),\n        withLatestFrom(this.getLoadTemplatesLoading()),\n        filter(([_templates, loading]) => !loading),\n        tap(([templates, _loading]) => {\n          if (!Boolean(templates)) {\n            this.loadTemplates();\n          }\n        }),\n        filter(([templates, _loading]) => Boolean(templates)),\n        map(([templates, _loading]) => templates)\n      ),\n      this.store.pipe(\n        select(AnonymousConsentsSelectors.getAnonymousConsentTemplatesValue)\n      )\n    );\n  }\n\n  /**\n   * Returns the anonymous consent templates with the given template code.\n   * @param templateCode a template code by which to filter anonymous consent templates.\n   */\n  getTemplate(templateCode: string): Observable<ConsentTemplate> {\n    return this.store.pipe(\n      select(\n        AnonymousConsentsSelectors.getAnonymousConsentTemplate(templateCode)\n      )\n    );\n  }\n\n  /**\n   * Returns an indicator for the loading status for the anonymous consent templates.\n   */\n  getLoadTemplatesLoading(): Observable<boolean> {\n    return this.store.pipe(\n      select(AnonymousConsentsSelectors.getAnonymousConsentTemplatesLoading)\n    );\n  }\n\n  /**\n   * Returns an indicator for the success status for the anonymous consent templates.\n   */\n  getLoadTemplatesSuccess(): Observable<boolean> {\n    return this.store.pipe(\n      select(AnonymousConsentsSelectors.getAnonymousConsentTemplatesSuccess)\n    );\n  }\n\n  /**\n   * Returns an indicator for the error status for the anonymous consent templates.\n   */\n  getLoadTemplatesError(): Observable<boolean> {\n    return this.store.pipe(\n      select(AnonymousConsentsSelectors.getAnonymousConsentTemplatesError)\n    );\n  }\n\n  /**\n   * Resets the loading, success and error indicators for the anonymous consent templates.\n   */\n  resetLoadTemplatesState(): void {\n    this.store.dispatch(\n      new AnonymousConsentsActions.ResetLoadAnonymousConsentTemplates()\n    );\n  }\n\n  /**\n   * Returns all the anonymous consents.\n   */\n  getConsents(): Observable<AnonymousConsent[]> {\n    return this.store.pipe(\n      select(AnonymousConsentsSelectors.getAnonymousConsents)\n    );\n  }\n\n  /**\n   * Puts the provided anonymous consents into the store.\n   */\n  setConsents(consents: AnonymousConsent[]): void {\n    return this.store.dispatch(\n      new AnonymousConsentsActions.SetAnonymousConsents(consents)\n    );\n  }\n\n  /**\n   * Returns the anonymous consent for the given template ID.\n   *\n   * As a side-effect, the method will call `getTemplates(true)` to load the templates if those are not present.\n   *\n   * @param templateId a template ID by which to filter anonymous consent templates.\n   */\n  getConsent(templateId: string): Observable<AnonymousConsent> {\n    return this.authService.isUserLoggedIn().pipe(\n      filter((authenticated) => !authenticated),\n      tap(() => this.getTemplates(true)),\n      switchMap(() =>\n        this.store.pipe(\n          select(\n            AnonymousConsentsSelectors.getAnonymousConsentByTemplateCode(\n              templateId\n            )\n          )\n        )\n      )\n    );\n  }\n\n  /**\n   * Give a consent for the given `templateCode`\n   * @param templateCode for which to give the consent\n   */\n  giveConsent(templateCode: string): void {\n    this.store.dispatch(\n      new AnonymousConsentsActions.GiveAnonymousConsent(templateCode)\n    );\n  }\n\n  /**\n   * Sets all the anonymous consents' state to given.\n   */\n  giveAllConsents(): Observable<ConsentTemplate[]> {\n    return this.getTemplates(true).pipe(\n      tap((templates) =>\n        templates.forEach((template) => this.giveConsent(template.id))\n      )\n    );\n  }\n\n  /**\n   * Returns `true` if the provided `consent` is given.\n   * @param consent a consent to test\n   */\n  isConsentGiven(consent: AnonymousConsent): boolean {\n    return consent && consent.consentState === ANONYMOUS_CONSENT_STATUS.GIVEN;\n  }\n\n  /**\n   * Withdraw a consent for the given `templateCode`\n   * @param templateCode for which to withdraw the consent\n   */\n  withdrawConsent(templateCode: string): void {\n    this.store.dispatch(\n      new AnonymousConsentsActions.WithdrawAnonymousConsent(templateCode)\n    );\n  }\n\n  /**\n   * Sets all the anonymous consents' state to withdrawn.\n   */\n  withdrawAllConsents(): Observable<ConsentTemplate[]> {\n    return this.getTemplates(true).pipe(\n      tap((templates) =>\n        templates.forEach((template) => this.withdrawConsent(template.id))\n      )\n    );\n  }\n\n  /**\n   * Returns `true` if the provided `consent` is withdrawn.\n   * @param consent a consent to test\n   */\n  isConsentWithdrawn(consent: AnonymousConsent): boolean {\n    return (\n      consent && consent.consentState === ANONYMOUS_CONSENT_STATUS.WITHDRAWN\n    );\n  }\n\n  /**\n   * Toggles the dismissed state of the anonymous consents banner.\n   * @param dismissed the banner will be dismissed if `true` is passed, otherwise it will be visible.\n   */\n  toggleBannerDismissed(dismissed: boolean): void {\n    this.store.dispatch(\n      new AnonymousConsentsActions.ToggleAnonymousConsentsBannerDissmissed(\n        dismissed\n      )\n    );\n    if (dismissed) {\n      this.toggleTemplatesUpdated(false);\n    }\n  }\n\n  /**\n   * Returns `true` if the banner was dismissed, `false` otherwise.\n   */\n  isBannerDismissed(): Observable<boolean> {\n    return this.store.pipe(\n      select(AnonymousConsentsSelectors.getAnonymousConsentsBannerDismissed)\n    );\n  }\n\n  /**\n   * Returns `true` if the consent templates were updated on the back-end.\n   * If the templates are not present in the store, it triggers the load.\n   */\n  getTemplatesUpdated(): Observable<boolean> {\n    return this.getTemplates(true).pipe(\n      switchMap(() =>\n        this.store.pipe(\n          select(AnonymousConsentsSelectors.getAnonymousConsentTemplatesUpdate)\n        )\n      )\n    );\n  }\n\n  /**\n   * Toggles the `updated` slice of the state\n   * @param updated\n   */\n  toggleTemplatesUpdated(updated: boolean): void {\n    this.store.dispatch(\n      new AnonymousConsentsActions.ToggleAnonymousConsentTemplatesUpdated(\n        updated\n      )\n    );\n  }\n\n  /**\n   * Returns `true` if either the banner is not dismissed or if the templates were updated on the back-end.\n   * Otherwise, it returns `false`.\n   */\n  isBannerVisible(): Observable<boolean> {\n    return combineLatest([\n      this.isBannerDismissed(),\n      this.getTemplatesUpdated(),\n    ]).pipe(\n      tap(() => this.checkConsentVersions()),\n      map(([dismissed, updated]) => !dismissed || updated)\n    );\n  }\n\n  /**\n   * Dispatches an action to trigger the check\n   * whether the anonymous consent version have been updated\n   */\n  private checkConsentVersions(): void {\n    this.store.dispatch(\n      new AnonymousConsentsActions.AnonymousConsentCheckUpdatedVersions()\n    );\n  }\n\n  /**\n   * Returns `true` if there's a mismatch in template versions between the provided `currentTemplates` and `newTemplates`\n   * @param currentTemplates current templates to check\n   * @param newTemplates new templates to check\n   */\n  detectUpdatedTemplates(\n    currentTemplates: ConsentTemplate[],\n    newTemplates: ConsentTemplate[]\n  ): boolean {\n    if (newTemplates.length !== currentTemplates.length) {\n      return true;\n    }\n\n    for (let i = 0; i < newTemplates.length; i++) {\n      const newTemplate = newTemplates[i];\n      const currentTemplate = currentTemplates[i];\n      if (newTemplate.version !== currentTemplate.version) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Serializes using `JSON.stringify()` and encodes using `encodeURIComponent()` methods\n   * @param consents to serialize and encode\n   */\n  serializeAndEncode(consents: AnonymousConsent[]): string {\n    if (!consents) {\n      return '';\n    }\n    const serialized = JSON.stringify(consents);\n    const encoded = encodeURIComponent(serialized);\n    return encoded;\n  }\n\n  /**\n   * Decodes using `decodeURIComponent()` and deserializes using `JSON.parse()`\n   * @param rawConsents to decode an deserialize\n   */\n  decodeAndDeserialize(rawConsents: string): AnonymousConsent[] {\n    const decoded = decodeURIComponent(rawConsents);\n    const unserialized = JSON.parse(decoded) as AnonymousConsent[];\n    return unserialized;\n  }\n\n  /**\n   *\n   * Compares the given `newConsents` and `previousConsents` and returns `true` if there are differences (the `newConsents` are updates).\n   * Otherwise it returns `false`.\n   *\n   * @param newConsents new consents to compare\n   * @param previousConsents old consents to compare\n   */\n  consentsUpdated(\n    newConsents: AnonymousConsent[],\n    previousConsents: AnonymousConsent[]\n  ): boolean {\n    const newRawConsents = this.serializeAndEncode(newConsents);\n    const previousRawConsents = this.serializeAndEncode(previousConsents);\n    return newRawConsents !== previousRawConsents;\n  }\n}\n","export class DynamicTemplate {\n  static resolve(templateString: string, templateVariables: Object) {\n    for (const variableLabel of Object.keys(templateVariables)) {\n      const placeholder = new RegExp('\\\\${' + variableLabel + '}', 'g');\n      templateString = templateString.replace(\n        placeholder,\n        templateVariables[variableLabel]\n      );\n    }\n    return templateString;\n  }\n}\n","import { SiteContextConfig } from './site-context-config';\n\n/**\n * Helper function for safely getting context parameter config\n *\n * @param config\n * @param parameter\n */\nexport function getContextParameterValues(\n  config: SiteContextConfig,\n  parameter: string\n): string[] {\n  return (config.context && config.context[parameter]) || [];\n}\n\n/**\n * Helper function for calculating default value for context parameter from config\n *\n * @param config\n * @param parameter\n */\nexport function getContextParameterDefault(\n  config: SiteContextConfig,\n  parameter: string\n): string {\n  const param = getContextParameterValues(config, parameter);\n  return param && param.length ? param[0] : undefined;\n}\n","export const LANGUAGE_CONTEXT_ID = 'language';\nexport const CURRENCY_CONTEXT_ID = 'currency';\nexport const BASE_SITE_CONTEXT_ID = 'baseSite';\n","import { Action } from '@ngrx/store';\nimport { BaseSite } from '../../../model/misc.model';\n\nexport const LOAD_BASE_SITE = '[Site-context] Load BaseSite';\nexport const LOAD_BASE_SITE_FAIL = '[Site-context] Load BaseSite Fail';\nexport const LOAD_BASE_SITE_SUCCESS = '[Site-context] Load BaseSite Success';\n\nexport const LOAD_BASE_SITES = '[Site-context] Load BaseSites';\nexport const LOAD_BASE_SITES_FAIL = '[Site-context] Load BaseSites Fail';\nexport const LOAD_BASE_SITES_SUCCESS = '[Site-context] Load BaseSites Success';\n\nexport const SET_ACTIVE_BASE_SITE = '[Site-context] Set Active BaseSite';\nexport const BASE_SITE_CHANGE = '[Site-context] BaseSite Change';\n\nexport class LoadBaseSite implements Action {\n  readonly type = LOAD_BASE_SITE;\n}\n\nexport class LoadBaseSiteFail implements Action {\n  readonly type = LOAD_BASE_SITE_FAIL;\n  constructor(public payload: any) {}\n}\n\nexport class LoadBaseSiteSuccess implements Action {\n  readonly type = LOAD_BASE_SITE_SUCCESS;\n  constructor(public payload: BaseSite) {}\n}\n\nexport class LoadBaseSites implements Action {\n  readonly type = LOAD_BASE_SITES;\n}\n\nexport class LoadBaseSitesFail implements Action {\n  readonly type = LOAD_BASE_SITES_FAIL;\n  constructor(public payload: any) {}\n}\n\nexport class LoadBaseSitesSuccess implements Action {\n  readonly type = LOAD_BASE_SITES_SUCCESS;\n  constructor(public payload: BaseSite[]) {}\n}\n\nexport class SetActiveBaseSite implements Action {\n  readonly type = SET_ACTIVE_BASE_SITE;\n  constructor(public payload: string) {}\n}\n\nexport class BaseSiteChange implements Action {\n  readonly type = BASE_SITE_CHANGE;\n}\n\n// action types\nexport type BaseSiteAction =\n  | LoadBaseSite\n  | LoadBaseSiteFail\n  | LoadBaseSiteSuccess\n  | LoadBaseSites\n  | LoadBaseSitesFail\n  | LoadBaseSitesSuccess\n  | SetActiveBaseSite\n  | BaseSiteChange;\n","import { Action } from '@ngrx/store';\nimport { Currency } from '../../../model/misc.model';\n\nexport const LOAD_CURRENCIES = '[Site-context] Load Currencies';\nexport const LOAD_CURRENCIES_FAIL = '[Site-context] Load Currencies Fail';\nexport const LOAD_CURRENCIES_SUCCESS = '[Site-context] Load Currencies Success';\nexport const SET_ACTIVE_CURRENCY = '[Site-context] Set Active Currency';\nexport const CURRENCY_CHANGE = '[Site-context] Currency Change';\n\nexport class LoadCurrencies implements Action {\n  readonly type = LOAD_CURRENCIES;\n}\n\nexport class LoadCurrenciesFail implements Action {\n  readonly type = LOAD_CURRENCIES_FAIL;\n  constructor(public payload: any) {}\n}\n\nexport class LoadCurrenciesSuccess implements Action {\n  readonly type = LOAD_CURRENCIES_SUCCESS;\n  constructor(public payload: Currency[]) {}\n}\n\nexport class SetActiveCurrency implements Action {\n  readonly type = SET_ACTIVE_CURRENCY;\n  constructor(public payload: string) {}\n}\n\nexport class CurrencyChange implements Action {\n  readonly type = CURRENCY_CHANGE;\n  constructor(public payload: { previous: string; current: string }) {}\n}\n\n// action types\nexport type CurrenciesAction =\n  | LoadCurrencies\n  | LoadCurrenciesFail\n  | LoadCurrenciesSuccess\n  | SetActiveCurrency\n  | CurrencyChange;\n","import { Action } from '@ngrx/store';\nimport { Language } from '../../../model/misc.model';\n\nexport const LOAD_LANGUAGES = '[Site-context] Load Languages';\nexport const LOAD_LANGUAGES_FAIL = '[Site-context] Load Languages Fail';\nexport const LOAD_LANGUAGES_SUCCESS = '[Site-context] Load Languages Success';\nexport const SET_ACTIVE_LANGUAGE = '[Site-context] Set Active Language';\nexport const LANGUAGE_CHANGE = '[Site-context] Language Change';\n\nexport class LoadLanguages implements Action {\n  readonly type = LOAD_LANGUAGES;\n}\n\nexport class LoadLanguagesFail implements Action {\n  readonly type = LOAD_LANGUAGES_FAIL;\n  constructor(public payload: any) {}\n}\n\nexport class LoadLanguagesSuccess implements Action {\n  readonly type = LOAD_LANGUAGES_SUCCESS;\n  constructor(public payload: Language[]) {}\n}\n\nexport class SetActiveLanguage implements Action {\n  readonly type = SET_ACTIVE_LANGUAGE;\n  constructor(public payload: string) {}\n}\n\nexport class LanguageChange implements Action {\n  readonly type = LANGUAGE_CHANGE;\n  constructor(public payload: { previous: string; current: string }) {}\n}\n\n// action types\nexport type LanguagesAction =\n  | LoadLanguages\n  | LoadLanguagesFail\n  | LoadLanguagesSuccess\n  | SetActiveLanguage\n  | LanguageChange;\n","import { BaseSite, Currency, Language } from '../../model/misc.model';\nexport const SITE_CONTEXT_FEATURE = 'siteContext';\n\nexport interface StateWithSiteContext {\n  [SITE_CONTEXT_FEATURE]: SiteContextState;\n}\n\nexport interface SiteContextState {\n  languages: LanguagesState;\n  currencies: CurrenciesState;\n  baseSite: BaseSiteState;\n}\n\nexport interface CurrencyEntities {\n  [isocode: string]: Currency;\n}\n\nexport interface CurrenciesState {\n  entities: CurrencyEntities;\n  activeCurrency: string;\n}\nexport interface LanguagesEntities {\n  [isocode: string]: Language;\n}\n\nexport interface LanguagesState {\n  entities: LanguagesEntities;\n  activeLanguage: string;\n}\n\nexport interface BaseSiteState {\n  entities: BaseSiteEntities;\n  activeSite: string;\n  details: BaseSite;\n}\n\nexport interface BaseSiteEntities {\n  [uid: string]: BaseSite;\n}\n","import { createFeatureSelector, MemoizedSelector } from '@ngrx/store';\nimport {\n  SiteContextState,\n  SITE_CONTEXT_FEATURE,\n  StateWithSiteContext,\n} from '../state';\n\nexport const getSiteContextState: MemoizedSelector<\n  StateWithSiteContext,\n  SiteContextState\n> = createFeatureSelector<SiteContextState>(SITE_CONTEXT_FEATURE);\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { BaseSite } from '../../../model/misc.model';\nimport {\n  BaseSiteEntities,\n  BaseSiteState,\n  SiteContextState,\n  StateWithSiteContext,\n} from '../state';\nimport { getSiteContextState } from './site-context.selector';\n\nconst sitesEntitiesSelector = (state: BaseSiteState) => state.entities;\n\nexport const getBaseSiteState: MemoizedSelector<\n  StateWithSiteContext,\n  BaseSiteState\n> = createSelector(\n  getSiteContextState,\n  (state: SiteContextState) => state.baseSite\n);\n\nexport const getActiveBaseSite: MemoizedSelector<\n  StateWithSiteContext,\n  string\n> = createSelector(\n  getSiteContextState,\n  (state: SiteContextState) =>\n    state && state.baseSite && state.baseSite.activeSite\n);\n\nexport const getBaseSiteData: MemoizedSelector<\n  StateWithSiteContext,\n  BaseSite\n> = createSelector(\n  getSiteContextState,\n  (state: SiteContextState) => state && state.baseSite && state.baseSite.details\n);\n\nexport const getBaseSitesEntities: MemoizedSelector<\n  StateWithSiteContext,\n  BaseSiteEntities\n> = createSelector(getBaseSiteState, sitesEntitiesSelector);\n\nexport const getAllBaseSites: MemoizedSelector<\n  StateWithSiteContext,\n  BaseSite[]\n> = createSelector(getBaseSitesEntities, (entities) => {\n  return entities ? Object.keys(entities).map((uid) => entities[uid]) : null;\n});\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { Currency } from '../../../model/misc.model';\nimport {\n  CurrenciesState,\n  CurrencyEntities,\n  SiteContextState,\n  StateWithSiteContext,\n} from '../state';\nimport { getSiteContextState } from './site-context.selector';\n\nconst currenciesEntitiesSelector = (state: CurrenciesState) => state.entities;\nconst activeCurrencySelector = (state: CurrenciesState) => state.activeCurrency;\n\nexport const getCurrenciesState: MemoizedSelector<\n  StateWithSiteContext,\n  CurrenciesState\n> = createSelector(\n  getSiteContextState,\n  (state: SiteContextState) => state.currencies\n);\n\nexport const getCurrenciesEntities: MemoizedSelector<\n  StateWithSiteContext,\n  CurrencyEntities\n> = createSelector(getCurrenciesState, currenciesEntitiesSelector);\n\nexport const getActiveCurrency: MemoizedSelector<\n  StateWithSiteContext,\n  string\n> = createSelector(getCurrenciesState, activeCurrencySelector);\n\nexport const getAllCurrencies: MemoizedSelector<\n  StateWithSiteContext,\n  Currency[]\n> = createSelector(getCurrenciesEntities, (entities) => {\n  return entities\n    ? Object.keys(entities).map((isocode) => entities[isocode])\n    : null;\n});\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { Language } from '../../../model/misc.model';\nimport {\n  LanguagesEntities,\n  LanguagesState,\n  SiteContextState,\n  StateWithSiteContext,\n} from '../state';\nimport { getSiteContextState } from './site-context.selector';\n\nconst activeLanguageSelector = (state: LanguagesState) => state.activeLanguage;\nconst languagesEntitiesSelector = (state: LanguagesState) => state.entities;\n\nexport const getLanguagesState: MemoizedSelector<\n  StateWithSiteContext,\n  LanguagesState\n> = createSelector(\n  getSiteContextState,\n  (state: SiteContextState) => state.languages\n);\n\nexport const getLanguagesEntities: MemoizedSelector<\n  StateWithSiteContext,\n  LanguagesEntities\n> = createSelector(getLanguagesState, languagesEntitiesSelector);\n\nexport const getActiveLanguage: MemoizedSelector<\n  StateWithSiteContext,\n  string\n> = createSelector(getLanguagesState, activeLanguageSelector);\n\nexport const getAllLanguages: MemoizedSelector<\n  StateWithSiteContext,\n  Language[]\n> = createSelector(getLanguagesEntities, (entities) => {\n  return entities\n    ? Object.keys(entities).map((isocode) => entities[isocode])\n    : null;\n});\n","import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take, tap } from 'rxjs/operators';\nimport { BaseSite } from '../../model/misc.model';\nimport { getContextParameterDefault } from '../config/context-config-utils';\nimport { SiteContextConfig } from '../config/site-context-config';\nimport { BASE_SITE_CONTEXT_ID } from '../providers/context-ids';\nimport { SiteContextActions } from '../store/actions/index';\nimport { SiteContextSelectors } from '../store/selectors/index';\nimport { StateWithSiteContext } from '../store/state';\nimport { SiteContext } from './site-context.interface';\n\n@Injectable()\nexport class BaseSiteService implements SiteContext<BaseSite> {\n  constructor(\n    protected store: Store<StateWithSiteContext>,\n    protected config: SiteContextConfig\n  ) {}\n\n  /**\n   * Represents the current baseSite uid.\n   */\n  getActive(): Observable<string> {\n    return this.store.pipe(\n      select(SiteContextSelectors.getActiveBaseSite),\n      filter((active) => Boolean(active))\n    );\n  }\n\n  /**\n   * Get all base sites data\n   */\n  getAll(): Observable<BaseSite[]> {\n    return this.store.pipe(\n      select(SiteContextSelectors.getAllBaseSites),\n      tap((sites) => {\n        if (!sites) {\n          this.store.dispatch(new SiteContextActions.LoadBaseSites());\n        }\n      }),\n      filter((sites) => Boolean(sites))\n    );\n  }\n\n  /**\n   * Get base site data based on site uid\n   */\n  get(siteUid?: string): Observable<BaseSite> {\n    if (siteUid) {\n      return this.getAll().pipe(\n        map((sites) => sites.find((site) => site.uid === siteUid))\n      );\n    }\n\n    return this.getActive().pipe(\n      switchMap((activeSiteUid) =>\n        this.getAll().pipe(\n          map((sites) => sites.find((site) => site.uid === activeSiteUid))\n        )\n      )\n    );\n  }\n\n  setActive(baseSite: string): void {\n    this.store\n      .pipe(select(SiteContextSelectors.getActiveBaseSite), take(1))\n      .subscribe((activeBaseSite) => {\n        if (baseSite && activeBaseSite !== baseSite) {\n          this.store.dispatch(\n            new SiteContextActions.SetActiveBaseSite(baseSite)\n          );\n        }\n      });\n  }\n\n  /**\n   * Initializes the active baseSite.\n   */\n  initialize(): void {\n    let value;\n    this.getActive()\n      .subscribe((val) => (value = val))\n      .unsubscribe();\n    if (value) {\n      // don't initialize, if there is already a value (i.e. retrieved from route or transferred from SSR)\n      return;\n    }\n\n    this.setActive(\n      getContextParameterDefault(this.config, BASE_SITE_CONTEXT_ID)\n    );\n  }\n}\n","/**\n * Angular uses the native encodeURIComponent function,\n * but then un-encoded some characters that are allowed\n * to be part of the query according to IETF RFC 3986.\n * So, to make these characters still encoded, this encoder only\n * uses the encodeURIComponent.\n */\nimport { HttpParameterCodec } from '@angular/common/http';\n\nexport class HttpParamsURIEncoder implements HttpParameterCodec {\n  encodeKey(key: string): string {\n    return encodeURIComponent(key);\n  }\n\n  encodeValue(value: string): string {\n    return encodeURIComponent(value);\n  }\n\n  decodeKey(key: string): string {\n    return decodeURIComponent(key);\n  }\n\n  decodeValue(value: string): string {\n    return decodeURIComponent(value);\n  }\n}\n","export const DEFAULT_SCOPE = 'default';\n\nexport interface OccEndpoint {\n  default?: string;\n  [scope: string]: string;\n}\n\nexport interface ProductOccEndpoint extends OccEndpoint {\n  list?: string;\n  details?: string;\n  attributes?: string;\n  variants?: string;\n}\n\nexport interface OccEndpoints {\n  /**\n   * Get product details for scope\n   *\n   * @member Object\n   */\n  product?: string | ProductOccEndpoint;\n  /**\n   * Get reviews for a product\n   *\n   * @member {string}\n   */\n  productReviews?: string | OccEndpoint;\n  /**\n   * Get a list of product references\n   *\n   * @member {string}\n   */\n  productReferences?: string | OccEndpoint;\n  /**\n   * Get a list of products and additional data\n   *\n   * @member {string}\n   */\n  productSearch?: string | OccEndpoint;\n  /**\n   * Get a list of available suggestions\n   *\n   * @member {string}\n   */\n  productSuggestions?: string | OccEndpoint;\n  /**\n   * Get CMS component details\n   *\n   * @member {string}\n   */\n  component?: string | OccEndpoint;\n  /**\n   * Get a list of CMS component details\n   *\n   * @member {string}\n   */\n  components?: string | OccEndpoint;\n  /**\n   * Get page data with list of cms content slots\n   *\n   * @member {string}\n   */\n  pages?: string | OccEndpoint;\n  /**\n   * Get page data with list of cms content slots\n   *\n   * @member {string}\n   */\n  page?: string | OccEndpoint;\n  /**\n   * Get all carts\n   *\n   * @member {string} [carts]\n   */\n  carts?: string | OccEndpoint;\n  /**\n   * Get a cart with a given identifier\n   *\n   * @member {string} [cart]\n   */\n  cart?: string | OccEndpoint;\n  /**\n   * Creates or restore a cart for a user\n   *\n   * @member {string} [createCart]\n   */\n  createCart?: string | OccEndpoint;\n  /**\n   * Deletes a cart with a given cart id\n   *\n   * @member {string} [deleteCart]\n   */\n  deleteCart?: string | OccEndpoint;\n  /**\n   * Adds a product to the cart\n   *\n   * @member {string} [addEntries]\n   */\n  addEntries?: string | OccEndpoint;\n  /**\n   * Update quantity and store the details of a cart entry\n   *\n   * @member {string} [updateEntries]\n   */\n  updateEntries?: string | OccEndpoint;\n  /**\n   * Deletes cart entry\n   *\n   * @member {string} [removeEntries]\n   */\n  removeEntries?: string | OccEndpoint;\n  /**\n   * Assign email to cart\n   *\n   * @member {string} [addEmail]\n   */\n  addEmail?: string | OccEndpoint;\n  /**\n   * Get a store location\n   *\n   * @member {string} [page]\n   */\n  store?: string | OccEndpoint;\n  /**\n   * Get a list of store locations\n   *\n   * @member {string} [page]\n   */\n  stores?: string | OccEndpoint;\n  /**\n   * Gets a store location count per country and regions\n   *\n   * @member {string} [page]\n   */\n  storescounts?: string | OccEndpoint;\n  /**\n   * Get a list of available languages\n   *\n   * @member {string}\n   */\n  languages?: string | OccEndpoint;\n  /**\n   * Get a list of available currencies\n   *\n   * @member {string}\n   */\n  currencies?: string | OccEndpoint;\n  /**\n   * Get a list of countries\n   *\n   * @member {string}\n   */\n  countries?: string | OccEndpoint;\n  /**\n   * Fetch the list of regions for the provided country\n   *\n   * @member {string}\n   */\n  regions?: string | OccEndpoint;\n  /**\n   * Titles used for user's personal info.\n   *\n   * @member {string}\n   */\n  titles?: string | OccEndpoint;\n  /**\n   * Get user details\n   *\n   * @member {string}\n   */\n  user?: string | OccEndpoint;\n  /**\n   * Register a new user.\n   *\n   * @member {string}\n   */\n  userRegister?: string | OccEndpoint;\n  /**\n   * Request an email to reset the password\n   *\n   * @member {string}\n   */\n  userForgotPassword?: string | OccEndpoint;\n  /**\n   * Reset the password once the email is recieved.\n   *\n   * @member {string}\n   */\n  userResetPassword?: string | OccEndpoint;\n  /**\n   * Update the user id with which the user authenticates.\n   *\n   * @member {string}\n   */\n  userUpdateLoginId?: string | OccEndpoint;\n  /**\n   * Update the user's password\n   *\n   * @member {string}\n   */\n  userUpdatePassword?: string | OccEndpoint;\n  /**\n   * Payment details root endpoint.\n   *\n   * @member {string}\n   */\n  paymentDetailsAll?: string | OccEndpoint;\n  /**\n   * Endpoint for a specific payment method.\n   *\n   * @member {string}\n   */\n  paymentDetail?: string | OccEndpoint;\n  /**\n   * Endpoint for the list of one user's orders\n   *\n   * @member {string}\n   */\n  orderHistory?: string | OccEndpoint;\n  /**\n   * Endpoint for the details of one user's order\n   *\n   * @member {string}\n   */\n  orderDetail?: string | OccEndpoint;\n  /**\n   * Endpoint for anonymous consent templates\n   *\n   * @member {string}\n   */\n  anonymousConsentTemplates?: string | OccEndpoint;\n  /**\n   * Endpoint for consent templates\n   *\n   * @member {string}\n   */\n  consentTemplates?: string | OccEndpoint;\n  /**\n   * Endpoint for a user's consents\n   *\n   * @member {string}\n   */\n  consents?: string | OccEndpoint;\n  /**\n   * Endpoint for a user's specific previously given consent.\n   *\n   * @member {string}\n   */\n  consentDetail?: string | OccEndpoint;\n  /**\n   * Endpoint for a user's addresses\n   *\n   * @member {string}\n   */\n  addresses?: string | OccEndpoint;\n  /**\n   * Endpoint for a user's specific address\n   *\n   * @member {string}\n   */\n  addressDetail?: string | OccEndpoint;\n  /**\n   * Endpoint for address verification\n   *\n   * @member {string}\n   */\n  addressVerification?: string | OccEndpoint;\n  /**\n   * Endpoint for consignment tracking\n   *\n   * @member {string}\n   */\n  consignmentTracking?: string | OccEndpoint;\n  /**\n   * Endpoint for asm customer search\n   *\n   * @member {string}\n   */\n  asmCustomerSearch?: string | OccEndpoint;\n  /**\n   * Endpoint for cart voucher\n   *\n   * @member {string}\n   */\n  cartVoucher?: string | OccEndpoint;\n  /**\n   * Endpoint for coupons\n   *\n   * @member {string}\n   */\n  customerCoupons?: string | OccEndpoint;\n  /**\n   * Endpoint for claiming coupon\n   *\n   * @member {string}\n   */\n  claimCoupon?: string | OccEndpoint;\n  /**\n   * Endpoint for coupons\n   *\n   * @member {string}\n   */\n  couponNotification?: string | OccEndpoint;\n  /**\n   * Explicitly saves a cart\n   *\n   * @member {string}\n   */\n  saveCart?: string | OccEndpoint;\n  /**\n   * Endpoint for notification preference\n   *\n   * @member {string}\n   */\n  notificationPreference?: string | OccEndpoint;\n  /**\n   * Endpoint for product interests\n   *\n   * @member {string}\n   */\n  productInterests?: string | OccEndpoint;\n  /**\n   * Endpoint for getting product interests\n   *\n   * @member {string}\n   */\n  getProductInterests?: string | OccEndpoint;\n  /**\n   * Endpoint for cancel an order\n   */\n  cancelOrder?: string | OccEndpoint;\n  /**\n   * Endpoint for creating order return request\n   */\n  returnOrder?: string | OccEndpoint;\n  /**\n   * Endpoint for user's order return requests\n   */\n  orderReturns?: string | OccEndpoint;\n  /**\n   * Endpoint for order return request details\n   */\n  orderReturnDetail?: string | OccEndpoint;\n  /**\n   * Endpoint for cancelling return request\n   */\n  cancelReturn?: string | OccEndpoint;\n  /**\n   * Endpoint for set delivery address to cart\n   */\n  setDeliveryAddress?: string | OccEndpoint;\n  /**\n   * Endpoint for place order\n   */\n  placeOrder?: string | OccEndpoint;\n  /**\n   * Endpoint for userGroupOrderApprovalPermission\n   *\n   * @member {string}\n   */\n  budget?: string | OccEndpoint;\n  /**\n   * Endpoint for budgets list\n   *\n   * @member {string}\n   */\n  budgets?: string | OccEndpoint;\n  /**\n   * Endpoint for organizations\n   *\n   * @member {string}\n   */\n  orgUnits?: string | OccEndpoint;\n  /**\n   * Endpoint for organizations list\n   *\n   * @member {string}\n   */\n  orgUnitsAvailable?: string | OccEndpoint;\n  /**\n   * Endpoint for organization units tree\n   *\n   * @member {string}\n   */\n  orgUnitsTree?: string | OccEndpoint;\n  /**\n   * Endpoint for approval processes for organization units\n   *\n   * @member {string}\n   */\n  orgUnitsApprovalProcesses?: string | OccEndpoint;\n  /**\n   * Endpoint for organization\n   *\n   * @member {string}\n   */\n  orgUnit?: string | OccEndpoint;\n  /**\n   * Endpoint for orgUnitUsers:\n   *\n   * @member {string}\n   */\n  orgUnitUsers?: string | OccEndpoint;\n  /**\n   * Endpoint for add orgUnitUserRoles (except approver):\n   *\n   * @member {string}\n   */\n  orgUnitUserRoles?: string | OccEndpoint;\n  /**\n   * Endpoint for remove orgUnitUserRole (except approver):\n   *\n   * @member {string}\n   */\n  orgUnitUserRole?: string | OccEndpoint;\n  /**\n   * Endpoint for add orgUnitApprovers:\n   *\n   * @member {string}\n   */\n  orgUnitApprovers?: string | OccEndpoint;\n  /**\n   * Endpoint for delete orgUnitApprover:\n   *\n   * @member {string}\n   */\n  orgUnitApprover?: string | OccEndpoint;\n  /**\n   * Endpoint for organizational unit addresses\n   *\n   * @member {string}\n   */\n  orgUnitsAddresses?: string | OccEndpoint;\n  /**\n   * Endpoint for organizational unit address\n   *\n   * @member {string}\n   */\n  orgUnitsAddress?: string | OccEndpoint;\n  /**\n   * Endpoint for organizational unit user groups list\n   *\n   * @member {string}\n   */\n  userGroups?: string | OccEndpoint;\n  /**\n   * Endpoint for organizational unit user group\n   *\n   * @member {string}\n   */\n  userGroup?: string | OccEndpoint;\n  /**\n   * Endpoint for costCenter list\n   *\n   * @member {string}\n   */\n  userGroupAvailableOrderApprovalPermissions?: string | OccEndpoint;\n  /**\n   * Endpoint for userGroupAvailableOrderApprovalPermissions list\n   *\n   * @member {string}\n   */\n  userGroupAvailableOrgCustomers?: string | OccEndpoint;\n  /**\n   * Endpoint for userGroupAvailableOrgCustomers list\n   *\n   * @member {string}\n   */\n  userGroupMembers?: string | OccEndpoint;\n  /**\n   * Endpoint for userGroupMembers list\n   *\n   * @member {string}\n   */\n  userGroupMember?: string | OccEndpoint;\n  /**\n   * Endpoint for userGroupMember\n   *\n   * @member {string}\n   */\n  userGroupOrderApprovalPermissions?: string | OccEndpoint;\n  /**\n   * Endpoint for userGroupOrderApprovalPermissions list\n   *\n   * @member {string}\n   */\n  userGroupOrderApprovalPermission?: string | OccEndpoint;\n  /**\n   * Endpoint for userGroupOrderApprovalPermission\n   *\n   * @member {string}\n   */\n  costCenters?: string | OccEndpoint;\n  /**\n   * Endpoint to schedule a replenishment order\n   *\n   * * @member {string}\n   */\n  scheduleReplenishmentOrder?: string | OccEndpoint;\n  /**\n   * * Endpoint for the list of one user's replenishment orders\n   *\n   * * @member {string}\n   */\n  replenishmentOrderHistory?: string | OccEndpoint;\n  /* Endpoint to get a replenishment order details\n   *\n   * * @member {string}\n   */\n  replenishmentOrderDetails?: string | OccEndpoint;\n  /**\n   * Endpoint to get a replenishment order history for a replenishment\n   *\n   * * @member {string}\n   */\n  replenishmentOrderDetailsHistory?: string | OccEndpoint;\n  /**\n   * Endpoint to get a replenishment order history for a replenishment\n   *\n   * * @member {string}\n   */\n  cancelReplenishmentOrder?: string | OccEndpoint;\n  /**\n   * Endpoint for all costCenters\n   *\n   * @member {string}\n   */\n  costCentersAll?: string | OccEndpoint;\n  /**\n   * Endpoint for costCenter\n   *\n   * @member {string}\n   */\n  costCenter?: string | OccEndpoint;\n  /**\n   * Endpoint for budgets assigned to costCenter\n   *\n   * @member {string}\n   */\n  costCenterBudgets?: string | OccEndpoint;\n  /**\n   * Endpoint for budget assigned to costCenter\n   *\n   * @member {string}\n   */\n  costCenterBudget?: string | OccEndpoint;\n  /**\n   * Endpoint for permission list\n   *\n   * @member {string}\n   */\n  permissions?: string | OccEndpoint;\n  /**\n   * Endpoint for permission\n   *\n   * @member {string}\n   */\n  permission?: string | OccEndpoint;\n  /**\n   * Endpoint for order approval permission types\n   *\n   * @member {string}\n   */\n  orderApprovalPermissionTypes?: string | OccEndpoint;\n  /**\n   * Endpoint for organization customers\n   *\n   * @member {string}\n   */\n  b2bUsers?: string | OccEndpoint;\n  /**\n   * Endpoint for organization customer\n   *\n   * @member {string}\n   */\n  b2bUser?: string | OccEndpoint;\n  /**\n   * Endpoint for organization customer approvers\n   *\n   * @member {string}\n   */\n  b2bUserApprovers?: string | OccEndpoint;\n  /**\n   * Endpoint for organization customer approver\n   *\n   * @member {string}\n   */\n  b2bUserApprover?: string | OccEndpoint;\n  /**\n   * Endpoint for organization customer user groups\n   *\n   * @member {string}\n   */\n  b2bUserUserGroups?: string | OccEndpoint;\n  /**\n   * Endpoint for organization customer user group\n   *\n   * @member {string}\n   */\n  b2bUserUserGroup?: string | OccEndpoint;\n  /**\n   * Endpoint for organization customer permissions\n   *\n   * @member {string}\n   */\n  b2bUserPermissions?: string | OccEndpoint;\n  /**\n   * Endpoint for organization customer permission\n   *\n   * @member {string}\n   */\n  b2bUserPermission?: string | OccEndpoint;\n  /**\n   * Endpoint for order approvals\n   *\n   * @member {string}\n   */\n  orderApprovals?: string | OccEndpoint;\n  /**\n   * Endpoint for order approval\n   *\n   * @member {string}\n   */\n  orderApproval?: string | OccEndpoint;\n  /**\n   * Endpoint for order approval decision\n   *\n   * @member {string}\n   */\n  orderApprovalDecision?: string | OccEndpoint;\n  /**\n   * Endpoint for getting all base sites\n   *\n   * @member {string}\n   */\n  baseSites?: string | OccEndpoint;\n  /** Endpoint to returns active cost centers\n   *\n   * @member {string}\n   */\n  getActiveCostCenters?: string | OccEndpoint;\n}\n","import { HttpParams } from '@angular/common/http';\nimport { Injectable, isDevMode, Optional } from '@angular/core';\nimport { DynamicTemplate } from '../../config/utils/dynamic-template';\nimport { getContextParameterDefault } from '../../site-context/config/context-config-utils';\nimport { BaseSiteService } from '../../site-context/facade/base-site.service';\nimport { BASE_SITE_CONTEXT_ID } from '../../site-context/providers/context-ids';\nimport { HttpParamsURIEncoder } from '../../util/http-params-uri.encoder';\nimport { OccConfig } from '../config/occ-config';\nimport { DEFAULT_SCOPE } from '../occ-models/occ-endpoints.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OccEndpointsService {\n  private _activeBaseSite: string;\n\n  private get activeBaseSite(): string {\n    return (\n      this._activeBaseSite ??\n      getContextParameterDefault(this.config, BASE_SITE_CONTEXT_ID)\n    );\n  }\n\n  constructor(\n    private config: OccConfig,\n    @Optional() private baseSiteService: BaseSiteService\n  ) {\n    if (this.baseSiteService) {\n      this.baseSiteService\n        .getActive()\n        .subscribe((value) => (this._activeBaseSite = value));\n    }\n  }\n\n  /**\n   * Returns an endpoint starting from the OCC baseUrl (no baseSite)\n   * @param endpoint Endpoint suffix\n   */\n  getRawEndpoint(endpoint: string): string {\n    if (!this.config?.backend?.occ) {\n      return '';\n    }\n    endpoint = this.config.backend.occ.endpoints?.[endpoint];\n\n    if (!endpoint.startsWith('/')) {\n      endpoint = '/' + endpoint;\n    }\n\n    return this.config.backend.occ.baseUrl + endpoint;\n  }\n\n  /**\n   * Returns an endpoint starting from the OCC prefix (no baseSite), i.e. /occ/v2/{endpoint}\n   * Most OCC endpoints are related to a baseSite context and are therefor prefixed\n   * with the baseSite. The `/basesites` endpoint does not relate to a specific baseSite\n   * as it will load all baseSites.\n   *\n   * @param endpoint Endpoint suffix\n   */\n  getOccEndpoint(endpoint: string): string {\n    if (!this.config?.backend?.occ) {\n      return '';\n    }\n    endpoint = this.config.backend.occ.endpoints?.[endpoint];\n\n    if (\n      !endpoint.startsWith('/') &&\n      !this.config.backend.occ.prefix.endsWith('/')\n    ) {\n      endpoint = '/' + endpoint;\n    }\n\n    return (\n      this.config.backend.occ.baseUrl +\n      this.config.backend.occ.prefix +\n      endpoint\n    );\n  }\n\n  /**\n   * Returns base OCC endpoint (baseUrl + prefix + baseSite)\n   */\n  getBaseEndpoint(): string {\n    if (!this.config?.backend?.occ) {\n      return '';\n    }\n\n    return (\n      (this.config.backend.occ.baseUrl || '') +\n      this.config.backend.occ.prefix +\n      this.activeBaseSite\n    );\n  }\n\n  /**\n   * Returns an OCC endpoint including baseUrl and baseSite\n   * @param endpoint Endpoint suffix\n   */\n  getEndpoint(endpoint: string): string {\n    if (!endpoint.startsWith('/')) {\n      endpoint = '/' + endpoint;\n    }\n    return this.getBaseEndpoint() + endpoint;\n  }\n\n  /**\n   * Returns a fully qualified OCC Url (including baseUrl and baseSite)\n   * @param endpoint Name of the OCC endpoint key config\n   * @param urlParams  URL parameters\n   * @param queryParams Query parameters\n   * @param scope\n   */\n  getUrl(\n    endpoint: string,\n    urlParams?: object,\n    queryParams?: object,\n    scope?: string\n  ): string {\n    endpoint = this.getEndpointForScope(endpoint, scope);\n\n    if (urlParams) {\n      Object.keys(urlParams).forEach((key) => {\n        urlParams[key] = encodeURIComponent(urlParams[key]);\n      });\n      endpoint = DynamicTemplate.resolve(endpoint, urlParams);\n    }\n\n    if (queryParams) {\n      let httpParamsOptions = { encoder: new HttpParamsURIEncoder() };\n\n      if (endpoint.includes('?')) {\n        let queryParamsFromEndpoint;\n        [endpoint, queryParamsFromEndpoint] = endpoint.split('?');\n\n        httpParamsOptions = {\n          ...httpParamsOptions,\n          ...{ fromString: queryParamsFromEndpoint },\n        };\n      }\n\n      let httpParams = new HttpParams(httpParamsOptions);\n      Object.keys(queryParams).forEach((key) => {\n        const value = queryParams[key];\n        if (value !== undefined) {\n          if (value === null) {\n            httpParams = httpParams.delete(key);\n          } else {\n            httpParams = httpParams.set(key, value);\n          }\n        }\n      });\n\n      const params = httpParams.toString();\n      if (params.length) {\n        endpoint += '?' + params;\n      }\n    }\n\n    return this.getEndpoint(endpoint);\n  }\n\n  private getEndpointForScope(endpoint: string, scope?: string): string {\n    const endpointsConfig = this.config.backend?.occ?.endpoints;\n    const endpointConfig = endpointsConfig[endpoint];\n\n    if (scope) {\n      if (endpointConfig?.[scope]) {\n        return endpointConfig?.[scope];\n      }\n      if (scope === DEFAULT_SCOPE && typeof endpointConfig === 'string') {\n        return endpointConfig;\n      }\n      if (isDevMode()) {\n        console.warn(\n          `${endpoint} endpoint configuration missing for scope \"${scope}\"`\n        );\n      }\n    }\n\n    return (\n      (typeof endpointConfig === 'string'\n        ? endpointConfig\n        : endpointConfig?.[DEFAULT_SCOPE]) || endpoint\n    );\n  }\n}\n","import { HttpHeaders, HttpRequest } from '@angular/common/http';\n\nexport const USE_CLIENT_TOKEN = 'cx-use-client-token';\nexport const USE_CUSTOMER_SUPPORT_AGENT_TOKEN = 'cx-use-csagent-token';\n\nexport class InterceptorUtil {\n  static createHeader<T>(\n    headerName: string,\n    interceptorParam: T,\n    headers?: HttpHeaders\n  ): HttpHeaders {\n    if (headers) {\n      return headers.append(headerName, JSON.stringify(interceptorParam));\n    }\n    headers = new HttpHeaders().set(\n      headerName,\n      JSON.stringify(interceptorParam)\n    );\n    return headers;\n  }\n\n  static removeHeader(\n    headerName: string,\n    request: HttpRequest<any>\n  ): HttpRequest<any> {\n    const updatedHeaders = request.headers.delete(headerName);\n    return request.clone({ headers: updatedHeaders });\n  }\n\n  static getInterceptorParam<T>(headerName: string, headers: HttpHeaders): T {\n    const rawValue = headers.get(headerName);\n    if (rawValue) {\n      return JSON.parse(rawValue);\n    }\n    return undefined;\n  }\n}\n","import { LoaderState } from '../../../state/utils/loader/loader-state';\nimport { ClientToken } from '../models/client-token.model';\n\nexport const CLIENT_AUTH_FEATURE = 'client-auth';\nexport const CLIENT_TOKEN_DATA = '[Client auth] Client Token Data';\n\nexport interface StateWithClientAuth {\n  [CLIENT_AUTH_FEATURE]: ClientAuthState;\n}\n\nexport interface ClientAuthState {\n  clientToken: LoaderState<ClientToken>;\n}\n","import { StateUtils } from '../../../../state/utils/index';\nimport { ClientToken } from '../../models/client-token.model';\nimport { CLIENT_TOKEN_DATA } from '../client-auth-state';\n\nexport const LOAD_CLIENT_TOKEN = '[Token] Load Client Token';\nexport const LOAD_CLIENT_TOKEN_FAIL = '[Token] Load Client Token Fail';\nexport const LOAD_CLIENT_TOKEN_SUCCESS = '[Token] Load Client Token Success';\n\nexport class LoadClientToken extends StateUtils.LoaderLoadAction {\n  readonly type = LOAD_CLIENT_TOKEN;\n  constructor() {\n    super(CLIENT_TOKEN_DATA);\n  }\n}\n\nexport class LoadClientTokenFail extends StateUtils.LoaderFailAction {\n  readonly type = LOAD_CLIENT_TOKEN_FAIL;\n  constructor(public payload: any) {\n    super(CLIENT_TOKEN_DATA, payload);\n  }\n}\n\nexport class LoadClientTokenSuccess extends StateUtils.LoaderSuccessAction {\n  readonly type = LOAD_CLIENT_TOKEN_SUCCESS;\n  constructor(public payload: ClientToken) {\n    super(CLIENT_TOKEN_DATA);\n  }\n}\n\nexport type ClientTokenAction =\n  | LoadClientToken\n  | LoadClientTokenFail\n  | LoadClientTokenSuccess;\n","import { createFeatureSelector, MemoizedSelector } from '@ngrx/store';\nimport {\n  ClientAuthState,\n  CLIENT_AUTH_FEATURE,\n  StateWithClientAuth,\n} from '../client-auth-state';\n\nexport const getClientAuthState: MemoizedSelector<\n  StateWithClientAuth,\n  ClientAuthState\n> = createFeatureSelector<ClientAuthState>(CLIENT_AUTH_FEATURE);\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { LoaderState } from '../../../../state/utils/loader/loader-state';\nimport { ClientToken } from '../../models/client-token.model';\nimport { ClientAuthState, StateWithClientAuth } from '../client-auth-state';\nimport { getClientAuthState } from './feature.selector';\n\nexport const getClientTokenState: MemoizedSelector<\n  StateWithClientAuth,\n  LoaderState<ClientToken>\n> = createSelector(\n  getClientAuthState,\n  (state: ClientAuthState) => state.clientToken\n);\n","import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable, queueScheduler } from 'rxjs';\nimport { filter, map, observeOn } from 'rxjs/operators';\nimport { LoaderState } from '../../../state/utils/loader/loader-state';\nimport { ClientToken } from '../models/client-token.model';\nimport { ClientAuthActions } from '../store/actions/index';\nimport { StateWithClientAuth } from '../store/client-auth-state';\nimport { ClientAuthSelectors } from '../store/selectors/index';\n\n/**\n * Serves a role of a facade on client token store.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ClientTokenService {\n  constructor(protected store: Store<StateWithClientAuth>) {}\n\n  /**\n   * Returns a client token. The client token from the store is returned if there is one.\n   * Otherwise a new token is fetched from the backend and saved in the store.\n   */\n  getClientToken(): Observable<ClientToken> {\n    return this.store.pipe(\n      select(ClientAuthSelectors.getClientTokenState),\n      observeOn(queueScheduler),\n      filter((state: LoaderState<ClientToken>) => {\n        if (this.isClientTokenLoaded(state)) {\n          return true;\n        } else {\n          if (!state.loading) {\n            this.store.dispatch(new ClientAuthActions.LoadClientToken());\n          }\n          return false;\n        }\n      }),\n      map((state: LoaderState<ClientToken>) => state.value)\n    );\n  }\n\n  /**\n   * Fetches a clientToken from the backend and saves it in the store where getClientToken can use it.\n   * The new clientToken is returned.\n   */\n  refreshClientToken(): Observable<ClientToken> {\n    this.store.dispatch(new ClientAuthActions.LoadClientToken());\n\n    return this.store.pipe(\n      select(ClientAuthSelectors.getClientTokenState),\n      filter((state: LoaderState<ClientToken>) =>\n        this.isClientTokenLoaded(state)\n      ),\n      map((state: LoaderState<ClientToken>) => state.value)\n    );\n  }\n\n  protected isClientTokenLoaded(state: LoaderState<ClientToken>): boolean {\n    return (state.success || state.error) && !state.loading;\n  }\n}\n","import { HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { switchMap, take } from 'rxjs/operators';\nimport { ClientToken } from '../models/client-token.model';\nimport { ClientTokenService } from './client-token.service';\n\n/**\n * Service for handling `Authorization` header and errors for requests that\n * require client token (eg. user registration).\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ClientErrorHandlingService {\n  constructor(protected clientTokenService: ClientTokenService) {}\n\n  /**\n   * Refreshes client token and retries the request with the new token.\n   *\n   * @param request\n   * @param httpHandler\n   */\n  public handleExpiredClientToken(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<any> {\n    return this.clientTokenService.refreshClientToken().pipe(\n      take(1),\n      switchMap((token: ClientToken) => {\n        return next.handle(this.createNewRequestWithNewToken(request, token));\n      })\n    );\n  }\n\n  /**\n   * Clones the requests and provided `Authorization` header.\n   *\n   * @param request\n   * @param token\n   */\n  protected createNewRequestWithNewToken(\n    request: HttpRequest<any>,\n    token: ClientToken\n  ): HttpRequest<any> {\n    request = request.clone({\n      setHeaders: {\n        Authorization: `${token.token_type || 'Bearer'} ${token.access_token}`,\n      },\n    });\n    return request;\n  }\n}\n","import {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { catchError, switchMap, take } from 'rxjs/operators';\nimport { OccEndpointsService } from '../../../occ/services/occ-endpoints.service';\nimport {\n  InterceptorUtil,\n  USE_CLIENT_TOKEN,\n} from '../../../occ/utils/interceptor-util';\nimport { ClientToken } from '../models/client-token.model';\nimport { ClientErrorHandlingService } from '../services/client-error-handling.service';\nimport { ClientTokenService } from '../services/client-token.service';\n\n/**\n * Interceptor for handling requests with `USE_CLIENT_TOKEN` header.\n * Provides `Authorization` header with client token and handles errors related to client auth.\n */\n@Injectable({ providedIn: 'root' })\nexport class ClientTokenInterceptor implements HttpInterceptor {\n  constructor(\n    protected clientTokenService: ClientTokenService,\n    protected clientErrorHandlingService: ClientErrorHandlingService,\n    protected occEndpoints: OccEndpointsService\n  ) {}\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const isClientTokenRequest = this.isClientTokenRequest(request);\n    if (isClientTokenRequest) {\n      request = InterceptorUtil.removeHeader(USE_CLIENT_TOKEN, request);\n    }\n\n    return this.getClientToken(isClientTokenRequest).pipe(\n      take(1),\n      switchMap((token: ClientToken) => {\n        if (\n          token?.access_token &&\n          request.url.includes(this.occEndpoints.getBaseEndpoint())\n        ) {\n          request = request.clone({\n            setHeaders: {\n              Authorization: `${token.token_type || 'Bearer'} ${\n                token.access_token\n              }`,\n            },\n          });\n        }\n\n        return next.handle(request).pipe(\n          catchError((errResponse: any) => {\n            if (errResponse instanceof HttpErrorResponse) {\n              if (errResponse.status === 401) {\n                if (isClientTokenRequest) {\n                  if (this.isExpiredToken(errResponse)) {\n                    return this.clientErrorHandlingService.handleExpiredClientToken(\n                      request,\n                      next\n                    );\n                  }\n                }\n              }\n            }\n            return throwError(errResponse);\n          })\n        );\n      })\n    );\n  }\n\n  protected getClientToken(\n    isClientTokenRequest: boolean\n  ): Observable<ClientToken> {\n    if (isClientTokenRequest) {\n      return this.clientTokenService.getClientToken();\n    }\n    return of(null);\n  }\n\n  protected isClientTokenRequest(request: HttpRequest<any>): boolean {\n    const isRequestMapping = InterceptorUtil.getInterceptorParam(\n      USE_CLIENT_TOKEN,\n      request.headers\n    );\n    return Boolean(isRequestMapping);\n  }\n\n  protected isExpiredToken(resp: HttpErrorResponse): boolean {\n    return resp.error?.errors?.[0]?.type === 'InvalidTokenError';\n  }\n}\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Provider } from '@angular/core';\nimport { ClientTokenInterceptor } from './client-token.interceptor';\n\nexport const interceptors: Provider[] = [\n  {\n    provide: HTTP_INTERCEPTORS,\n    useExisting: ClientTokenInterceptor,\n    multi: true,\n  },\n];\n","import { StateConfig } from './state-config';\n\nexport const DEFAULT_LOCAL_STORAGE_KEY = 'spartacus-local-data';\nexport const DEFAULT_SESSION_STORAGE_KEY = 'spartacus-session-data';\n\nexport const defaultStateConfig: StateConfig = {\n  state: {\n    storageSync: {\n      localStorageKeyName: DEFAULT_LOCAL_STORAGE_KEY,\n      sessionStorageKeyName: DEFAULT_SESSION_STORAGE_KEY,\n      keys: {},\n      excludeKeys: {},\n    },\n  },\n};\n","import { Injectable } from '@angular/core';\nimport { Config } from '../../config/config-tokens';\n\nexport enum StorageSyncType {\n  NO_STORAGE = 'NO_STORAGE',\n  LOCAL_STORAGE = 'LOCAL_STORAGE',\n  SESSION_STORAGE = 'SESSION_STORAGE',\n}\n\nexport enum StateTransferType {\n  TRANSFER_STATE = 'SSR',\n}\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class StateConfig {\n  state?: {\n    /**\n     * @deprecated Since 3.0, to synchronize state from the browser storage, use StatePersistentService\n     */\n    storageSync?: {\n      /**\n       * A key name for the data stored in `localStorage`.\n       * Default is `DEFAULT_LOCAL_STORAGE_KEY`.\n       */\n      localStorageKeyName?: string;\n      /**\n       * A key name for the data stored in `sessionStorage`.\n       * Default is `DEFAULT_SESSION_STORAGE_KEY`.\n       */\n      sessionStorageKeyName?: string;\n      /**\n       * A set of state keys that should be synced with the specified browser's storage.\n       */\n      keys?: {\n        [key: string]: StorageSyncType;\n      };\n      /**\n       * A set of keys not to sync with the specified browser's storage.\n       */\n      excludeKeys?: {\n        [key: string]: StorageSyncType;\n      };\n    };\n    ssrTransfer?: {\n      keys?: {\n        /**\n         * A set of state keys that should be transferred from server.\n         */\n        [key: string]: StateTransferType;\n      };\n    };\n  };\n}\n","import { Action, ActionReducer, INIT, MetaReducer, UPDATE } from '@ngrx/store';\nimport { deepMerge } from '../../config/utils/deep-merge';\nimport { WindowRef } from '../../window/window-ref';\nimport { StateConfig, StorageSyncType } from '../config/state-config';\nimport { filterKeysByType, getStateSlice } from '../utils/get-state-slice';\n\nexport function getStorageSyncReducer<T>(\n  winRef: WindowRef,\n  config?: StateConfig\n): MetaReducer<T, Action> {\n  if (\n    !winRef.nativeWindow ||\n    !config ||\n    !config.state ||\n    !config.state.storageSync ||\n    !config.state.storageSync.keys\n  ) {\n    return (reducer) => reducer;\n  }\n\n  const storageSyncConfig = config.state.storageSync;\n\n  return (reducer: ActionReducer<T, Action>): ActionReducer<T, Action> => {\n    return (state, action): T => {\n      const newState = reducer(state, action);\n\n      if (action.type === INIT || action.type === UPDATE) {\n        const rehydratedState = rehydrate(config, winRef);\n        return deepMerge({}, newState, rehydratedState);\n      }\n\n      if (action.type !== INIT) {\n        // handle local storage\n        const localStorageKeys = filterKeysByType(\n          storageSyncConfig.keys,\n          StorageSyncType.LOCAL_STORAGE\n        );\n        const localStorageExclusionKeys = filterKeysByType(\n          storageSyncConfig.excludeKeys,\n          StorageSyncType.LOCAL_STORAGE\n        );\n        const localStorageStateSlices = getStateSlice(\n          localStorageKeys,\n          localStorageExclusionKeys,\n          newState\n        );\n        persistToStorage(\n          config.state.storageSync.localStorageKeyName,\n          localStorageStateSlices,\n          winRef.localStorage\n        );\n\n        // handle session storage\n        const sessionStorageKeys = filterKeysByType(\n          storageSyncConfig.keys,\n          StorageSyncType.SESSION_STORAGE\n        );\n        const sessionStorageExclusionKeys = filterKeysByType(\n          storageSyncConfig.excludeKeys,\n          StorageSyncType.SESSION_STORAGE\n        );\n        const sessionStorageStateSlices = getStateSlice(\n          sessionStorageKeys,\n          sessionStorageExclusionKeys,\n          newState\n        );\n        persistToStorage(\n          config.state.storageSync.sessionStorageKeyName,\n          sessionStorageStateSlices,\n          winRef.sessionStorage\n        );\n      }\n\n      return newState;\n    };\n  };\n}\n\nexport function rehydrate<T>(config: StateConfig, winRef: WindowRef): T {\n  const localStorageValue = readFromStorage(\n    winRef.localStorage,\n    config.state.storageSync.localStorageKeyName\n  );\n  const sessionStorageValue = readFromStorage(\n    winRef.sessionStorage,\n    config.state.storageSync.sessionStorageKeyName\n  );\n\n  return deepMerge(localStorageValue, sessionStorageValue);\n}\n\nexport function exists(value: Object): boolean {\n  if (value != null) {\n    if (typeof value === 'object') {\n      return Object.keys(value).length !== 0;\n    }\n    return value !== '';\n  }\n  return false;\n}\n\nexport function getStorage(\n  storageType: StorageSyncType,\n  winRef: WindowRef\n): Storage {\n  let storage: Storage;\n\n  switch (storageType) {\n    case StorageSyncType.LOCAL_STORAGE: {\n      storage = winRef.localStorage;\n      break;\n    }\n    case StorageSyncType.SESSION_STORAGE: {\n      storage = winRef.sessionStorage;\n      break;\n    }\n    case StorageSyncType.NO_STORAGE: {\n      storage = undefined;\n      break;\n    }\n\n    default: {\n      storage = winRef.sessionStorage;\n    }\n  }\n\n  return storage;\n}\n\nexport function persistToStorage(\n  configKey: string,\n  value: any,\n  storage: Storage\n): void {\n  if (!isSsr(storage) && value) {\n    storage.setItem(configKey, JSON.stringify(value));\n  }\n}\n\nexport function readFromStorage(storage: Storage, key: string): any {\n  if (isSsr(storage)) {\n    return;\n  }\n\n  const storageValue = storage.getItem(key);\n  if (!storageValue) {\n    return;\n  }\n\n  return JSON.parse(storageValue);\n}\n\nexport function isSsr(storage: Storage): boolean {\n  return !Boolean(storage);\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, Subscription } from 'rxjs';\nimport { map, tap, withLatestFrom } from 'rxjs/operators';\nimport { StorageSyncType } from '../../state/config/state-config';\nimport {\n  getStorage,\n  persistToStorage,\n  readFromStorage,\n} from '../../state/reducers/storage-sync.reducer';\nimport { WindowRef } from '../../window/window-ref';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StatePersistenceService {\n  constructor(protected winRef: WindowRef) {}\n\n  /**\n   * Helper to synchronize state to more persistent storage (localStorage, sessionStorage).\n   * It is context aware, so you can keep different state for te same feature based on specified context.\n   *\n   * Eg. cart is valid only under the same base site. So you want to synchronize cart only with the same base site.\n   * Usage for that case: `syncWithStorage({ key: 'cart', state$: activeCartSelector$, context$: this.siteContextParamsService.getValues([BASE_SITE_CONTEXT_ID]), onRead: (state) => setCorrectStateInStore(state) })`.\n   * Active cart for the `electronics` base site will be stored under `spartacus⚿electronics⚿cart` and for apparel under `spartacus⚿apparel⚿cart`.\n   *\n   * On each context change onRead function will be executed with state from storage provided as a parameter.\n   *\n   * Omitting context$ will trigger onRead only once at initialization.\n   *\n   * @param key Key to use in storage for the synchronized state. Should be unique for each feature.\n   * @param state$ State to be saved and later restored.\n   * @param context$ Context for state\n   * @param storageType Storage type to be used to persist state\n   * @param onRead Function to be executed on each storage read after context change\n   *\n   * @returns Subscriptions for reading/writing in storage on context/state change\n   */\n  syncWithStorage<T>({\n    key,\n    state$,\n    context$ = of(''),\n    storageType = StorageSyncType.LOCAL_STORAGE,\n    onRead = () => {},\n  }: {\n    key: string;\n    state$: Observable<T>;\n    context$?: Observable<string | Array<string>>;\n    storageType?: StorageSyncType;\n    onRead?: (stateFromStorage: T) => void;\n  }): Subscription {\n    const storage = getStorage(storageType, this.winRef);\n\n    const subscriptions = new Subscription();\n\n    // Do not change order of subscription! Read should happen before write on context change.\n    subscriptions.add(\n      context$\n        .pipe(\n          map((context) => {\n            return readFromStorage(\n              storage,\n              this.generateKeyWithContext(context, key)\n            ) as T;\n          }),\n          tap((state) => onRead(state))\n        )\n        .subscribe()\n    );\n\n    subscriptions.add(\n      state$.pipe(withLatestFrom(context$)).subscribe(([state, context]) => {\n        persistToStorage(\n          this.generateKeyWithContext(context, key),\n          state,\n          storage\n        );\n      })\n    );\n\n    return subscriptions;\n  }\n\n  /**\n   * Helper to read state from persistent storage (localStorage, sessionStorage).\n   * It is useful if you need synchronously access state saved with `syncWithStorage`.\n   *\n   * @param key Key to use in storage for state. Should be unique for each feature.\n   * @param context Context value for state\n   * @param storageType Storage type from to read state\n   *\n   * @returns State from the storage\n   */\n  readStateFromStorage<T>({\n    key,\n    context = '',\n    storageType = StorageSyncType.LOCAL_STORAGE,\n  }: {\n    key: string;\n    context?: string | Array<string>;\n    storageType?: StorageSyncType;\n  }): T {\n    const storage = getStorage(storageType, this.winRef);\n\n    return readFromStorage(\n      storage,\n      this.generateKeyWithContext(context, key)\n    ) as T;\n  }\n\n  protected generateKeyWithContext(\n    context: string | Array<string>,\n    key: string\n  ): string {\n    return `spartacus⚿${[].concat(context).join('⚿')}⚿${key}`;\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StatePersistenceService } from '../../../state/services/state-persistence.service';\nimport { UserIdService } from '../facade/user-id.service';\nimport { AuthToken } from '../models/auth-token.model';\nimport { AuthRedirectStorageService } from './auth-redirect-storage.service';\nimport { AuthStorageService } from './auth-storage.service';\n\n/**\n * Auth state synced to browser storage.\n */\nexport interface SyncedAuthState {\n  userId?: string;\n  token?: AuthToken;\n  redirectUrl?: string;\n}\n\n/**\n * Responsible for saving the authorization data (userId, token, redirectUrl) in browser storage.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthStatePersistenceService implements OnDestroy {\n  protected subscription = new Subscription();\n\n  constructor(\n    protected statePersistenceService: StatePersistenceService,\n    protected userIdService: UserIdService,\n    protected authStorageService: AuthStorageService,\n    protected authRedirectStorageService: AuthRedirectStorageService\n  ) {}\n\n  /**\n   * Identifier used for storage key.\n   */\n  protected key = 'auth';\n\n  /**\n   * Initializes the synchronization between state and browser storage.\n   */\n  public initSync() {\n    this.subscription.add(\n      this.statePersistenceService.syncWithStorage({\n        key: this.key,\n        state$: this.getAuthState(),\n        onRead: (state) => this.onRead(state),\n      })\n    );\n  }\n\n  /**\n   * Gets and transforms state from different sources into the form that should\n   * be saved in storage.\n   */\n  protected getAuthState(): Observable<SyncedAuthState> {\n    return combineLatest([\n      this.authStorageService.getToken().pipe(\n        filter((state) => !!state),\n        map((state) => {\n          return {\n            ...state,\n          };\n        })\n      ),\n      this.userIdService.getUserId(),\n      this.authRedirectStorageService.getRedirectUrl(),\n    ]).pipe(\n      map(([authToken, userId, redirectUrl]) => {\n        let token = authToken;\n        if (token) {\n          token = { ...token };\n          // To minimize risk of user account hijacking we don't persist user refresh_token\n          delete token.refresh_token;\n        }\n        return { token, userId, redirectUrl };\n      })\n    );\n  }\n\n  /**\n   * Function called on each browser storage read.\n   * Used to update state from browser -> state.\n   */\n  protected onRead(state: SyncedAuthState) {\n    if (state?.token) {\n      this.authStorageService.setToken(state.token);\n    }\n    if (state?.redirectUrl) {\n      this.authRedirectStorageService.setRedirectUrl(state.redirectUrl);\n    }\n    if (state?.userId) {\n      this.userIdService.setUserId(state.userId);\n    } else {\n      this.userIdService.clearUserId();\n    }\n  }\n\n  /**\n   * Reads synchronously state from storage and returns it.\n   */\n  protected readStateFromStorage() {\n    return this.statePersistenceService.readStateFromStorage<SyncedAuthState>({\n      key: this.key,\n    });\n  }\n\n  /**\n   * Check synchronously in browser storage if user is logged in (required by transfer state reducer).\n   * For most cases `isUserLoggedIn` from the `AuthService` should be used instead of this.\n   */\n  public isUserLoggedIn(): boolean {\n    return Boolean(this.readStateFromStorage()?.token?.access_token);\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import { isPlatformBrowser, isPlatformServer } from '@angular/common';\nimport {\n  makeStateKey,\n  StateKey,\n  TransferState,\n} from '@angular/platform-browser';\nimport { INIT } from '@ngrx/store';\nimport { AuthStatePersistenceService } from '../../auth/user-auth/services/auth-state-persistence.service';\nimport { deepMerge } from '../../config/utils/deep-merge';\nimport { StateConfig, StateTransferType } from '../config/state-config';\nimport { filterKeysByType, getStateSlice } from '../utils/get-state-slice';\n\nexport const CX_KEY: StateKey<string> = makeStateKey<string>('cx-state');\n\nexport function getTransferStateReducer(\n  platformId,\n  transferState?: TransferState,\n  config?: StateConfig,\n  authStatePersistenceService?: AuthStatePersistenceService\n) {\n  if (transferState && config?.state?.ssrTransfer?.keys) {\n    if (isPlatformBrowser(platformId)) {\n      return getBrowserTransferStateReducer(\n        transferState,\n        config.state.ssrTransfer.keys,\n        Boolean(authStatePersistenceService?.isUserLoggedIn())\n      );\n    } else if (isPlatformServer(platformId)) {\n      return getServerTransferStateReducer(\n        transferState,\n        config.state.ssrTransfer.keys\n      );\n    }\n  }\n\n  return (reducer) => reducer;\n}\n\nexport function getServerTransferStateReducer(\n  transferState: TransferState,\n  keys: { [key: string]: StateTransferType }\n) {\n  const transferStateKeys = filterKeysByType(\n    keys,\n    StateTransferType.TRANSFER_STATE\n  );\n\n  return function (reducer) {\n    return function (state, action: any) {\n      const newState = reducer(state, action);\n      if (newState) {\n        const stateSlice = getStateSlice(transferStateKeys, [], newState);\n        transferState.set(CX_KEY, stateSlice);\n      }\n\n      return newState;\n    };\n  };\n}\n\nexport function getBrowserTransferStateReducer(\n  transferState: TransferState,\n  keys: { [key: string]: StateTransferType },\n  isLoggedIn: boolean\n) {\n  const transferStateKeys = filterKeysByType(\n    keys,\n    StateTransferType.TRANSFER_STATE\n  );\n\n  return function (reducer) {\n    return function (state, action: any) {\n      if (action.type === INIT) {\n        if (!state) {\n          state = reducer(state, action);\n        }\n\n        if (!isLoggedIn && transferState.hasKey(CX_KEY)) {\n          const cxKey = transferState.get(CX_KEY, {});\n          const transferredStateSlice = getStateSlice(\n            transferStateKeys,\n            [],\n            cxKey\n          );\n\n          state = deepMerge({}, state, transferredStateSlice);\n        }\n        return state;\n      }\n      return reducer(state, action);\n    };\n  };\n}\n","import { InjectionToken, Optional, PLATFORM_ID, Provider } from '@angular/core';\nimport { TransferState } from '@angular/platform-browser';\nimport { META_REDUCERS } from '@ngrx/store';\nimport { AuthStatePersistenceService } from '../../auth/user-auth/services/auth-state-persistence.service';\nimport { Config } from '../../config/config-tokens';\nimport { WindowRef } from '../../window/window-ref';\nimport { getStorageSyncReducer } from './storage-sync.reducer';\nimport { getTransferStateReducer } from './transfer-state.reducer';\n\nexport { getStateSlice } from '../utils/get-state-slice';\nexport { getStorageSyncReducer } from './storage-sync.reducer';\nexport * from './transfer-state.reducer';\n\nexport const TRANSFER_STATE_META_REDUCER = new InjectionToken(\n  'TransferStateMetaReducer'\n);\nexport const STORAGE_SYNC_META_REDUCER = new InjectionToken(\n  'StorageSyncMetaReducer'\n);\n\nexport const stateMetaReducers: Provider[] = [\n  {\n    provide: TRANSFER_STATE_META_REDUCER,\n    useFactory: getTransferStateReducer,\n    deps: [\n      PLATFORM_ID,\n      [new Optional(), TransferState],\n      [new Optional(), Config],\n      [new Optional(), AuthStatePersistenceService],\n    ],\n  },\n  {\n    provide: STORAGE_SYNC_META_REDUCER,\n    useFactory: getStorageSyncReducer,\n    deps: [WindowRef, [new Optional(), Config]],\n  },\n  {\n    provide: META_REDUCERS,\n    useExisting: TRANSFER_STATE_META_REDUCER,\n    multi: true,\n  },\n  {\n    provide: META_REDUCERS,\n    useExisting: STORAGE_SYNC_META_REDUCER,\n    multi: true,\n  },\n];\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { defaultStateConfig } from './config/default-state-config';\nimport { stateMetaReducers } from './reducers/index';\nimport { provideDefaultConfig } from '../config/config-providers';\n\n@NgModule({})\nexport class StateModule {\n  static forRoot(): ModuleWithProviders<StateModule> {\n    return {\n      ngModule: StateModule,\n      providers: [\n        ...stateMetaReducers,\n        provideDefaultConfig(defaultStateConfig),\n      ],\n    };\n  }\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { HttpErrorModel } from '../model/misc.model';\nimport { isDevMode } from '@angular/core';\n\n/**\n * Normalizes HttpErrorResponse to HttpErrorModel.\n *\n * Can be used as a safe and generic way for embodying http errors into\n * NgRx Action payload, as it will strip potentially unserializable parts from\n * it and warn in debug mode if passed error is not instance of HttpErrorModel\n * (which usually happens when logic in NgRx Effect is not sealed correctly)\n */\nexport function normalizeHttpError(\n  error: HttpErrorResponse | any\n): HttpErrorModel | undefined {\n  if (error instanceof HttpErrorResponse) {\n    const normalizedError: HttpErrorModel = {\n      message: error.message,\n      status: error.status,\n      statusText: error.statusText,\n      url: error.url,\n    };\n\n    // include backend's error details\n    if (Array.isArray(error.error.errors)) {\n      normalizedError.details = error.error.errors;\n    } else if (typeof error.error.error === 'string') {\n      normalizedError.details = [\n        {\n          type: error.error.error,\n          message: error.error.error_description,\n        },\n      ];\n    }\n\n    return normalizedError;\n  }\n\n  if (isDevMode()) {\n    console.error(\n      'Error passed to normalizeHttpError is not HttpErrorResponse instance',\n      error\n    );\n  }\n\n  return undefined;\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthConfigService } from '../../user-auth/services/auth-config.service';\nimport { ClientToken } from '../models/client-token.model';\n\n/**\n * Responsible for requesting from OAuth server `ClientToken` for a particular\n * auth client.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ClientAuthenticationTokenService {\n  constructor(\n    protected http: HttpClient,\n    protected authConfigService: AuthConfigService\n  ) {}\n\n  /**\n   * Loads token with client authentication flow.\n   *\n   * @returns observable with ClientToken\n   */\n  loadClientAuthenticationToken(): Observable<ClientToken> {\n    const url: string = this.authConfigService.getTokenEndpoint();\n    const params = new HttpParams()\n      .set(\n        'client_id',\n        encodeURIComponent(this.authConfigService.getClientId())\n      )\n      .set(\n        'client_secret',\n        encodeURIComponent(this.authConfigService.getClientSecret())\n      )\n      .set('grant_type', 'client_credentials');\n\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/x-www-form-urlencoded',\n    });\n    return this.http.post<ClientToken>(url, params, { headers });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, exhaustMap, map } from 'rxjs/operators';\nimport { normalizeHttpError } from '../../../../util/normalize-http-error';\nimport { ClientToken } from '../../../client-auth/models/client-token.model';\nimport { ClientAuthenticationTokenService } from '../../services/client-authentication-token.service';\nimport { ClientAuthActions } from '../actions/index';\n\n@Injectable()\nexport class ClientTokenEffect {\n  @Effect()\n  loadClientToken$: Observable<\n    ClientAuthActions.ClientTokenAction\n  > = this.actions$.pipe(\n    ofType(ClientAuthActions.LOAD_CLIENT_TOKEN),\n    exhaustMap(() => {\n      return this.clientAuthenticationTokenService\n        .loadClientAuthenticationToken()\n        .pipe(\n          map((token: ClientToken) => {\n            return new ClientAuthActions.LoadClientTokenSuccess(token);\n          }),\n          catchError((error) =>\n            of(\n              new ClientAuthActions.LoadClientTokenFail(\n                normalizeHttpError(error)\n              )\n            )\n          )\n        );\n    })\n  );\n\n  constructor(\n    private actions$: Actions,\n    private clientAuthenticationTokenService: ClientAuthenticationTokenService\n  ) {}\n}\n","import { ClientTokenEffect } from './client-token.effect';\n\nexport const effects: any[] = [ClientTokenEffect];\n\nexport * from './client-token.effect';\n","import { InjectionToken, Provider } from '@angular/core';\nimport { ActionReducerMap } from '@ngrx/store';\nimport { loaderReducer } from '../../../../state/utils/loader/loader.reducer';\nimport { ClientToken } from '../../models/client-token.model';\nimport { ClientAuthState, CLIENT_TOKEN_DATA } from '../client-auth-state';\n\nexport function getReducers(): ActionReducerMap<ClientAuthState> {\n  return {\n    clientToken: loaderReducer<ClientToken>(CLIENT_TOKEN_DATA),\n  };\n}\n\nexport const reducerToken: InjectionToken<ActionReducerMap<\n  ClientAuthState\n>> = new InjectionToken<ActionReducerMap<ClientAuthState>>(\n  'ClientAuthReducers'\n);\n\nexport const reducerProvider: Provider = {\n  provide: reducerToken,\n  useFactory: getReducers,\n};\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { StateModule } from '../../../state/state.module';\nimport { CLIENT_AUTH_FEATURE } from './client-auth-state';\nimport { effects } from './effects/index';\nimport { reducerProvider, reducerToken } from './reducers/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    StateModule,\n    StoreModule.forFeature(CLIENT_AUTH_FEATURE, reducerToken),\n    EffectsModule.forFeature(effects),\n  ],\n  providers: [reducerProvider],\n})\nexport class ClientAuthStoreModule {}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { interceptors } from './http-interceptors/index';\nimport { ClientAuthStoreModule } from './store/client-auth-store.module';\n\n/**\n * Some of the OCC endpoints require Authorization header with the client token (eg. user registration).\n * This pattern should not be used in the frontend apps, but until OCC changes this requirement\n * we provide this module to support using those endpoints.\n *\n * After OCC improvements regarding client authentication this module can be safely removed.\n */\n@NgModule({\n  imports: [CommonModule, ClientAuthStoreModule],\n})\nexport class ClientAuthModule {\n  static forRoot(): ModuleWithProviders<ClientAuthModule> {\n    return {\n      ngModule: ClientAuthModule,\n      providers: [...interceptors],\n    };\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const CONFIG_INITIALIZER = new InjectionToken('ConfigInitializer');\n\n/**\n * Used to provide asynchronous config during app initialization\n */\nexport interface ConfigInitializer {\n  /**\n   * List of config parts that are resolved by configFactory, e.g.:\n   * 'context.baseSite', 'context.language'\n   */\n  scopes: string[];\n  /**\n   * Promise that returns config chunk\n   */\n  configFactory: () => Promise<any>;\n}\n\nexport const CONFIG_INITIALIZER_FORROOT_GUARD = new InjectionToken<void>(\n  'CONFIG_INITIALIZER_FORROOT_GUARD'\n);\n","import { Inject, Injectable, isDevMode, Optional } from '@angular/core';\nimport {\n  CONFIG_INITIALIZER_FORROOT_GUARD,\n  ConfigInitializer,\n} from './config-initializer';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { filter, mapTo, take } from 'rxjs/operators';\nimport { deepMerge } from '../utils/deep-merge';\nimport { Config, RootConfig } from '../config-tokens';\n\n/**\n * Provides support for CONFIG_INITIALIZERS\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfigInitializerService {\n  constructor(\n    @Inject(Config) protected config: any,\n    @Optional()\n    @Inject(CONFIG_INITIALIZER_FORROOT_GUARD)\n    protected initializerGuard,\n    @Inject(RootConfig) protected rootConfig: any\n  ) {}\n\n  protected ongoingScopes$ = new BehaviorSubject<string[]>(undefined);\n\n  /**\n   * Returns true if config is stable, i.e. all CONFIG_INITIALIZERS resolved correctly\n   */\n  get isStable(): boolean {\n    return (\n      !this.initializerGuard ||\n      (this.ongoingScopes$.value && this.ongoingScopes$.value.length === 0)\n    );\n  }\n\n  /**\n   * Recommended way to get config for code that can run before app will finish\n   * initialization (APP_INITIALIZERS, selected service constructors)\n   *\n   * Used without parameters waits for the whole config to become stable\n   *\n   * Parameters allow to describe which part of the config should be stable using\n   * string describing config part, e.g.:\n   * 'siteContext', 'siteContext.language', etc.\n   *\n   * @param scopes String describing parts of the config we want to be sure are stable\n   */\n  getStable(...scopes: string[]): Observable<any> {\n    if (this.isStable) {\n      return of(this.config);\n    }\n    return this.ongoingScopes$.pipe(\n      filter(\n        (ongoingScopes) => ongoingScopes && this.areReady(scopes, ongoingScopes)\n      ),\n      take(1),\n      mapTo(this.config)\n    );\n  }\n\n  /**\n   * @deprecated since 3.0, use getStable() instead\n   */\n  async getStableConfig(...scopes: string[]): Promise<any> {\n    return this.getStable(...scopes).toPromise();\n  }\n\n  /**\n   * Removes provided scopes from currently ongoingScopes\n   *\n   * @param scopes\n   */\n  protected finishScopes(scopes: string[]) {\n    const newScopes = [...this.ongoingScopes$.value];\n    for (const scope of scopes) {\n      newScopes.splice(newScopes.indexOf(scope), 1);\n    }\n    this.ongoingScopes$.next(newScopes);\n  }\n\n  /**\n   * Return true if provided scopes are not part of ongoingScopes\n   *\n   * @param scopes\n   * @param ongoingScopes\n   */\n  protected areReady(scopes: string[], ongoingScopes: string[]): boolean {\n    if (!scopes.length) {\n      return !ongoingScopes.length;\n    }\n    for (const scope of scopes) {\n      for (const ongoingScope of ongoingScopes) {\n        if (this.scopesOverlap(scope, ongoingScope)) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Check if two scopes overlap.\n   *\n   * Example of scopes that overlap:\n   * 'test' and 'test', 'test.a' and 'test', 'test' and 'test.a'\n   *\n   * Example of scopes that do not overlap:\n   * 'test' and 'testA', 'test.a' and 'test.b', 'test.nested' and 'test.nest'\n   *\n   * @param a ScopeA\n   * @param b ScopeB\n   */\n  protected scopesOverlap(a: string, b: string): boolean {\n    if (b.length > a.length) {\n      [a, b] = [b, a];\n    }\n    return a.startsWith(b) && (a[b.length] || '.') === '.';\n  }\n\n  /**\n   * @internal\n   *\n   * Not a part of a public API, used by APP_INITIALIZER to initialize all provided CONFIG_INITIALIZERS\n   *\n   */\n  async initialize(initializers?: ConfigInitializer[]) {\n    if (this.ongoingScopes$.value) {\n      // guard for double initialization\n      return;\n    }\n\n    const ongoingScopes: string[] = [];\n\n    const asyncConfigs: Promise<void>[] = [];\n\n    for (const initializer of initializers || []) {\n      if (!initializer) {\n        continue;\n      }\n      if (!initializer.scopes || !initializer.scopes.length) {\n        throw new Error('CONFIG_INITIALIZER should provide scope!');\n      }\n\n      if (isDevMode() && !this.areReady(initializer.scopes, ongoingScopes)) {\n        console.warn(\n          'More than one CONFIG_INITIALIZER is initializing the same config scope.'\n        );\n      }\n\n      ongoingScopes.push(...initializer.scopes);\n\n      asyncConfigs.push(\n        (async () => {\n          const initializerConfig = await initializer.configFactory();\n          // contribute configuration to rootConfig\n          deepMerge(this.rootConfig, initializerConfig);\n          // contribute configuration to global config\n          deepMerge(this.config, initializerConfig);\n          this.finishScopes(initializer.scopes);\n        })()\n      );\n    }\n    this.ongoingScopes$.next(ongoingScopes);\n\n    if (asyncConfigs.length) {\n      await Promise.all(asyncConfigs);\n    }\n  }\n}\n","import { InjectionToken, Provider } from '@angular/core';\n\nexport const ConfigValidatorToken = new InjectionToken(\n  'ConfigurationValidator'\n);\n\n/**\n * ConfigValidator is used to validate config and display warning messages in development mode.\n *\n * In case of failed validation, should return a string with error message.\n */\nexport type ConfigValidator = (config: any) => string | void;\n\n/**\n * Use to probide config validation at app bootstrap (when all config chunks are merged)\n *\n * @param configValidator\n */\nexport function provideConfigValidator(\n  configValidator: ConfigValidator\n): Provider {\n  return {\n    provide: ConfigValidatorToken,\n    useValue: configValidator,\n    multi: true,\n  };\n}\n\nexport function validateConfig(\n  config: any,\n  configValidators: ConfigValidator[]\n) {\n  for (const validate of configValidators) {\n    const warning = validate(config);\n    if (warning) {\n      console.warn(warning);\n    }\n  }\n}\n","import { OccConfig } from '../../../occ/config/occ-config';\nimport { AuthConfig } from './auth-config';\n\nexport function baseUrlConfigValidator(config: OccConfig & AuthConfig) {\n  if (\n    typeof config?.authentication?.baseUrl === 'undefined' &&\n    typeof config?.backend?.occ?.baseUrl === 'undefined' &&\n    // Don't show warning when user tries to work around the issue.\n    config?.authentication?.OAuthLibConfig?.requireHttps !== false\n  ) {\n    return 'Authentication might not work correctly without setting either authentication.baseUrl or backend.occ.baseUrl configuration option! Workaround: To support relative urls in angular-oauth2-oidc library you can try setting authentication.OAuthLibConfig.requireHttps to false.';\n  }\n}\n","import { AuthConfig } from './auth-config';\n\nexport const defaultAuthConfig: AuthConfig = {\n  authentication: {\n    client_id: 'mobile_android',\n    client_secret: 'secret',\n    tokenEndpoint: '/oauth/token',\n    revokeEndpoint: '/oauth/revoke',\n    loginUrl: '/oauth/authorize',\n    OAuthLibConfig: {\n      scope: '',\n      customTokenParameters: ['token_type'],\n      strictDiscoveryDocumentValidation: false,\n      skipIssuerCheck: true,\n      disablePKCE: true,\n      oidc: false,\n      clearHashAfterLogin: false,\n    },\n  },\n};\n","import { Observable, Subscriber, Subscription } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\n// PRIVATE API\n\n/**\n * Allows for dynamic adding and removing source observables\n * and exposes them as one merged observable at a property `output$`.\n *\n * Thanks to the `share()` operator used inside, it subscribes to source observables\n * only when someone subscribes to it. And it unsubscribes from source observables\n * when the counter of consumers drops to 0.\n *\n * **To avoid memory leaks**, all manually added sources should be manually removed\n * when not plan to emit values anymore. In particular closed event sources won't be\n * automatically removed.\n */\nexport class MergingSubject<T> {\n  /**\n   * List of already added sources (but not removed yet)\n   */\n  private sources: Observable<T>[] = [];\n\n  /**\n   * For each source: it stores a subscription responsible for\n   * passing all values from source to the consumer\n   */\n  private subscriptionsToSources = new Map<Observable<T>, Subscription>();\n\n  /**\n   * Observable with all sources merged.\n   *\n   * Only after subscribing to it, under the hood it subscribes to the source observables.\n   * When the number of subscribers drops to 0, it unsubscribes from all source observables.\n   * But if later on something subscribes to it again, it subscribes to the source observables again.\n   *\n   * It multicasts the emissions for each subscriber.\n   */\n  readonly output$: Observable<T> = new Observable<T>((consumer) => {\n    // There can be only 0 or 1 consumer of this observable coming from the `share()` operator\n    // that is piped right after this observable.\n    // `share()` not only multicasts the results but also  When all end-subscribers unsubscribe from `share()` operator, it will unsubscribe\n    // from this observable (by the nature `refCount`-nature of the `share()` operator).\n\n    this.consumer = consumer;\n    this.bindAllSourcesToConsumer(consumer);\n\n    return () => {\n      this.consumer = null;\n      this.unbindAllSourcesFromConsumer();\n    };\n  }).pipe(share());\n\n  /**\n   * Reference to the subscriber coming from the `share()` operator piped to the `output$` observable.\n   * For more, see docs of the `output$` observable;\n   */\n  private consumer: Subscriber<any> = null;\n\n  /**\n   * Registers the given source to pass its values to the `output$` observable.\n   *\n   * It does nothing, when the source has been already added (but not removed yet).\n   */\n  add(source: Observable<T>): void {\n    if (this.has(source)) {\n      return;\n    }\n\n    if (this.consumer) {\n      this.bindSourceToConsumer(source, this.consumer);\n    }\n    this.sources.push(source);\n  }\n\n  /**\n   * Starts passing all values from already added sources to consumer\n   */\n  private bindAllSourcesToConsumer(consumer: Subscriber<T>) {\n    this.sources.forEach((source) =>\n      this.bindSourceToConsumer(source, consumer)\n    );\n  }\n\n  /**\n   * Stops passing all values from already added sources to consumer\n   * (if any consumer is active at the moment)\n   */\n  private unbindAllSourcesFromConsumer() {\n    this.sources.forEach((source) => this.unbindSourceFromConsumer(source));\n  }\n\n  /**\n   * Starts passing all values from a single source to consumer\n   */\n  private bindSourceToConsumer(source: Observable<T>, consumer: Subscriber<T>) {\n    const subscriptionToSource = source.subscribe((val) => consumer.next(val)); // passes all emissions from source to consumer\n    this.subscriptionsToSources.set(source, subscriptionToSource);\n  }\n\n  /**\n   * Stops passing all values from a single source to consumer\n   * (if any consumer is active at the moment)\n   */\n  private unbindSourceFromConsumer(source: Observable<T>) {\n    const subscriptionToSource = this.subscriptionsToSources.get(source);\n    if (subscriptionToSource !== undefined) {\n      subscriptionToSource.unsubscribe();\n      this.subscriptionsToSources.delete(source);\n    }\n  }\n\n  /**\n   * Unregisters the given source so it stops passing its values to `output$` observable.\n   *\n   * Should be used when a source is no longer maintained **to avoid memory leaks**.\n   */\n  remove(source: Observable<T>): void {\n    // clear binding from source to consumer (if any consumer exists at the moment)\n    this.unbindSourceFromConsumer(source);\n\n    // remove source from array\n    let i: number;\n    if ((i = this.sources.findIndex((s) => s === source)) !== -1) {\n      this.sources.splice(i, 1);\n    }\n  }\n\n  /**\n   * Returns whether the given source has been already addded\n   */\n  has(source: Observable<T>): boolean {\n    return this.sources.includes(source);\n  }\n}\n","import { Injectable, isDevMode, Type } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { MergingSubject } from './utils/merging-subject';\n\n/**\n * The object holds registered source observables as well as the merged result observable.\n */\ninterface EventMeta<T> {\n  /**\n   * Input subject used for dispatching occasional event (without registering a source)\n   */\n  inputSubject$: Subject<T>;\n\n  /**\n   * A custom subject that allows for dynamic adding and removing sources to be merged as an output\n   */\n  mergingSubject: MergingSubject<T>;\n}\n\n/**\n * A service to register and observe event sources. Events are driven by event types, which are class signatures\n * for the given event.\n *\n * It is possible to register multiple sources to a single event, even without\n * knowing as multiple decoupled features can attach sources to the same\n * event type.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class EventService {\n  /**\n   * The various events meta are collected in a map, stored by the event type class\n   */\n  private eventsMeta = new Map<Type<any>, EventMeta<any>>();\n\n  /**\n   * Register an event source for the given event type.\n   *\n   * CAUTION: To avoid memory leaks, the returned teardown function should be called\n   *  when the event source is no longer maintained by its creator\n   * (i.e. in `ngOnDestroy` if the event source was registered in the component).\n   *\n   * @param eventType the event type\n   * @param source$ an observable that represents the source\n   *\n   * @returns a teardown function which unregisters the given event source\n   */\n  register<T>(eventType: Type<T>, source$: Observable<T>): () => void {\n    const eventMeta = this.getEventMeta(eventType);\n    if (eventMeta.mergingSubject.has(source$)) {\n      if (isDevMode()) {\n        console.warn(\n          `EventService: the event source`,\n          source$,\n          `has been already registered for the type`,\n          eventType\n        );\n      }\n    } else {\n      eventMeta.mergingSubject.add(source$);\n    }\n\n    return () => eventMeta.mergingSubject.remove(source$);\n  }\n\n  /**\n   * Returns a stream of events for the given event type\n   * @param eventTypes event type\n   */\n  get<T>(eventType: Type<T>): Observable<T> {\n    let output$ = this.getEventMeta(eventType).mergingSubject.output$;\n    if (isDevMode()) {\n      output$ = this.getValidatedEventStream(output$, eventType);\n    }\n    return output$;\n  }\n\n  /**\n   * Dispatches an instance of an individual event.\n   */\n  dispatch(event: Object): void {\n    const eventType = event.constructor as Type<any>;\n    const inputSubject$ = this.getInputSubject(eventType);\n    inputSubject$.next(event);\n  }\n\n  /**\n   * Returns the input subject used to dispatch a single event.\n   * The subject is created on demand, when it's needed for the first time.\n   * @param eventType type of event\n   */\n  private getInputSubject<T>(eventType: Type<T>): Subject<T> {\n    const eventMeta = this.getEventMeta(eventType);\n\n    if (!eventMeta.inputSubject$) {\n      eventMeta.inputSubject$ = new Subject<any>();\n      this.register(eventType, eventMeta.inputSubject$);\n    }\n    return eventMeta.inputSubject$;\n  }\n\n  /**\n   * Returns the event meta object for the given event type\n   */\n  private getEventMeta<T>(eventType: Type<T>): EventMeta<T> {\n    if (isDevMode()) {\n      this.validateEventType(eventType);\n    }\n\n    if (!this.eventsMeta.get(eventType)) {\n      this.createEventMeta(eventType);\n    }\n    return this.eventsMeta.get(eventType);\n  }\n\n  /**\n   * Creates the event meta object for the given event type\n   */\n  private createEventMeta<T>(eventType: Type<T>): void {\n    this.eventsMeta.set(eventType, {\n      inputSubject$: null, // will be created lazily by the `dispatch` method\n      mergingSubject: new MergingSubject(),\n    });\n  }\n\n  /**\n   * Checks if the event type is a valid type (is a class with constructor).\n   *\n   * Should be used only in dev mode.\n   */\n  private validateEventType<T>(eventType: Type<T>): void {\n    if (!eventType?.constructor) {\n      throw new Error(\n        `EventService:  ${eventType} is not a valid event type. Please provide a class reference.`\n      );\n    }\n  }\n\n  /**\n   * Returns the given event source with runtime validation whether the emitted values are instances of given event type.\n   *\n   * Should be used only in dev mode.\n   */\n  private getValidatedEventStream<T>(\n    source$: Observable<T>,\n    eventType: Type<T>\n  ): Observable<T> {\n    return source$.pipe(\n      tap((event) => {\n        if (!(event instanceof eventType)) {\n          console.warn(\n            `EventService: The stream`,\n            source$,\n            `emitted the event`,\n            event,\n            `that is not an instance of the declared type`,\n            eventType.name\n          );\n        }\n      })\n    );\n  }\n}\n","import { Type } from '@angular/core';\n\n/**\n * Creates an instance of the given class and fills its properties with the given data.\n *\n * @param type reference to the class\n * @param data object with properties to be copied to the class\n */\nexport function createFrom<T>(type: Type<T>, data: T): T {\n  return Object.assign(new type(), data);\n}\n","import { Injectable, Type } from '@angular/core';\nimport { ofType } from '@ngrx/effects';\nimport { ActionsSubject } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { EventService } from '../../event/event.service';\nimport { createFrom } from '../../util/create-from';\nimport { ActionToEventMapping } from './action-to-event-mapping';\n\n/**\n * Registers streams of ngrx actions as events source streams\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class StateEventService {\n  constructor(\n    protected actionsSubject: ActionsSubject,\n    protected eventService: EventService\n  ) {}\n\n  /**\n   * Registers an event source stream of specific events\n   * mapped from a given action type.\n   *\n   * @param mapping mapping from action to event\n   *\n   * @returns a teardown function that unregisters the event source\n   */\n  register<T>(mapping: ActionToEventMapping<T>): () => void {\n    return this.eventService.register(\n      mapping.event,\n      this.getFromAction(mapping)\n    );\n  }\n\n  /**\n   * Returns a stream of specific events mapped from a specific action.\n   * @param mapping mapping from action to event\n   */\n  protected getFromAction<T>(mapping: ActionToEventMapping<T>): Observable<T> {\n    return this.actionsSubject\n      .pipe(ofType(...[].concat(mapping.action)))\n      .pipe(\n        map((action: { type: string; payload: T }) =>\n          this.createEvent(action, mapping.event, mapping.factory)\n        )\n      );\n  }\n\n  /**\n   * Creates an event instance for given class out from the action object.\n   * Unless the `factory` parameter is given, the action's `payload` is used\n   * as the argument for the event's constructor.\n   *\n   * @param action instance of an Action\n   * @param mapping mapping from action to event\n   * @param factory optional function getting an action instance and returning an event instance\n   *\n   * @returns instance of an Event\n   */\n  protected createEvent<T>(\n    action: { type: string; payload?: any },\n    eventType: Type<T>,\n    factory?: (action: any) => T\n  ): T {\n    return factory\n      ? factory(action)\n      : createFrom(eventType, action.payload ?? {});\n  }\n}\n","/**\n * Indicates that the user has logged out\n */\nexport class LogoutEvent {}\n/**\n * Indicates that the user has logged in\n */\nexport class LoginEvent {}\n","import { Injectable } from '@angular/core';\nimport { StateEventService } from '../../../state/event/state-event.service';\nimport { AuthActions } from '../store/actions/index';\nimport { LoginEvent } from './user-auth.events';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginEventBuilder {\n  constructor(protected stateEventService: StateEventService) {\n    this.register();\n  }\n\n  /**\n   * Registers logout events\n   */\n  protected register(): void {\n    this.loginEvent();\n  }\n\n  /**\n   * Register a logout event\n   */\n  protected loginEvent(): void {\n    this.stateEventService.register({\n      action: AuthActions.LOGIN,\n      event: LoginEvent,\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { StateEventService } from '../../../state/event/state-event.service';\nimport { AuthActions } from '../store/actions/index';\nimport { LogoutEvent } from './user-auth.events';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogoutEventBuilder {\n  constructor(protected stateEventService: StateEventService) {\n    this.register();\n  }\n\n  /**\n   * Registers logout events\n   */\n  protected register(): void {\n    this.logoutEvent();\n  }\n\n  /**\n   * Register a logout event\n   */\n  protected logoutEvent(): void {\n    this.stateEventService.register({\n      action: AuthActions.LOGOUT,\n      event: LogoutEvent,\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { LoginEventBuilder } from './login-event.builder';\nimport { LogoutEventBuilder } from './logout-event.builder';\n\n@NgModule({})\nexport class UserAuthEventModule {\n  constructor(\n    _logoutEventBuilder: LogoutEventBuilder,\n    _loginEventBuilder: LoginEventBuilder\n  ) {}\n}\n","import { Action } from '@ngrx/store';\nimport {\n  GlobalMessage,\n  GlobalMessageType,\n} from '../../models/global-message.model';\n\nexport const ADD_MESSAGE = '[Global-message] Add a Message';\nexport const REMOVE_MESSAGE = '[Global-message] Remove a Message';\nexport const REMOVE_MESSAGES_BY_TYPE =\n  '[Global-message] Remove messages by type';\n\nexport class AddMessage implements Action {\n  readonly type = ADD_MESSAGE;\n  constructor(public payload: GlobalMessage) {}\n}\n\nexport class RemoveMessage implements Action {\n  readonly type = REMOVE_MESSAGE;\n  constructor(public payload: { type: GlobalMessageType; index: number }) {}\n}\n\nexport class RemoveMessagesByType implements Action {\n  readonly type = REMOVE_MESSAGES_BY_TYPE;\n  constructor(public payload: GlobalMessageType) {}\n}\n\nexport type GlobalMessageAction =\n  | AddMessage\n  | RemoveMessage\n  | RemoveMessagesByType;\n","import { Translatable } from '../../i18n/translatable';\n\nexport const GLOBAL_MESSAGE_FEATURE = 'global-message';\n\nexport interface StateWithGlobalMessage {\n  [GLOBAL_MESSAGE_FEATURE]: GlobalMessageState;\n}\n\nexport interface GlobalMessageState {\n  entities: GlobalMessageEntities;\n}\n\nexport interface GlobalMessageEntities {\n  [messageType: string]: Translatable[];\n}\n","import { createFeatureSelector, MemoizedSelector } from '@ngrx/store';\nimport {\n  GlobalMessageState,\n  GLOBAL_MESSAGE_FEATURE,\n  StateWithGlobalMessage,\n} from '../global-message-state';\n\nexport const getGlobalMessageState: MemoizedSelector<\n  StateWithGlobalMessage,\n  GlobalMessageState\n> = createFeatureSelector<GlobalMessageState>(GLOBAL_MESSAGE_FEATURE);\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { Translatable } from '../../../i18n/translatable';\nimport { GlobalMessageType } from '../../models/global-message.model';\nimport {\n  GlobalMessageEntities,\n  GlobalMessageState,\n  StateWithGlobalMessage,\n} from '../global-message-state';\nimport { getGlobalMessageState } from './feature.selector';\n\nexport const getGlobalMessageEntities: MemoizedSelector<\n  StateWithGlobalMessage,\n  GlobalMessageEntities\n> = createSelector(\n  getGlobalMessageState,\n  (state: GlobalMessageState) => state.entities\n);\n\nexport const getGlobalMessageEntitiesByType = (\n  type: GlobalMessageType\n): MemoizedSelector<StateWithGlobalMessage, Translatable[]> => {\n  return createSelector(\n    getGlobalMessageEntities,\n    (entities) => entities && entities[type]\n  );\n};\n\nexport const getGlobalMessageCountByType = (\n  type: GlobalMessageType\n): MemoizedSelector<StateWithGlobalMessage, number> => {\n  return createSelector(\n    getGlobalMessageEntitiesByType(type),\n    (entities) => entities && entities.length\n  );\n};\n","import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { Translatable } from '../../i18n/translatable';\nimport { GlobalMessageType } from '../models/global-message.model';\nimport { GlobalMessageActions } from '../store/actions/index';\nimport {\n  GlobalMessageEntities,\n  StateWithGlobalMessage,\n} from '../store/global-message-state';\nimport { GlobalMessageSelectors } from '../store/selectors/index';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GlobalMessageService {\n  constructor(protected store: Store<StateWithGlobalMessage>) {}\n\n  /**\n   * Get all global messages\n   */\n  get(): Observable<GlobalMessageEntities> {\n    return this.store.pipe(\n      select(GlobalMessageSelectors.getGlobalMessageEntities),\n      filter((data) => data !== undefined)\n    );\n  }\n\n  /**\n   * Add one message into store\n   * @param text: string | Translatable\n   * @param type: GlobalMessageType object\n   * @param timeout: number\n   */\n  add(\n    text: string | Translatable,\n    type: GlobalMessageType,\n    timeout?: number\n  ): void {\n    this.store.dispatch(\n      new GlobalMessageActions.AddMessage({\n        text: typeof text === 'string' ? { raw: text } : text,\n        type,\n        timeout,\n      })\n    );\n  }\n\n  /**\n   * Remove message(s) from store\n   * @param type: GlobalMessageType\n   * @param index:optional. Without it, messages will be removed by type; otherwise,\n   * message will be removed from list by index.\n   */\n  remove(type: GlobalMessageType, index?: number): void {\n    this.store.dispatch(\n      index !== undefined\n        ? new GlobalMessageActions.RemoveMessage({\n            type: type,\n            index: index,\n          })\n        : new GlobalMessageActions.RemoveMessagesByType(type)\n    );\n  }\n}\n","import { Translatable } from '../../i18n/translatable';\n\nexport enum GlobalMessageType {\n  MSG_TYPE_CONFIRMATION = '[GlobalMessage] Confirmation',\n  MSG_TYPE_ERROR = '[GlobalMessage] Error',\n  MSG_TYPE_INFO = '[GlobalMessage] Information',\n  MSG_TYPE_WARNING = '[GlobalMessage] Warning',\n}\n\nexport interface GlobalMessage {\n  text: Translatable;\n  type: GlobalMessageType;\n  timeout?: number;\n}\n","import { HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, switchMap, take, tap } from 'rxjs/operators';\nimport { GlobalMessageService } from '../../../global-message/facade/global-message.service';\nimport { GlobalMessageType } from '../../../global-message/models/global-message.model';\nimport { OccEndpointsService } from '../../../occ/services/occ-endpoints.service';\nimport { RoutingService } from '../../../routing/facade/routing.service';\nimport { AuthService } from '../facade/auth.service';\nimport { AuthToken } from '../models/auth-token.model';\nimport { AuthStorageService } from './auth-storage.service';\nimport { OAuthLibWrapperService } from './oauth-lib-wrapper.service';\n\n/**\n * Extendable service for `AuthInterceptor`.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthHttpHeaderService {\n  constructor(\n    protected authService: AuthService,\n    protected authStorageService: AuthStorageService,\n    protected oAuthLibWrapperService: OAuthLibWrapperService,\n    protected routingService: RoutingService,\n    protected occEndpoints: OccEndpointsService,\n    protected globalMessageService: GlobalMessageService\n  ) {}\n\n  /**\n   * Checks if request should be handled by this service (if it's OCC call).\n   */\n  public shouldCatchError(request: HttpRequest<any>): boolean {\n    return this.isOccUrl(request.url);\n  }\n\n  /**\n   * Adds `Authorization` header for OCC calls.\n   */\n  public alterRequest(request: HttpRequest<any>): HttpRequest<any> {\n    const hasAuthorizationHeader = !!this.getAuthorizationHeader(request);\n    const isOccUrl = this.isOccUrl(request.url);\n    if (!hasAuthorizationHeader && isOccUrl) {\n      return request.clone({\n        setHeaders: {\n          ...this.createAuthorizationHeader(),\n        },\n      });\n    }\n    return request;\n  }\n\n  protected isOccUrl(url: string): boolean {\n    return url.includes(this.occEndpoints.getBaseEndpoint());\n  }\n\n  protected getAuthorizationHeader(request: HttpRequest<any>): string {\n    const rawValue = request.headers.get('Authorization');\n    return rawValue;\n  }\n\n  protected createAuthorizationHeader(): { Authorization?: string } {\n    let token;\n    this.authStorageService\n      .getToken()\n      .subscribe((tok) => (token = tok))\n      .unsubscribe();\n\n    if (token?.access_token) {\n      return {\n        Authorization: `${token.token_type || 'Bearer'} ${token.access_token}`,\n      };\n    }\n    return {};\n  }\n\n  /**\n   * Refreshes access_token and then retries the call with the new token.\n   */\n  public handleExpiredAccessToken(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<AuthToken>> {\n    return this.handleExpiredToken().pipe(\n      switchMap((token: AuthToken) => {\n        return next.handle(this.createNewRequestWithNewToken(request, token));\n      })\n    );\n  }\n\n  /**\n   * Logout user, redirected to login page and informs about expired session.\n   */\n  public handleExpiredRefreshToken(): void {\n    // Logout user\n    // TODO(#9638): Use logout route when it will support passing redirect url\n    this.authService.coreLogout();\n    this.routingService.go({ cxRoute: 'login' });\n    this.globalMessageService.add(\n      {\n        key: 'httpHandlers.sessionExpired',\n      },\n      GlobalMessageType.MSG_TYPE_ERROR\n    );\n  }\n\n  /**\n   * Attempts to refresh token if possible.\n   * If it is not possible calls `handleExpiredRefreshToken`.\n   *\n   * @return observable which omits new access_token. (Warn: might never emit!).\n   */\n  protected handleExpiredToken(): Observable<AuthToken> {\n    const stream = this.authStorageService.getToken();\n    let oldToken: AuthToken;\n    return stream.pipe(\n      tap((token: AuthToken) => {\n        if (token.access_token && token.refresh_token && !oldToken) {\n          this.oAuthLibWrapperService.refreshToken();\n        } else if (!token.refresh_token) {\n          this.handleExpiredRefreshToken();\n        }\n        oldToken = oldToken || token;\n      }),\n      filter(\n        (token: AuthToken) => oldToken.access_token !== token.access_token\n      ),\n      take(1)\n    );\n  }\n\n  protected createNewRequestWithNewToken(\n    request: HttpRequest<any>,\n    token: AuthToken\n  ): HttpRequest<any> {\n    request = request.clone({\n      setHeaders: {\n        Authorization: `${token.token_type || 'Bearer'} ${token.access_token}`,\n      },\n    });\n    return request;\n  }\n}\n","import {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AuthConfigService } from '../services/auth-config.service';\nimport { AuthHttpHeaderService } from '../services/auth-http-header.service';\n\n/**\n * Responsible for catching auth errors and providing `Authorization` header for API calls.\n * Uses AuthHttpHeaderService for request manipulation and error handling. Interceptor only hooks into request send/received events.\n */\n@Injectable({ providedIn: 'root' })\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(\n    protected authHttpHeaderService: AuthHttpHeaderService,\n    protected authConfigService: AuthConfigService\n  ) {}\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const shouldCatchError = this.authHttpHeaderService.shouldCatchError(\n      request\n    );\n\n    request = this.authHttpHeaderService.alterRequest(request);\n\n    return next.handle(request).pipe(\n      catchError((errResponse: any) => {\n        if (errResponse instanceof HttpErrorResponse) {\n          switch (errResponse.status) {\n            case 401: // Unauthorized\n              if (this.isExpiredToken(errResponse) && shouldCatchError) {\n                return this.authHttpHeaderService.handleExpiredAccessToken(\n                  request,\n                  next\n                );\n              } else if (\n                // Refresh expired token\n                // Check that the OAUTH endpoint was called and the error is for refresh token is expired\n                errResponse.url.includes(\n                  this.authConfigService.getTokenEndpoint()\n                ) &&\n                errResponse.error.error === 'invalid_token'\n              ) {\n                this.authHttpHeaderService.handleExpiredRefreshToken();\n                return of<HttpEvent<any>>();\n              }\n\n              break;\n            case 400: // Bad Request\n              if (\n                errResponse.url.includes(\n                  this.authConfigService.getTokenEndpoint()\n                ) &&\n                errResponse.error.error === 'invalid_grant'\n              ) {\n                if (request.body.get('grant_type') === 'refresh_token') {\n                  this.authHttpHeaderService.handleExpiredRefreshToken();\n                }\n              }\n              break;\n          }\n        }\n        return throwError(errResponse);\n      })\n    );\n  }\n\n  protected isExpiredToken(resp: HttpErrorResponse): boolean {\n    return resp.error?.errors?.[0]?.type === 'InvalidTokenError';\n  }\n}\n","import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { switchMap, take } from 'rxjs/operators';\nimport { AuthConfigService } from '../services/auth-config.service';\nimport { AuthStorageService } from '../services/auth-storage.service';\n\n/**\n * This interceptor is dedicated for Hybris OAuth server which requires `Authorization` header for revoke token calls.\n */\n@Injectable({ providedIn: 'root' })\nexport class TokenRevocationInterceptor implements HttpInterceptor {\n  constructor(\n    protected authStorageService: AuthStorageService,\n    protected authConfigService: AuthConfigService\n  ) {}\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const isTokenRevocationRequest = this.isTokenRevocationRequest(request);\n    return this.authStorageService.getToken().pipe(\n      take(1),\n      switchMap((token) => {\n        if (isTokenRevocationRequest) {\n          request = request.clone({\n            setHeaders: {\n              Authorization: `${token.token_type || 'Bearer'} ${\n                token.access_token\n              }`,\n            },\n          });\n        }\n        return next.handle(request);\n      })\n    );\n  }\n\n  protected isTokenRevocationRequest(request: HttpRequest<any>): boolean {\n    return request.url === this.authConfigService.getRevokeEndpoint();\n  }\n}\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Provider } from '@angular/core';\nimport { AuthInterceptor } from './auth.interceptor';\nimport { TokenRevocationInterceptor } from './token-revocation.interceptor';\n\nexport const interceptors: Provider[] = [\n  {\n    provide: HTTP_INTERCEPTORS,\n    useExisting: AuthInterceptor,\n    multi: true,\n  },\n  {\n    provide: HTTP_INTERCEPTORS,\n    useExisting: TokenRevocationInterceptor,\n    multi: true,\n  },\n];\n","import { CommonModule } from '@angular/common';\nimport { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';\nimport { OAuthModule, OAuthStorage } from 'angular-oauth2-oidc';\nimport { ConfigInitializerService } from '../../config/config-initializer/config-initializer.service';\nimport { provideDefaultConfig } from '../../config/config-providers';\nimport { provideConfigValidator } from '../../config/config-validator/config-validator';\nimport { baseUrlConfigValidator } from './config/base-url-config-validator';\nimport { defaultAuthConfig } from './config/default-auth-config';\nimport { UserAuthEventModule } from './events/user-auth-event.module';\nimport { AuthService } from './facade/auth.service';\nimport { interceptors } from './http-interceptors/index';\nimport { AuthStatePersistenceService } from './services/auth-state-persistence.service';\nimport { AuthStorageService } from './services/auth-storage.service';\n\n/**\n * Initialize the check for `token` or `code` in the url returned from the OAuth server.\n */\nexport function checkOAuthParamsInUrl(\n  authService: AuthService,\n  configInit: ConfigInitializerService\n) {\n  const result = () =>\n    configInit.getStableConfig().then(() => {\n      // Wait for stable config is used, because with auth redirect would kick so quickly that the page would not be loaded correctly\n      authService.checkOAuthParamsInUrl();\n    });\n\n  return result;\n}\n\nexport function authStatePersistenceFactory(\n  authStatePersistenceService: AuthStatePersistenceService\n) {\n  const result = () => authStatePersistenceService.initSync();\n  return result;\n}\n\n/**\n * Authentication module for a user. Handlers requests for logged in users,\n * provides authorization services and storage for tokens.\n */\n@NgModule({\n  imports: [CommonModule, OAuthModule.forRoot(), UserAuthEventModule],\n})\nexport class UserAuthModule {\n  static forRoot(): ModuleWithProviders<UserAuthModule> {\n    return {\n      ngModule: UserAuthModule,\n      providers: [\n        provideDefaultConfig(defaultAuthConfig),\n        provideConfigValidator(baseUrlConfigValidator),\n        ...interceptors,\n        {\n          provide: OAuthStorage,\n          useExisting: AuthStorageService,\n        },\n        {\n          provide: APP_INITIALIZER,\n          useFactory: authStatePersistenceFactory,\n          deps: [AuthStatePersistenceService],\n          multi: true,\n        },\n        {\n          provide: APP_INITIALIZER,\n          useFactory: checkOAuthParamsInUrl,\n          deps: [AuthService, ConfigInitializerService],\n          multi: true,\n        },\n      ],\n    };\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ClientAuthModule } from './client-auth/client-auth.module';\nimport { UserAuthModule } from './user-auth/user-auth.module';\n\n@NgModule({\n  imports: [CommonModule, ClientAuthModule.forRoot(), UserAuthModule.forRoot()],\n})\nexport class AuthModule {\n  static forRoot(): ModuleWithProviders<AuthModule> {\n    return {\n      ngModule: AuthModule,\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SemanticPathService } from '../../../routing/configurable-routes/url-translation/semantic-path.service';\nimport { AuthService } from '../facade/auth.service';\nimport { AuthRedirectService } from '../services/auth-redirect.service';\n\n/**\n * Checks if there is currently logged in user.\n * Use to protect pages dedicated only for logged in users.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    protected authService: AuthService,\n    protected authRedirectService: AuthRedirectService,\n    protected router: Router,\n    protected semanticPathService: SemanticPathService\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    return this.authService.isUserLoggedIn().pipe(\n      map((isLoggedIn) => {\n        if (!isLoggedIn) {\n          this.authRedirectService.reportAuthGuard();\n          return this.router.parseUrl(this.semanticPathService.get('login'));\n        }\n        return isLoggedIn;\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SemanticPathService } from '../../../routing/configurable-routes/url-translation/semantic-path.service';\nimport { AuthService } from '../facade/auth.service';\nimport { AuthRedirectService } from '../services/auth-redirect.service';\n\n/**\n * Checks if there isn't any logged in user.\n * Use to protect pages dedicated only for guests (eg. login page).\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotAuthGuard implements CanActivate {\n  constructor(\n    protected authService: AuthService,\n    protected authRedirectService: AuthRedirectService,\n    protected semanticPathService: SemanticPathService,\n    protected router: Router\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    this.authRedirectService.reportNotAuthGuard();\n\n    // redirect, if user is already logged in:\n    return this.authService.isUserLoggedIn().pipe(\n      map((isLoggedIn) => {\n        if (isLoggedIn) {\n          return this.router.parseUrl(this.semanticPathService.get('home'));\n        }\n        return !isLoggedIn;\n      })\n    );\n  }\n}\n","import { Observable } from 'rxjs';\nimport {\n  CustomerSearchOptions,\n  CustomerSearchPage,\n} from '../models/asm.models';\n\nexport abstract class AsmAdapter {\n  /**\n   * Abstract function used to search for customers.\n   */\n  abstract customerSearch(\n    options: CustomerSearchOptions\n  ): Observable<CustomerSearchPage>;\n}\n","import { OccConfig } from '../../config/occ-config';\n\nexport const defaultOccAsmConfig: OccConfig = {\n  backend: {\n    occ: {\n      endpoints: {\n        asmCustomerSearch: '/assistedservicewebservices/customers/search',\n      },\n    },\n  },\n};\n","import { OccConfig } from '../../occ/config/occ-config';\nimport { Injectable } from '@angular/core';\nimport { Config } from '../../config/config-tokens';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class AsmConfig extends OccConfig {\n  asm?: {\n    agentSessionTimer?: {\n      startingDelayInSeconds?: number;\n    };\n    customerSearch?: {\n      maxResults?: number;\n    };\n  };\n}\n","import { InjectionToken } from '@angular/core';\nimport { Converter } from '../../util/converter.service';\nimport { CustomerSearchPage } from '../models/asm.models';\n\nexport const CUSTOMER_SEARCH_PAGE_NORMALIZER = new InjectionToken<\n  Converter<any, CustomerSearchPage>\n>('CustomerSearchPageNormalizer');\n","import { NgModuleRef } from '@angular/core';\n\n/**\n * Will be thrown in case lazy loaded modules are loaded and instantiated.\n *\n * This event is thrown for cms driven lazy loaded feature modules amd it's\n * dependencies\n */\nexport class ModuleInitializedEvent {\n  /**\n   * Name/identifier of the feature associated with this module.\n   *\n   * You can differentiate between feature and dependency modules, as the latter\n   * won't have thus property set.\n   */\n  feature?: string;\n  /**\n   * Reference fpr lazy loaded module instance\n   */\n  moduleRef: NgModuleRef<any>;\n}\n","import {\n  AbstractType,\n  InjectFlags,\n  InjectionToken,\n  Injector,\n  Type,\n} from '@angular/core';\n\nconst NOT_FOUND_SYMBOL = {};\n\n/**\n * CombinedInjector is able to combine more than one injector together.\n *\n * Can be used to instantiate lazy loaded modules with dependency modules,\n * so lazy loaded module can use instances provided in all dependency modules.\n *\n * Injector tries to resolve token in all Injector, taking into account the order\n * in which they were provided in complementaryInjectors and fallbacks to the\n * mainInjector.\n */\nexport class CombinedInjector implements Injector {\n  /**\n   * @param mainInjector Component hierarchical injector\n   * @param complementaryInjectors Additional injector that will be taken into an account when resolving dependencies\n   */\n  constructor(\n    private mainInjector: Injector,\n    private complementaryInjectors: Injector[]\n  ) {}\n\n  get<T>(\n    token: Type<T> | InjectionToken<T> | AbstractType<T>,\n    notFoundValue?: T,\n    flags?: InjectFlags\n  ): T;\n  get(token: any, notFoundValue?: any): any;\n  get(token, notFoundValue?: any, flags?: InjectFlags): any {\n    // tslint:disable-next-line:no-bitwise\n    if (flags & InjectFlags.Self) {\n      if (notFoundValue !== undefined) {\n        return notFoundValue;\n      }\n      throw new Error(\n        \"CombinedInjector should be used as a parent injector / doesn't support self dependencies\"\n      );\n    }\n\n    for (const injector of [...this.complementaryInjectors]) {\n      // First we are resolving providers provided at Self level\n      // in all complementary injectors...\n      const service = injector.get(token, NOT_FOUND_SYMBOL, InjectFlags.Self);\n      if (service !== NOT_FOUND_SYMBOL) {\n        return service;\n      }\n    }\n    // ...and then fallback to main injector passing the flag\n    return this.mainInjector.get(token, notFoundValue, flags);\n  }\n}\n","import {\n  Compiler,\n  Injectable,\n  Injector,\n  NgModuleFactory,\n  NgModuleRef,\n  OnDestroy,\n} from '@angular/core';\nimport {\n  combineLatest,\n  ConnectableObservable,\n  from,\n  Observable,\n  of,\n  queueScheduler,\n  Subscription,\n} from 'rxjs';\nimport { map, observeOn, publishReplay, switchMap, tap } from 'rxjs/operators';\nimport { createFrom } from '../util/create-from';\nimport { ModuleInitializedEvent } from './events/module-initialized-event';\nimport { EventService } from '../event/event.service';\nimport { CombinedInjector } from '../util/combined-injector';\n\n/**\n * Utility service for managing dynamic imports of Angular services\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LazyModulesService implements OnDestroy {\n  /**\n   * Expose lazy loaded module references\n   */\n  readonly modules$: Observable<NgModuleRef<any>> = this.events\n    .get(ModuleInitializedEvent)\n    .pipe(\n      map((event) => event.moduleRef),\n      publishReplay()\n    );\n\n  private readonly dependencyModules = new Map<any, NgModuleRef<any>>();\n  private readonly eventSubscription: Subscription;\n\n  constructor(\n    protected compiler: Compiler,\n    protected injector: Injector,\n    protected events: EventService\n  ) {\n    this.eventSubscription = (this.modules$ as ConnectableObservable<\n      NgModuleRef<any>\n    >).connect();\n  }\n\n  /**\n   * Resolves module instance based dynamic import wrapped in an arrow function\n   *\n   * New module instance will be created with each call.\n   *\n   * @param moduleFunc\n   * @param feature\n   */\n  public resolveModuleInstance(\n    moduleFunc: () => Promise<any>,\n    feature?: string,\n    dependencyModuleRefs: NgModuleRef<any>[] = []\n  ): Observable<NgModuleRef<any>> {\n    const parentInjector = dependencyModuleRefs.length\n      ? new CombinedInjector(\n          this.injector,\n          dependencyModuleRefs.map((moduleRef) => moduleRef.injector)\n        )\n      : this.injector;\n\n    return this.resolveModuleFactory(moduleFunc).pipe(\n      map(([moduleFactory]) => moduleFactory.create(parentInjector)),\n      tap((moduleRef) =>\n        this.events.dispatch(\n          createFrom(ModuleInitializedEvent, {\n            feature,\n            moduleRef,\n          })\n        )\n      )\n    );\n  }\n\n  /**\n   * Returns dependency module instance and initializes it when needed.\n   *\n   * Module will be instantiated only once, at first request for a this specific module class\n   */\n  public resolveDependencyModuleInstance(\n    moduleFunc: () => Promise<any>\n  ): Observable<NgModuleRef<any>> {\n    // We grab moduleFactory symbol from module function and if there is no\n    // such a module created yet, we create it and store it in a\n    // dependencyModules map\n    return this.resolveModuleFactory(moduleFunc).pipe(\n      map(([moduleFactory, module]) => {\n        if (!this.dependencyModules.has(module)) {\n          const moduleRef = moduleFactory.create(this.injector);\n          this.dependencyModules.set(module, moduleRef);\n        }\n\n        return this.dependencyModules.get(module);\n      }),\n      tap((moduleRef) =>\n        this.events.dispatch(\n          createFrom(ModuleInitializedEvent, {\n            moduleRef,\n          })\n        )\n      )\n    );\n  }\n\n  /**\n   * Resolve any Angular module from an function that return module or moduleFactory\n   */\n  private resolveModuleFactory(\n    moduleFunc: () => Promise<any>\n  ): Observable<[NgModuleFactory<any>, any]> {\n    return from(moduleFunc()).pipe(\n      switchMap((module) =>\n        module instanceof NgModuleFactory\n          ? (of([module, module]) as Observable<[NgModuleFactory<any>, any]>)\n          : combineLatest([\n              // using compiler here is for jit compatibility, there is no overhead\n              // for aot production builds as it will be stubbed\n              from(this.compiler.compileModuleAsync(module as any)),\n              of(module),\n            ])\n      ),\n      observeOn(queueScheduler)\n    );\n  }\n\n  ngOnDestroy(): void {\n    if (this.eventSubscription) {\n      this.eventSubscription.unsubscribe();\n    }\n\n    // clean up all initialized dependency modules\n    this.dependencyModules.forEach((dependency) => dependency.destroy());\n  }\n}\n","import {\n  AbstractType,\n  Injectable,\n  InjectFlags,\n  InjectionToken,\n  Injector,\n  Type,\n} from '@angular/core';\nimport { LazyModulesService } from './lazy-modules.service';\nimport { Observable } from 'rxjs';\nimport { filter, map, scan, startWith } from 'rxjs/operators';\n\nconst NOT_FOUND_SYMBOL: any = {};\n\n/**\n * UnifiedInjector provides a way to get instances of tokens not only once, from the root injector,\n * but also from lazy loaded module injectors that can be initialized over time.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnifiedInjector {\n  /**\n   * Gather all the injectors, with the root injector as a first one\n   *\n   */\n  readonly injectors$: Observable<Injector> = this.lazyModules.modules$.pipe(\n    map((moduleRef) => moduleRef.injector),\n    startWith(this.rootInjector)\n  );\n\n  constructor(\n    protected rootInjector: Injector,\n    protected lazyModules: LazyModulesService\n  ) {}\n\n  /**\n   * Gen instances for specified tokens.\n   *\n   * When notFoundValue is provided, it will consistently emit once per injector,\n   * even if injector doesn't contain instances for specified token.\n   * Otherwise, emissions will only involve cases, where new instances will be found.\n   *\n   * @param token\n   * @param notFoundValue\n   */\n  get<T>(\n    token: Type<T> | InjectionToken<T> | AbstractType<T>,\n    notFoundValue?: T\n  ): Observable<T> {\n    return this.injectors$.pipe(\n      map((injector, index) =>\n        injector.get<T>(\n          token,\n          notFoundValue ?? NOT_FOUND_SYMBOL,\n          // we want to get only Self instances from all injectors except the\n          // first one, which is a root injector\n          index ? InjectFlags.Self : undefined\n        )\n      ),\n      filter((instance) => instance !== NOT_FOUND_SYMBOL)\n    );\n  }\n\n  /**\n   * Get multi provided instances for a specified token\n   *\n   * @param token\n   */\n  getMulti<T>(\n    token: Type<T> | InjectionToken<T> | AbstractType<T>\n  ): Observable<T[]>;\n  getMulti<T>(token: any): Observable<T>;\n  getMulti<T>(\n    token: Type<T> | InjectionToken<T> | AbstractType<T> | any\n  ): Observable<T[]> {\n    return this.get(token, []).pipe(\n      filter((instances) => {\n        if (!Array.isArray(instances)) {\n          throw new Error(\n            `Multi-providers mixed with single providers for ${token.toString()}!`\n          );\n        }\n        return instances.length > 0;\n      }),\n      scan((acc, services) => [...acc, ...services], [])\n    );\n  }\n}\n","import { Observable } from 'rxjs';\n\n/**\n * Will grab last synchronously available value from the observable stream\n * at the time of the call.\n *\n * Should be used with caution, as it's not a legitimate way for getting value\n * from the observable. Observable composition or standard subscribe method\n * should be used for most of the cases.\n *\n * @param source\n */\nexport function getLastValueSync<T>(source: Observable<T>): T | undefined {\n  let value: T | undefined;\n  source.subscribe((emission) => (value = emission)).unsubscribe();\n  return value;\n}\n","import { Injectable, InjectionToken, OnDestroy } from '@angular/core';\nimport { Observable, OperatorFunction, Subscription } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { UnifiedInjector } from '../lazy-loading/unified-injector';\nimport { getLastValueSync } from './rxjs/get-last-value-sync';\n\n/**\n * Converter is used to convert source data model to target data model.\n * By convention, we distinguish two flows:\n *   - *Normalize* is the conversion from backend models to UI models\n *   - *Serialize* is the conversion of UI models to backend models (in case of submitting data to the backend).\n *\n * Converters can be stacked together to to apply decoupled customizations\n */\nexport interface Converter<S, T> {\n  /**\n   * Convert converts source model to target model. Can use optional target parameter,\n   * used in case of stacking multiple converters (for example, to implement populator pattern).\n   *\n   * @param source Source data model\n   * @param target Optional, partially converted target model\n   */\n  convert(source: S, target?: T): T;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConverterService implements OnDestroy {\n  protected subscriptions = new Subscription();\n\n  constructor(protected unifiedInjector: UnifiedInjector) {\n    // Clear cached converters when new injectors appear\n    const cacheResetLogic = this.unifiedInjector.injectors$.pipe(\n      tap(() => this.converters.clear())\n    );\n\n    this.subscriptions.add(cacheResetLogic.subscribe());\n  }\n\n  private converters: Map<\n    InjectionToken<Converter<any, any>>,\n    Converter<any, any>[]\n  > = new Map();\n\n  private getConverters<S, T>(\n    injectionToken: InjectionToken<Converter<S, T>>\n  ): Converter<S, T>[] {\n    if (!this.converters.has(injectionToken)) {\n      const converters = getLastValueSync(\n        this.unifiedInjector.getMulti(injectionToken)\n      );\n      this.converters.set(injectionToken, converters);\n    }\n\n    return this.converters.get(injectionToken);\n  }\n\n  /**\n   * Will return true if converters for specified token were provided\n   */\n  hasConverters<S, T>(\n    injectionToken: InjectionToken<Converter<S, T>>\n  ): boolean {\n    const converters = this.getConverters(injectionToken);\n    return Array.isArray(converters) && converters.length > 0;\n  }\n\n  /**\n   * Pipeable operator to apply converter logic in a observable stream\n   */\n  pipeable<S, T>(\n    injectionToken: InjectionToken<Converter<S, T>>\n  ): OperatorFunction<S, T> {\n    if (this.hasConverters(injectionToken)) {\n      return map((model: S) => this.convertSource(model, injectionToken));\n    } else {\n      return (observable: Observable<any>) => observable as Observable<T>;\n    }\n  }\n\n  /**\n   * Pipeable operator to apply converter logic in a observable stream to collection of items\n   */\n  pipeableMany<S, T>(\n    injectionToken: InjectionToken<Converter<S, T>>\n  ): OperatorFunction<S[], T[]> {\n    if (this.hasConverters(injectionToken)) {\n      return map((model: S[]) => this.convertMany(model, injectionToken));\n    } else {\n      return (observable: Observable<any[]>) => observable as Observable<T[]>;\n    }\n  }\n\n  /**\n   * Apply converter logic specified by injection token to source data\n   */\n  convert<S, T>(source: S, injectionToken: InjectionToken<Converter<S, T>>): T {\n    if (this.hasConverters(injectionToken)) {\n      return this.convertSource(source, injectionToken);\n    } else {\n      return source as any;\n    }\n  }\n\n  /**\n   * Apply converter logic specified by injection token to a collection\n   */\n  convertMany<S, T>(\n    sources: S[],\n    injectionToken: InjectionToken<Converter<S, T>>\n  ): T[] {\n    if (this.hasConverters(injectionToken) && Array.isArray(sources)) {\n      return sources.map((source) =>\n        this.convertSource(source, injectionToken)\n      );\n    } else {\n      return sources as any[];\n    }\n  }\n\n  private convertSource<S, T>(\n    source: S,\n    injectionToken: InjectionToken<Converter<S, T>>\n  ): T {\n    return this.getConverters(injectionToken).reduce((target, converter) => {\n      return converter.convert(source, target);\n    }, undefined as T);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AsmConfig } from '../../../asm/config/asm-config';\nimport { AsmAdapter } from '../../../asm/connectors/asm.adapter';\nimport { CUSTOMER_SEARCH_PAGE_NORMALIZER } from '../../../asm/connectors/converters';\nimport {\n  CustomerSearchOptions,\n  CustomerSearchPage,\n} from '../../../asm/models/asm.models';\nimport { BaseSiteService } from '../../../site-context/facade/base-site.service';\nimport { ConverterService } from '../../../util/converter.service';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\nimport {\n  InterceptorUtil,\n  USE_CUSTOMER_SUPPORT_AGENT_TOKEN,\n} from '../../utils/interceptor-util';\n\n@Injectable()\nexport class OccAsmAdapter implements AsmAdapter {\n  private activeBaseSite: string;\n\n  constructor(\n    protected http: HttpClient,\n    protected occEndpointsService: OccEndpointsService,\n    protected converterService: ConverterService,\n    protected config: AsmConfig,\n    protected baseSiteService: BaseSiteService\n  ) {\n    this.baseSiteService\n      .getActive()\n      .subscribe((value) => (this.activeBaseSite = value));\n  }\n\n  customerSearch(\n    options: CustomerSearchOptions\n  ): Observable<CustomerSearchPage> {\n    const headers = InterceptorUtil.createHeader(\n      USE_CUSTOMER_SUPPORT_AGENT_TOKEN,\n      true,\n      new HttpHeaders()\n    );\n    let params: HttpParams = new HttpParams()\n      .set('baseSite', this.activeBaseSite)\n      .set('sort', 'byNameAsc');\n\n    if (typeof options['query'] !== 'undefined') {\n      params = params.set('query', '' + options.query);\n    }\n\n    if (typeof options['pageSize'] !== 'undefined') {\n      params = params.set('pageSize', '' + options.pageSize);\n    }\n\n    const url = this.occEndpointsService.getRawEndpoint('asmCustomerSearch');\n\n    return this.http\n      .get<CustomerSearchPage>(url, { headers, params })\n      .pipe(this.converterService.pipeable(CUSTOMER_SEARCH_PAGE_NORMALIZER));\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { AsmAdapter } from '../../../asm/connectors/asm.adapter';\nimport { defaultOccAsmConfig } from './default-occ-asm-config';\nimport { OccAsmAdapter } from './occ-asm.adapter';\nimport { provideDefaultConfig } from '../../../config/config-providers';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(defaultOccAsmConfig),\n    {\n      provide: AsmAdapter,\n      useClass: OccAsmAdapter,\n    },\n  ],\n})\nexport class AsmOccModule {}\n","import { Observable } from 'rxjs';\nimport { Cart } from '../../../model/cart.model';\n\nexport abstract class CartAdapter {\n  /**\n   * Abstract method used to load all carts\n   *\n   * @param userId\n   */\n  abstract loadAll(userId: string): Observable<Cart[]>;\n\n  /**\n   * Abstract method used to load cart\n   *\n   * @param userId\n   * @param cartId\n   */\n  abstract load(userId: string, cartId: string): Observable<Cart>;\n\n  /**\n   * Abstract method used to create cart. If toMergeCartGuid is specified, cart will be merged with existing one\n   *\n   * @param userId\n   * @param oldCartId\n   * @param toMergeCartGuid\n   */\n  abstract create(\n    userId: string,\n    oldCartId?: string,\n    toMergeCartGuid?: string\n  ): Observable<Cart>;\n\n  /**\n   * Abstract method used to delete cart\n   *\n   * @param userId\n   * @param cartId\n   */\n  abstract delete(userId: string, cartId: string): Observable<{}>;\n\n  /**\n   * Abstract method to assign an email to the cart. This step is required to make a guest checkout\n   * @param userId\n   * @param cartId\n   * @param email\n   */\n  abstract addEmail(\n    userId: string,\n    cartId: string,\n    email: string\n  ): Observable<{}>;\n}\n","import { InjectionToken } from '@angular/core';\nimport { Converter } from '../../../util/converter.service';\nimport { Cart } from '../../../model/cart.model';\n\nexport const CART_NORMALIZER = new InjectionToken<Converter<any, Cart>>(\n  'CartNormalizer'\n);\n","import { Observable } from 'rxjs';\nimport { CartModification } from '../../../model/cart.model';\n\nexport abstract class CartEntryAdapter {\n  /**\n   * Abstract method used to add entry to cart\n   *\n   * @param userId\n   * @param cartId\n   * @param productCode\n   * @param quantity\n   */\n  abstract add(\n    userId: string,\n    cartId: string,\n    productCode: string,\n    quantity?: number\n  ): Observable<CartModification>;\n\n  /**\n   * Abstract method used to update entry in cart\n   * @param userId\n   * @param cartId\n   * @param entryNumber\n   * @param qty\n   * @param pickupStore\n   */\n  abstract update(\n    userId: string,\n    cartId: string,\n    entryNumber: string,\n    qty: number,\n    pickupStore?: string\n  ): Observable<CartModification>;\n\n  /**\n   * Abstract method used to remove entry from cart\n   *\n   * @param userId\n   * @param cartId\n   * @param entryNumber\n   */\n  abstract remove(\n    userId: string,\n    cartId: string,\n    entryNumber: string\n  ): Observable<any>;\n}\n","import { Observable } from 'rxjs';\nimport { SaveCartResult } from '../../../model/cart.model';\n\nexport abstract class SaveCartAdapter {\n  /**\n   * Abstract method used to save a cart\n   *\n   * @param userId: string\n   * @param cartId: string\n   * @param saveCartName?: string\n   * @param saveCartDescription?: string\n   */\n  abstract saveCart(\n    userId: string,\n    cartId: string,\n    saveCartName?: string,\n    saveCartDescription?: string\n  ): Observable<SaveCartResult>;\n}\n","import { Observable } from 'rxjs';\n\nexport abstract class CartVoucherAdapter {\n  /**\n   * Abstract method used to apply voucher to cart\n   *\n   * @param userId\n   * @param cartId\n   * @param voucherId\n   */\n  abstract add(\n    userId: string,\n    cartId: string,\n    voucherId: string\n  ): Observable<{}>;\n\n  /**\n   * Abstract method used to remove voucher from cart\n   *\n   * @param userId\n   * @param cartId\n   * @param voucherId\n   */\n  abstract remove(\n    userId: string,\n    cartId: string,\n    voucherId: string\n  ): Observable<{}>;\n}\n","import { InjectionToken } from '@angular/core';\nimport { Converter } from '../../../util/converter.service';\nimport { Product } from '../../../model/product.model';\n\nexport const PRODUCT_NORMALIZER = new InjectionToken<Converter<any, Product>>(\n  'ProductNormalizer'\n);\n","import { Injectable } from '@angular/core';\nimport { Cart } from '../../../../model/cart.model';\nimport { PRODUCT_NORMALIZER } from '../../../../product/connectors/product/converters';\nimport {\n  Converter,\n  ConverterService,\n} from '../../../../util/converter.service';\nimport { Occ } from '../../../occ-models/occ.models';\n\n@Injectable({ providedIn: 'root' })\nexport class OccCartNormalizer implements Converter<Occ.Cart, Cart> {\n  constructor(private converter: ConverterService) {}\n\n  convert(source: Occ.Cart, target?: Cart): Cart {\n    if (target === undefined) {\n      target = { ...(source as any) };\n    }\n\n    if (source && source.entries) {\n      target.entries = source.entries.map((entry) => ({\n        ...entry,\n        product: this.converter.convert(entry.product, PRODUCT_NORMALIZER),\n      }));\n    }\n\n    this.removeDuplicatePromotions(source, target);\n    return target;\n  }\n\n  /**\n   * Remove all duplicate promotions\n   */\n  private removeDuplicatePromotions(source: any, target: Cart): void {\n    if (source && source.potentialOrderPromotions) {\n      target.potentialOrderPromotions = this.removeDuplicateItems(\n        source.potentialOrderPromotions\n      );\n    }\n\n    if (source && source.potentialProductPromotions) {\n      target.potentialProductPromotions = this.removeDuplicateItems(\n        source.potentialProductPromotions\n      );\n    }\n\n    if (source && source.appliedOrderPromotions) {\n      target.appliedOrderPromotions = this.removeDuplicateItems(\n        source.appliedOrderPromotions\n      );\n    }\n\n    if (source && source.appliedProductPromotions) {\n      target.appliedProductPromotions = this.removeDuplicateItems(\n        source.appliedProductPromotions\n      );\n    }\n  }\n\n  private removeDuplicateItems(itemList: any[]): any[] {\n    return itemList.filter((p, i, a) => {\n      const b = a.map((el) => JSON.stringify(el));\n      return i === b.indexOf(JSON.stringify(p));\n    });\n  }\n}\n","import { OccConfig } from '../../config/occ-config';\n\nexport const defaultOccCartConfig: OccConfig = {\n  backend: {\n    occ: {\n      endpoints: {\n        // tslint:disable:max-line-length\n        carts:\n          'users/${userId}/carts?fields=carts(DEFAULT,potentialProductPromotions,appliedProductPromotions,potentialOrderPromotions,appliedOrderPromotions,entries(totalPrice(formattedValue),product(images(FULL),stock(FULL)),basePrice(formattedValue,value),updateable),totalPrice(formattedValue),totalItems,totalPriceWithTax(formattedValue),totalDiscounts(value,formattedValue),subTotal(formattedValue),deliveryItemsQuantity,deliveryCost(formattedValue),totalTax(formattedValue, value),pickupItemsQuantity,net,appliedVouchers,productDiscounts(formattedValue),saveTime,user,name)',\n        cart:\n          'users/${userId}/carts/${cartId}?fields=DEFAULT,potentialProductPromotions,appliedProductPromotions,potentialOrderPromotions,appliedOrderPromotions,entries(totalPrice(formattedValue),product(images(FULL),stock(FULL)),basePrice(formattedValue,value),updateable),totalPrice(formattedValue),totalItems,totalPriceWithTax(formattedValue),totalDiscounts(value,formattedValue),subTotal(formattedValue),deliveryItemsQuantity,deliveryCost(formattedValue),totalTax(formattedValue, value),pickupItemsQuantity,net,appliedVouchers,productDiscounts(formattedValue),user',\n        createCart:\n          'users/${userId}/carts?fields=DEFAULT,potentialProductPromotions,appliedProductPromotions,potentialOrderPromotions,appliedOrderPromotions,entries(totalPrice(formattedValue),product(images(FULL),stock(FULL)),basePrice(formattedValue,value),updateable),totalPrice(formattedValue),totalItems,totalPriceWithTax(formattedValue),totalDiscounts(value,formattedValue),subTotal(formattedValue),deliveryItemsQuantity,deliveryCost(formattedValue),totalTax(formattedValue, value),pickupItemsQuantity,net,appliedVouchers,productDiscounts(formattedValue),user',\n        addEntries: 'users/${userId}/carts/${cartId}/entries',\n        updateEntries: 'users/${userId}/carts/${cartId}/entries/${entryNumber}',\n        removeEntries: 'users/${userId}/carts/${cartId}/entries/${entryNumber}',\n        addEmail: 'users/${userId}/carts/${cartId}/email',\n        deleteCart: 'users/${userId}/carts/${cartId}',\n        cartVoucher: 'users/${userId}/carts/${cartId}/vouchers',\n        saveCart: 'users/${userId}/carts/${cartId}/save',\n        // tslint:enable\n      },\n    },\n  },\n};\n","import { InjectionToken } from '@angular/core';\nimport { Converter } from '../../../util/converter.service';\nimport { CartModification } from '../../../model/cart.model';\n\nexport const CART_MODIFICATION_NORMALIZER = new InjectionToken<\n  Converter<any, CartModification>\n>('CartModificationNormalizer');\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CartEntryAdapter } from '../../../cart/connectors/entry/cart-entry.adapter';\nimport { CART_MODIFICATION_NORMALIZER } from '../../../cart/connectors/entry/converters';\nimport { CartModification } from '../../../model/cart.model';\nimport { ConverterService } from '../../../util/converter.service';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\n\n@Injectable()\nexport class OccCartEntryAdapter implements CartEntryAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpointsService: OccEndpointsService,\n    protected converterService: ConverterService\n  ) {}\n\n  public add(\n    userId: string,\n    cartId: string,\n    productCode: string,\n    quantity: number = 1\n  ): Observable<CartModification> {\n    const toAdd = JSON.stringify({});\n\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/x-www-form-urlencoded',\n    });\n\n    const url = this.occEndpointsService.getUrl(\n      'addEntries',\n      {\n        userId,\n        cartId,\n        quantity, // The \"quantity\" parameter is required for the b2b add to cart endpoint.\n      },\n      { code: productCode, qty: quantity } // The \"qty\" parameter is used for the base b2c add to cart endpoint.\n    );\n\n    return this.http\n      .post<CartModification>(url, toAdd, { headers })\n      .pipe(this.converterService.pipeable(CART_MODIFICATION_NORMALIZER));\n  }\n\n  public update(\n    userId: string,\n    cartId: string,\n    entryNumber: string,\n    qty: number,\n    pickupStore?: string\n  ): Observable<CartModification> {\n    let params = {};\n    if (pickupStore) {\n      params = { pickupStore };\n    }\n\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/x-www-form-urlencoded',\n    });\n\n    const url = this.occEndpointsService.getUrl(\n      'updateEntries',\n      { userId, cartId, entryNumber },\n      { qty, ...params }\n    );\n\n    return this.http\n      .patch<CartModification>(url, {}, { headers })\n      .pipe(this.converterService.pipeable(CART_MODIFICATION_NORMALIZER));\n  }\n\n  public remove(\n    userId: string,\n    cartId: string,\n    entryNumber: string\n  ): Observable<any> {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/x-www-form-urlencoded',\n    });\n\n    const url = this.occEndpointsService.getUrl('removeEntries', {\n      userId,\n      cartId,\n      entryNumber,\n    });\n\n    return this.http.delete(url, { headers });\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { Voucher } from '../../../model/cart.model';\nimport { Converter } from '../../../util/converter.service';\n\nexport const CART_VOUCHER_NORMALIZER = new InjectionToken<\n  Converter<any, Voucher>\n>('CartVoucherNormalizer');\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { CartVoucherAdapter } from '../../../cart/connectors/voucher/cart-voucher.adapter';\nimport { CART_VOUCHER_NORMALIZER } from '../../../cart/connectors/voucher/converters';\nimport { OCC_USER_ID_ANONYMOUS } from '../../utils/occ-constants';\nimport { ConverterService } from '../../../util/converter.service';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\nimport {\n  InterceptorUtil,\n  USE_CLIENT_TOKEN,\n} from '../../utils/interceptor-util';\n\n@Injectable()\nexport class OccCartVoucherAdapter implements CartVoucherAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  protected getCartVoucherEndpoint(userId: string, cartId): string {\n    return this.occEndpoints.getUrl('cartVoucher', { userId, cartId });\n  }\n\n  protected getHeaders(userId: string): HttpHeaders {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n    });\n\n    if (userId === OCC_USER_ID_ANONYMOUS) {\n      headers = InterceptorUtil.createHeader(USE_CLIENT_TOKEN, true, headers);\n    }\n\n    return headers;\n  }\n\n  add(userId: string, cartId: string, voucherId: string): Observable<{}> {\n    const url = this.getCartVoucherEndpoint(userId, cartId);\n\n    const toAdd = JSON.stringify({});\n\n    const params: HttpParams = new HttpParams().set('voucherId', voucherId);\n\n    const headers = this.getHeaders(userId);\n\n    return this.http.post(url, toAdd, { headers, params }).pipe(\n      catchError((error: any) => throwError(error)),\n      this.converter.pipeable(CART_VOUCHER_NORMALIZER)\n    );\n  }\n\n  remove(userId: string, cartId: string, voucherId: string): Observable<{}> {\n    const url =\n      this.getCartVoucherEndpoint(userId, cartId) +\n      '/' +\n      encodeURIComponent(voucherId);\n\n    const headers = this.getHeaders(userId);\n\n    return this.http\n      .delete(url, { headers })\n      .pipe(catchError((error: any) => throwError(error)));\n  }\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, pluck } from 'rxjs/operators';\nimport { CartAdapter } from '../../../cart/connectors/cart/cart.adapter';\nimport { CART_NORMALIZER } from '../../../cart/connectors/cart/converters';\nimport { Cart } from '../../../model/cart.model';\nimport { ConverterService } from '../../../util/converter.service';\nimport { Occ } from '../../occ-models/occ.models';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\nimport {\n  InterceptorUtil,\n  USE_CLIENT_TOKEN,\n} from '../../utils/interceptor-util';\nimport {\n  OCC_CART_ID_CURRENT,\n  OCC_USER_ID_ANONYMOUS,\n} from '../../utils/occ-constants';\n\n@Injectable()\nexport class OccCartAdapter implements CartAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpointsService: OccEndpointsService,\n    protected converterService: ConverterService\n  ) {}\n\n  public loadAll(userId: string): Observable<Cart[]> {\n    return this.http\n      .get<Occ.CartList>(this.occEndpointsService.getUrl('carts', { userId }))\n      .pipe(\n        pluck('carts'),\n        this.converterService.pipeableMany(CART_NORMALIZER)\n      );\n  }\n\n  public load(userId: string, cartId: string): Observable<Cart> {\n    if (cartId === OCC_CART_ID_CURRENT) {\n      return this.loadAll(userId).pipe(\n        map((carts) => {\n          if (carts) {\n            const activeCart = carts.find((cart) => {\n              return cart['saveTime'] === undefined;\n            });\n            return activeCart;\n          } else {\n            return null;\n          }\n        })\n      );\n    } else {\n      return this.http\n        .get<Occ.Cart>(\n          this.occEndpointsService.getUrl('cart', { userId, cartId })\n        )\n        .pipe(this.converterService.pipeable(CART_NORMALIZER));\n    }\n  }\n\n  create(\n    userId: string,\n    oldCartId?: string,\n    toMergeCartGuid?: string\n  ): Observable<Cart> {\n    const toAdd = JSON.stringify({});\n\n    let params = {};\n\n    if (oldCartId) {\n      params = { oldCartId: oldCartId };\n    }\n    if (toMergeCartGuid) {\n      params['toMergeCartGuid'] = toMergeCartGuid;\n    }\n\n    return this.http\n      .post<Occ.Cart>(\n        this.occEndpointsService.getUrl('createCart', { userId }, params),\n        toAdd\n      )\n      .pipe(this.converterService.pipeable(CART_NORMALIZER));\n  }\n\n  delete(userId: string, cartId: string): Observable<{}> {\n    let headers = new HttpHeaders();\n    if (userId === OCC_USER_ID_ANONYMOUS) {\n      headers = InterceptorUtil.createHeader(USE_CLIENT_TOKEN, true, headers);\n    }\n    return this.http.delete<{}>(\n      this.occEndpointsService.getUrl('deleteCart', { userId, cartId }),\n      { headers }\n    );\n  }\n\n  addEmail(userId: string, cartId: string, email: string): Observable<{}> {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/x-www-form-urlencoded',\n    });\n    headers = InterceptorUtil.createHeader(USE_CLIENT_TOKEN, true, headers);\n\n    const httpParams: HttpParams = new HttpParams().set('email', email);\n\n    const url = this.occEndpointsService.getUrl('addEmail', {\n      userId,\n      cartId,\n    });\n\n    return this.http.put(url, httpParams, { headers });\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { SaveCartResult } from '../../../model/cart.model';\nimport { Converter } from '../../../util/converter.service';\n\nexport const SAVE_CART_NORMALIZER = new InjectionToken<\n  Converter<any, SaveCartResult>\n>('SaveCartNormalizer');\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SAVE_CART_NORMALIZER } from '../../../cart/connectors/save-cart/converters';\nimport { SaveCartAdapter } from '../../../cart/connectors/save-cart/save-cart.adapter';\nimport { SaveCartResult } from '../../../model/cart.model';\nimport { ConverterService } from '../../../util/converter.service';\nimport { Occ } from '../../occ-models/occ.models';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\n\n@Injectable()\nexport class OccSaveCartAdapter implements SaveCartAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpointsService: OccEndpointsService,\n    protected converterService: ConverterService\n  ) {}\n\n  public saveCart(\n    userId: string,\n    cartId: string,\n    saveCartName?: string,\n    saveCartDescription?: string\n  ): Observable<SaveCartResult> {\n    let httpParams = new HttpParams();\n\n    if (Boolean(saveCartName)) {\n      httpParams = httpParams.set('saveCartName', saveCartName);\n    }\n\n    if (Boolean(saveCartDescription)) {\n      httpParams = httpParams.set('saveCartDescription', saveCartDescription);\n    }\n\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/x-www-form-urlencoded',\n    });\n\n    return this.http\n      .patch<Occ.SaveCartResult>(\n        this.occEndpointsService.getUrl('saveCart', { userId, cartId }),\n        httpParams,\n        { headers }\n      )\n      .pipe(this.converterService.pipeable(SAVE_CART_NORMALIZER));\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CartAdapter } from '../../../cart/connectors/cart/cart.adapter';\nimport { CART_NORMALIZER } from '../../../cart/connectors/cart/converters';\nimport { CartEntryAdapter } from '../../../cart/connectors/entry/cart-entry.adapter';\nimport { SaveCartAdapter } from '../../../cart/connectors/save-cart/save-cart.adapter';\nimport { CartVoucherAdapter } from '../../../cart/connectors/voucher/cart-voucher.adapter';\nimport { OccCartNormalizer } from './converters/occ-cart-normalizer';\nimport { defaultOccCartConfig } from './default-occ-cart-config';\nimport { OccCartEntryAdapter } from './occ-cart-entry.adapter';\nimport { OccCartVoucherAdapter } from './occ-cart-voucher.adapter';\nimport { OccCartAdapter } from './occ-cart.adapter';\nimport { OccSaveCartAdapter } from './occ-save-cart.adapter';\nimport { provideDefaultConfig } from '../../../config/config-providers';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(defaultOccCartConfig),\n    {\n      provide: CartAdapter,\n      useClass: OccCartAdapter,\n    },\n    {\n      provide: CART_NORMALIZER,\n      useExisting: OccCartNormalizer,\n      multi: true,\n    },\n    {\n      provide: CartEntryAdapter,\n      useClass: OccCartEntryAdapter,\n    },\n    {\n      provide: CartVoucherAdapter,\n      useClass: OccCartVoucherAdapter,\n    },\n    {\n      provide: SaveCartAdapter,\n      useClass: OccSaveCartAdapter,\n    },\n  ],\n})\nexport class CartOccModule {}\n","import { Observable } from 'rxjs';\nimport { Order } from '../../../model/order.model';\nimport { CheckoutDetails } from '../../models/checkout.model';\n\nexport abstract class CheckoutAdapter {\n  /**\n   * Abstract method used to place an order.\n   *\n   * @param userId The `userId` for given user\n   * @param cartId The `cartId` for cart used for placing order\n   * @param termsChecked The `boolean value` whether the terms were accepted or not\n   */\n  abstract placeOrder(\n    userId: string,\n    cartId: string,\n    termsChecked: boolean\n  ): Observable<Order>;\n\n  /**\n   * Abstract method used to load checkout details\n   *\n   * @param userId\n   * @param cartId\n   */\n  abstract loadCheckoutDetails(\n    userId: string,\n    cartId: string\n  ): Observable<CheckoutDetails>;\n\n  /**\n   * Abstract method used to clear checkout delivery address\n   *\n   * @param userId\n   * @param cartId\n   */\n  abstract clearCheckoutDeliveryAddress(\n    userId: string,\n    cartId: string\n  ): Observable<any>;\n\n  /**\n   * Abstract method used to clear checkout delivery mode\n   *\n   * @param userId\n   * @param cartId\n   */\n  abstract clearCheckoutDeliveryMode(\n    userId: string,\n    cartId: string\n  ): Observable<any>;\n}\n","import { InjectionToken } from '@angular/core';\nimport { Converter } from '../../../util/converter.service';\nimport { Order } from '../../../model/order.model';\nimport { PointOfService } from '../../../model/point-of-service.model';\n\nexport const ORDER_NORMALIZER = new InjectionToken<Converter<any, Order>>(\n  'OrderNormalizer'\n);\n\nexport const POINT_OF_SERVICE_NORMALIZER = new InjectionToken<\n  Converter<any, PointOfService>\n>('PointOfServiceNormalizer');\n","import { Observable } from 'rxjs';\nimport { Cart } from '../../../model/cart.model';\n\nexport abstract class CheckoutCostCenterAdapter {\n  /**\n   * Abstract method used to set cost center to cart\n   *\n   * @param userId: user id\n   * @param cartId: cart id\n   * @param costCenterId: cost center id\n   */\n  abstract setCostCenter(\n    userId: string,\n    cartId: string,\n    costCenterId: string\n  ): Observable<Cart>;\n}\n","import { Observable } from 'rxjs';\nimport { Address } from '../../../model/address.model';\nimport { DeliveryMode } from '../../../model/order.model';\n\nexport abstract class CheckoutDeliveryAdapter {\n  /**\n   * Abstract method used to create address in cart\n   *\n   * @param userId\n   * @param cartId\n   * @param address\n   */\n  abstract createAddress(\n    userId: string,\n    cartId: string,\n    address: Address\n  ): Observable<Address>;\n\n  /**\n   * Abstract method used to set adress for delivery\n   *\n   * @param userId\n   * @param cartId\n   * @param addressId\n   */\n  abstract setAddress(\n    userId: string,\n    cartId: string,\n    addressId: string\n  ): Observable<any>;\n\n  /**\n   * Abstract method used to set delivery mode on cart\n   *\n   * @param userId\n   * @param cartId\n   * @param deliveryModeId\n   */\n  abstract setMode(\n    userId: string,\n    cartId: string,\n    deliveryModeId: string\n  ): Observable<any>;\n\n  /**\n   * Abstract method used to get current delivery mode from cart\n   *\n   * @param userId\n   * @param cartId\n   */\n  abstract getMode(userId: string, cartId: string): Observable<DeliveryMode>;\n\n  /**\n   * Abstract method used to get supported delivery modes for cart\n   *\n   * @param userId\n   * @param cartId\n   */\n  abstract getSupportedModes(\n    userId: string,\n    cartId: string\n  ): Observable<DeliveryMode[]>;\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Order } from '../../../model/order.model';\nimport { CheckoutDetails } from '../../models/checkout.model';\nimport { CheckoutAdapter } from './checkout.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutConnector {\n  constructor(protected adapter: CheckoutAdapter) {}\n\n  public placeOrder(\n    userId: string,\n    cartId: string,\n    termsChecked: boolean\n  ): Observable<Order> {\n    return this.adapter.placeOrder(userId, cartId, termsChecked);\n  }\n\n  public loadCheckoutDetails(\n    userId: string,\n    cartId: string\n  ): Observable<CheckoutDetails> {\n    return this.adapter.loadCheckoutDetails(userId, cartId);\n  }\n\n  public clearCheckoutDeliveryAddress(\n    userId: string,\n    cartId: string\n  ): Observable<any> {\n    return this.adapter.clearCheckoutDeliveryAddress(userId, cartId);\n  }\n\n  public clearCheckoutDeliveryMode(\n    userId: string,\n    cartId: string\n  ): Observable<any> {\n    return this.adapter.clearCheckoutDeliveryMode(userId, cartId);\n  }\n}\n","import { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { CheckoutCostCenterAdapter } from './checkout-cost-center.adapter';\nimport { Cart } from '../../../model/cart.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutCostCenterConnector {\n  constructor(protected adapter: CheckoutCostCenterAdapter) {}\n\n  setCostCenter(\n    userId: string,\n    cartId: string,\n    costCenterId: string\n  ): Observable<Cart> {\n    return this.adapter.setCostCenter(userId, cartId, costCenterId);\n  }\n}\n","import { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { CheckoutDeliveryAdapter } from './checkout-delivery.adapter';\nimport { Address } from '../../../model/address.model';\nimport { DeliveryMode } from '../../../model/order.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutDeliveryConnector {\n  constructor(protected adapter: CheckoutDeliveryAdapter) {}\n\n  public createAddress(\n    userId: string,\n    cartId: string,\n    address: Address\n  ): Observable<Address> {\n    return this.adapter.createAddress(userId, cartId, address);\n  }\n\n  public setAddress(\n    userId: string,\n    cartId: string,\n    addressId: string\n  ): Observable<any> {\n    return this.adapter.setAddress(userId, cartId, addressId);\n  }\n\n  public setMode(\n    userId: string,\n    cartId: string,\n    deliveryModeId: string\n  ): Observable<any> {\n    return this.adapter.setMode(userId, cartId, deliveryModeId);\n  }\n\n  public getMode(userId: string, cartId: string): Observable<DeliveryMode> {\n    return this.adapter.getMode(userId, cartId);\n  }\n\n  public getSupportedModes(\n    userId: string,\n    cartId: string\n  ): Observable<DeliveryMode[]> {\n    return this.adapter.getSupportedModes(userId, cartId);\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { Converter } from '../../../util/converter.service';\nimport { DeliveryMode } from '../../../model/order.model';\n\nexport const DELIVERY_MODE_NORMALIZER = new InjectionToken<\n  Converter<any, DeliveryMode>\n>('DeliveryModeNormalizer');\n","import { Observable } from 'rxjs';\nimport { PaymentType } from '../../../model/cart.model';\n\nexport abstract class PaymentTypeAdapter {\n  /**\n   * Abstract method used to get available payment types\n   */\n  abstract loadPaymentTypes(): Observable<PaymentType[]>;\n\n  /**\n   * Abstract method used to set payment type to cart\n   *\n   * @param userId\n   * @param cartId\n   * @param typeCode\n   * @param poNumber: purchase order number\n   */\n  abstract setPaymentType(\n    userId: string,\n    cartId: string,\n    typeCode: string,\n    poNumber?: string\n  ): Observable<any>;\n}\n","import { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { PaymentTypeAdapter } from './payment-type.adapter';\nimport { PaymentType } from '../../../model/cart.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PaymentTypeConnector {\n  constructor(protected adapter: PaymentTypeAdapter) {}\n\n  getPaymentTypes(): Observable<PaymentType[]> {\n    return this.adapter.loadPaymentTypes();\n  }\n\n  setPaymentType(\n    userId: string,\n    cartId: string,\n    typeCode: string,\n    poNumber?: string\n  ): Observable<any> {\n    return this.adapter.setPaymentType(userId, cartId, typeCode, poNumber);\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { Converter } from '../../../util/converter.service';\nimport { PaymentType } from '../../../model/cart.model';\n\nexport const PAYMENT_TYPE_NORMALIZER = new InjectionToken<\n  Converter<any, PaymentType>\n>('PaymentTypeNormalizer');\n","import { Observable } from 'rxjs';\nimport { CardType, PaymentDetails } from '../../../model/cart.model';\n\nexport abstract class CheckoutPaymentAdapter {\n  /**\n   * Abstract method used to create payment details on cart\n   *\n   * @param userId\n   * @param cartId\n   * @param paymentDetails\n   */\n  abstract create(\n    userId: string,\n    cartId: string,\n    paymentDetails: PaymentDetails\n  ): Observable<PaymentDetails>;\n\n  /**\n   * Abstract method used to set payment details on cart\n   *\n   * @param userId\n   * @param cartId\n   * @param paymentDetailsId\n   */\n  abstract set(\n    userId: string,\n    cartId: string,\n    paymentDetailsId: string\n  ): Observable<any>;\n\n  /**\n   * Abstract method used to get available cart types\n   */\n  abstract loadCardTypes(): Observable<CardType[]>;\n}\n","import { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { CheckoutPaymentAdapter } from './checkout-payment.adapter';\nimport { CardType, PaymentDetails } from '../../../model/cart.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutPaymentConnector {\n  constructor(protected adapter: CheckoutPaymentAdapter) {}\n\n  public create(\n    userId: string,\n    cartId: string,\n    paymentDetails: PaymentDetails\n  ): Observable<PaymentDetails> {\n    return this.adapter.create(userId, cartId, paymentDetails);\n  }\n\n  public set(\n    userId: string,\n    cartId: string,\n    paymentDetailsId: string\n  ): Observable<any> {\n    return this.adapter.set(userId, cartId, paymentDetailsId);\n  }\n\n  getCardTypes(): Observable<CardType[]> {\n    return this.adapter.loadCardTypes();\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { Converter } from '../../../util/converter.service';\nimport { CardType, PaymentDetails } from '../../../model/cart.model';\n\nexport const PAYMENT_DETAILS_NORMALIZER = new InjectionToken<\n  Converter<any, PaymentDetails>\n>('PaymentDetailsNormalizer');\n\nexport const PAYMENT_DETAILS_SERIALIZER = new InjectionToken<\n  Converter<PaymentDetails, any>\n>('PaymentDetailsSerializer');\n\nexport const CARD_TYPE_NORMALIZER = new InjectionToken<\n  Converter<any, CardType>\n>('CardTypeNormalizer');\n","import { Observable } from 'rxjs';\nimport {\n  ReplenishmentOrder,\n  ScheduleReplenishmentForm,\n} from '../../../model/replenishment-order.model';\n\nexport abstract class CheckoutReplenishmentOrderAdapter {\n  /**\n   * Abstract method used to schedule a replenishment order.\n   *\n   * @param cartId The `cartId` for cart used for scheduling a replenishment order\n   * @param scheduleReplenishmentForm The `object` that contains the form data for replenishment\n   * @param termsChecked The `boolean value` whether the terms were accepted or not\n   * @param userId The `userId` for given user\n   */\n  abstract scheduleReplenishmentOrder(\n    cartId: string,\n    scheduleReplenishmentForm: ScheduleReplenishmentForm,\n    termsChecked: boolean,\n    userId: string\n  ): Observable<ReplenishmentOrder>;\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {\n  ReplenishmentOrder,\n  ScheduleReplenishmentForm,\n} from '../../../model/replenishment-order.model';\nimport { CheckoutReplenishmentOrderAdapter } from './checkout-replenishment-order.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutReplenishmentOrderConnector {\n  constructor(protected adapter: CheckoutReplenishmentOrderAdapter) {}\n\n  public scheduleReplenishmentOrder(\n    cartId: string,\n    scheduleReplenishmentForm: ScheduleReplenishmentForm,\n    termsChecked: boolean,\n    userId: string\n  ): Observable<ReplenishmentOrder> {\n    return this.adapter.scheduleReplenishmentOrder(\n      cartId,\n      scheduleReplenishmentForm,\n      termsChecked,\n      userId\n    );\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport {\n  ReplenishmentOrder,\n  ScheduleReplenishmentForm,\n} from '../../../model/replenishment-order.model';\nimport { Converter } from '../../../util/converter.service';\n\nexport const REPLENISHMENT_ORDER_NORMALIZER = new InjectionToken<\n  Converter<any, ReplenishmentOrder>\n>('ReplenishmentOrderNormalizer');\n\nexport const REPLENISHMENT_ORDER_FORM_SERIALIZER = new InjectionToken<\n  Converter<ScheduleReplenishmentForm, any>\n>('ReplenishmentOrderFormSerializer');\n","import { Injectable } from '@angular/core';\nimport { Order, OrderEntry } from '../../../../model/order.model';\nimport { PRODUCT_NORMALIZER } from '../../../../product/connectors/product/converters';\nimport {\n  Converter,\n  ConverterService,\n} from '../../../../util/converter.service';\nimport { Occ } from '../../../occ-models/occ.models';\n\n@Injectable({ providedIn: 'root' })\nexport class OccOrderNormalizer implements Converter<Occ.Order, Order> {\n  constructor(private converter: ConverterService) {}\n\n  convert(source: Occ.Order, target?: Order): Order {\n    if (target === undefined) {\n      target = { ...(source as any) };\n    }\n\n    if (source.entries) {\n      target.entries = source.entries.map((entry) =>\n        this.convertOrderEntry(entry)\n      );\n    }\n\n    if (source.consignments) {\n      target.consignments = source.consignments.map((consignment) => ({\n        ...consignment,\n        entries: consignment.entries.map((entry) => ({\n          ...entry,\n          orderEntry: this.convertOrderEntry(entry.orderEntry),\n        })),\n      }));\n    }\n\n    if (source.unconsignedEntries) {\n      target.unconsignedEntries = source.unconsignedEntries.map((entry) =>\n        this.convertOrderEntry(entry)\n      );\n    }\n\n    return target;\n  }\n\n  private convertOrderEntry(source: Occ.OrderEntry): OrderEntry {\n    return {\n      ...source,\n      product: this.converter.convert(source.product, PRODUCT_NORMALIZER),\n    };\n  }\n}\n","export class TimeUtils {\n  /**\n   * Returns the local timezone in a format that can be appended to a date-like string.\n   * @param invert (default: false): returns the opposite operator relative to the local timezone\n   *\n   * @example\n   * When locale is set to a CEST timezone, `getLocalTimezoneOffset()` returns '+02:00'\n   * and `getLocalTimezoneOffset(true)` returns '-02:00'\n   */\n  static getLocalTimezoneOffset(invert?: boolean): string {\n    const offset = new Date().getTimezoneOffset() * -1;\n    const hours = Math.abs(Math.floor(offset / 60))\n      .toString()\n      .padStart(2, '0');\n    const minutes = (offset % 60).toString().padStart(2, '0');\n    const sign = offset >= 0 ? (invert ? `-` : `+`) : invert ? `+` : `-`;\n    return `${sign}${hours}:${minutes}`;\n  }\n\n  static convertDateToDatetime(date: string, endOfDay?: boolean): string {\n    return `${date}T${\n      !endOfDay ? '00:00:00' : '23:59:59'\n    }${TimeUtils.getLocalTimezoneOffset()}`;\n  }\n\n  static convertDatetimeToDate(datetime: string): string {\n    return new Date(\n      `${datetime.substring(0, 19)}${TimeUtils.getLocalTimezoneOffset(true)}`\n    )\n      .toISOString()\n      .substring(0, 10);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TimeUtils } from '../../../../util/time-utils';\nimport { ScheduleReplenishmentForm } from '../../../../model/replenishment-order.model';\nimport { Converter } from '../../../../util/converter.service';\nimport { Occ } from '../../../occ-models/occ.models';\n\n@Injectable({ providedIn: 'root' })\nexport class OccReplenishmentOrderFormSerializer\n  implements\n    Converter<Occ.ScheduleReplenishmentForm, ScheduleReplenishmentForm> {\n  convert(\n    source: Occ.ScheduleReplenishmentForm,\n    target?: ScheduleReplenishmentForm\n  ): ScheduleReplenishmentForm {\n    if (target === undefined) {\n      target = { ...(source as any) };\n    }\n\n    if (source.replenishmentStartDate) {\n      target.replenishmentStartDate = this.convertDate(\n        source.replenishmentStartDate\n      );\n    }\n\n    return target;\n  }\n\n  /**\n   * Adds the current timestamp (including timezone offset) to a date string in the format YYYY-mm-dd\n   * @Example\n   * Converts 2021-10-15 to 2021-10-15T15:38:05-05:00\n   */\n  private convertDate(date: string): string {\n    const localTime = new Date().toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: false,\n    });\n    return `${date}T${localTime}:00${TimeUtils.getLocalTimezoneOffset()}`;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { OrderEntry } from '../../../../model/order.model';\nimport { ReplenishmentOrder } from '../../../../model/replenishment-order.model';\nimport { PRODUCT_NORMALIZER } from '../../../../product/connectors/product/converters';\nimport {\n  Converter,\n  ConverterService,\n} from '../../../../util/converter.service';\nimport { Occ } from '../../../occ-models/occ.models';\n\n@Injectable({ providedIn: 'root' })\nexport class OccReplenishmentOrderNormalizer\n  implements Converter<Occ.ReplenishmentOrder, ReplenishmentOrder> {\n  constructor(private converter: ConverterService) {}\n\n  convert(\n    source: Occ.ReplenishmentOrder,\n    target?: ReplenishmentOrder\n  ): ReplenishmentOrder {\n    if (target === undefined) {\n      target = { ...(source as any) };\n    }\n\n    if (source.entries) {\n      target.entries = source.entries.map((entry) =>\n        this.convertOrderEntry(entry)\n      );\n    }\n\n    return target;\n  }\n\n  private convertOrderEntry(source: Occ.OrderEntry): OrderEntry {\n    return {\n      ...source,\n      product: this.converter.convert(source.product, PRODUCT_NORMALIZER),\n    };\n  }\n}\n","import { OccConfig } from '../../config/occ-config';\n\nexport const defaultOccCheckoutConfig: OccConfig = {\n  backend: {\n    occ: {\n      endpoints: {\n        setDeliveryAddress:\n          'users/${userId}/carts/${cartId}/addresses/delivery',\n        placeOrder: 'users/${userId}/orders?fields=FULL',\n      },\n    },\n  },\n};\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CART_NORMALIZER } from '../../../cart/connectors/cart/converters';\nimport { CheckoutCostCenterAdapter } from '../../../checkout/connectors/cost-center/checkout-cost-center.adapter';\nimport { Cart } from '../../../model/cart.model';\nimport { ConverterService } from '../../../util/converter.service';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\n\n@Injectable()\nexport class OccCheckoutCostCenterAdapter implements CheckoutCostCenterAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  setCostCenter(\n    userId: string,\n    cartId: string,\n    costCenterId: string\n  ): Observable<Cart> {\n    let httpParams = new HttpParams().set('costCenterId', costCenterId);\n    /* tslint:disable:max-line-length */\n    httpParams = httpParams.set(\n      'fields',\n      'DEFAULT,potentialProductPromotions,appliedProductPromotions,potentialOrderPromotions,appliedOrderPromotions,entries(totalPrice(formattedValue),product(images(FULL),stock(FULL)),basePrice(formattedValue,value),updateable),totalPrice(formattedValue),totalItems,totalPriceWithTax(formattedValue),totalDiscounts(value,formattedValue),subTotal(formattedValue),deliveryItemsQuantity,deliveryCost(formattedValue),totalTax(formattedValue, value),pickupItemsQuantity,net,appliedVouchers,productDiscounts(formattedValue),user'\n    );\n    // TODO(#8877): Should we improve configurable endpoints for this use case?\n\n    return this.http\n      .put(\n        this.getCartEndpoint(userId) + cartId + '/costcenter',\n        {},\n        {\n          params: httpParams,\n        }\n      )\n      .pipe(this.converter.pipeable(CART_NORMALIZER));\n  }\n\n  protected getCartEndpoint(userId: string): string {\n    const cartEndpoint = 'users/' + userId + '/carts/';\n    return this.occEndpoints.getEndpoint(cartEndpoint);\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { Address, AddressValidation } from '../../../model/address.model';\nimport { EntitiesModel } from '../../../model/misc.model';\nimport { Converter } from '../../../util/converter.service';\n\nexport const ADDRESS_NORMALIZER = new InjectionToken<Converter<any, Address>>(\n  'AddressNormalizer'\n);\n\nexport const ADDRESS_LIST_NORMALIZER = new InjectionToken<\n  Converter<any, EntitiesModel<Address>>\n>('AddressesNormalizer');\n\nexport const ADDRESS_SERIALIZER = new InjectionToken<Converter<Address, any>>(\n  'AddressSerializer'\n);\n\nexport const ADDRESS_VALIDATION_NORMALIZER = new InjectionToken<\n  Converter<any, AddressValidation>\n>('AddressValidationNormalizer');\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { pluck } from 'rxjs/operators';\nimport { CheckoutDeliveryAdapter } from '../../../checkout/connectors/delivery/checkout-delivery.adapter';\nimport { DELIVERY_MODE_NORMALIZER } from '../../../checkout/connectors/delivery/converters';\nimport { Address } from '../../../model/address.model';\nimport { DeliveryMode } from '../../../model/order.model';\nimport {\n  ADDRESS_NORMALIZER,\n  ADDRESS_SERIALIZER,\n} from '../../../user/connectors/address/converters';\nimport { ConverterService } from '../../../util/converter.service';\nimport { Occ } from '../../occ-models/occ.models';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\n\n@Injectable()\nexport class OccCheckoutDeliveryAdapter implements CheckoutDeliveryAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  protected getCartEndpoint(userId: string): string {\n    const cartEndpoint = 'users/' + userId + '/carts/';\n    return this.occEndpoints.getEndpoint(cartEndpoint);\n  }\n\n  public createAddress(\n    userId: string,\n    cartId: string,\n    address: Address\n  ): Observable<Address> {\n    address = this.converter.convert(address, ADDRESS_SERIALIZER);\n\n    return this.http\n      .post<Occ.Address>(\n        this.getCartEndpoint(userId) + cartId + '/addresses/delivery',\n        address,\n        {\n          headers: new HttpHeaders().set('Content-Type', 'application/json'),\n        }\n      )\n      .pipe(this.converter.pipeable(ADDRESS_NORMALIZER));\n  }\n\n  public setAddress(\n    userId: string,\n    cartId: string,\n    addressId: string\n  ): Observable<any> {\n    return this.http.put(\n      this.occEndpoints.getUrl('setDeliveryAddress', { userId, cartId }),\n      {},\n      {\n        params: { addressId: addressId },\n      }\n    );\n  }\n\n  public setMode(\n    userId: string,\n    cartId: string,\n    deliveryModeId: string\n  ): Observable<any> {\n    return this.http.put(\n      this.getCartEndpoint(userId) + cartId + '/deliverymode',\n      {},\n      {\n        params: { deliveryModeId: deliveryModeId },\n      }\n    );\n  }\n\n  public getMode(userId: string, cartId: string): Observable<any> {\n    return this.http\n      .get(this.getCartEndpoint(userId) + cartId + '/deliverymode')\n      .pipe(this.converter.pipeable(DELIVERY_MODE_NORMALIZER));\n  }\n\n  public getSupportedModes(\n    userId: string,\n    cartId: string\n  ): Observable<DeliveryMode[]> {\n    return this.http\n      .get<Occ.DeliveryModeList>(\n        this.getCartEndpoint(userId) + cartId + '/deliverymodes'\n      )\n      .pipe(\n        pluck('deliveryModes'),\n        this.converter.pipeableMany(DELIVERY_MODE_NORMALIZER)\n      );\n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CART_NORMALIZER } from '../../../cart/connectors/cart/converters';\nimport { PAYMENT_TYPE_NORMALIZER } from '../../../checkout/connectors/payment-type/converters';\nimport { PaymentTypeAdapter } from '../../../checkout/connectors/payment-type/payment-type.adapter';\nimport { Cart, PaymentType } from '../../../model/cart.model';\nimport { ConverterService } from '../../../util/converter.service';\nimport { Occ } from '../../occ-models';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\n\nconst ENDPOINT_PAYMENT_TYPES = 'paymenttypes';\n\n@Injectable()\nexport class OccCheckoutPaymentTypeAdapter implements PaymentTypeAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  loadPaymentTypes(): Observable<PaymentType[]> {\n    return this.http\n      .get<Occ.PaymentTypeList>(\n        this.occEndpoints.getEndpoint(ENDPOINT_PAYMENT_TYPES)\n      )\n      .pipe(\n        map((paymentTypeList) => paymentTypeList.paymentTypes),\n        this.converter.pipeableMany(PAYMENT_TYPE_NORMALIZER)\n      );\n  }\n\n  setPaymentType(\n    userId: string,\n    cartId: string,\n    paymentType: string,\n    purchaseOrderNumber?: string\n  ): Observable<Cart> {\n    let httpParams = new HttpParams().set('paymentType', paymentType);\n    if (purchaseOrderNumber !== undefined) {\n      httpParams = httpParams.set('purchaseOrderNumber', purchaseOrderNumber);\n    }\n    /* tslint:disable:max-line-length */\n    httpParams = httpParams.set(\n      'fields',\n      'DEFAULT,potentialProductPromotions,appliedProductPromotions,potentialOrderPromotions,appliedOrderPromotions,entries(totalPrice(formattedValue),product(images(FULL),stock(FULL)),basePrice(formattedValue,value),updateable),totalPrice(formattedValue),totalItems,totalPriceWithTax(formattedValue),totalDiscounts(value,formattedValue),subTotal(formattedValue),deliveryItemsQuantity,deliveryCost(formattedValue),totalTax(formattedValue, value),pickupItemsQuantity,net,appliedVouchers,productDiscounts(formattedValue),user'\n    );\n    // TODO(#8877): Should we improve configurable endpoints for this use case?\n\n    return this.http\n      .put(\n        this.getCartEndpoint(userId) + cartId + '/paymenttype',\n        {},\n        {\n          params: httpParams,\n        }\n      )\n      .pipe(this.converter.pipeable(CART_NORMALIZER));\n  }\n\n  protected getCartEndpoint(userId: string): string {\n    const cartEndpoint = 'users/' + userId + '/carts/';\n    return this.occEndpoints.getEndpoint(cartEndpoint);\n  }\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, mergeMap } from 'rxjs/operators';\nimport { CheckoutPaymentAdapter } from '../../../checkout/connectors/payment/checkout-payment.adapter';\nimport {\n  CARD_TYPE_NORMALIZER,\n  PAYMENT_DETAILS_NORMALIZER,\n  PAYMENT_DETAILS_SERIALIZER,\n} from '../../../checkout/connectors/payment/converters';\nimport { CardType, PaymentDetails } from '../../../model/cart.model';\nimport { ConverterService } from '../../../util/converter.service';\nimport { Occ } from '../../occ-models';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\nimport { HttpParamsURIEncoder } from '../../../util/http-params-uri.encoder';\n\nconst ENDPOINT_CARD_TYPES = 'cardtypes';\n\n@Injectable()\nexport class OccCheckoutPaymentAdapter implements CheckoutPaymentAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {\n    if (typeof DOMParser !== 'undefined') {\n      this.domparser = new DOMParser();\n    }\n  }\n\n  private domparser: DOMParser;\n\n  protected getCartEndpoint(userId: string): string {\n    const cartEndpoint = 'users/' + userId + '/carts/';\n    return this.occEndpoints.getEndpoint(cartEndpoint);\n  }\n\n  public create(\n    userId: string,\n    cartId: string,\n    paymentDetails: PaymentDetails\n  ): Observable<PaymentDetails> {\n    paymentDetails = this.converter.convert(\n      paymentDetails,\n      PAYMENT_DETAILS_SERIALIZER\n    );\n    return this.getProviderSubInfo(userId, cartId).pipe(\n      map((data) => {\n        const labelsMap = this.convertToMap(data.mappingLabels.entry);\n        return {\n          url: data.postUrl,\n          parameters: this.getParamsForPaymentProvider(\n            paymentDetails,\n            data.parameters.entry,\n            labelsMap\n          ),\n          mappingLabels: labelsMap,\n        };\n      }),\n      mergeMap((sub) => {\n        // create a subscription directly with payment provider\n        return this.createSubWithProvider(sub.url, sub.parameters).pipe(\n          map((response) => this.extractPaymentDetailsFromHtml(response)),\n          mergeMap((fromPaymentProvider) => {\n            fromPaymentProvider['defaultPayment'] =\n              paymentDetails.defaultPayment;\n            fromPaymentProvider['savePaymentInfo'] = true;\n            return this.createDetailsWithParameters(\n              userId,\n              cartId,\n              fromPaymentProvider\n            ).pipe(this.converter.pipeable(PAYMENT_DETAILS_NORMALIZER));\n          })\n        );\n      })\n    );\n  }\n\n  public set(\n    userId: string,\n    cartId: string,\n    paymentDetailsId: string\n  ): Observable<any> {\n    return this.http.put(\n      this.getCartEndpoint(userId) + cartId + '/paymentdetails',\n      {},\n      {\n        params: { paymentDetailsId: paymentDetailsId },\n      }\n    );\n  }\n\n  loadCardTypes(): Observable<CardType[]> {\n    return this.http\n      .get<Occ.CardTypeList>(this.occEndpoints.getEndpoint(ENDPOINT_CARD_TYPES))\n      .pipe(\n        map((cardTypeList) => cardTypeList.cardTypes),\n        this.converter.pipeableMany(CARD_TYPE_NORMALIZER)\n      );\n  }\n\n  protected getProviderSubInfo(\n    userId: string,\n    cartId: string\n  ): Observable<any> {\n    return this.http.get(\n      this.getCartEndpoint(userId) +\n        cartId +\n        '/payment/sop/request?responseUrl=sampleUrl'\n    );\n  }\n\n  protected createSubWithProvider(\n    postUrl: string,\n    parameters: any\n  ): Observable<any> {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/x-www-form-urlencoded',\n      Accept: 'text/html',\n    });\n    let httpParams = new HttpParams({ encoder: new HttpParamsURIEncoder() });\n    Object.keys(parameters).forEach((key) => {\n      httpParams = httpParams.append(key, parameters[key]);\n    });\n\n    return this.http.post(postUrl, httpParams, {\n      headers,\n      responseType: 'text',\n    });\n  }\n\n  protected createDetailsWithParameters(\n    userId: string,\n    cartId: string,\n    parameters: any\n  ): Observable<PaymentDetails> {\n    let httpParams = new HttpParams({ encoder: new HttpParamsURIEncoder() });\n    Object.keys(parameters).forEach((key) => {\n      httpParams = httpParams.append(key, parameters[key]);\n    });\n\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/x-www-form-urlencoded',\n    });\n\n    return this.http.post<PaymentDetails>(\n      this.getCartEndpoint(userId) + cartId + '/payment/sop/response',\n      httpParams,\n      { headers }\n    );\n  }\n\n  private getParamsForPaymentProvider(\n    paymentDetails: PaymentDetails,\n    parameters: { key; value }[],\n    mappingLabels: any\n  ) {\n    const params = this.convertToMap(parameters);\n    params[mappingLabels['hybris_account_holder_name']] =\n      paymentDetails.accountHolderName;\n    params[mappingLabels['hybris_card_type']] = paymentDetails.cardType.code;\n    params[mappingLabels['hybris_card_number']] = paymentDetails.cardNumber;\n    if (mappingLabels['hybris_combined_expiry_date'] === 'true') {\n      params[mappingLabels['hybris_card_expiry_date']] =\n        paymentDetails.expiryMonth +\n        mappingLabels['hybris_separator_expiry_date'] +\n        paymentDetails.expiryYear;\n    } else {\n      params[mappingLabels['hybris_card_expiration_month']] =\n        paymentDetails.expiryMonth;\n      params[mappingLabels['hybris_card_expiration_year']] =\n        paymentDetails.expiryYear;\n    }\n    params[mappingLabels['hybris_card_cvn']] = paymentDetails.cvn;\n\n    // billing address\n    params[mappingLabels['hybris_billTo_country']] =\n      paymentDetails.billingAddress.country.isocode;\n    params[mappingLabels['hybris_billTo_firstname']] =\n      paymentDetails.billingAddress.firstName;\n    params[mappingLabels['hybris_billTo_lastname']] =\n      paymentDetails.billingAddress.lastName;\n    params[mappingLabels['hybris_billTo_street1']] =\n      paymentDetails.billingAddress.line1 +\n      ' ' +\n      paymentDetails.billingAddress.line2;\n    params[mappingLabels['hybris_billTo_city']] =\n      paymentDetails.billingAddress.town;\n    if (paymentDetails.billingAddress.region) {\n      params[mappingLabels['hybris_billTo_region']] =\n        paymentDetails.billingAddress.region.isocodeShort;\n    } else {\n      params[mappingLabels['hybris_billTo_region']] = '';\n    }\n    params[mappingLabels['hybris_billTo_postalcode']] =\n      paymentDetails.billingAddress.postalCode;\n    return params;\n  }\n\n  private extractPaymentDetailsFromHtml(html: string): any {\n    const domdoc = this.domparser.parseFromString(html, 'text/xml');\n    const responseForm = domdoc.getElementsByTagName('form')[0];\n    const inputs = responseForm.getElementsByTagName('input');\n\n    const values = {};\n    for (let i = 0; inputs[i]; i++) {\n      const input = inputs[i];\n      if (\n        input.getAttribute('name') !== '{}' &&\n        input.getAttribute('value') !== ''\n      ) {\n        values[input.getAttribute('name')] = input.getAttribute('value');\n      }\n    }\n\n    return values;\n  }\n\n  private convertToMap(paramList: { key; value }[]) {\n    return paramList.reduce(function (result, item) {\n      const key = item.key;\n      result[key] = item.value;\n      return result;\n    }, {});\n  }\n}\n","import { PageType } from '../../model/cms.model';\nimport { Page } from '../model/page.model';\nimport { Applicable } from '../../util/applicable';\n\n/**\n * Abstract class that can be used to resolve meta data for specific pages.\n * The `getScore` method is used to select the right resolver for a specific\n * page, based on a score. The score is calculated by the (non)matching page\n * type and page template.\n */\nexport abstract class PageMetaResolver implements Applicable {\n  /** The `PageType` is used to score the (non)matching page */\n  pageType: PageType;\n\n  /** The page template is used to score the (non)matching page template */\n  pageTemplate: string;\n\n  /**\n   * Returns the matching score for a resolver class, based on\n   * the page type and page template.\n   */\n  getScore(page: Page): number {\n    let score = 0;\n    if (this.pageType) {\n      score += page.type === this.pageType ? 1 : -1;\n    }\n    if (this.pageTemplate) {\n      score += page.template === this.pageTemplate ? 1 : -1;\n    }\n    return score;\n  }\n\n  hasMatch(page: Page): boolean {\n    return this.getScore(page) > 0;\n  }\n\n  getPriority(page: Page): number {\n    return this.getScore(page);\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { Address, AddressValidation } from '../../../model/address.model';\n\nexport const VERIFY_ADDRESS = '[Checkout] Verify Address';\nexport const VERIFY_ADDRESS_FAIL = '[Checkout] Verify Address Fail';\nexport const VERIFY_ADDRESS_SUCCESS = '[Checkout] Verify Address Success';\n\nexport const CLEAR_ADDRESS_VERIFICATION_RESULTS =\n  '[Checkout] Clear Address Verification Results';\n\nexport class VerifyAddress implements Action {\n  readonly type = VERIFY_ADDRESS;\n  constructor(public payload: { userId: string; address: Address }) {}\n}\n\nexport class VerifyAddressFail implements Action {\n  readonly type = VERIFY_ADDRESS_FAIL;\n  constructor(public payload: any) {}\n}\n\nexport class VerifyAddressSuccess implements Action {\n  readonly type = VERIFY_ADDRESS_SUCCESS;\n  constructor(public payload: AddressValidation) {}\n}\n\nexport class ClearAddressVerificationResults implements Action {\n  readonly type = CLEAR_ADDRESS_VERIFICATION_RESULTS;\n  constructor() {}\n}\n\nexport type AddressVerificationActions =\n  | VerifyAddress\n  | VerifyAddressFail\n  | VerifyAddressSuccess\n  | ClearAddressVerificationResults;\n","import { Action } from '@ngrx/store';\nimport { CardType } from '../../../model/cart.model';\n\nexport const LOAD_CARD_TYPES = '[Checkout] Load Card Types';\nexport const LOAD_CARD_TYPES_FAIL = '[Checkout] Load Card Fail';\nexport const LOAD_CARD_TYPES_SUCCESS = '[Checkout] Load Card Success';\n\nexport class LoadCardTypes implements Action {\n  readonly type = LOAD_CARD_TYPES;\n  constructor() {}\n}\n\nexport class LoadCardTypesFail implements Action {\n  readonly type = LOAD_CARD_TYPES_FAIL;\n  constructor(public payload: any) {}\n}\n\nexport class LoadCardTypesSuccess implements Action {\n  readonly type = LOAD_CARD_TYPES_SUCCESS;\n  constructor(public payload: CardType[]) {}\n}\n\nexport type CardTypesAction =\n  | LoadCardTypes\n  | LoadCardTypesFail\n  | LoadCardTypesSuccess;\n","import { Cart } from '../../model/cart.model';\nimport { EntityProcessesLoaderState } from '../../state/utils/entity-processes-loader/entity-processes-loader-state';\n\nexport const MULTI_CART_FEATURE = 'cart';\nexport const MULTI_CART_DATA = '[Multi Cart] Multi Cart Data';\n\n// TODO(#7241): Drop after event system implementation for cart vouchers\n/**\n * Add voucher process const\n * @deprecated since 2.0\n */\nexport const ADD_VOUCHER_PROCESS_ID = 'addVoucher';\n\nexport interface StateWithMultiCart {\n  [MULTI_CART_FEATURE]: MultiCartState;\n}\n\nexport interface MultiCartState {\n  carts: EntityProcessesLoaderState<Cart>;\n  active: string;\n  wishList: string;\n}\n","import { EntityLoaderState } from '../../state/utils/entity-loader/entity-loader-state';\n\nexport const PROCESS_FEATURE = 'process';\n\nexport interface StateWithProcess<T> {\n  [PROCESS_FEATURE]: EntityLoaderState<T>;\n}\n","import { Address, AddressValidation } from '../../model/address.model';\nimport { CardType, PaymentDetails, PaymentType } from '../../model/cart.model';\nimport { DeliveryMode, Order } from '../../model/order.model';\nimport {\n  ORDER_TYPE,\n  ReplenishmentOrder,\n} from '../../model/replenishment-order.model';\nimport { LoaderState } from '../../state/utils/loader/loader-state';\n\nexport const CHECKOUT_FEATURE = 'checkout';\nexport const CHECKOUT_DETAILS = '[Checkout] Checkout Details';\n\nexport const SET_DELIVERY_ADDRESS_PROCESS_ID = 'setDeliveryAddress';\nexport const SET_DELIVERY_MODE_PROCESS_ID = 'setDeliveryMode';\nexport const SET_SUPPORTED_DELIVERY_MODE_PROCESS_ID =\n  'setSupportedDeliveryMode';\nexport const SET_PAYMENT_DETAILS_PROCESS_ID = 'setPaymentDetails';\nexport const GET_PAYMENT_TYPES_PROCESS_ID = 'getPaymentTypes';\nexport const SET_COST_CENTER_PROCESS_ID = 'setCostCenter';\nexport const PLACED_ORDER_PROCESS_ID = 'placeOrder';\n\nexport interface StateWithCheckout {\n  [CHECKOUT_FEATURE]: CheckoutState;\n}\n\nexport interface AddressVerificationState {\n  results: AddressValidation | string;\n}\n\nexport interface CardTypesState {\n  entities: { [code: string]: CardType };\n}\n\nexport interface CheckoutStepsState {\n  poNumber: {\n    po: string;\n    costCenter: string;\n  };\n  address: Address;\n  deliveryMode: {\n    supported: { [code: string]: DeliveryMode };\n    selected: string;\n  };\n  paymentDetails: PaymentDetails;\n  orderDetails: Order | ReplenishmentOrder;\n}\n\nexport interface PaymentTypesState {\n  entities: { [code: string]: PaymentType };\n  selected: string;\n}\n\nexport interface OrderTypesState {\n  selected: ORDER_TYPE;\n}\n\nexport interface PaymentTypesState {\n  entities: { [code: string]: PaymentType };\n  selected: string;\n}\n\nexport interface CheckoutState {\n  steps: LoaderState<CheckoutStepsState>;\n  cardTypes: CardTypesState;\n  addressVerification: AddressVerificationState;\n  paymentTypes: PaymentTypesState;\n  orderType: OrderTypesState;\n}\n","import { Action } from '@ngrx/store';\nimport { MULTI_CART_DATA } from '../../../cart/store/multi-cart-state';\nimport { Address } from '../../../model/address.model';\nimport { PaymentDetails } from '../../../model/cart.model';\nimport { DeliveryMode, Order } from '../../../model/order.model';\nimport { PROCESS_FEATURE } from '../../../process/store/process-state';\nimport {\n  EntityProcessesDecrementAction,\n  EntityProcessesIncrementAction,\n} from '../../../state/utils/entity-processes-loader/entity-processes-loader.action';\nimport { StateUtils } from '../../../state/utils/index';\nimport { CheckoutDetails } from '../../models/checkout.model';\nimport {\n  CHECKOUT_DETAILS,\n  PLACED_ORDER_PROCESS_ID,\n  SET_COST_CENTER_PROCESS_ID,\n  SET_DELIVERY_ADDRESS_PROCESS_ID,\n  SET_DELIVERY_MODE_PROCESS_ID,\n  SET_PAYMENT_DETAILS_PROCESS_ID,\n  SET_SUPPORTED_DELIVERY_MODE_PROCESS_ID,\n} from '../checkout-state';\n\nexport const CLEAR_CHECKOUT_DELIVERY_ADDRESS =\n  '[Checkout] Clear Checkout Delivery Address';\nexport const CLEAR_CHECKOUT_DELIVERY_ADDRESS_SUCCESS =\n  '[Checkout] Clear Checkout Delivery Address Success';\nexport const CLEAR_CHECKOUT_DELIVERY_ADDRESS_FAIL =\n  '[Checkout] Clear Checkout Delivery Address Fail';\n\nexport const CLEAR_CHECKOUT_DELIVERY_MODE =\n  '[Checkout] Clear Checkout Delivery Mode';\nexport const CLEAR_CHECKOUT_DELIVERY_MODE_SUCCESS =\n  '[Checkout] Clear Checkout Delivery Mode Success';\nexport const CLEAR_CHECKOUT_DELIVERY_MODE_FAIL =\n  '[Checkout] Clear Checkout Delivery Mode Fail';\n\nexport const ADD_DELIVERY_ADDRESS = '[Checkout] Add Delivery Address';\nexport const ADD_DELIVERY_ADDRESS_FAIL = '[Checkout] Add Delivery Address Fail';\nexport const ADD_DELIVERY_ADDRESS_SUCCESS =\n  '[Checkout] Add Delivery Address Success';\n\nexport const SET_DELIVERY_ADDRESS = '[Checkout] Set Delivery Address';\nexport const SET_DELIVERY_ADDRESS_FAIL = '[Checkout] Set Delivery Address Fail';\nexport const SET_DELIVERY_ADDRESS_SUCCESS =\n  '[Checkout] Set Delivery Address Success';\nexport const RESET_SET_DELIVERY_ADDRESS_PROCESS =\n  '[Checkout] Reset Set Delivery Address Process';\n\nexport const LOAD_SUPPORTED_DELIVERY_MODES =\n  '[Checkout] Load Supported Delivery Modes';\nexport const LOAD_SUPPORTED_DELIVERY_MODES_FAIL =\n  '[Checkout] Load Supported Delivery Modes Fail';\nexport const LOAD_SUPPORTED_DELIVERY_MODES_SUCCESS =\n  '[Checkout] Load Supported Delivery Modes Success';\nexport const CLEAR_SUPPORTED_DELIVERY_MODES =\n  '[Checkout] Clear Supported Delivery Modes';\n\nexport const SET_DELIVERY_MODE = '[Checkout] Set Delivery Mode';\nexport const SET_DELIVERY_MODE_FAIL = '[Checkout] Set Delivery Mode Fail';\nexport const SET_DELIVERY_MODE_SUCCESS = '[Checkout] Set Delivery Mode Success';\nexport const RESET_SET_DELIVERY_MODE_PROCESS =\n  '[Checkout] Reset Set Delivery Mode Process';\n\nexport const SET_SUPPORTED_DELIVERY_MODES =\n  '[Checkout] Set Supported Delivery Modes';\nexport const SET_SUPPORTED_DELIVERY_MODES_FAIL =\n  '[Checkout] Set Supported Delivery Modes Fail';\nexport const SET_SUPPORTED_DELIVERY_MODES_SUCCESS =\n  '[Checkout] Set Supported Delivery Modes Success';\nexport const RESET_SUPPORTED_SET_DELIVERY_MODES_PROCESS =\n  '[Checkout] Reset Set Supported Delivery Modes Process';\n\nexport const CREATE_PAYMENT_DETAILS = '[Checkout] Create Payment Details';\nexport const CREATE_PAYMENT_DETAILS_FAIL =\n  '[Checkout] Create Payment Details Fail';\nexport const CREATE_PAYMENT_DETAILS_SUCCESS =\n  '[Checkout] Create Payment Details Success';\n\nexport const SET_PAYMENT_DETAILS = '[Checkout] Set Payment Details';\nexport const SET_PAYMENT_DETAILS_FAIL = '[Checkout] Set Payment Details Fail';\nexport const SET_PAYMENT_DETAILS_SUCCESS =\n  '[Checkout] Set Payment Details Success';\nexport const RESET_SET_PAYMENT_DETAILS_PROCESS =\n  '[Checkout] Reset Set Payment Details Process';\n\nexport const PLACE_ORDER = '[Checkout] Place Order';\nexport const PLACE_ORDER_FAIL = '[Checkout] Place Order Fail';\nexport const PLACE_ORDER_SUCCESS = '[Checkout] Place Order Success';\nexport const CLEAR_PLACE_ORDER = '[Checkout] Clear Place Order';\n\nexport const CLEAR_CHECKOUT_STEP = '[Checkout] Clear One Checkout Step';\nexport const CLEAR_CHECKOUT_DATA = '[Checkout] Clear Checkout Data';\n\nexport const LOAD_CHECKOUT_DETAILS = '[Checkout] Load Checkout Details';\nexport const LOAD_CHECKOUT_DETAILS_FAIL =\n  '[Checkout] Load Checkout Details Fail';\nexport const LOAD_CHECKOUT_DETAILS_SUCCESS =\n  '[Checkout] Load Checkout Details Success';\n\nexport const CHECKOUT_CLEAR_MISCS_DATA = '[Checkout] Clear Miscs Data';\nexport const PAYMENT_PROCESS_SUCCESS = '[Checkout] Payment Process Success';\n\nexport const SET_COST_CENTER = '[Checkout] Set Cost Center';\nexport const SET_COST_CENTER_FAIL = '[Checkout] Set Cost Center Fail';\nexport const SET_COST_CENTER_SUCCESS = '[Checkout] Set Cost Center Success';\nexport const RESET_SET_COST_CENTER_PROCESS =\n  '[Checkout] Reset Set Cost Center Process';\n\nexport class AddDeliveryAddress implements Action {\n  readonly type = ADD_DELIVERY_ADDRESS;\n  constructor(\n    public payload: { userId: string; cartId: string; address: Address }\n  ) {}\n}\n\nexport class AddDeliveryAddressFail implements Action {\n  readonly type = ADD_DELIVERY_ADDRESS_FAIL;\n  constructor(public payload: any) {}\n}\n\nexport class AddDeliveryAddressSuccess implements Action {\n  readonly type = ADD_DELIVERY_ADDRESS_SUCCESS;\n  constructor(public payload: Address) {}\n}\n\nexport class SetDeliveryAddress extends StateUtils.EntityLoadAction {\n  readonly type = SET_DELIVERY_ADDRESS;\n  constructor(\n    public payload: { userId: string; cartId: string; address: Address }\n  ) {\n    super(PROCESS_FEATURE, SET_DELIVERY_ADDRESS_PROCESS_ID);\n  }\n}\n\nexport class SetDeliveryAddressFail extends StateUtils.EntityFailAction {\n  readonly type = SET_DELIVERY_ADDRESS_FAIL;\n  constructor(public payload: any) {\n    super(PROCESS_FEATURE, SET_DELIVERY_ADDRESS_PROCESS_ID, payload);\n  }\n}\n\nexport class SetDeliveryAddressSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = SET_DELIVERY_ADDRESS_SUCCESS;\n  constructor(public payload: Address) {\n    super(PROCESS_FEATURE, SET_DELIVERY_ADDRESS_PROCESS_ID);\n  }\n}\n\nexport class ResetSetDeliveryAddressProcess extends StateUtils.EntityLoaderResetAction {\n  readonly type = RESET_SET_DELIVERY_ADDRESS_PROCESS;\n  constructor() {\n    super(PROCESS_FEATURE, SET_DELIVERY_ADDRESS_PROCESS_ID);\n  }\n}\n\nexport class LoadSupportedDeliveryModes extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_SUPPORTED_DELIVERY_MODES;\n  constructor(public payload: { userId: string; cartId: string }) {\n    super(PROCESS_FEATURE, SET_SUPPORTED_DELIVERY_MODE_PROCESS_ID);\n  }\n}\n\nexport class LoadSupportedDeliveryModesFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_SUPPORTED_DELIVERY_MODES_FAIL;\n  constructor(public payload: any) {\n    super(PROCESS_FEATURE, SET_SUPPORTED_DELIVERY_MODE_PROCESS_ID);\n  }\n}\n\nexport class LoadSupportedDeliveryModesSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_SUPPORTED_DELIVERY_MODES_SUCCESS;\n  constructor(public payload: DeliveryMode[]) {\n    super(PROCESS_FEATURE, SET_SUPPORTED_DELIVERY_MODE_PROCESS_ID);\n  }\n}\n\nexport class ResetLoadSupportedDeliveryModesProcess extends StateUtils.EntityLoaderResetAction {\n  readonly type = RESET_SUPPORTED_SET_DELIVERY_MODES_PROCESS;\n  constructor() {\n    super(PROCESS_FEATURE, SET_SUPPORTED_DELIVERY_MODE_PROCESS_ID);\n  }\n}\n\nexport class SetDeliveryMode extends StateUtils.EntityLoadAction {\n  readonly type = SET_DELIVERY_MODE;\n  constructor(\n    public payload: { userId: string; cartId: string; selectedModeId: string }\n  ) {\n    super(PROCESS_FEATURE, SET_DELIVERY_MODE_PROCESS_ID);\n  }\n}\n\nexport class SetDeliveryModeFail extends StateUtils.EntityFailAction {\n  readonly type = SET_DELIVERY_MODE_FAIL;\n  constructor(public payload: any) {\n    super(PROCESS_FEATURE, SET_DELIVERY_MODE_PROCESS_ID, payload);\n  }\n}\n\nexport class SetDeliveryModeSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = SET_DELIVERY_MODE_SUCCESS;\n  constructor(public payload: string) {\n    super(PROCESS_FEATURE, SET_DELIVERY_MODE_PROCESS_ID);\n  }\n}\n\nexport class ResetSetDeliveryModeProcess extends StateUtils.EntityLoaderResetAction {\n  readonly type = RESET_SET_DELIVERY_MODE_PROCESS;\n  constructor() {\n    super(PROCESS_FEATURE, SET_DELIVERY_MODE_PROCESS_ID);\n  }\n}\n\nexport class CreatePaymentDetails extends StateUtils.EntityLoadAction {\n  readonly type = CREATE_PAYMENT_DETAILS;\n  constructor(\n    public payload: {\n      userId: string;\n      cartId: string;\n      paymentDetails: PaymentDetails;\n    }\n  ) {\n    super(PROCESS_FEATURE, SET_PAYMENT_DETAILS_PROCESS_ID);\n  }\n}\n\nexport class CreatePaymentDetailsFail extends StateUtils.EntityFailAction {\n  readonly type = CREATE_PAYMENT_DETAILS_FAIL;\n  constructor(public payload: any) {\n    super(PROCESS_FEATURE, SET_PAYMENT_DETAILS_PROCESS_ID);\n  }\n}\n\nexport class CreatePaymentDetailsSuccess implements Action {\n  readonly type = CREATE_PAYMENT_DETAILS_SUCCESS;\n  constructor(public payload: PaymentDetails) {}\n}\n\nexport class PaymentProcessSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = PAYMENT_PROCESS_SUCCESS;\n  constructor() {\n    super(PROCESS_FEATURE, SET_PAYMENT_DETAILS_PROCESS_ID);\n  }\n}\n\nexport class SetPaymentDetails extends StateUtils.EntityLoadAction {\n  readonly type = SET_PAYMENT_DETAILS;\n  constructor(\n    public payload: {\n      userId: string;\n      cartId: string;\n      paymentDetails: PaymentDetails;\n    }\n  ) {\n    super(PROCESS_FEATURE, SET_PAYMENT_DETAILS_PROCESS_ID);\n  }\n}\n\nexport class SetPaymentDetailsFail extends StateUtils.EntityFailAction {\n  readonly type = SET_PAYMENT_DETAILS_FAIL;\n  constructor(public payload: any) {\n    super(PROCESS_FEATURE, SET_PAYMENT_DETAILS_PROCESS_ID, payload);\n  }\n}\n\nexport class SetPaymentDetailsSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = SET_PAYMENT_DETAILS_SUCCESS;\n  constructor(public payload: PaymentDetails) {\n    super(PROCESS_FEATURE, SET_PAYMENT_DETAILS_PROCESS_ID);\n  }\n}\n\nexport class ResetSetPaymentDetailsProcess extends StateUtils.EntityLoaderResetAction {\n  readonly type = RESET_SET_PAYMENT_DETAILS_PROCESS;\n  constructor() {\n    super(PROCESS_FEATURE, SET_PAYMENT_DETAILS_PROCESS_ID);\n  }\n}\n\nexport class PlaceOrder extends StateUtils.EntityLoadAction {\n  readonly type = PLACE_ORDER;\n  constructor(\n    public payload: { userId: string; cartId: string; termsChecked: boolean }\n  ) {\n    super(PROCESS_FEATURE, PLACED_ORDER_PROCESS_ID);\n  }\n}\n\nexport class PlaceOrderFail extends StateUtils.EntityFailAction {\n  readonly type = PLACE_ORDER_FAIL;\n  constructor(public payload: any) {\n    super(PROCESS_FEATURE, PLACED_ORDER_PROCESS_ID, payload);\n  }\n}\n\nexport class PlaceOrderSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = PLACE_ORDER_SUCCESS;\n  constructor(public payload: Order) {\n    super(PROCESS_FEATURE, PLACED_ORDER_PROCESS_ID);\n  }\n}\n\nexport class ClearPlaceOrder extends StateUtils.EntityLoaderResetAction {\n  readonly type = CLEAR_PLACE_ORDER;\n  constructor() {\n    super(PROCESS_FEATURE, PLACED_ORDER_PROCESS_ID);\n  }\n}\n\nexport class ClearSupportedDeliveryModes implements Action {\n  readonly type = CLEAR_SUPPORTED_DELIVERY_MODES;\n}\n\nexport class ClearCheckoutStep implements Action {\n  readonly type = CLEAR_CHECKOUT_STEP;\n  constructor(public payload: number) {}\n}\n\nexport class ClearCheckoutData implements Action {\n  readonly type = CLEAR_CHECKOUT_DATA;\n}\n\nexport class LoadCheckoutDetails extends StateUtils.LoaderLoadAction {\n  readonly type = LOAD_CHECKOUT_DETAILS;\n  constructor(public payload: { userId: string; cartId: string }) {\n    super(CHECKOUT_DETAILS);\n  }\n}\n\nexport class LoadCheckoutDetailsFail extends StateUtils.LoaderFailAction {\n  readonly type = LOAD_CHECKOUT_DETAILS_FAIL;\n  constructor(public payload: any) {\n    super(CHECKOUT_DETAILS, payload);\n  }\n}\n\nexport class LoadCheckoutDetailsSuccess extends StateUtils.LoaderSuccessAction {\n  readonly type = LOAD_CHECKOUT_DETAILS_SUCCESS;\n  constructor(public payload: CheckoutDetails) {\n    super(CHECKOUT_DETAILS);\n  }\n}\n\nexport class CheckoutClearMiscsData implements Action {\n  readonly type = CHECKOUT_CLEAR_MISCS_DATA;\n}\n\nexport class ClearCheckoutDeliveryAddress implements Action {\n  readonly type = CLEAR_CHECKOUT_DELIVERY_ADDRESS;\n  constructor(public payload: { userId: string; cartId: string }) {}\n}\n\nexport class ClearCheckoutDeliveryAddressSuccess implements Action {\n  readonly type = CLEAR_CHECKOUT_DELIVERY_ADDRESS_SUCCESS;\n  constructor() {}\n}\n\nexport class ClearCheckoutDeliveryAddressFail implements Action {\n  readonly type = CLEAR_CHECKOUT_DELIVERY_ADDRESS_FAIL;\n  constructor(public payload: any) {}\n}\n\nexport class ClearCheckoutDeliveryMode extends EntityProcessesIncrementAction {\n  readonly type = CLEAR_CHECKOUT_DELIVERY_MODE;\n  constructor(public payload: { userId: string; cartId: string }) {\n    super(MULTI_CART_DATA, payload.cartId);\n  }\n}\n\nexport class ClearCheckoutDeliveryModeSuccess extends EntityProcessesDecrementAction {\n  readonly type = CLEAR_CHECKOUT_DELIVERY_MODE_SUCCESS;\n  constructor(public payload: { userId: string; cartId: string }) {\n    super(MULTI_CART_DATA, payload.cartId);\n  }\n}\n\nexport class ClearCheckoutDeliveryModeFail extends EntityProcessesDecrementAction {\n  readonly type = CLEAR_CHECKOUT_DELIVERY_MODE_FAIL;\n  constructor(public payload: { userId: string; cartId: string; error: any }) {\n    super(MULTI_CART_DATA, payload.cartId);\n  }\n}\n\nexport class SetCostCenter extends StateUtils.EntityLoadAction {\n  readonly type = SET_COST_CENTER;\n  constructor(\n    public payload: { userId: string; cartId: string; costCenterId: string }\n  ) {\n    super(PROCESS_FEATURE, SET_COST_CENTER_PROCESS_ID);\n  }\n}\n\nexport class SetCostCenterFail extends StateUtils.EntityFailAction {\n  readonly type = SET_COST_CENTER_FAIL;\n  constructor(public payload: any) {\n    super(PROCESS_FEATURE, SET_COST_CENTER_PROCESS_ID, payload);\n  }\n}\n\nexport class SetCostCenterSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = SET_COST_CENTER_SUCCESS;\n  constructor(public payload: string) {\n    super(PROCESS_FEATURE, SET_COST_CENTER_PROCESS_ID);\n  }\n}\n\nexport class ResetSetCostCenterProcess extends StateUtils.EntityLoaderResetAction {\n  readonly type = RESET_SET_COST_CENTER_PROCESS;\n  constructor() {\n    super(PROCESS_FEATURE, SET_COST_CENTER_PROCESS_ID);\n  }\n}\n\nexport type CheckoutAction =\n  | AddDeliveryAddress\n  | AddDeliveryAddressFail\n  | AddDeliveryAddressSuccess\n  | SetDeliveryAddress\n  | SetDeliveryAddressFail\n  | SetDeliveryAddressSuccess\n  | ResetSetDeliveryAddressProcess\n  | LoadSupportedDeliveryModes\n  | LoadSupportedDeliveryModesFail\n  | LoadSupportedDeliveryModesSuccess\n  | SetDeliveryMode\n  | SetDeliveryModeFail\n  | SetDeliveryModeSuccess\n  | ResetSetDeliveryModeProcess\n  | ClearSupportedDeliveryModes\n  | CreatePaymentDetails\n  | CreatePaymentDetailsFail\n  | CreatePaymentDetailsSuccess\n  | SetPaymentDetails\n  | SetPaymentDetailsFail\n  | SetPaymentDetailsSuccess\n  | ResetSetPaymentDetailsProcess\n  | PlaceOrder\n  | PlaceOrderFail\n  | PlaceOrderSuccess\n  | ClearCheckoutStep\n  | ClearCheckoutData\n  | ClearCheckoutDeliveryAddress\n  | ClearCheckoutDeliveryAddressFail\n  | ClearCheckoutDeliveryAddressSuccess\n  | ClearCheckoutDeliveryMode\n  | ClearCheckoutDeliveryModeFail\n  | ClearCheckoutDeliveryModeSuccess\n  | LoadCheckoutDetails\n  | LoadCheckoutDetailsFail\n  | LoadCheckoutDetailsSuccess\n  | CheckoutClearMiscsData\n  | SetCostCenter\n  | SetCostCenterFail\n  | SetCostCenterSuccess\n  | ResetSetCostCenterProcess;\n","import { Action } from '@ngrx/store';\nimport { ORDER_TYPE } from '../../../model/replenishment-order.model';\n\nexport const SET_ORDER_TYPE = '[Checkout] Set Order Type';\n\nexport class SetOrderType implements Action {\n  readonly type = SET_ORDER_TYPE;\n  constructor(public payload: ORDER_TYPE) {}\n}\n\nexport type OrderTypesActions = SetOrderType;\n","import { Action } from '@ngrx/store';\nimport { PaymentType, Cart } from '../../../model/cart.model';\nimport {\n  EntityFailAction,\n  EntityLoadAction,\n  EntitySuccessAction,\n  EntityLoaderResetAction,\n} from '../../../state/utils/entity-loader/entity-loader.action';\nimport { PROCESS_FEATURE } from '../../../process/store/process-state';\nimport { GET_PAYMENT_TYPES_PROCESS_ID } from '../checkout-state';\n\nexport const LOAD_PAYMENT_TYPES = '[Checkout] Load Payment Types';\nexport const LOAD_PAYMENT_TYPES_FAIL = '[Checkout] Load Payment Types Fail';\nexport const LOAD_PAYMENT_TYPES_SUCCESS =\n  '[Checkout] Load Payment Types Success';\nexport const RESET_LOAD_PAYMENT_TYPES_PROCESS_ID =\n  '[Checkout] Reset Load Payment Type Process';\n\nexport const SET_PAYMENT_TYPE = '[Checkout] Set Payment Type';\nexport const SET_PAYMENT_TYPE_FAIL = '[Checkout] Set Payment Type Fail';\nexport const SET_PAYMENT_TYPE_SUCCESS = '[Checkout] Set Payment Type Success';\n\nexport class LoadPaymentTypes extends EntityLoadAction {\n  readonly type = LOAD_PAYMENT_TYPES;\n  constructor() {\n    super(PROCESS_FEATURE, GET_PAYMENT_TYPES_PROCESS_ID);\n  }\n}\n\nexport class LoadPaymentTypesFail extends EntityFailAction {\n  readonly type = LOAD_PAYMENT_TYPES_FAIL;\n  constructor(public payload: any) {\n    super(PROCESS_FEATURE, GET_PAYMENT_TYPES_PROCESS_ID);\n  }\n}\n\nexport class LoadPaymentTypesSuccess extends EntitySuccessAction {\n  readonly type = LOAD_PAYMENT_TYPES_SUCCESS;\n  constructor(public payload: PaymentType[]) {\n    super(PROCESS_FEATURE, GET_PAYMENT_TYPES_PROCESS_ID);\n  }\n}\n\nexport class ResetLoadPaymentTypesProcess extends EntityLoaderResetAction {\n  readonly type = RESET_LOAD_PAYMENT_TYPES_PROCESS_ID;\n  constructor() {\n    super(PROCESS_FEATURE, GET_PAYMENT_TYPES_PROCESS_ID);\n  }\n}\n\nexport class SetPaymentType implements Action {\n  readonly type = SET_PAYMENT_TYPE;\n  constructor(\n    public payload: {\n      userId: string;\n      cartId: string;\n      typeCode: string;\n      poNumber?: string;\n    }\n  ) {}\n}\n\nexport class SetPaymentTypeFail implements Action {\n  readonly type = SET_PAYMENT_TYPE_FAIL;\n  constructor(public payload: any) {}\n}\n\nexport class SetPaymentTypeSuccess implements Action {\n  readonly type = SET_PAYMENT_TYPE_SUCCESS;\n  constructor(public payload: Cart) {}\n}\n\nexport type PaymentTypesAction =\n  | LoadPaymentTypes\n  | LoadPaymentTypesFail\n  | LoadPaymentTypesSuccess\n  | ResetLoadPaymentTypesProcess\n  | SetPaymentType\n  | SetPaymentTypeFail\n  | SetPaymentTypeSuccess;\n","import {\n  ReplenishmentOrder,\n  ScheduleReplenishmentForm,\n} from '../../../model/replenishment-order.model';\nimport { PROCESS_FEATURE } from '../../../process/store/process-state';\nimport { StateUtils } from '../../../state/utils/index';\nimport { PLACED_ORDER_PROCESS_ID } from '../checkout-state';\n\nexport const SCHEDULE_REPLENISHMENT_ORDER =\n  '[Checkout] Schedule Replenishment Order';\nexport const SCHEDULE_REPLENISHMENT_ORDER_SUCCESS =\n  '[Checkout] Schedule Replenishment Order Success';\nexport const SCHEDULE_REPLENISHMENT_ORDER_FAIL =\n  '[Checkout] Schedule Replenishment Order Fail';\nexport const CLEAR_SCHEDULE_REPLENISHMENT_ORDER =\n  '[Checkout] Clear Schedule Replenishment Data';\n\nexport class ScheduleReplenishmentOrder extends StateUtils.EntityLoadAction {\n  readonly type = SCHEDULE_REPLENISHMENT_ORDER;\n  constructor(\n    public payload: {\n      cartId: string;\n      scheduleReplenishmentForm: ScheduleReplenishmentForm;\n      termsChecked: boolean;\n      userId: string;\n    }\n  ) {\n    super(PROCESS_FEATURE, PLACED_ORDER_PROCESS_ID);\n  }\n}\n\nexport class ScheduleReplenishmentOrderSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = SCHEDULE_REPLENISHMENT_ORDER_SUCCESS;\n  constructor(public payload: ReplenishmentOrder) {\n    super(PROCESS_FEATURE, PLACED_ORDER_PROCESS_ID);\n  }\n}\n\nexport class ScheduleReplenishmentOrderFail extends StateUtils.EntityFailAction {\n  readonly type = SCHEDULE_REPLENISHMENT_ORDER_FAIL;\n  constructor(public payload: any) {\n    super(PROCESS_FEATURE, PLACED_ORDER_PROCESS_ID, payload);\n  }\n}\n\nexport class ClearScheduleReplenishmentOrderAction extends StateUtils.EntityLoaderResetAction {\n  readonly type = CLEAR_SCHEDULE_REPLENISHMENT_ORDER;\n  constructor() {\n    super(PROCESS_FEATURE, PLACED_ORDER_PROCESS_ID);\n  }\n}\n\nexport type ReplenishmentOrderActions =\n  | ScheduleReplenishmentOrder\n  | ScheduleReplenishmentOrderSuccess\n  | ScheduleReplenishmentOrderFail\n  | ClearScheduleReplenishmentOrderAction;\n","/**\n * Indicates that a user has successfully placed an order\n */\nexport class OrderPlacedEvent {\n  code: string;\n}\n","import { Injectable } from '@angular/core';\nimport { StateEventService } from '../../state/event/state-event.service';\nimport { CheckoutActions } from '../store/actions/index';\nimport { OrderPlacedEvent } from './checkout.events';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutEventBuilder {\n  constructor(protected stateEventService: StateEventService) {\n    this.register();\n  }\n\n  /**\n   * Registers checkout events\n   */\n  protected register(): void {\n    this.orderPlacedEvent();\n  }\n\n  /**\n   * Register an order successfully placed event\n   */\n  protected orderPlacedEvent(): void {\n    this.stateEventService.register({\n      action: CheckoutActions.PLACE_ORDER_SUCCESS,\n      event: OrderPlacedEvent,\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CheckoutEventBuilder } from './checkout-event.builder';\n\n@NgModule({})\nexport class CheckoutEventModule {\n  constructor(_checkoutEventBuilder: CheckoutEventBuilder) {}\n}\n","import { OrderEntry } from '../../../model/order.model';\nimport {\n  EntityProcessesDecrementAction,\n  EntityProcessesIncrementAction,\n} from '../../../state/utils/entity-processes-loader/entity-processes-loader.action';\nimport { MULTI_CART_DATA } from '../multi-cart-state';\n\nexport const CART_ADD_ENTRY = '[Cart-entry] Add Entry';\nexport const CART_ADD_ENTRY_SUCCESS = '[Cart-entry] Add Entry Success';\nexport const CART_ADD_ENTRY_FAIL = '[Cart-entry] Add Entry Fail';\nexport const CART_REMOVE_ENTRY = '[Cart-entry] Remove Entry';\nexport const CART_REMOVE_ENTRY_SUCCESS = '[Cart-entry] Remove Entry Success';\nexport const CART_REMOVE_ENTRY_FAIL = '[Cart-entry] Remove Entry Fail';\n\nexport const CART_UPDATE_ENTRY = '[Cart-entry] Update Entry';\nexport const CART_UPDATE_ENTRY_SUCCESS = '[Cart-entry] Update Entry Success';\nexport const CART_UPDATE_ENTRY_FAIL = '[Cart-entry] Update Entry Fail';\n\nexport class CartAddEntry extends EntityProcessesIncrementAction {\n  readonly type = CART_ADD_ENTRY;\n  constructor(\n    public payload: {\n      cartId: string;\n      userId: string;\n      productCode: string;\n      quantity: number;\n    }\n  ) {\n    super(MULTI_CART_DATA, payload.cartId);\n  }\n}\n\nexport class CartAddEntrySuccess extends EntityProcessesDecrementAction {\n  readonly type = CART_ADD_ENTRY_SUCCESS;\n  constructor(\n    public payload: {\n      userId: string;\n      cartId: string;\n      productCode: string;\n      quantity: number;\n      deliveryModeChanged: boolean;\n      entry: OrderEntry;\n      quantityAdded: number;\n      statusCode: string;\n      statusMessage: string;\n    }\n  ) {\n    super(MULTI_CART_DATA, payload.cartId);\n  }\n}\n\nexport class CartAddEntryFail extends EntityProcessesDecrementAction {\n  readonly type = CART_ADD_ENTRY_FAIL;\n  constructor(\n    public payload: {\n      userId: string;\n      cartId: string;\n      productCode: string;\n      quantity: number;\n      error: any;\n    }\n  ) {\n    super(MULTI_CART_DATA, payload.cartId);\n  }\n}\n\nexport class CartRemoveEntry extends EntityProcessesIncrementAction {\n  readonly type = CART_REMOVE_ENTRY;\n  constructor(\n    public payload: { cartId: string; userId: string; entryNumber: string }\n  ) {\n    super(MULTI_CART_DATA, payload.cartId);\n  }\n}\n\nexport class CartRemoveEntrySuccess extends EntityProcessesDecrementAction {\n  readonly type = CART_REMOVE_ENTRY_SUCCESS;\n  constructor(\n    public payload: { userId: string; cartId: string; entryNumber: string }\n  ) {\n    super(MULTI_CART_DATA, payload.cartId);\n  }\n}\n\nexport class CartRemoveEntryFail extends EntityProcessesDecrementAction {\n  readonly type = CART_REMOVE_ENTRY_FAIL;\n  constructor(\n    public payload: {\n      error: any;\n      cartId: string;\n      userId: string;\n      entryNumber: string;\n    }\n  ) {\n    super(MULTI_CART_DATA, payload.cartId);\n  }\n}\n\nexport class CartUpdateEntry extends EntityProcessesIncrementAction {\n  readonly type = CART_UPDATE_ENTRY;\n  constructor(\n    public payload: {\n      userId: string;\n      cartId: string;\n      entryNumber: string;\n      quantity: number;\n    }\n  ) {\n    super(MULTI_CART_DATA, payload.cartId);\n  }\n}\n\nexport class CartUpdateEntrySuccess extends EntityProcessesDecrementAction {\n  readonly type = CART_UPDATE_ENTRY_SUCCESS;\n  constructor(\n    public payload: {\n      userId: string;\n      cartId: string;\n      entryNumber: string;\n      quantity: number;\n    }\n  ) {\n    super(MULTI_CART_DATA, payload.cartId);\n  }\n}\n\nexport class CartUpdateEntryFail extends EntityProcessesDecrementAction {\n  readonly type = CART_UPDATE_ENTRY_FAIL;\n  constructor(\n    public payload: {\n      error: any;\n      userId: string;\n      cartId: string;\n      entryNumber: string;\n      quantity: number;\n    }\n  ) {\n    super(MULTI_CART_DATA, payload.cartId);\n  }\n}\n\nexport type CartEntryAction =\n  | CartAddEntry\n  | CartAddEntrySuccess\n  | CartAddEntryFail\n  | CartRemoveEntry\n  | CartRemoveEntrySuccess\n  | CartRemoveEntryFail\n  | CartUpdateEntry\n  | CartUpdateEntrySuccess\n  | CartUpdateEntryFail;\n","import { PROCESS_FEATURE } from '../../../process/store/process-state';\nimport {\n  EntityFailAction,\n  EntityLoadAction,\n  EntityLoaderResetAction,\n  EntitySuccessAction,\n} from '../../../state/utils/entity-loader/entity-loader.action';\nimport {\n  EntityProcessesDecrementAction,\n  EntityProcessesIncrementAction,\n} from '../../../state/utils/entity-processes-loader/entity-processes-loader.action';\nimport { ADD_VOUCHER_PROCESS_ID, MULTI_CART_DATA } from '../multi-cart-state';\n\nexport const CART_ADD_VOUCHER = '[Cart-voucher] Add Cart Vouchers';\nexport const CART_ADD_VOUCHER_FAIL = '[Cart-voucher] Add Cart Voucher Fail';\nexport const CART_ADD_VOUCHER_SUCCESS =\n  '[Cart-voucher] Add Cart Voucher Success';\nexport const CART_RESET_ADD_VOUCHER = '[Cart-voucher] Reset Add Cart Voucher';\n\nexport const CART_REMOVE_VOUCHER = '[Cart-voucher] Remove Cart Voucher';\nexport const CART_REMOVE_VOUCHER_FAIL =\n  '[Cart-voucher] Remove Cart Voucher Fail';\nexport const CART_REMOVE_VOUCHER_SUCCESS =\n  '[Cart-voucher] Remove Cart Voucher Success';\n\n// Adding cart voucher actions\nexport class CartAddVoucher extends EntityLoadAction {\n  readonly type = CART_ADD_VOUCHER;\n  constructor(\n    public payload: { userId: string; cartId: string; voucherId: string }\n  ) {\n    super(PROCESS_FEATURE, ADD_VOUCHER_PROCESS_ID);\n  }\n}\n\nexport class CartAddVoucherFail extends EntityFailAction {\n  readonly type = CART_ADD_VOUCHER_FAIL;\n  constructor(\n    public payload: {\n      userId: string;\n      cartId: string;\n      voucherId: string;\n      error: any;\n    }\n  ) {\n    super(PROCESS_FEATURE, ADD_VOUCHER_PROCESS_ID, payload.error);\n  }\n}\n\nexport class CartAddVoucherSuccess extends EntitySuccessAction {\n  readonly type = CART_ADD_VOUCHER_SUCCESS;\n  constructor(\n    public payload: { userId: string; cartId: string; voucherId: string }\n  ) {\n    super(PROCESS_FEATURE, ADD_VOUCHER_PROCESS_ID);\n  }\n}\n\n// TODO(#7241): Remove when switching to event system for vouchers\n/**\n * Resets add voucher process\n *\n * @deprecated since 2.0\n */\nexport class CartResetAddVoucher extends EntityLoaderResetAction {\n  readonly type = CART_RESET_ADD_VOUCHER;\n  constructor() {\n    super(PROCESS_FEATURE, ADD_VOUCHER_PROCESS_ID);\n  }\n}\n\n// Deleting cart voucher\nexport class CartRemoveVoucher extends EntityProcessesIncrementAction {\n  readonly type = CART_REMOVE_VOUCHER;\n  constructor(\n    public payload: { userId: string; cartId: string; voucherId: string }\n  ) {\n    super(MULTI_CART_DATA, payload.cartId);\n  }\n}\n\nexport class CartRemoveVoucherFail extends EntityProcessesDecrementAction {\n  readonly type = CART_REMOVE_VOUCHER_FAIL;\n  constructor(\n    public payload: {\n      error: any;\n      cartId: string;\n      userId: string;\n      voucherId: string;\n    }\n  ) {\n    super(MULTI_CART_DATA, payload.cartId);\n  }\n}\n\nexport class CartRemoveVoucherSuccess extends EntityProcessesDecrementAction {\n  readonly type = CART_REMOVE_VOUCHER_SUCCESS;\n  constructor(\n    public payload: { userId: string; cartId: string; voucherId: string }\n  ) {\n    super(MULTI_CART_DATA, payload.cartId);\n  }\n}\n\n// action types\nexport type CartVoucherAction =\n  | CartAddVoucher\n  | CartAddVoucherFail\n  | CartAddVoucherSuccess\n  | CartResetAddVoucher\n  | CartRemoveVoucher\n  | CartRemoveVoucherFail\n  | CartRemoveVoucherSuccess;\n","import { Action } from '@ngrx/store';\nimport { Cart } from '../../../model/cart.model';\nimport {\n  EntityFailAction,\n  EntityLoadAction,\n  EntitySuccessAction,\n} from '../../../state/utils/entity-loader/entity-loader.action';\nimport {\n  EntityProcessesDecrementAction,\n  EntityProcessesIncrementAction,\n} from '../../../state/utils/entity-processes-loader/entity-processes-loader.action';\nimport { EntityRemoveAction } from '../../../state/utils/entity/entity.action';\nimport { ProcessesLoaderResetAction } from '../../../state/utils/processes-loader/processes-loader.action';\nimport { MULTI_CART_DATA } from '../multi-cart-state';\n\nexport const CREATE_CART = '[Cart] Create Cart';\nexport const CREATE_CART_FAIL = '[Cart] Create Cart Fail';\nexport const CREATE_CART_SUCCESS = '[Cart] Create Cart Success';\n\nexport const LOAD_CART = '[Cart] Load Cart';\nexport const LOAD_CART_FAIL = '[Cart] Load Cart Fail';\nexport const LOAD_CART_SUCCESS = '[Cart] Load Cart Success';\n\nexport const ADD_EMAIL_TO_CART = '[Cart] Add Email to Cart';\nexport const ADD_EMAIL_TO_CART_FAIL = '[Cart] Add Email to Cart Fail';\nexport const ADD_EMAIL_TO_CART_SUCCESS = '[Cart] Add Email to Cart Success';\n\nexport const MERGE_CART = '[Cart] Merge Cart';\nexport const MERGE_CART_SUCCESS = '[Cart] Merge Cart Success';\n\nexport const RESET_CART_DETAILS = '[Cart] Reset Cart Details';\n\nexport const REMOVE_CART = '[Cart] Remove Cart';\n\nexport const DELETE_CART = '[Cart] Delete Cart';\nexport const DELETE_CART_SUCCESS = '[Cart] Delete Cart Success';\nexport const DELETE_CART_FAIL = '[Cart] Delete Cart Fail';\n\ninterface CreateCartPayload {\n  userId: string;\n  /** Used as a unique key in ngrx carts store (we don't know cartId at that time) */\n  tempCartId: string;\n  extraData?: {\n    active?: boolean;\n  };\n  /** Anonymous cart which should be merged to new cart */\n  oldCartId?: string;\n  /** Cart to which should we merge (not passing this will create new cart) */\n  toMergeCartGuid?: string;\n}\n\nexport class CreateCart extends EntityLoadAction {\n  readonly type = CREATE_CART;\n  constructor(public payload: CreateCartPayload) {\n    super(MULTI_CART_DATA, payload.tempCartId);\n  }\n}\n\ninterface CreateCartFailPayload extends CreateCartPayload {\n  error: any;\n}\n\nexport class CreateCartFail extends EntityFailAction {\n  readonly type = CREATE_CART_FAIL;\n  constructor(public payload: CreateCartFailPayload) {\n    super(MULTI_CART_DATA, payload.tempCartId);\n  }\n}\n\ninterface CreateCartSuccessPayload extends CreateCartPayload {\n  cart: Cart;\n  cartId: string;\n}\n\nexport class CreateCartSuccess extends EntitySuccessAction {\n  readonly type = CREATE_CART_SUCCESS;\n  constructor(public payload: CreateCartSuccessPayload) {\n    super(MULTI_CART_DATA, payload.cartId);\n  }\n}\n\nexport class AddEmailToCart extends EntityProcessesIncrementAction {\n  readonly type = ADD_EMAIL_TO_CART;\n  constructor(\n    public payload: { userId: string; cartId: string; email: string }\n  ) {\n    super(MULTI_CART_DATA, payload.cartId);\n  }\n}\n\nexport class AddEmailToCartFail extends EntityProcessesDecrementAction {\n  readonly type = ADD_EMAIL_TO_CART_FAIL;\n  constructor(\n    public payload: {\n      userId: string;\n      cartId: string;\n      error: any;\n      email: string;\n    }\n  ) {\n    super(MULTI_CART_DATA, payload.cartId);\n  }\n}\n\nexport class AddEmailToCartSuccess extends EntityProcessesDecrementAction {\n  readonly type = ADD_EMAIL_TO_CART_SUCCESS;\n  constructor(\n    public payload: { userId: string; cartId: string; email: string }\n  ) {\n    super(MULTI_CART_DATA, payload.cartId);\n  }\n}\n\ninterface LoadCartPayload {\n  userId: string;\n  cartId: string;\n  extraData?: {\n    active?: boolean;\n  };\n}\n\nexport class LoadCart extends EntityLoadAction {\n  readonly type = LOAD_CART;\n  constructor(public payload: LoadCartPayload) {\n    super(MULTI_CART_DATA, payload.cartId);\n  }\n}\n\ninterface LoadCartFailPayload extends LoadCartPayload {\n  error: any;\n}\n\nexport class LoadCartFail extends EntityFailAction {\n  readonly type = LOAD_CART_FAIL;\n  constructor(public payload: LoadCartFailPayload) {\n    super(MULTI_CART_DATA, payload.cartId, payload.error);\n  }\n}\n\ninterface LoadCartSuccessPayload extends LoadCartPayload {\n  cart: Cart;\n}\n\nexport class LoadCartSuccess extends EntitySuccessAction {\n  readonly type = LOAD_CART_SUCCESS;\n  constructor(public payload: LoadCartSuccessPayload) {\n    super(MULTI_CART_DATA, payload.cartId);\n  }\n}\n\ninterface MergeCartPayload {\n  cartId: string;\n  userId: string;\n  extraData?: { active?: boolean };\n  /**\n   * MergeCart actions triggers CreateCart which requires this parameter, so that's why it is required.\n   */\n  tempCartId: string;\n}\n\nexport class MergeCart implements Action {\n  readonly type = MERGE_CART;\n  constructor(public payload: MergeCartPayload) {}\n}\n\ninterface MergeCartSuccessPayload extends MergeCartPayload {\n  /**\n   * Previous cart id which was merged with new/user cart.\n   * Needed to know which obsolete entity should be removed.\n   */\n  oldCartId: string;\n}\n\nexport class MergeCartSuccess extends EntityRemoveAction {\n  readonly type = MERGE_CART_SUCCESS;\n  constructor(public payload: MergeCartSuccessPayload) {\n    super(MULTI_CART_DATA, payload.oldCartId);\n  }\n}\n\n/**\n * On site context change we want to keep current list of entities, but we want to clear the value and flags.\n * With ProcessesLoaderResetAction we run it on every entity of this type.\n */\nexport class ResetCartDetails extends ProcessesLoaderResetAction {\n  readonly type = RESET_CART_DETAILS;\n  constructor() {\n    super(MULTI_CART_DATA);\n  }\n}\n\n/**\n * Used for cleaning cart in local state, when we get information that it no longer exists in the backend.\n * For removing particular cart in both places use DeleteCart actions.\n */\nexport class RemoveCart extends EntityRemoveAction {\n  readonly type = REMOVE_CART;\n  constructor(public payload: { cartId: string }) {\n    super(MULTI_CART_DATA, payload.cartId);\n  }\n}\n\nexport class DeleteCart implements Action {\n  readonly type = DELETE_CART;\n  constructor(public payload: { userId: string; cartId: string }) {}\n}\n\nexport class DeleteCartSuccess extends EntityRemoveAction {\n  readonly type = DELETE_CART_SUCCESS;\n  constructor(public payload: { userId: string; cartId: string }) {\n    super(MULTI_CART_DATA, payload.cartId);\n  }\n}\n\nexport class DeleteCartFail implements Action {\n  readonly type = DELETE_CART_FAIL;\n  constructor(public payload: { userId: string; cartId: string; error: any }) {}\n}\n\nexport type CartAction =\n  | CreateCart\n  | CreateCartFail\n  | CreateCartSuccess\n  | LoadCart\n  | LoadCartFail\n  | LoadCartSuccess\n  | MergeCart\n  | MergeCartSuccess\n  | ResetCartDetails\n  | AddEmailToCart\n  | AddEmailToCartFail\n  | AddEmailToCartSuccess\n  | DeleteCart\n  | DeleteCartSuccess\n  | DeleteCartFail\n  | RemoveCart;\n","import { Action } from '@ngrx/store';\nimport { Cart } from '../../../model/cart.model';\nimport { EntitySuccessAction } from '../../../state/utils/entity-loader/entity-loader.action';\nimport {\n  EntityProcessesDecrementAction,\n  EntityProcessesIncrementAction,\n} from '../../../state/utils/entity-processes-loader/entity-processes-loader.action';\nimport { EntityRemoveAllAction } from '../../../state/utils/entity/entity.action';\nimport { MULTI_CART_DATA } from '../multi-cart-state';\n\nexport const SET_TEMP_CART = '[Cart] Set Temp Cart';\n\nexport const CART_PROCESSES_INCREMENT = '[Cart] Cart Processes Increment';\nexport const CART_PROCESSES_DECREMENT = '[Cart] Cart Processes Decrement';\n\nexport const SET_ACTIVE_CART_ID = '[Cart] Set Active Cart Id';\n\nexport const CLEAR_CART_STATE = '[Cart] Clear Cart State';\n\n/**\n * To keep track of cart creation process we use cart with `temp-${uuid}` id.\n * After creating cart we switch to entity with `code` or `guid`.\n * We need `temp-${uuid}` cart entities for loading/error state.\n */\nexport class SetTempCart extends EntitySuccessAction {\n  readonly type = SET_TEMP_CART;\n  constructor(public payload: { cart: Cart; tempCartId: string }) {\n    super(MULTI_CART_DATA, payload.tempCartId, payload.cart);\n  }\n}\n\n// TODO(#7241): Remove when there won't be any usage\n/**\n * Increases process counter on cart entities\n * All actions that cause computations on cart should extend EntityProcessesIncrementAction instead of dispatching this action.\n * @deprecated since 2.0\n */\nexport class CartProcessesIncrement extends EntityProcessesIncrementAction {\n  readonly type = CART_PROCESSES_INCREMENT;\n  constructor(public payload: string) {\n    super(MULTI_CART_DATA, payload);\n  }\n}\n\n// TODO(#7241): Remove when there won't be any usage\n/**\n * Decrement process counter on cart entities\n * All actions that cause computations on cart should extend EntityProcessesDecrementAction instead of dispatching this action.\n * @deprecated since 2.0\n */\nexport class CartProcessesDecrement extends EntityProcessesDecrementAction {\n  readonly type = CART_PROCESSES_DECREMENT;\n  constructor(public payload: string) {\n    super(MULTI_CART_DATA, payload);\n  }\n}\n\n/**\n * Only sets active cart property with id of active cart. Then services take care of loading that cart.\n */\nexport class SetActiveCartId implements Action {\n  readonly type = SET_ACTIVE_CART_ID;\n  constructor(public payload: string) {}\n}\n\n/**\n * Clear whole cart store state: all entities + reset rest of the cart state.\n */\nexport class ClearCartState extends EntityRemoveAllAction {\n  readonly type = CLEAR_CART_STATE;\n  constructor() {\n    super(MULTI_CART_DATA);\n  }\n}\n\nexport type MultiCartActions =\n  | SetTempCart\n  | CartProcessesIncrement\n  | CartProcessesDecrement\n  | SetActiveCartId\n  | ClearCartState;\n","import { ErrorModel } from '../../model';\nimport { Cart } from '../../model/cart.model';\nimport { OCC_USER_ID_ANONYMOUS } from '../../occ/utils/occ-constants';\n\n/**\n * Extract cart identifier for current user. Anonymous calls use `guid` and for logged users `code` is used.\n */\nexport function getCartIdByUserId(cart: Cart, userId: string): string {\n  if (userId === OCC_USER_ID_ANONYMOUS) {\n    return cart.guid;\n  }\n  return cart.code;\n}\n\n/**\n * Check if cart is selective (save for later) based on id.\n */\nexport function isSelectiveCart(cartId = ''): boolean {\n  return cartId.startsWith('selectivecart');\n}\n\n/**\n * Check if the returned error is of type notFound.\n *\n * We additionally check if the cart is not a selective cart.\n * For selective cart this error can happen only when extension is disabled.\n * It should never happen, because in that case, selective cart should also be disabled in our configuration.\n * However if that happens we want to handle these errors silently.\n */\nexport function isCartNotFoundError(error: ErrorModel): boolean {\n  return (\n    error.reason === 'notFound' &&\n    error.subjectType === 'cart' &&\n    !isSelectiveCart(error.subject)\n  );\n}\n\n/**\n * Compute wishlist cart name for customer.\n */\nexport function getWishlistName(customerId: string): string {\n  return `wishlist${customerId}`;\n}\n\n/**\n * What is a temporary cart?\n * - frontend only cart entity!\n * - can be identified in store by `temp-` prefix with some unique id (multiple carts can be created at the same time eg. active cart, wishlist)\n *\n * Why we need temporary carts?\n * - to have information about cart creation process (meta flags: loading, error - for showing loader, error message)\n * - to know if there is currently a cart creation process in progress (eg. so, we don't create more than one active cart at the same time)\n * - cart identifiers are created in the backend, so those are only known after cart is created\n *\n * Temporary cart life cycle\n * - create cart method invoked\n * - new `temp-${uuid}` cart is created with `loading=true` state\n * - backend returns created cart\n * - normal cart entity is saved under correct id (eg. for logged user under cart `code` key)\n * - temporary cart value is set to backend response (anyone observing this cart can read code/guid from it and switch selector to normal cart)\n * - in next tick temporary cart is removed\n */\nexport function isTempCartId(cartId: string): boolean {\n  return cartId.startsWith('temp-');\n}\n","import { Action } from '@ngrx/store';\nimport { Cart } from '../../../model/cart.model';\nimport {\n  EntityFailAction,\n  EntityLoadAction,\n  EntitySuccessAction,\n} from '../../../state/utils/entity-loader/entity-loader.action';\nimport { getCartIdByUserId } from '../../utils/utils';\nimport { MULTI_CART_DATA } from '../multi-cart-state';\n\nexport const CREATE_WISH_LIST = '[Wish List] Create Wish List';\nexport const CREATE_WISH_LIST_FAIL = '[Wish List] Create Wish List Fail';\nexport const CREATE_WISH_LIST_SUCCESS = '[Wish List] Create Wish List Success';\n\nexport const LOAD_WISH_LIST = '[Wish List] Load Wish List';\nexport const LOAD_WISH_LIST_SUCCESS = '[Wish List] Load Wish List Success';\nexport const LOAD_WISH_LIST_FAIL = '[Wish List] Load Wish List Fail';\n\nexport const RESET_WISH_LIST_DETAILS = '[Wish List] Reset Wish List';\n\nexport class CreateWishList implements Action {\n  readonly type = CREATE_WISH_LIST;\n  constructor(\n    public payload: {\n      userId: string;\n      name: string;\n      description?: string;\n    }\n  ) {}\n}\n\nexport class CreateWishListSuccess extends EntitySuccessAction {\n  readonly type = CREATE_WISH_LIST_SUCCESS;\n  constructor(public payload: { cart: Cart; userId: string }) {\n    super(MULTI_CART_DATA, getCartIdByUserId(payload.cart, payload.userId));\n  }\n}\n\nexport class CreateWishListFail extends EntityFailAction {\n  readonly type = CREATE_WISH_LIST_FAIL;\n  constructor(public payload: { cartId: string; error?: any }) {\n    super(MULTI_CART_DATA, payload.cartId, payload.error);\n  }\n}\n\ninterface LoadWishListPayload {\n  userId: string;\n  /**\n   * Used to compute wishlist cart name and find it in list of all carts.\n   */\n  customerId: string;\n  /**\n   * When we try load wishlist for the first time we don't know cart id.\n   * Instead we create temporary cart with id equal to wishlist name to keep track of loading/error state.\n   */\n  tempCartId: string;\n}\n\nexport class LoadWishList extends EntityLoadAction {\n  readonly type = LOAD_WISH_LIST;\n  constructor(public payload: LoadWishListPayload) {\n    super(MULTI_CART_DATA, payload.tempCartId);\n  }\n}\n\ninterface LoadWishListSuccessPayload {\n  cart: Cart;\n  userId: string;\n  /**\n   * When LoadWishListSuccess action was dispatched as an completion to LoadWishList action\n   * we get temporary cartId that was used to keep track of loading state.\n   * In case of loading wish list with known cartId this property will be empty.\n   */\n  tempCartId?: string;\n  /**\n   * Used to compute wishlist cart name and find it in list of all carts.\n   * In case of loading wish list with known cartId this property will be empty.\n   */\n  customerId?: string;\n  /**\n   * Wish list cart id. Extracted from cart content (code property).\n   */\n  cartId: string;\n}\n\nexport class LoadWishListSuccess extends EntitySuccessAction {\n  readonly type = LOAD_WISH_LIST_SUCCESS;\n  constructor(public payload: LoadWishListSuccessPayload) {\n    super(MULTI_CART_DATA, payload.cartId);\n  }\n}\n\ninterface LoadWishListFailPayload {\n  userId: string;\n  /**\n   * Used to compute wishlist cart name and find it in list of all carts.\n   * In case of loading wish list with known cartId this property will be empty.\n   */\n  customerId?: string;\n  /**\n   * Cart id used as a store entity key. This could point either to some\n   * temporary cart used to track loading/error state or to normal wish list entity.\n   */\n  cartId: string;\n  error: any;\n}\n\nexport class LoadWishListFail extends EntityFailAction {\n  readonly type = LOAD_WISH_LIST_FAIL;\n  constructor(public payload: LoadWishListFailPayload) {\n    super(MULTI_CART_DATA, payload.cartId, payload.error);\n  }\n}\n\nexport type WishListActions =\n  | CreateWishList\n  | CreateWishListSuccess\n  | CreateWishListFail\n  | LoadWishList\n  | LoadWishListSuccess\n  | LoadWishListFail;\n","import {\n  createFeatureSelector,\n  createSelector,\n  MemoizedSelector,\n} from '@ngrx/store';\nimport { Cart } from '../../../model/cart.model';\nimport { OrderEntry } from '../../../model/order.model';\nimport { entityValueSelector } from '../../../state/utils/entity-loader/entity-loader.selectors';\nimport { EntityProcessesLoaderState } from '../../../state/utils/entity-processes-loader/entity-processes-loader-state';\nimport {\n  entityHasPendingProcessesSelector,\n  entityIsStableSelector,\n  entityProcessesLoaderStateSelector,\n} from '../../../state/utils/entity-processes-loader/entity-processes-loader.selectors';\nimport { ProcessesLoaderState } from '../../../state/utils/processes-loader/processes-loader-state';\nimport {\n  MultiCartState,\n  MULTI_CART_FEATURE,\n  StateWithMultiCart,\n} from '../multi-cart-state';\n\nexport const getMultiCartState: MemoizedSelector<\n  StateWithMultiCart,\n  MultiCartState\n> = createFeatureSelector<MultiCartState>(MULTI_CART_FEATURE);\n\nexport const getMultiCartEntities: MemoizedSelector<\n  StateWithMultiCart,\n  EntityProcessesLoaderState<Cart>\n> = createSelector(getMultiCartState, (state: MultiCartState) => state.carts);\n\nexport const getCartEntitySelectorFactory = (\n  cartId: string\n): MemoizedSelector<StateWithMultiCart, ProcessesLoaderState<Cart>> => {\n  return createSelector(\n    getMultiCartEntities,\n    (state: EntityProcessesLoaderState<Cart>) =>\n      entityProcessesLoaderStateSelector(state, cartId)\n  );\n};\n\nexport const getCartSelectorFactory = (\n  cartId: string\n): MemoizedSelector<StateWithMultiCart, Cart> => {\n  return createSelector(\n    getMultiCartEntities,\n    (state: EntityProcessesLoaderState<Cart>) =>\n      entityValueSelector(state, cartId)\n  );\n};\n\nexport const getCartIsStableSelectorFactory = (\n  cartId: string\n): MemoizedSelector<StateWithMultiCart, boolean> => {\n  return createSelector(\n    getMultiCartEntities,\n    (state: EntityProcessesLoaderState<Cart>) =>\n      entityIsStableSelector(state, cartId)\n  );\n};\n\nexport const getCartHasPendingProcessesSelectorFactory = (\n  cartId: string\n): MemoizedSelector<StateWithMultiCart, boolean> => {\n  return createSelector(\n    getMultiCartEntities,\n    (state: EntityProcessesLoaderState<Cart>) =>\n      entityHasPendingProcessesSelector(state, cartId)\n  );\n};\n\nexport const getCartEntriesSelectorFactory = (\n  cartId: string\n): MemoizedSelector<StateWithMultiCart, OrderEntry[]> => {\n  return createSelector(getCartSelectorFactory(cartId), (state: Cart) => {\n    return state && state.entries ? state.entries : [];\n  });\n};\n\nexport const getCartEntrySelectorFactory = (\n  cartId: string,\n  productCode: string\n): MemoizedSelector<StateWithMultiCart, OrderEntry> => {\n  return createSelector(\n    getCartEntriesSelectorFactory(cartId),\n    (state: OrderEntry[]) => {\n      return state\n        ? state.find((entry) => entry.product.code === productCode)\n        : undefined;\n    }\n  );\n};\n\nexport const getActiveCartId: MemoizedSelector<\n  StateWithMultiCart,\n  string\n> = createSelector(getMultiCartState, (state: MultiCartState) => state.active);\n\nexport const getWishListId: MemoizedSelector<\n  StateWithMultiCart,\n  string\n> = createSelector(\n  getMultiCartState,\n  (state: MultiCartState) => state.wishList\n);\n","import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { EMPTY, Observable, timer } from 'rxjs';\nimport { debounce, distinctUntilChanged, map } from 'rxjs/operators';\nimport { UserIdService } from '../../auth/user-auth/facade/index';\nimport { Cart } from '../../model/cart.model';\nimport { OrderEntry } from '../../model/order.model';\nimport { ProcessesLoaderState } from '../../state/utils/processes-loader/processes-loader-state';\nimport { CartActions } from '../store/actions/index';\nimport { StateWithMultiCart } from '../store/multi-cart-state';\nimport { MultiCartSelectors } from '../store/selectors/index';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MultiCartService {\n  constructor(\n    protected store: Store<StateWithMultiCart>,\n    protected userIdService: UserIdService\n  ) {}\n\n  /**\n   * Returns cart from store as an observable\n   *\n   * @param cartId\n   */\n  getCart(cartId: string): Observable<Cart> {\n    return this.store.pipe(\n      select(MultiCartSelectors.getCartSelectorFactory(cartId))\n    );\n  }\n\n  /**\n   * Returns cart entity from store (cart with loading, error, success flags) as an observable\n   *\n   * @param cartId\n   */\n  getCartEntity(cartId: string): Observable<ProcessesLoaderState<Cart>> {\n    return this.store.pipe(\n      select(MultiCartSelectors.getCartEntitySelectorFactory(cartId))\n    );\n  }\n\n  /**\n   * Returns true when there are no operations on that in progress and it is not currently loading\n   *\n   * @param cartId\n   */\n  isStable(cartId: string): Observable<boolean> {\n    return this.store.pipe(\n      select(MultiCartSelectors.getCartIsStableSelectorFactory(cartId)),\n      // We dispatch a lot of actions just after finishing some process or loading, so we want this flag not to flicker.\n      // This flickering should only be avoided when switching from false to true\n      // Start of loading should be showed instantly (no debounce)\n      // Extra actions are only dispatched after some loading\n      debounce((isStable) => (isStable ? timer(0) : EMPTY)),\n      distinctUntilChanged()\n    );\n  }\n\n  /**\n   * Simple random temp cart id generator\n   */\n  private generateTempCartId(): string {\n    const pseudoUuid = Math.random().toString(36).substr(2, 9);\n    return `temp-${pseudoUuid}`;\n  }\n\n  /**\n   * Create or merge cart\n   *\n   * @param params Object with userId, oldCartId, toMergeCartGuid and extraData\n   */\n  createCart({\n    userId,\n    oldCartId,\n    toMergeCartGuid,\n    extraData,\n  }: {\n    userId: string;\n    oldCartId?: string;\n    toMergeCartGuid?: string;\n    extraData?: {\n      active?: boolean;\n    };\n  }): Observable<ProcessesLoaderState<Cart>> {\n    // to support creating multiple carts at the same time we need to use different entity for every process\n    // simple random uuid generator is used here for entity names\n    const tempCartId = this.generateTempCartId();\n    this.store.dispatch(\n      new CartActions.CreateCart({\n        extraData,\n        userId,\n        oldCartId,\n        toMergeCartGuid,\n        tempCartId,\n      })\n    );\n    return this.getCartEntity(tempCartId);\n  }\n\n  /**\n   * Merge provided cart to current user cart\n   *\n   * @param params Object with userId, cartId and extraData\n   */\n  mergeToCurrentCart({\n    userId,\n    cartId,\n    extraData,\n  }: {\n    userId: string;\n    cartId: string;\n    extraData?: {\n      active?: boolean;\n    };\n  }) {\n    const tempCartId = this.generateTempCartId();\n    this.store.dispatch(\n      new CartActions.MergeCart({\n        userId,\n        cartId,\n        extraData,\n        tempCartId,\n      })\n    );\n  }\n\n  /**\n   * Load cart\n   *\n   * @param params Object with userId, cartId and extraData\n   */\n  loadCart({\n    cartId,\n    userId,\n    extraData,\n  }: {\n    cartId: string;\n    userId: string;\n    extraData?: any;\n  }): void {\n    this.store.dispatch(\n      new CartActions.LoadCart({\n        userId,\n        cartId,\n        extraData,\n      })\n    );\n  }\n\n  /**\n   * Get cart entries as an observable\n   * @param cartId\n   */\n  getEntries(cartId: string): Observable<OrderEntry[]> {\n    return this.store.pipe(\n      select(MultiCartSelectors.getCartEntriesSelectorFactory(cartId))\n    );\n  }\n\n  /**\n   * Get last entry for specific product code from cart.\n   * Needed to cover processes where multiple entries can share the same product code\n   * (e.g. promotions or configurable products)\n   *\n   * @param cartId\n   * @param productCode\n   */\n  getLastEntry(\n    cartId: string,\n    productCode: string\n  ): Observable<OrderEntry | null> {\n    return this.store.pipe(\n      select(MultiCartSelectors.getCartEntriesSelectorFactory(cartId)),\n      map((entries) => {\n        const filteredEntries = entries.filter(\n          (entry) => entry.product.code === productCode\n        );\n        return filteredEntries\n          ? filteredEntries[filteredEntries.length - 1]\n          : undefined;\n      })\n    );\n  }\n\n  /**\n   * Add entry to cart\n   *\n   * @param userId\n   * @param cartId\n   * @param productCode\n   * @param quantity\n   */\n  addEntry(\n    userId: string,\n    cartId: string,\n    productCode: string,\n    quantity: number\n  ): void {\n    this.store.dispatch(\n      new CartActions.CartAddEntry({\n        userId,\n        cartId,\n        productCode,\n        quantity,\n      })\n    );\n  }\n\n  /**\n   * Add multiple entries to cart\n   *\n   * @param userId\n   * @param cartId\n   * @param products Array with items (productCode and quantity)\n   */\n  addEntries(\n    userId: string,\n    cartId: string,\n    products: Array<{ productCode: string; quantity: number }>\n  ): void {\n    products.forEach((product) => {\n      this.store.dispatch(\n        new CartActions.CartAddEntry({\n          userId,\n          cartId,\n          productCode: product.productCode,\n          quantity: product.quantity,\n        })\n      );\n    });\n  }\n\n  /**\n   * Remove entry from cart\n   *\n   * @param userId\n   * @param cartId\n   * @param entryNumber\n   */\n  removeEntry(userId: string, cartId: string, entryNumber: number): void {\n    this.store.dispatch(\n      new CartActions.CartRemoveEntry({\n        userId,\n        cartId,\n        entryNumber: `${entryNumber}`,\n      })\n    );\n  }\n\n  /**\n   * Update entry in cart. For quantity = 0 it removes entry\n   *\n   * @param userId\n   * @param cartId\n   * @param entryNumber\n   * @param quantity\n   */\n  updateEntry(\n    userId: string,\n    cartId: string,\n    entryNumber: number,\n    quantity: number\n  ): void {\n    if (quantity > 0) {\n      this.store.dispatch(\n        new CartActions.CartUpdateEntry({\n          userId,\n          cartId,\n          entryNumber: `${entryNumber}`,\n          quantity: quantity,\n        })\n      );\n    } else {\n      this.removeEntry(userId, cartId, entryNumber);\n    }\n  }\n\n  /**\n   * Get first entry from cart matching the specified product code\n   *\n   * @param cartId\n   * @param productCode\n   */\n  getEntry(cartId: string, productCode: string): Observable<OrderEntry | null> {\n    return this.store.pipe(\n      select(\n        MultiCartSelectors.getCartEntrySelectorFactory(cartId, productCode)\n      )\n    );\n  }\n\n  /**\n   * Assign email to the cart\n   *\n   * @param cartId\n   * @param userId\n   * @param email\n   */\n  assignEmail(cartId: string, userId: string, email: string): void {\n    this.store.dispatch(\n      new CartActions.AddEmailToCart({\n        userId,\n        cartId,\n        email,\n      })\n    );\n  }\n\n  /**\n   * Delete cart\n   *\n   * @param cartId\n   * @param userId\n   */\n  deleteCart(cartId: string, userId: string): void {\n    this.store.dispatch(\n      new CartActions.DeleteCart({\n        userId,\n        cartId,\n      })\n    );\n  }\n\n  /**\n   * Reloads the cart with specified id.\n   *\n   * @param cartId\n   * @param extraData\n   */\n  reloadCart(cartId: string, extraData?: { active: boolean }): void {\n    this.userIdService.invokeWithUserId((userId) =>\n      this.store.dispatch(\n        new CartActions.LoadCart({\n          userId,\n          cartId,\n          extraData,\n        })\n      )\n    );\n  }\n}\n","/**\n * @license\n * The MIT License\n * Copyright (c) 2010-2019 Google LLC. http://angular.io/license\n *\n * See:\n * - https://github.com/angular/angular/blob/6f5f481fdae03f1d8db36284b64c7b82d9519d85/packages/service-worker/config/src/glob.ts\n * - https://github.com/angular/angular/blob/6f5f481fdae03f1d8db36284b64c7b82d9519d85/aio/tests/deployment/shared/helpers.ts#L17\n * - https://github.com/angular/angular/blob/6f5f481fdae03f1d8db36284b64c7b82d9519d85/packages/service-worker/config/src/generator.ts#L86\n */\n\nconst QUESTION_MARK = '[^/]';\nconst WILD_SINGLE = '[^/]*';\nconst WILD_OPEN = '(?:.+\\\\/)?';\nconst TO_ESCAPE_BASE = [\n  { replace: /\\./g, with: '\\\\.' },\n  { replace: /\\+/g, with: '\\\\+' },\n  { replace: /\\*/g, with: WILD_SINGLE },\n];\nconst TO_ESCAPE_WILDCARD_QM = [\n  ...TO_ESCAPE_BASE,\n  { replace: /\\?/g, with: QUESTION_MARK },\n];\nconst TO_ESCAPE_LITERAL_QM = [\n  ...TO_ESCAPE_BASE,\n  { replace: /\\?/g, with: '\\\\?' },\n];\n\n/**\n * Converts the glob-like pattern into regex string.\n *\n * Patterns use a limited glob format:\n * `**` matches 0 or more path segments\n * `*` matches 0 or more characters excluding `/`\n * `?` matches exactly one character excluding `/` (but when @param literalQuestionMark is true, `?` is treated as normal character)\n * The `!` prefix marks the pattern as being negative, meaning that only URLs that don't match the pattern will be included\n *\n * @param glob glob-like pattern\n * @param literalQuestionMark when true, it tells that `?` is treated as a normal character\n */\nexport function globToRegex(glob: string, literalQuestionMark = false): string {\n  const toEscape = literalQuestionMark\n    ? TO_ESCAPE_LITERAL_QM\n    : TO_ESCAPE_WILDCARD_QM;\n  const segments = glob.split('/').reverse();\n  let regex = '';\n  while (segments.length > 0) {\n    const segment = segments.pop();\n    if (segment === '**') {\n      if (segments.length > 0) {\n        regex += WILD_OPEN;\n      } else {\n        regex += '.*';\n      }\n    } else {\n      const processed = toEscape.reduce(\n        (seg, escape) => seg.replace(escape.replace, escape.with),\n        segment\n      );\n      regex += processed;\n      if (segments.length > 0) {\n        regex += '\\\\/';\n      }\n    }\n  }\n  return regex;\n}\n\n/**\n * For given list of glob-like patterns, returns a matcher function.\n *\n * The matcher returns true for given URL only when ANY of the positive patterns is matched and NONE of the negative ones.\n */\nexport function getGlobMatcher(patterns: string[]): (url: string) => boolean {\n  const processedPatterns: {\n    positive: boolean;\n    regex: RegExp;\n  }[] = processGlobPatterns(patterns).map(({ positive, regex }) => ({\n    positive,\n    regex: new RegExp(regex),\n  }));\n\n  const includePatterns = processedPatterns.filter((spec) => spec.positive);\n  const excludePatterns = processedPatterns.filter((spec) => !spec.positive);\n\n  return (url: string) =>\n    includePatterns.some((pattern) => pattern.regex.test(url)) &&\n    !excludePatterns.some((pattern) => pattern.regex.test(url));\n}\n\n/**\n * Converts list of glob-like patterns into list of RegExps with information whether the glob pattern is positive or negative\n */\nexport function processGlobPatterns(\n  urls: string[]\n): { positive: boolean; regex: string }[] {\n  return urls.map((url) => {\n    const positive = !url.startsWith('!');\n    url = positive ? url : url.substr(1);\n    return { positive, regex: `^${globToRegex(url)}$` };\n  });\n}\n","import { Injectable } from '@angular/core';\nimport { processGlobPatterns } from './glob-utils';\n\n@Injectable({ providedIn: 'root' })\nexport class GlobService {\n  /**\n   * For given list of glob-like patterns, returns a validator function.\n   *\n   * The validator returns true for given URL only when ANY of the positive patterns is matched and NONE of the negative ones.\n   */\n  getValidator(patterns: string[]): (url: string) => boolean {\n    const processedPatterns: {\n      positive: boolean;\n      regex: RegExp;\n    }[] = processGlobPatterns(patterns).map(({ positive, regex }) => ({\n      positive,\n      regex: new RegExp(regex),\n    }));\n\n    const includePatterns = processedPatterns.filter((spec) => spec.positive);\n    const excludePatterns = processedPatterns.filter((spec) => !spec.positive);\n\n    return (url: string) =>\n      includePatterns.some((pattern) => pattern.regex.test(url)) &&\n      !excludePatterns.some((pattern) => pattern.regex.test(url));\n  }\n}\n","import { Injectable, isDevMode } from '@angular/core';\nimport {\n  Route,\n  UrlMatcher,\n  UrlMatchResult,\n  UrlSegment,\n  UrlSegmentGroup,\n} from '@angular/router';\nimport { GlobService } from '../../util/glob.service';\n\n@Injectable({ providedIn: 'root' })\nexport class UrlMatcherService {\n  constructor(protected globService: GlobService) {}\n\n  /**\n   * Returns a matcher that is always fails\n   */\n  getFalsy(): UrlMatcher {\n    return function falsyUrlMatcher(): null {\n      return null;\n    };\n  }\n\n  /**\n   * Returns a matcher for given list of paths\n   */\n  getFromPaths(paths: string[]): UrlMatcher {\n    const matchers = paths.map((path) => this.getFromPath(path));\n    const matcher = this.getCombined(matchers);\n    if (isDevMode()) {\n      matcher['_paths'] = paths; // property added for easier debugging of routes\n    }\n    return matcher;\n  }\n\n  /**\n   * Returns a matcher that combines the given matchers\n   * */\n  getCombined(matchers: UrlMatcher[]): UrlMatcher {\n    const matcher = function combinedUrlMatchers(\n      segments: UrlSegment[],\n      segmentGroup: UrlSegmentGroup,\n      route: Route\n    ): UrlMatchResult | null {\n      for (let i = 0; i < matchers.length; i++) {\n        const result = matchers[i](segments, segmentGroup, route);\n        if (result) {\n          return result;\n        }\n      }\n      return null;\n    };\n    if (isDevMode()) {\n      matcher['_matchers'] = matchers; // property added for easier debugging of routes\n    }\n    return matcher;\n  }\n\n  /**\n   * Similar to Angular's defaultUrlMatcher. Differences:\n   * - the `path` comes from function's argument, not from `route.path`\n   * - the empty path `''` is handled here, but in Angular is handled one level higher in the match() function\n   */\n  protected getFromPath(path: string = ''): UrlMatcher {\n    const matcher = function pathUrlMatcher(\n      segments: UrlSegment[],\n      segmentGroup: UrlSegmentGroup,\n      route: Route\n    ): UrlMatchResult | null {\n      /**\n       * @license\n       * The MIT License\n       * Copyright (c) 2010-2019 Google LLC. http://angular.io/license\n       *\n       * See:\n       * - https://github.com/angular/angular/blob/6f5f481fdae03f1d8db36284b64c7b82d9519d85/packages/router/src/shared.ts#L121\n       */\n\n      // use function's argument, not the `route.path`\n      if (path === '') {\n        if (\n          route.pathMatch === 'full' &&\n          (segmentGroup.hasChildren() || segments.length > 0)\n        ) {\n          return null;\n        }\n        return { consumed: [], posParams: {} };\n      }\n\n      const parts = path.split('/'); // use function's argument, not the `route.path`\n\n      if (parts.length > segments.length) {\n        // The actual URL is shorter than the config, no match\n        return null;\n      }\n\n      if (\n        route.pathMatch === 'full' &&\n        (segmentGroup.hasChildren() || parts.length < segments.length)\n      ) {\n        // The config is longer than the actual URL but we are looking for a full match, return null\n        return null;\n      }\n\n      const posParams: { [key: string]: UrlSegment } = {};\n\n      // Check each config part against the actual URL\n      for (let index = 0; index < parts.length; index++) {\n        const part = parts[index];\n        const segment = segments[index];\n        const isParameter = part.startsWith(':');\n        if (isParameter) {\n          posParams[part.substring(1)] = segment;\n        } else if (part !== segment.path) {\n          // The actual URL part does not match the config, no match\n          return null;\n        }\n      }\n\n      return { consumed: segments.slice(0, parts.length), posParams };\n    };\n    if (isDevMode()) {\n      matcher['_path'] = path; // property added for easier debugging of routes\n    }\n    return matcher;\n  }\n\n  /**\n   * Returns URL matcher that accepts almost everything (like `**` route), but not paths accepted by the given matcher\n   */\n  getOpposite(originalMatcher: UrlMatcher): UrlMatcher {\n    const matcher = function oppositeUrlMatcher(\n      segments: UrlSegment[],\n      group: UrlSegmentGroup,\n      route: Route\n    ) {\n      return originalMatcher(segments, group, route)\n        ? null\n        : { consumed: segments, posParams: {} };\n    };\n    if (isDevMode()) {\n      matcher['_originalMatcher'] = originalMatcher; // property added for easier debugging of routes\n    }\n    return matcher;\n  }\n\n  /**\n   * Returns URL matcher for the given list of glob-like patterns. Each pattern must start with `/` or `!/`.\n   */\n  getFromGlob(globPatterns: string[]): UrlMatcher {\n    const globValidator = this.globService.getValidator(globPatterns);\n\n    const matcher = function globUrlMatcher(\n      segments: UrlSegment[]\n    ): UrlMatchResult | null {\n      const fullPath = `/${segments.map((s) => s.path).join('/')}`;\n\n      return globValidator(fullPath)\n        ? { consumed: segments, posParams: {} }\n        : null;\n    };\n    if (isDevMode()) {\n      matcher['_globPatterns'] = globPatterns; // property added for easier debugging of routes\n    }\n    return matcher;\n  }\n}\n","import { Injectable, InjectionToken, Injector, isDevMode } from '@angular/core';\nimport { Route, Router, Routes, UrlMatcher } from '@angular/router';\nimport { UrlMatcherService } from '../services/url-matcher.service';\nimport { UrlMatcherFactory } from '../url-matcher/url-matcher-factory';\nimport { RouteConfig } from './routes-config';\nimport { RoutingConfigService } from './routing-config.service';\n\n@Injectable({ providedIn: 'root' })\nexport class ConfigurableRoutesService {\n  constructor(\n    protected injector: Injector,\n    protected routingConfigService: RoutingConfigService,\n    protected urlMatcherService: UrlMatcherService\n  ) {}\n\n  protected initCalled = false; // guard not to call init() more than once\n\n  /**\n   * Enhances existing Angular routes using the routing config of Spartacus.\n   * Can be called only once.\n   */\n  init(): void {\n    if (!this.initCalled) {\n      this.initCalled = true;\n\n      this.configure();\n    }\n  }\n\n  /**\n   * Enhances existing Angular routes using the routing config of Spartacus.\n   */\n  protected configure(): void {\n    // Router could not be injected in constructor due to cyclic dependency with APP_INITIALIZER:\n    const router = this.injector.get(Router);\n    router.resetConfig(this.configureRoutes(router.config));\n  }\n\n  /**\n   * Sets the property `path` or `matcher` for the given routes, based on the Spartacus' routing configuration.\n   *\n   * @param routes list of Angular `Route` objects\n   */\n  protected configureRoutes(routes: Routes): Routes {\n    return routes.map((route) => {\n      const configuredRoute = this.configureRoute(route);\n\n      if (route.children && route.children.length) {\n        configuredRoute.children = this.configureRoutes(route.children);\n      }\n      return configuredRoute;\n    });\n  }\n\n  /**\n   * Sets the property `path` or `matcher` of the `Route`, based on the Spartacus' routing configuration.\n   * Uses the property `data.cxRoute` to determine the name of the route.\n   * It's the same name used as a key in the routing configuration: `routing.routes[ROUTE NAME]`.\n   *\n   * @param route Angular `Route` object\n   */\n  protected configureRoute(route: Route): Route {\n    const routeName = this.getRouteName(route);\n    if (routeName) {\n      const routeConfig = this.routingConfigService.getRouteConfig(routeName);\n      this.validateRouteConfig(routeConfig, routeName, route);\n\n      if (routeConfig?.disabled) {\n        delete route.path;\n        return {\n          ...route,\n          matcher: this.urlMatcherService.getFalsy(),\n        };\n      } else if (routeConfig?.matchers) {\n        delete route.path;\n        return {\n          ...route,\n          matcher: this.resolveUrlMatchers(route, routeConfig?.matchers),\n        };\n      } else if (routeConfig?.paths?.length === 1) {\n        delete route.matcher;\n        return { ...route, path: routeConfig?.paths[0] };\n      } else {\n        delete route.path;\n        return {\n          ...route,\n          matcher: this.urlMatcherService.getFromPaths(\n            routeConfig?.paths || []\n          ),\n        };\n      }\n    }\n    return route; // if route doesn't have a name, just pass the original route\n  }\n\n  /**\n   * Creates a single `UrlMatcher` based on given matchers and factories of matchers.\n   *\n   * @param route Route object\n   * @param matchersOrFactories `UrlMatcher`s or injection tokens with a factory functions\n   *  that create UrlMatchers based on the given route.\n   */\n  protected resolveUrlMatchers(\n    route: Route,\n    matchersOrFactories: RouteConfig['matchers']\n  ): UrlMatcher {\n    const matchers: UrlMatcher[] = matchersOrFactories.map(\n      (matcherOrFactory) => {\n        return typeof matcherOrFactory === 'function'\n          ? matcherOrFactory // matcher\n          : this.resolveUrlMatcherFactory(route, matcherOrFactory); // factory injection token\n      }\n    );\n    return this.urlMatcherService.getCombined(matchers);\n  }\n\n  /**\n   * Creates an `UrlMatcher` based on the given route, using the factory function coming from the given injection token.\n   *\n   * @param route Route object\n   * @param factoryToken injection token with a factory function that will create an UrlMatcher using given route\n   */\n  protected resolveUrlMatcherFactory(\n    route: Route,\n    factoryToken: InjectionToken<UrlMatcherFactory>\n  ): UrlMatcher {\n    const factory = this.injector.get(factoryToken);\n    return factory(route);\n  }\n\n  /**\n   * Returns the name of the Route stored in its property `data.cxRoute`\n   * @param route\n   */\n  protected getRouteName(route: Route): string {\n    return route.data && route.data.cxRoute;\n  }\n\n  protected validateRouteConfig(\n    routeConfig: RouteConfig,\n    routeName: string,\n    route: Route\n  ) {\n    if (isDevMode()) {\n      // - null value of routeConfig or routeConfig.paths means explicit switching off the route - it's valid config\n      // - routeConfig with defined `matchers` is valid, even if `paths` are undefined\n      if (\n        routeConfig === null ||\n        routeConfig?.paths === null ||\n        routeConfig?.matchers\n      ) {\n        return;\n      }\n\n      // undefined value of routeConfig or routeConfig.paths is a misconfiguration\n      if (!routeConfig?.paths) {\n        this.warn(\n          `Could not configure the named route '${routeName}'`,\n          route,\n          `due to undefined config or undefined 'paths' property for this route`\n        );\n        return;\n      }\n    }\n  }\n\n  private warn(...args) {\n    if (isDevMode()) {\n      console.warn(...args);\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { SemanticPathService } from './semantic-path.service';\nimport { Product } from '../../../model/product.model';\n@Pipe({\n  name: 'cxProductUrl',\n})\nexport class ProductURLPipe implements PipeTransform {\n  constructor(private semanticPath: SemanticPathService) {}\n  transform(product: Product) {\n    return this.semanticPath.transform({ cxRoute: 'product', params: product });\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { SemanticPathService } from './semantic-path.service';\nimport { UrlCommands } from './url-command';\n\n@Pipe({\n  name: 'cxUrl',\n})\nexport class UrlPipe implements PipeTransform {\n  constructor(private urlService: SemanticPathService) {}\n\n  transform(commands: UrlCommands): any[] {\n    return this.urlService.transform(commands);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlPipe } from './url.pipe';\nimport { ProductURLPipe } from './product-url.pipe';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [UrlPipe, ProductURLPipe],\n  exports: [UrlPipe, ProductURLPipe],\n})\nexport class UrlModule {}\n","import { Injectable } from '@angular/core';\nimport { Config } from '../../config/config-tokens';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class ExternalRoutesConfig {\n  routing?: {\n    internal?: string[];\n  };\n}\n","import { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { WindowRef } from '../../window/window-ref';\n\n@Injectable({ providedIn: 'root' })\nexport class ExternalRoutesGuard implements CanActivate {\n  constructor(\n    protected winRef: WindowRef,\n    @Inject(PLATFORM_ID) protected platformId: Object\n  ) {}\n\n  /**\n   * Redirects to different storefront system for anticipated URL\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    if (isPlatformBrowser(this.platformId)) {\n      this.redirect(route, state);\n    }\n    return false;\n  }\n\n  /**\n   * Redirects to anticipated URL using full page reload, not Angular routing\n   */\n  protected redirect(_: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const window = this.winRef.nativeWindow;\n\n    if (window && window.location) {\n      window.location.href = state.url;\n    }\n  }\n}\n","import { ExternalRoutesService } from './external-routes.service';\n\nexport function addExternalRoutesFactory(service: ExternalRoutesService) {\n  const result = () => {\n    service.addRoutes();\n  };\n  return result;\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { Router, Routes, UrlMatcher } from '@angular/router';\nimport { UrlMatcherService } from '../services/url-matcher.service';\nimport { ExternalRoutesConfig } from './external-routes-config';\nimport { ExternalRoutesGuard } from './external-routes.guard';\n\n/**\n * Service that helps redirecting to different storefront systems for configured URLs\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ExternalRoutesService {\n  constructor(\n    protected config: ExternalRoutesConfig,\n    protected urlMatcherService: UrlMatcherService,\n    protected injector: Injector\n  ) {}\n\n  protected get internalUrlPatterns(): ExternalRoutesConfig['routing']['internal'] {\n    return (\n      (this.config && this.config.routing && this.config.routing.internal) || []\n    );\n  }\n\n  /**\n   * Prepends routes (to the Router.config) that are responsible for redirecting to a different storefront system\n   */\n  addRoutes(): void {\n    const router: Router = this.injector.get(Router);\n    const newRoutes = this.getRoutes();\n    if (newRoutes.length) {\n      router.resetConfig([...newRoutes, ...router.config]);\n    }\n  }\n\n  /**\n   * Returns routes that are responsible for redirection to different storefront systems\n   */\n  protected getRoutes(): Routes {\n    if (!this.internalUrlPatterns.length) {\n      return [];\n    }\n    const routes: Routes = [];\n\n    routes.push({\n      pathMatch: 'full',\n      matcher: this.getUrlMatcher(),\n      canActivate: [ExternalRoutesGuard],\n      component: {} as any,\n    });\n\n    return routes;\n  }\n\n  /**\n   * Returns the URL matcher for the external route\n   */\n  protected getUrlMatcher(): UrlMatcher {\n    const matcher = this.urlMatcherService.getFromGlob(\n      this.internalUrlPatterns\n    );\n    return this.urlMatcherService.getOpposite(matcher); // the external route should be activated only when it's NOT an internal route\n  }\n}\n","import { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';\nimport { addExternalRoutesFactory } from './external-routes.providers';\nimport { ExternalRoutesService } from './external-routes.service';\n\n/**\n * Prepends the external route that redirects to a different storefront system for configured URLs\n */\n@NgModule()\nexport class ExternalRoutesModule {\n  static forRoot(): ModuleWithProviders<ExternalRoutesModule> {\n    return {\n      ngModule: ExternalRoutesModule,\n      providers: [\n        {\n          provide: APP_INITIALIZER,\n          multi: true,\n          useFactory: addExternalRoutesFactory,\n          deps: [ExternalRoutesService],\n        },\n      ],\n    };\n  }\n}\n","import { PageType } from '../../model/cms.model';\n\n/**\n * The homepage id for the CMS homepage is not required when we query the backend.\n * CMS business users can have multiple pages, that they might switch quickly without\n * changing the page id. Therefore, we use a constant to keep track of the page in the\n * store, but are able to ignore the id while querying the backend.\n */\nexport const HOME_PAGE_CONTEXT = '__HOMEPAGE__';\n\n/**\n * SmartEdit preview page is loaded by previewToken which is added by interceptor\n */\nexport const SMART_EDIT_CONTEXT = 'smartedit-preview';\n\nexport class PageContext {\n  id: string;\n  type?: PageType;\n\n  constructor(id: string, type?: PageType) {\n    this.id = id;\n    this.type = type;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { RoutingConfig } from '../configurable-routes/config/routing-config';\n\n@Injectable({ providedIn: 'root' })\nexport class ProtectedRoutesService {\n  private nonProtectedPaths: string[][] = []; // arrays of paths' segments list\n\n  protected get routingConfig(): RoutingConfig['routing'] {\n    return this.config && this.config.routing;\n  }\n\n  /**\n   * Returns 'protected' property (boolean) from routing config\n   *\n   * @returns boolean\n   */\n  public get shouldProtect(): boolean {\n    return this.routingConfig.protected;\n  }\n\n  constructor(protected config: RoutingConfig) {\n    if (this.shouldProtect) {\n      // pre-process config for performance:\n      this.nonProtectedPaths = this.getNonProtectedPaths().map((path) =>\n        this.getSegments(path)\n      );\n    }\n  }\n\n  /**\n   * Tells if the url is protected\n   */\n  isUrlProtected(urlSegments: string[]): boolean {\n    return (\n      this.shouldProtect &&\n      !this.matchAnyPath(urlSegments, this.nonProtectedPaths)\n    );\n  }\n\n  /**\n   * Tells whether the url matches at least one of the paths\n   */\n  protected matchAnyPath(\n    urlSegments: string[],\n    pathsSegments: string[][]\n  ): boolean {\n    return pathsSegments.some((pathSegments) =>\n      this.matchPath(urlSegments, pathSegments)\n    );\n  }\n\n  /**\n   * Tells whether the url matches the path\n   */\n  protected matchPath(urlSegments: string[], pathSegments: string[]): boolean {\n    if (urlSegments.length !== pathSegments.length) {\n      return false;\n    }\n\n    for (let i = 0; i < pathSegments.length; i++) {\n      const pathSeg = pathSegments[i];\n      const urlSeg = urlSegments[i];\n\n      // compare only static segments:\n      if (!pathSeg.startsWith(':') && pathSeg !== urlSeg) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Returns a list of paths that are not protected\n   */\n  protected getNonProtectedPaths(): string[] {\n    return Object.values(this.routingConfig.routes).reduce(\n      (acc, routeConfig) =>\n        routeConfig.protected === false && // must be explicitly false, ignore undefined\n        routeConfig.paths &&\n        routeConfig.paths.length\n          ? acc.concat(routeConfig.paths)\n          : acc,\n      []\n    );\n  }\n\n  /**\n   * Splits the url by slashes\n   */\n  protected getSegments(url: string): string[] {\n    return (url || '').split('/');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, UrlTree } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { AuthGuard } from '../../auth/user-auth/guards/auth.guard';\nimport { ProtectedRoutesService } from './protected-routes.service';\n\n@Injectable({ providedIn: 'root' })\nexport class ProtectedRoutesGuard implements CanActivate {\n  constructor(\n    protected service: ProtectedRoutesService,\n    protected authGuard: AuthGuard\n  ) {}\n\n  /**\n   * When the anticipated url is protected, it switches to the AuthGuard. Otherwise emits true.\n   */\n  canActivate(route: ActivatedRouteSnapshot): Observable<boolean | UrlTree> {\n    let urlSegments: string[] = route.url.map((seg) => seg.path);\n\n    // For the root path `/` ActivatedRoute contains an empty array of segments:\n    urlSegments = urlSegments.length ? urlSegments : [''];\n\n    if (this.service.isUrlProtected(urlSegments)) {\n      return this.authGuard.canActivate();\n    }\n    return of(true);\n  }\n}\n","import { Location } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { AuthActions } from '../../../auth/user-auth/store/actions/index';\nimport { SiteContextActions } from '../../../site-context/store/actions/index';\nimport { CmsRoute } from '../../models/cms-route';\nimport { RoutingActions } from '../actions/index';\n\n@Injectable()\nexport class RouterEffects {\n  @Effect({ dispatch: false })\n  navigate$: Observable<any> = this.actions$.pipe(\n    ofType(RoutingActions.ROUTER_GO),\n    map((action: RoutingActions.RouteGoAction) => action.payload),\n    tap(({ path, query: queryParams, extras }) => {\n      this.router.navigate(path, { queryParams, ...extras });\n    })\n  );\n\n  @Effect({ dispatch: false })\n  navigateByUrl$: Observable<any> = this.actions$.pipe(\n    ofType(RoutingActions.ROUTER_GO_BY_URL),\n    map((action: RoutingActions.RouteGoAction) => action.payload),\n    tap((url) => {\n      this.router.navigateByUrl(url);\n    })\n  );\n\n  @Effect({ dispatch: false })\n  clearCmsRoutes$: Observable<Action> = this.actions$.pipe(\n    ofType(\n      SiteContextActions.LANGUAGE_CHANGE,\n      AuthActions.LOGOUT,\n      AuthActions.LOGIN\n    ),\n    tap(() => {\n      const filteredConfig = this.router.config.filter(\n        (route: CmsRoute) => !(route.data && route.data.cxCmsRouteContext)\n      );\n      if (filteredConfig.length !== this.router.config.length) {\n        this.router.resetConfig(filteredConfig);\n      }\n    })\n  );\n\n  @Effect({ dispatch: false })\n  navigateBack$: Observable<Action> = this.actions$.pipe(\n    ofType(RoutingActions.ROUTER_BACK),\n    tap(() => this.location.back())\n  );\n\n  @Effect({ dispatch: false })\n  navigateForward$: Observable<Action> = this.actions$.pipe(\n    ofType(RoutingActions.ROUTER_FORWARD),\n    tap(() => this.location.forward())\n  );\n\n  constructor(\n    private actions$: Actions,\n    private router: Router,\n    private location: Location\n  ) {}\n}\n","import { RouterEffects } from './router.effect';\n\nexport const effects: any[] = [RouterEffects];\n\nexport * from './router.effect';\n","import { Injectable, InjectionToken, Provider } from '@angular/core';\nimport { RouterStateSnapshot } from '@angular/router';\nimport * as fromNgrxRouter from '@ngrx/router-store';\nimport { ActionReducerMap } from '@ngrx/store';\nimport { PageType } from '../../../model/cms.model';\nimport { RoutingConfigService } from '../../configurable-routes/routing-config.service';\nimport { CmsActivatedRouteSnapshot } from '../../models/cms-route';\nimport {\n  HOME_PAGE_CONTEXT,\n  PageContext,\n  SMART_EDIT_CONTEXT,\n} from '../../models/page-context.model';\nimport { CHANGE_NEXT_PAGE_CONTEXT } from '../actions/router.action';\nimport {\n  ActivatedRouterStateSnapshot,\n  RouterState,\n  State,\n} from '../routing-state';\n\nexport const initialState: RouterState = {\n  navigationId: 0,\n  state: {\n    url: '',\n    queryParams: {},\n    params: {},\n    context: {\n      id: '',\n    },\n    cmsRequired: false,\n    semanticRoute: undefined,\n  },\n  nextState: undefined,\n};\n\nexport function getReducers(): ActionReducerMap<State> {\n  return {\n    router: reducer,\n  };\n}\n\nexport function reducer(\n  state: RouterState = initialState,\n  action: any\n): RouterState {\n  switch (action.type) {\n    case fromNgrxRouter.ROUTER_NAVIGATION: {\n      return {\n        ...state,\n        nextState: action.payload.routerState,\n        navigationId: action.payload.event.id,\n      };\n    }\n\n    case fromNgrxRouter.ROUTER_ERROR:\n    case fromNgrxRouter.ROUTER_CANCEL: {\n      return {\n        ...state,\n        nextState: undefined,\n      };\n    }\n\n    case CHANGE_NEXT_PAGE_CONTEXT: {\n      return state.nextState\n        ? {\n            ...state,\n            nextState: { ...state.nextState, context: action.payload },\n          }\n        : state;\n    }\n\n    case fromNgrxRouter.ROUTER_NAVIGATED: {\n      return {\n        state: {\n          ...action.payload.routerState,\n          context:\n            // we want to preserve already resolved context,\n            // in case it was changed while navigating\n            state.nextState?.context ?? action.payload.routerState.context,\n        },\n        navigationId: action.payload.event.id,\n        nextState: undefined,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\nexport const reducerToken: InjectionToken<ActionReducerMap<\n  State\n>> = new InjectionToken<ActionReducerMap<State>>('RouterReducers');\n\nexport const reducerProvider: Provider = {\n  provide: reducerToken,\n  useFactory: getReducers,\n};\n\n/* The serializer is there to parse the RouterStateSnapshot,\nand to reduce the amount of properties to be passed to the reducer.\n */\n@Injectable()\nexport class CustomSerializer\n  implements\n    fromNgrxRouter.RouterStateSerializer<ActivatedRouterStateSnapshot> {\n  serialize(routerState: RouterStateSnapshot): ActivatedRouterStateSnapshot {\n    let state: CmsActivatedRouteSnapshot = routerState.root as CmsActivatedRouteSnapshot;\n    let cmsRequired = false;\n    let context: PageContext;\n    let semanticRoute: string;\n    let urlString = '';\n\n    while (state.firstChild) {\n      state = state.firstChild as CmsActivatedRouteSnapshot;\n      urlString +=\n        '/' + state.url.map((urlSegment) => urlSegment.path).join('/');\n\n      // we use semantic route information embedded from any parent route\n      if (state.data?.cxRoute) {\n        semanticRoute = state.data?.cxRoute;\n      }\n\n      // we use context information embedded in Cms driven routes from any parent route\n      if (state.data && state.data.cxCmsRouteContext) {\n        context = state.data.cxCmsRouteContext;\n      }\n\n      // we assume, that any route that has CmsPageGuard or it's child\n      // is cmsRequired\n      if (\n        !cmsRequired &&\n        (context ||\n          (state.routeConfig &&\n            state.routeConfig.canActivate &&\n            state.routeConfig.canActivate.find(\n              (x) => x && x.guardName === 'CmsPageGuard'\n            )))\n      ) {\n        cmsRequired = true;\n      }\n    }\n\n    // If `semanticRoute` couldn't be already recognized using `data.cxRoute` property\n    // let's lookup the routing configuration to find the semantic route that has exactly the same configured path as the current URL.\n    // This will work only for simple URLs without any dynamic routing parameters.\n    semanticRoute = semanticRoute || this.lookupSemanticRoute(urlString);\n\n    const { params } = state;\n    // we give smartedit preview page a PageContext\n    if (state.url.length > 0 && state.url[0].path === 'cx-preview') {\n      context = {\n        id: SMART_EDIT_CONTEXT,\n        type: PageType.CONTENT_PAGE,\n      };\n    } else {\n      if (params['productCode']) {\n        context = { id: params['productCode'], type: PageType.PRODUCT_PAGE };\n      } else if (params['categoryCode']) {\n        context = { id: params['categoryCode'], type: PageType.CATEGORY_PAGE };\n      } else if (params['brandCode']) {\n        context = { id: params['brandCode'], type: PageType.CATEGORY_PAGE };\n      } else if (state.data.pageLabel !== undefined) {\n        context = { id: state.data.pageLabel, type: PageType.CONTENT_PAGE };\n      } else if (!context) {\n        if (state.url.length > 0) {\n          const pageLabel =\n            '/' + state.url.map((urlSegment) => urlSegment.path).join('/');\n          context = {\n            id: pageLabel,\n            type: PageType.CONTENT_PAGE,\n          };\n        } else {\n          context = {\n            // We like URLs to be driven by the backend, the CMS actually returns the homepage\n            // if no page label is given. Our logic however requires an id. undefined doesn't work.\n            id: HOME_PAGE_CONTEXT,\n\n            // We currently need to support a hardcoded page type, since the internal store uses the page\n            // type to store the content.\n            type: PageType.CONTENT_PAGE,\n          };\n        }\n      }\n    }\n\n    return {\n      url: routerState.url,\n      queryParams: routerState.root.queryParams,\n      params,\n      context,\n      cmsRequired,\n      semanticRoute,\n    };\n  }\n\n  /**\n   * Returns the semantic route name for given page label.\n   *\n   * *NOTE*: It works only for simple static urls that are equal to the page label\n   * of cms-driven content page. For example: `/my-account/address-book`.\n   *\n   * It doesn't work for URLs with dynamic parameters. But such case can be handled\n   * by reading the defined `data.cxRoute` from the Angular Routes.\n   *\n   * @param path path to be found in the routing config\n   */\n  private lookupSemanticRoute(path: string): string {\n    // Page label is assumed to start with `/`, but Spartacus configured paths\n    // don't start with slash. So we remove the leading slash:\n    return this.routingConfig.getRouteName(path.substr(1));\n  }\n\n  constructor(private routingConfig: RoutingConfigService) {}\n}\n","import { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport {\n  RouterState,\n  RouterStateSerializer,\n  StoreRouterConnectingModule,\n} from '@ngrx/router-store';\nimport { StoreModule } from '@ngrx/store';\nimport { ConfigurableRoutesService } from './configurable-routes/configurable-routes.service';\nimport { effects } from './store/effects/index';\nimport {\n  CustomSerializer,\n  reducerProvider,\n  reducerToken,\n} from './store/reducers/router.reducer';\nimport { ROUTING_FEATURE } from './store/routing-state';\n\nexport function initConfigurableRoutes(\n  service: ConfigurableRoutesService\n): () => void {\n  const result = () => service.init(); // workaround for AOT compilation (see https://stackoverflow.com/a/51977115)\n  return result;\n}\n\n@NgModule({\n  imports: [\n    StoreModule.forFeature(ROUTING_FEATURE, reducerToken),\n    EffectsModule.forFeature(effects),\n    StoreRouterConnectingModule.forRoot({\n      routerState: RouterState.Minimal,\n      stateKey: ROUTING_FEATURE, // name of reducer key\n    }),\n  ],\n})\nexport class RoutingModule {\n  static forRoot(): ModuleWithProviders<RoutingModule> {\n    return {\n      ngModule: RoutingModule,\n      providers: [\n        reducerProvider,\n        {\n          provide: RouterStateSerializer,\n          useClass: CustomSerializer,\n        },\n        {\n          provide: APP_INITIALIZER,\n          useFactory: initConfigurableRoutes,\n          deps: [ConfigurableRoutesService],\n          multi: true,\n        },\n      ],\n    };\n  }\n}\n","import { inject, InjectionToken } from '@angular/core';\nimport { Route } from '@angular/router';\nimport { RoutingConfigService } from '../configurable-routes';\nimport { UrlMatcherService } from '../services/url-matcher.service';\nimport { UrlMatcherFactory } from './url-matcher-factory';\n\nexport function getDefaultUrlMatcherFactory(\n  routingConfigService: RoutingConfigService,\n  urlMatcherService: UrlMatcherService\n): UrlMatcherFactory {\n  const factory = (route: Route) => {\n    const routeName = route.data && route.data['cxRoute'];\n    const routeConfig = routingConfigService.getRouteConfig(routeName);\n    const paths = (routeConfig && routeConfig.paths) || [];\n    return urlMatcherService.getFromPaths(paths);\n  };\n  return factory;\n}\n\n/**\n * Injection token with url matcher factory for spartacus routes containing property `data.cxRoute`.\n * The provided url matcher matches the configured `paths` from routing config.\n *\n * If this matcher doesn't fit the requirements, it can be replaced with custom matcher\n * or additional matchers can be added for a specific route. See for example PRODUCT_DETAILS_URL_MATCHER.\n *\n * Note: Matchers will \"match\" a route, but do not contribute to the creation of the route, nor do they guard routes.\n */\nexport const DEFAULT_URL_MATCHER = new InjectionToken<UrlMatcherFactory>(\n  'DEFAULT_URL_MATCHER',\n  {\n    providedIn: 'root',\n    factory: () =>\n      getDefaultUrlMatcherFactory(\n        inject(RoutingConfigService),\n        inject(UrlMatcherService)\n      ),\n  }\n);\n","import {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, switchMap, take } from 'rxjs/operators';\nimport { MultiCartService } from '../../cart/facade/multi-cart.service';\nimport { RouterState, RoutingService } from '../../routing/index';\n\n/**\n * Interceptor that handles \"Cart not found\" errors while a user is in a checkout step.\n *\n * When a user doing a checkout has a \"Cart not found\" error, he is redirected to checkout and the cart is reloaded.\n * If a \"Cart not found\" error happens and the user is not on checkout, this interceptor does not perform any actions.\n */\n@Injectable({ providedIn: 'root' })\nexport class CheckoutCartInterceptor implements HttpInterceptor {\n  constructor(\n    protected routingService: RoutingService,\n    protected multiCartService: MultiCartService\n  ) {}\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    return this.routingService.getRouterState().pipe(\n      take(1),\n      switchMap((state: RouterState) => {\n        return next.handle(request).pipe(\n          catchError((response: any) => {\n            if (\n              response instanceof HttpErrorResponse &&\n              this.isUserInCheckoutRoute(state.state?.semanticRoute)\n            ) {\n              if (this.isCartNotFoundError(response)) {\n                this.routingService.go({ cxRoute: 'cart' });\n\n                const cartCode = this.getCartIdFromError(response);\n                if (cartCode) {\n                  this.multiCartService.reloadCart(cartCode);\n                }\n              }\n            }\n            return throwError(response);\n          })\n        );\n      })\n    );\n  }\n\n  /**\n   * Returns true if the parameter semantic route is part of \"checkout\"\n   * Checkout semantic routes:\n   * checkout\n   * checkoutPaymentType\n   * CheckoutShippingAddress\n   * checkoutDeliveryMode\n   * checkoutPaymentDetails\n   * checkoutReviewOrder\n   * checkoutLogin\n   * @param semanticRoute\n   */\n  protected isUserInCheckoutRoute(semanticRoute: string): boolean {\n    return semanticRoute?.toLowerCase().startsWith('checkout');\n  }\n\n  /**\n   * Checks of the error is for a cart not found, i.e. the cart doesn't exist anymore\n   *\n   * @param response\n   */\n  protected isCartNotFoundError(response: HttpErrorResponse): boolean {\n    return (\n      response.status === 400 &&\n      response.error?.errors?.[0]?.type === 'CartError' &&\n      response.error?.errors?.[0]?.reason === 'notFound'\n    );\n  }\n\n  protected getCartIdFromError(response: HttpErrorResponse): string {\n    return response.error?.errors?.[0]?.subject;\n  }\n}\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Provider } from '@angular/core';\nimport { CheckoutCartInterceptor } from './checkout-cart.interceptor';\n\nexport const interceptors: Provider[] = [\n  {\n    provide: HTTP_INTERCEPTORS,\n    useExisting: CheckoutCartInterceptor,\n    multi: true,\n  },\n];\n","// Email Standard RFC 5322:\nexport const EMAIL_PATTERN = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/; // tslint:disable-line\n\nexport const PASSWORD_PATTERN = /^(?=.*?[A-Z])(?=.*?[0-9])(?=.*?[!@#$%^*()_\\-+{};:.,]).{6,}$/;\n","import { Cart } from '../../../model/cart.model';\nimport { LoaderAction } from '../../../state/utils/loader/loader.action';\nimport { CartActions } from '../actions/index';\n\nexport const activeCartInitialState = null;\nexport const activeCartDefaultState = '';\nexport const wishListInitialState = '';\n\nexport function activeCartReducer(\n  state = activeCartDefaultState,\n  action: CartActions.CartAction | CartActions.MultiCartActions\n): string {\n  switch (action.type) {\n    case CartActions.LOAD_CART_SUCCESS:\n    case CartActions.CREATE_CART_SUCCESS:\n    // point to `temp-${uuid}` cart when we are creating/merging cart\n    case CartActions.CREATE_CART:\n      if (action?.payload?.extraData?.active) {\n        return action.meta.entityId as string;\n      } else {\n        return state;\n      }\n    case CartActions.SET_ACTIVE_CART_ID:\n      return action.payload;\n    case CartActions.REMOVE_CART:\n    case CartActions.DELETE_CART_SUCCESS:\n      if (action.payload?.cartId === state) {\n        return activeCartDefaultState;\n      }\n      return state;\n    case CartActions.CLEAR_CART_STATE:\n      return state === activeCartInitialState\n        ? activeCartInitialState\n        : activeCartDefaultState;\n  }\n  return state;\n}\n\nexport const cartEntitiesInitialState = undefined;\n\nexport function cartEntitiesReducer(\n  state = cartEntitiesInitialState,\n  action: LoaderAction\n): Cart {\n  switch (action.type) {\n    case CartActions.LOAD_CART_SUCCESS:\n    case CartActions.CREATE_CART_SUCCESS:\n    case CartActions.CREATE_WISH_LIST_SUCCESS:\n    case CartActions.LOAD_WISH_LIST_SUCCESS:\n    case CartActions.SET_TEMP_CART:\n      return action.payload.cart;\n  }\n  return state;\n}\n\nexport function wishListReducer(\n  state = wishListInitialState,\n  action: CartActions.WishListActions | CartActions.ClearCartState\n): string {\n  switch (action.type) {\n    case CartActions.CREATE_WISH_LIST_SUCCESS:\n    case CartActions.LOAD_WISH_LIST_SUCCESS:\n      return action.meta.entityId as string;\n    case CartActions.CLEAR_CART_STATE:\n      return wishListInitialState;\n  }\n  return state;\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport {\n  combineLatest,\n  EMPTY,\n  Observable,\n  of,\n  Subscription,\n  timer,\n  using,\n} from 'rxjs';\nimport {\n  debounce,\n  distinctUntilChanged,\n  filter,\n  map,\n  pairwise,\n  shareReplay,\n  switchMap,\n  switchMapTo,\n  take,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { UserIdService } from '../../auth/index';\nimport { Cart } from '../../model/cart.model';\nimport { User } from '../../model/misc.model';\nimport { OrderEntry } from '../../model/order.model';\nimport {\n  OCC_CART_ID_CURRENT,\n  OCC_USER_ID_ANONYMOUS,\n  OCC_USER_ID_GUEST,\n} from '../../occ/utils/occ-constants';\nimport { ProcessesLoaderState } from '../../state/utils/processes-loader/processes-loader-state';\nimport { EMAIL_PATTERN } from '../../util/regex-pattern';\nimport { StateWithMultiCart } from '../store/multi-cart-state';\nimport { activeCartInitialState } from '../store/reducers/multi-cart.reducer';\nimport { MultiCartSelectors } from '../store/selectors/index';\nimport { getCartIdByUserId, isTempCartId } from '../utils/utils';\nimport { MultiCartService } from './multi-cart.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ActiveCartService implements OnDestroy {\n  private activeCart$: Observable<Cart>;\n  protected subscription = new Subscription();\n\n  // This stream is used for referencing carts in API calls.\n  private activeCartId$ = this.userIdService.getUserId().pipe(\n    // We want to wait with initialization of cartId until we have userId initialized\n    // We have take(1) to not trigger this stream, when userId changes.\n    take(1),\n    switchMapTo(this.store),\n    select(MultiCartSelectors.getActiveCartId),\n    // We also wait until we initialize cart from localStorage. Before that happens cartId in store === null\n    filter((cartId) => cartId !== activeCartInitialState),\n    map((cartId) => {\n      if (cartId === '') {\n        // We fallback to current when we don't have particular cart id -> cartId === '', because that's how you reference latest user cart.\n        return OCC_CART_ID_CURRENT;\n      }\n      return cartId;\n    })\n  );\n\n  private cartSelector$ = this.activeCartId$.pipe(\n    switchMap((cartId) => this.multiCartService.getCartEntity(cartId))\n  );\n\n  constructor(\n    protected store: Store<StateWithMultiCart>,\n    protected multiCartService: MultiCartService,\n    protected userIdService: UserIdService\n  ) {\n    this.initActiveCart();\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  protected initActiveCart() {\n    // Any change of user id is also interesting for us, because we have to merge/load/switch cart in those cases.\n    this.subscription.add(\n      this.userIdService\n        .getUserId()\n        .pipe(\n          // We never trigger cart merge/load on app initialization here and that's why we wait with pairwise for a change of userId (not initialization).\n          pairwise(),\n          switchMap(([previousUserId, userId]) =>\n            // We need cartId once we have the previous and current userId. We don't want to subscribe to cartId stream before.\n            combineLatest([\n              of(previousUserId),\n              of(userId),\n              this.activeCartId$,\n            ]).pipe(take(1))\n          )\n        )\n        .subscribe(([previousUserId, userId, cartId]) => {\n          // Only change of user and not a logout (current user id !== anonymous) should trigger loading mechanism\n          if (this.isJustLoggedIn(userId, previousUserId)) {\n            this.loadOrMerge(cartId, userId, previousUserId);\n          }\n        })\n    );\n\n    // Stream for getting the cart value\n    const activeCartValue$ = this.cartSelector$.pipe(\n      map((cartEntity: ProcessesLoaderState<Cart>): {\n        cart: Cart;\n        isStable: boolean;\n        loaded: boolean;\n      } => {\n        return {\n          cart: cartEntity.value,\n          isStable: !cartEntity.loading && cartEntity.processesCount === 0,\n          loaded:\n            (cartEntity.error || cartEntity.success) && !cartEntity.loading,\n        };\n      }),\n      // we want to emit empty carts even if those are not stable\n      // on merge cart action we want to switch to empty cart so no one would use old cartId which can be already obsolete\n      // so on merge action the resulting stream looks like this: old_cart -> {} -> new_cart\n      filter(({ isStable, cart }) => isStable || this.isEmpty(cart))\n    );\n\n    // Responsible for loading cart when it's not (eg. app initialization when we have only cart id)\n    const activeCartLoading$ = activeCartValue$.pipe(\n      withLatestFrom(this.activeCartId$, this.userIdService.getUserId()),\n      tap(([{ cart, loaded, isStable }, cartId, userId]) => {\n        if (\n          isStable &&\n          this.isEmpty(cart) &&\n          !loaded &&\n          !isTempCartId(cartId)\n        ) {\n          this.load(cartId, userId);\n        }\n      })\n    );\n\n    this.activeCart$ = using(\n      () => activeCartLoading$.subscribe(),\n      () => activeCartValue$\n    ).pipe(\n      // Normalization for empty cart value. It will always be returned as empty object.\n      map(({ cart }) => (cart ? cart : {})),\n      distinctUntilChanged(),\n      shareReplay({ bufferSize: 1, refCount: true })\n    );\n  }\n\n  /**\n   * Returns active cart\n   */\n  getActive(): Observable<Cart> {\n    return this.activeCart$;\n  }\n\n  /**\n   * Returns active cart id\n   */\n  getActiveCartId(): Observable<string> {\n    return this.activeCart$.pipe(\n      withLatestFrom(this.userIdService.getUserId()),\n      map(([cart, userId]) => getCartIdByUserId(cart, userId)),\n      distinctUntilChanged()\n    );\n  }\n\n  /**\n   * Returns cart entries\n   */\n  getEntries(): Observable<OrderEntry[]> {\n    return this.activeCartId$.pipe(\n      switchMap((cartId) => this.multiCartService.getEntries(cartId)),\n      distinctUntilChanged()\n    );\n  }\n\n  /**\n   * Returns last cart entry for provided product code.\n   * Needed to cover processes where multiple entries can share the same product code\n   * (e.g. promotions or configurable products)\n   *\n   * @param productCode\n   */\n  getLastEntry(productCode: string): Observable<OrderEntry> {\n    return this.activeCartId$.pipe(\n      switchMap((cartId) =>\n        this.multiCartService.getLastEntry(cartId, productCode)\n      ),\n      distinctUntilChanged()\n    );\n  }\n\n  /**\n   * Returns cart loading state\n   */\n  getLoading(): Observable<boolean> {\n    return this.cartSelector$.pipe(\n      map((cartEntity) => cartEntity.loading),\n      distinctUntilChanged()\n    );\n  }\n\n  /**\n   * Returns true when cart is stable (not loading and not pending processes on cart)\n   */\n  isStable(): Observable<boolean> {\n    // Debounce is used here, to avoid flickering when we switch between different cart entities.\n    // For example during `addEntry` method. We might try to load current cart, so `current cart will be then active id.\n    // After load fails we might create new cart so we switch to `temp-${uuid}` cart entity used when creating cart.\n    // At the end we finally switch to cart `code` for cart id. Between those switches cart `isStable` function should not flicker.\n    return this.activeCartId$.pipe(\n      switchMap((cartId) => this.multiCartService.isStable(cartId)),\n      debounce((state) => (state ? timer(0) : EMPTY)),\n      distinctUntilChanged()\n    );\n  }\n\n  private loadOrMerge(\n    cartId: string,\n    userId: string,\n    previousUserId: string\n  ): void {\n    // for login user, whenever there's an existing cart, we will load the user\n    // current cart and merge it into the existing cart\n    // cartId will be defined (not '', null, undefined)\n    if (cartId === OCC_CART_ID_CURRENT) {\n      this.multiCartService.loadCart({\n        userId,\n        cartId: OCC_CART_ID_CURRENT,\n        extraData: {\n          active: true,\n        },\n      });\n    } else if (this.isGuestCart()) {\n      this.guestCartMerge(cartId);\n    } else if (\n      userId !== previousUserId &&\n      userId !== OCC_USER_ID_ANONYMOUS &&\n      previousUserId !== OCC_USER_ID_ANONYMOUS\n    ) {\n      // This case covers the case when you are logged in and then asm user logs in and you don't want to merge, but only load emulated user cart\n      // Similarly when you are logged in as asm user and you logout and want to resume previous user session\n      this.multiCartService.loadCart({\n        userId,\n        cartId,\n        extraData: {\n          active: true,\n        },\n      });\n    } else {\n      // We have particular cart locally, but we logged in, so we need to combine this with current cart or make it ours.\n      this.multiCartService.mergeToCurrentCart({\n        userId,\n        cartId,\n        extraData: {\n          active: true,\n        },\n      });\n    }\n  }\n\n  private load(cartId: string, userId: string): void {\n    // We want to load cart in every case apart from anonymous user and current cart combination\n    if (!(userId === OCC_USER_ID_ANONYMOUS && cartId === OCC_CART_ID_CURRENT)) {\n      this.multiCartService.loadCart({\n        userId,\n        cartId,\n        extraData: {\n          active: true,\n        },\n      });\n    }\n  }\n\n  private addEntriesGuestMerge(cartEntries: OrderEntry[]) {\n    const entriesToAdd = cartEntries.map((entry) => ({\n      productCode: entry.product.code,\n      quantity: entry.quantity,\n    }));\n    this.requireLoadedCartForGuestMerge()\n      .pipe(withLatestFrom(this.userIdService.getUserId()))\n      .subscribe(([cartState, userId]) => {\n        this.multiCartService.addEntries(\n          userId,\n          getCartIdByUserId(cartState.value, userId),\n          entriesToAdd\n        );\n      });\n  }\n\n  private requireLoadedCartForGuestMerge() {\n    return this.requireLoadedCart(\n      this.cartSelector$.pipe(filter(() => !this.isGuestCart()))\n    );\n  }\n\n  private isCartCreating(\n    cartState: ProcessesLoaderState<Cart>,\n    cartId: string\n  ) {\n    // cart creating is always represented with loading flags\n    // when all loading flags are false it means that we restored wrong cart id\n    // could happen on context change or reload right in the middle on cart create call\n    return (\n      isTempCartId(cartId) &&\n      (cartState.loading || cartState.success || cartState.error)\n    );\n  }\n\n  private requireLoadedCart(\n    customCartSelector$?: Observable<ProcessesLoaderState<Cart>>\n  ): Observable<ProcessesLoaderState<Cart>> {\n    // For guest cart merge we want to filter guest cart in the whole stream\n    // We have to wait with load/create/addEntry after guest cart will be deleted.\n    // That's why you can provide custom selector with this filter applied.\n    const cartSelector$ = customCartSelector$\n      ? customCartSelector$\n      : this.cartSelector$;\n\n    return cartSelector$.pipe(\n      filter((cartState) => !cartState.loading),\n      // Avoid load/create call when there are new cart creating at the moment\n      withLatestFrom(this.activeCartId$),\n      filter(([cartState, cartId]) => !this.isCartCreating(cartState, cartId)),\n      map(([cartState]) => cartState),\n      take(1),\n      withLatestFrom(this.userIdService.getUserId()),\n      tap(([cartState, userId]) => {\n        // Try to load the cart, because it might have been created on another device between our login and add entry call\n        if (this.isEmpty(cartState.value) && userId !== OCC_USER_ID_ANONYMOUS) {\n          this.load(OCC_CART_ID_CURRENT, userId);\n        }\n      }),\n      switchMap(() => {\n        return cartSelector$;\n      }),\n      filter((cartState) => !cartState.loading),\n      // create cart can happen to anonymous user if it is not empty or to any other user if it is loaded and empty\n      withLatestFrom(this.userIdService.getUserId()),\n      filter(\n        ([cartState, userId]) =>\n          userId === OCC_USER_ID_ANONYMOUS ||\n          cartState.success ||\n          cartState.error\n      ),\n      take(1),\n      tap(([cartState, userId]) => {\n        if (this.isEmpty(cartState.value)) {\n          this.multiCartService.createCart({\n            userId,\n            extraData: {\n              active: true,\n            },\n          });\n        }\n      }),\n      switchMap(() => {\n        return cartSelector$;\n      }),\n      filter((cartState) => !cartState.loading),\n      filter((cartState) => cartState.success || cartState.error),\n      // wait for active cart id to point to code/guid to avoid some work on temp cart entity\n      withLatestFrom(this.activeCartId$),\n      filter(([cartState, cartId]) => !this.isCartCreating(cartState, cartId)),\n      map(([cartState]) => cartState),\n      filter((cartState) => !this.isEmpty(cartState.value)),\n      take(1)\n    );\n  }\n\n  /**\n   * Add entry to active cart\n   *\n   * @param productCode\n   * @param quantity\n   */\n  addEntry(productCode: string, quantity: number): void {\n    this.requireLoadedCart()\n      .pipe(withLatestFrom(this.userIdService.getUserId()))\n      .subscribe(([cartState, userId]) => {\n        this.multiCartService.addEntry(\n          userId,\n          getCartIdByUserId(cartState.value, userId),\n          productCode,\n          quantity\n        );\n      });\n  }\n\n  /**\n   * Remove entry\n   *\n   * @param entry\n   */\n  removeEntry(entry: OrderEntry): void {\n    this.activeCartId$\n      .pipe(withLatestFrom(this.userIdService.getUserId()), take(1))\n      .subscribe(([cartId, userId]) => {\n        this.multiCartService.removeEntry(userId, cartId, entry.entryNumber);\n      });\n  }\n\n  /**\n   * Update entry\n   *\n   * @param entryNumber\n   * @param quantity\n   */\n  updateEntry(entryNumber: number, quantity: number): void {\n    this.activeCartId$\n      .pipe(withLatestFrom(this.userIdService.getUserId()), take(1))\n      .subscribe(([cartId, userId]) => {\n        this.multiCartService.updateEntry(\n          userId,\n          cartId,\n          entryNumber,\n          quantity\n        );\n      });\n  }\n\n  /**\n   * Returns cart entry\n   *\n   * @param productCode\n   */\n  getEntry(productCode: string): Observable<OrderEntry> {\n    return this.activeCartId$.pipe(\n      switchMap((cartId) =>\n        this.multiCartService.getEntry(cartId, productCode)\n      ),\n      distinctUntilChanged()\n    );\n  }\n\n  /**\n   * Assign email to cart\n   *\n   * @param email\n   */\n  addEmail(email: string): void {\n    this.activeCartId$\n      .pipe(withLatestFrom(this.userIdService.getUserId()), take(1))\n      .subscribe(([cartId, userId]) => {\n        this.multiCartService.assignEmail(cartId, userId, email);\n      });\n  }\n\n  /**\n   * Get assigned user to cart\n   */\n  getAssignedUser(): Observable<User> {\n    return this.getActive().pipe(map((cart) => cart.user));\n  }\n\n  // TODO: Make cart required param in 4.0 and drop the subscribe/unsubscribe.\n  /**\n   * Returns true for guest cart\n   */\n  isGuestCart(cart?: Cart): boolean {\n    if (!cart) {\n      this.activeCart$\n        .subscribe((activeCart) => (cart = activeCart))\n        .unsubscribe();\n    }\n    const cartUser = cart?.user;\n    return (\n      cartUser &&\n      (cartUser.name === OCC_USER_ID_GUEST ||\n        this.isEmail(cartUser.uid.split('|').slice(1).join('|')))\n    );\n  }\n\n  /**\n   * Add multiple entries to a cart\n   *\n   * @param cartEntries : list of entries to add (OrderEntry[])\n   */\n  addEntries(cartEntries: OrderEntry[]): void {\n    cartEntries.forEach((entry) => {\n      this.addEntry(entry.product.code, entry.quantity);\n    });\n  }\n\n  private isEmail(str: string): boolean {\n    if (str) {\n      return str.match(EMAIL_PATTERN) ? true : false;\n    }\n    return false;\n  }\n\n  // TODO: Remove once backend is updated\n  /**\n   * Temporary method to merge guest cart with user cart because of backend limitation\n   * This is for an edge case\n   */\n  private guestCartMerge(cartId: string): void {\n    let cartEntries: OrderEntry[];\n    this.getEntries()\n      .pipe(take(1))\n      .subscribe((entries) => {\n        cartEntries = entries;\n        this.multiCartService.deleteCart(cartId, OCC_USER_ID_ANONYMOUS);\n        this.addEntriesGuestMerge(cartEntries);\n      });\n  }\n\n  private isEmpty(cart: Cart): boolean {\n    return (\n      !cart || (typeof cart === 'object' && Object.keys(cart).length === 0)\n    );\n  }\n\n  private isJustLoggedIn(userId: string, previousUserId: string): boolean {\n    return (\n      userId !== OCC_USER_ID_ANONYMOUS && // not logged out\n      previousUserId !== userId // *just* logged in / switched to ASM emulation\n    );\n  }\n}\n","import { CmsComponent } from '../../model/cms.model';\nimport { ContentSlotData } from './content-slot-data.model';\n\nexport interface Page {\n  pageId?: string;\n  name?: string;\n  type?: string;\n  title?: string;\n  template?: string;\n  loadTime?: number;\n  slots?: { [key: string]: ContentSlotData };\n  properties?: any;\n  label?: string;\n\n  /**\n   * Lists the page robot information for the given page: `INDEX`, `NOINDEX`, `FOLLOW` or `NOFOLLOW`\n   */\n  robots?: PageRobotsMeta[];\n}\n\n/**\n * Represents the cms structure for pages, slots and components.\n */\nexport interface CmsStructureModel {\n  page?: Page;\n  components?: CmsComponent[];\n}\n\n/**\n * Represents the page meta data that can be used\n * to resolve page data and seo related data.\n */\nexport interface PageMeta {\n  /**\n   * the page title is used for the page title tag which\n   * is visible in the browser navigation as well as in the\n   * Search Engine Result Page\n   */\n  title?: string;\n\n  /**\n   * the page heading is typically used in the UI\n   */\n  heading?: string;\n\n  /**\n   * the page description is used in the Search Engine Result Page\n   */\n  description?: string;\n\n  /**\n   * the robots information drives search engines to index the page and\n   * follow links in the page\n   */\n  robots?: PageRobotsMeta[];\n\n  /**\n   * image that can be added to the og:image metatag\n   */\n  image?: string;\n\n  /**\n   * the list of breadcrumbs that can be rendered in the page UI.\n   */\n  breadcrumbs?: BreadcrumbMeta[];\n}\n\nexport interface BreadcrumbMeta {\n  label: string;\n  link: string;\n}\n\nexport enum PageRobotsMeta {\n  INDEX = 'INDEX',\n  NOINDEX = 'NOINDEX',\n  FOLLOW = 'FOLLOW',\n  NOFOLLOW = 'NOFOLLOW',\n}\n","import { Observable } from 'rxjs';\n\nexport abstract class TranslationService {\n  /**\n   * Translates given key with options.\n   * If key is missing, it tries to load the chunk and emits a value when chunk is loaded.\n   * If key is missing after loaded chunk, a fallback value is emitted\n   *\n   * @param key translation key\n   * @param options values for interpolation in translation\n   * @param whitespaceUntilLoaded if true, immediately emits a non-breaking space\n   */\n  translate: (\n    key: string,\n    options?: any,\n    whitespaceUntilLoaded?: boolean\n  ) => Observable<string>;\n\n  /**\n   * Loads chunks with translations\n   *\n   * @param chunkNames array of chunk names to be loaded\n   */\n  loadChunks: (chunkNames: string | string[]) => Promise<any>;\n}\n","import { CmsComponent } from '../../model';\nimport { StateUtils } from '../../state/index';\nimport { NodeItem } from '../model/node-item.model';\nimport { Page } from '../model/page.model';\n\nexport const CMS_FEATURE = 'cms';\nexport const NAVIGATION_DETAIL_ENTITY = '[Cms] Navigation Entity';\nexport const COMPONENT_ENTITY = '[Cms] Component Entity';\n\nexport interface StateWithCms {\n  [CMS_FEATURE]: CmsState;\n}\n\nexport type ComponentsState = StateUtils.EntityState<ComponentsContext>;\n\nexport interface ComponentsContext {\n  component: CmsComponent;\n  /**\n   * Page context stores an information for which context does the component exist.\n   * For example, if `SiteLogoComponent` was successfully loaded for a product page with an ID of 1776948, then this object will contain:\n   *\n   * ```ts\n   * ProductPage-1776948: {\n   *  success: true,\n   *  loading: false,\n   *  error: false,\n   *  // The `value` property indicates that the component exists for the given page context.\n   *  value: true\n   * }\n   * ```\n   *\n   * If the same `SiteLogoComponent` component was tried to be loaded on homepage (page context id is `homepage`),\n   * and it doesn't exist for some reason (maybe it has a restriction), then this object will contain:\n   *\n   * ```ts\n   * ProductPage-1776948: {\n   *  success: true,\n   *  loading: false,\n   *  error: false,\n   *  // The `value` property indicates that the component exists for the given page context.\n   *  value: true\n   * },\n   * ContentPage-homepage: {\n   *  success: true,\n   *  loading: false,\n   *  error: false,\n   *  // The `value` in this case is `false` indicating that the component was tried to be loaded, but it doesn't exist or has a restriction.\n   *  value: false\n   * }\n   * ```\n   *\n   */\n  pageContext: {\n    [context: string]: StateUtils.LoaderState<boolean>;\n  };\n}\n\nexport type IndexType = {\n  content: StateUtils.EntityLoaderState<string>;\n  product: StateUtils.EntityLoaderState<string>;\n  category: StateUtils.EntityLoaderState<string>;\n  catalog: StateUtils.EntityLoaderState<string>;\n};\n\nexport interface NavigationNodes {\n  [nodeId: string]: NodeItem;\n}\n\nexport interface PageState {\n  pageData: StateUtils.EntityState<Page>;\n  index: IndexType;\n}\n\nexport interface CmsState {\n  page: PageState;\n  components: ComponentsState;\n  navigation: StateUtils.EntityLoaderState<NodeItem>;\n}\n","import { CmsComponent } from '../../../model/cms.model';\nimport { PageContext } from '../../../routing/index';\nimport { StateUtils } from '../../../state/utils/index';\nimport { COMPONENT_ENTITY } from '../cms-state';\n\nexport const LOAD_CMS_COMPONENT = '[Cms] Load Component';\nexport const LOAD_CMS_COMPONENT_FAIL = '[Cms] Load Component Fail';\nexport const LOAD_CMS_COMPONENT_SUCCESS = '[Cms] Load Component Success';\nexport const CMS_GET_COMPONENT_FROM_PAGE = '[Cms] Get Component from Page';\n\nexport class LoadCmsComponent extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_CMS_COMPONENT;\n  constructor(\n    public payload: {\n      uid: string;\n      pageContext: PageContext;\n    }\n  ) {\n    super(COMPONENT_ENTITY, payload.uid);\n  }\n}\n\nexport class LoadCmsComponentFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_CMS_COMPONENT_FAIL;\n  constructor(\n    public payload: { uid: string; error?: any; pageContext: PageContext }\n  ) {\n    super(COMPONENT_ENTITY, payload.uid, payload.error);\n  }\n}\n\nexport class LoadCmsComponentSuccess<\n  T extends CmsComponent\n> extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_CMS_COMPONENT_SUCCESS;\n  constructor(\n    public payload: {\n      component: T;\n      uid?: string;\n      pageContext: PageContext;\n    }\n  ) {\n    super(COMPONENT_ENTITY, payload.uid || payload.component.uid || '');\n  }\n}\n\nexport class CmsGetComponentFromPage<\n  T extends CmsComponent\n> extends StateUtils.EntitySuccessAction {\n  readonly type = CMS_GET_COMPONENT_FROM_PAGE;\n  constructor(\n    public payload:\n      | { component: T; pageContext: PageContext }\n      | { component: T; pageContext: PageContext }[]\n  ) {\n    super(\n      COMPONENT_ENTITY,\n      [].concat(payload).map((cmp) => cmp.component.uid)\n    );\n  }\n}\n\n// action types\nexport type CmsComponentAction<T extends CmsComponent> =\n  | LoadCmsComponent\n  | LoadCmsComponentFail\n  | LoadCmsComponentSuccess<T>\n  | CmsGetComponentFromPage<T>;\n","import { StateUtils } from '../../../state/utils/index';\nimport { NAVIGATION_DETAIL_ENTITY } from '../cms-state';\n\nexport const LOAD_CMS_NAVIGATION_ITEMS = '[Cms] Load NavigationEntry items';\nexport const LOAD_CMS_NAVIGATION_ITEMS_FAIL =\n  '[Cms] Load NavigationEntry items Fail';\nexport const LOAD_CMS_NAVIGATION_ITEMS_SUCCESS =\n  '[Cms] Load NavigationEntry items Success';\n\nexport class LoadCmsNavigationItems extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_CMS_NAVIGATION_ITEMS;\n  constructor(public payload: { nodeId: string; items: any[] }) {\n    super(NAVIGATION_DETAIL_ENTITY, payload.nodeId);\n  }\n}\n\nexport class LoadCmsNavigationItemsFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_CMS_NAVIGATION_ITEMS_FAIL;\n  constructor(nodeId: string, public payload: any) {\n    super(NAVIGATION_DETAIL_ENTITY, nodeId, payload);\n  }\n}\n\nexport class LoadCmsNavigationItemsSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_CMS_NAVIGATION_ITEMS_SUCCESS;\n  constructor(public payload: { nodeId: string; components: any[] }) {\n    super(NAVIGATION_DETAIL_ENTITY, payload.nodeId);\n  }\n}\n\n// action types\nexport type CmsNavigationEntryItemAction =\n  | LoadCmsNavigationItems\n  | LoadCmsNavigationItemsFail\n  | LoadCmsNavigationItemsSuccess;\n","import { PageContext } from '../../../routing/index';\nimport { StateUtils } from '../../../state/utils/index';\nimport { Page } from '../../model/page.model';\n\nexport const LOAD_CMS_PAGE_DATA = '[Cms] Load Page Data';\nexport const LOAD_CMS_PAGE_DATA_FAIL = '[Cms] Load Page Data Fail';\nexport const LOAD_CMS_PAGE_DATA_SUCCESS = '[Cms] Load Page Data Success';\nexport const CMS_SET_PAGE_SUCCESS_INDEX = '[Cms] Set Page Success Index';\nexport const CMS_SET_PAGE_FAIL_INDEX = '[Cms] Set Page Fail Index';\n\nexport class LoadCmsPageData extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_CMS_PAGE_DATA;\n  constructor(public payload: PageContext) {\n    super(payload.type, payload.id);\n  }\n}\n\nexport class LoadCmsPageDataFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_CMS_PAGE_DATA_FAIL;\n  constructor(pageContext: PageContext, error: any) {\n    super(pageContext.type, pageContext.id, error);\n  }\n}\n\nexport class LoadCmsPageDataSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_CMS_PAGE_DATA_SUCCESS;\n  constructor(pageContext: PageContext, payload: Page) {\n    super(pageContext.type, pageContext.id, payload);\n  }\n}\n\nexport class CmsSetPageSuccessIndex extends StateUtils.EntitySuccessAction {\n  readonly type = CMS_SET_PAGE_SUCCESS_INDEX;\n  constructor(pageContext: PageContext, payload: Page) {\n    super(pageContext.type, pageContext.id, payload);\n  }\n}\n\nexport class CmsSetPageFailIndex extends StateUtils.EntityFailAction {\n  readonly type = CMS_SET_PAGE_FAIL_INDEX;\n  constructor(pageContext: PageContext, public payload: string) {\n    super(pageContext.type, pageContext.id);\n  }\n}\n\n// action types\nexport type CmsPageAction =\n  | LoadCmsPageData\n  | LoadCmsPageDataFail\n  | LoadCmsPageDataSuccess\n  | CmsSetPageFailIndex;\n","import { createFeatureSelector, MemoizedSelector } from '@ngrx/store';\nimport { CmsState, CMS_FEATURE, StateWithCms } from '../cms-state';\n\nexport const getCmsState: MemoizedSelector<\n  StateWithCms,\n  CmsState\n> = createFeatureSelector<CmsState>(CMS_FEATURE);\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { CmsComponent } from '../../../model/cms.model';\nimport { StateUtils } from '../../../state/utils/index';\nimport { ComponentsContext, ComponentsState, StateWithCms } from '../cms-state';\nimport { getCmsState } from './feature.selectors';\n\nexport const getComponentsState: MemoizedSelector<\n  StateWithCms,\n  ComponentsState\n> = createSelector(getCmsState, (state) => state.components);\n\nexport const componentsContextSelectorFactory = (\n  uid: string\n): MemoizedSelector<StateWithCms, ComponentsContext> => {\n  return createSelector(getComponentsState, (componentsState) =>\n    StateUtils.entitySelector(componentsState, uid)\n  );\n};\n\nexport const componentsLoaderStateSelectorFactory = (\n  uid: string,\n  context: string\n): MemoizedSelector<StateWithCms, StateUtils.LoaderState<boolean>> => {\n  return createSelector(\n    componentsContextSelectorFactory(uid),\n    (componentsContext) =>\n      (componentsContext &&\n        componentsContext.pageContext &&\n        componentsContext.pageContext[context]) ||\n      StateUtils.initialLoaderState\n  );\n};\n\n/**\n * This selector will return:\n *   - true: component for this context exists\n *   - false: component for this context doesn't exist\n *   - undefined: if the exists status for component is unknown\n *\n * @param uid\n * @param context\n */\nexport const componentsContextExistsSelectorFactory = (\n  uid: string,\n  context: string\n): MemoizedSelector<StateWithCms, boolean | undefined> => {\n  return createSelector(\n    componentsLoaderStateSelectorFactory(uid, context),\n    (loaderState) => StateUtils.loaderValueSelector(loaderState)\n  );\n};\n\nexport const componentsDataSelectorFactory = (\n  uid: string\n): MemoizedSelector<StateWithCms, CmsComponent | undefined> => {\n  return createSelector(componentsContextSelectorFactory(uid), (state) =>\n    state ? state.component : undefined\n  );\n};\n\n/**\n * This selector will return:\n *   - CmsComponent instance: if we have component data for specified context\n *   - null: if there is no component data for specified context\n *   - undefined: if status of component data for specified context is unknown\n *\n * @param uid\n * @param context\n */\nexport const componentsSelectorFactory = (\n  uid: string,\n  context: string\n): MemoizedSelector<StateWithCms, CmsComponent | null | undefined> => {\n  return createSelector(\n    componentsDataSelectorFactory(uid),\n    componentsContextExistsSelectorFactory(uid, context),\n    (componentState, exists) => {\n      switch (exists) {\n        case true:\n          return componentState;\n        case false:\n          return null;\n        case undefined:\n          return undefined;\n      }\n    }\n  );\n};\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { StateUtils } from '../../../state/utils/index';\nimport { NodeItem } from '../../model/node-item.model';\nimport { CmsState, StateWithCms } from '../cms-state';\nimport { getCmsState } from './feature.selectors';\n\nexport const getNavigationEntryItemState: MemoizedSelector<\n  StateWithCms,\n  StateUtils.EntityLoaderState<NodeItem>\n> = createSelector(getCmsState, (state: CmsState) => state.navigation);\n\nexport const getSelectedNavigationEntryItemState = (\n  nodeId: string\n): MemoizedSelector<StateWithCms, StateUtils.LoaderState<NodeItem>> => {\n  return createSelector(getNavigationEntryItemState, (nodes) =>\n    StateUtils.entityLoaderStateSelector(nodes, nodeId)\n  );\n};\n\nexport const getNavigationEntryItems = (\n  nodeId: string\n): MemoizedSelector<StateWithCms, NodeItem> => {\n  return createSelector(\n    getSelectedNavigationEntryItemState(nodeId),\n    (itemState) => StateUtils.loaderValueSelector(itemState)\n  );\n};\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { PageType } from '../../../model/cms.model';\nimport { PageContext } from '../../../routing';\nimport { StateUtils } from '../../../state/utils/index';\nimport { ContentSlotData } from '../../model/content-slot-data.model';\nimport { Page } from '../../model/page.model';\nimport { CmsState, IndexType, PageState, StateWithCms } from '../cms-state';\nimport { getCmsState } from './feature.selectors';\n\nconst getPageEntitiesSelector = (state: PageState) => state.pageData.entities;\nconst getIndexByType = (\n  index: IndexType,\n  type: PageType\n): StateUtils.EntityLoaderState<string> => {\n  switch (type) {\n    case PageType.CONTENT_PAGE: {\n      return index.content;\n    }\n    case PageType.PRODUCT_PAGE: {\n      return index.product;\n    }\n    case PageType.CATEGORY_PAGE: {\n      return index.category;\n    }\n    case PageType.CATALOG_PAGE: {\n      return index.catalog;\n    }\n  }\n  return { entities: {} };\n};\n\nconst getPageComponentTypesSelector: (page: Page) => string[] = (\n  page: Page\n) => {\n  const componentTypes = new Set<string>();\n  if (page && page.slots) {\n    for (const slot of Object.keys(page.slots)) {\n      for (const component of page.slots[slot].components || []) {\n        componentTypes.add(component.flexType);\n      }\n    }\n  }\n  return Array.from(componentTypes);\n};\n\nexport const getPageState: MemoizedSelector<\n  StateWithCms,\n  PageState\n> = createSelector(getCmsState, (state: CmsState) => state.page);\n\nexport const getPageStateIndex: MemoizedSelector<\n  StateWithCms,\n  IndexType\n> = createSelector(getPageState, (page: PageState) => page.index);\n\nexport const getPageStateIndexEntityLoaderState = (\n  pageContext: PageContext\n): MemoizedSelector<StateWithCms, StateUtils.EntityLoaderState<string>> =>\n  createSelector(getPageStateIndex, (index: IndexType) =>\n    getIndexByType(index, pageContext.type)\n  );\n\nexport const getPageStateIndexLoaderState = (\n  pageContext: PageContext\n): MemoizedSelector<StateWithCms, StateUtils.LoaderState<string>> =>\n  createSelector(\n    getPageStateIndexEntityLoaderState(pageContext),\n    (indexState) =>\n      StateUtils.entityLoaderStateSelector(indexState, pageContext.id)\n  );\n\nexport const getPageStateIndexValue = (\n  pageContext: PageContext\n): MemoizedSelector<StateWithCms, string> =>\n  createSelector(getPageStateIndexLoaderState(pageContext), (entity) =>\n    StateUtils.loaderValueSelector<string>(entity)\n  );\n\nexport const getPageEntities: MemoizedSelector<\n  StateWithCms,\n  { [id: string]: Page }\n> = createSelector(getPageState, getPageEntitiesSelector);\n\nexport const getPageData = (\n  pageContext: PageContext\n): MemoizedSelector<StateWithCms, Page> =>\n  createSelector(\n    getPageEntities,\n    getPageStateIndexValue(pageContext),\n    (entities: { [id: string]: Page }, indexValue: string) =>\n      entities[indexValue]\n  );\n\nexport const getPageComponentTypes = (\n  pageContext: PageContext\n): MemoizedSelector<StateWithCms, string[]> =>\n  createSelector(getPageData(pageContext), (pageData) =>\n    getPageComponentTypesSelector(pageData)\n  );\n\nexport const getCurrentSlotSelectorFactory = (\n  pageContext: PageContext,\n  position: string\n): MemoizedSelector<StateWithCms, ContentSlotData> => {\n  return createSelector(getPageData(pageContext), (entity) => {\n    if (entity) {\n      return entity.slots[position] || { components: [] };\n    }\n  });\n};\n","import { PageType } from '../../model/cms.model';\nimport { PageContext } from '../../routing/models/page-context.model';\n\nexport const CURRENT_CONTEXT_KEY = 'current';\n\n/**\n *\n * Serializes the provided page context.\n * The pattern used for serialization is: `pageContext.type-pageContext.id`.\n *\n * @param pageContext to serialize\n * @param ignoreContentPageId if set to true, and the PageType is of type ContentPage, then the serialized page context will not contain the ID.\n * Otherwise, the page context if fully serialized.\n */\nexport function serializePageContext(\n  pageContext: PageContext,\n  ignoreContentPageId?: boolean\n): string {\n  if (!pageContext) {\n    return CURRENT_CONTEXT_KEY;\n  }\n\n  if (ignoreContentPageId && pageContext.type === PageType.CONTENT_PAGE) {\n    return `${pageContext.type}`;\n  }\n\n  return `${pageContext.type}-${pageContext.id}`;\n}\n","import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { combineLatest, Observable, of, queueScheduler, using } from 'rxjs';\nimport {\n  catchError,\n  filter,\n  observeOn,\n  pluck,\n  shareReplay,\n  switchMap,\n  take,\n  tap,\n} from 'rxjs/operators';\nimport { CmsComponent } from '../../model/cms.model';\nimport { RoutingService } from '../../routing/facade/routing.service';\nimport { PageContext } from '../../routing/models/page-context.model';\nimport { LoaderState } from '../../state/utils/loader/loader-state';\nimport { ContentSlotData } from '../model/content-slot-data.model';\nimport { NodeItem } from '../model/node-item.model';\nimport { Page } from '../model/page.model';\nimport { CmsActions } from '../store/actions/index';\nimport { StateWithCms } from '../store/cms-state';\nimport { CmsSelectors } from '../store/selectors/index';\nimport { serializePageContext } from '../utils/cms-utils';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsService {\n  private components: {\n    [uid: string]: {\n      [pageContext: string]: Observable<CmsComponent>;\n    };\n  } = {};\n\n  constructor(\n    protected store: Store<StateWithCms>,\n    protected routingService: RoutingService\n  ) {}\n\n  /**\n   * Get current CMS page data\n   */\n  getCurrentPage(): Observable<Page> {\n    return this.routingService\n      .getPageContext()\n      .pipe(\n        switchMap((pageContext) =>\n          this.store.select(CmsSelectors.getPageData(pageContext))\n        )\n      );\n  }\n\n  /**\n   * Get CMS component data by uid\n   *\n   * This method can be safely and optimally used to load multiple components data at the same time.\n   * Calling getComponentData multiple times for different components will always result in optimized\n   * back-end request: all components requested at the same time (in one event loop) will be loaded in one network call.\n   *\n   * In case the component data is not present, the method will load it.\n   * Otherwise, if the page context is not provided, the current page context from the router state will be used instead.\n   *\n   * @param uid CMS component uid\n   * @param pageContext if provided, it will be used to lookup the component data.\n   */\n  getComponentData<T extends CmsComponent | null>(\n    uid: string,\n    pageContext?: PageContext\n  ): Observable<T> {\n    const context = serializePageContext(pageContext, true);\n    if (!this.components[uid]) {\n      // create the component data structure, if it doesn't already exist\n      this.components[uid] = {};\n    }\n\n    const component = this.components[uid];\n    if (!component[context]) {\n      // create the component data and assign it to the component's context\n      component[context] = this.createComponentData(uid, pageContext);\n    }\n\n    return component[context] as Observable<T>;\n  }\n\n  private createComponentData<T extends CmsComponent>(\n    uid: string,\n    pageContext?: PageContext\n  ): Observable<T> {\n    if (!pageContext) {\n      return this.routingService.getPageContext().pipe(\n        filter((currentContext) => !!currentContext),\n        switchMap((currentContext) =>\n          this.getComponentData<T>(uid, currentContext)\n        )\n      );\n    }\n\n    const context = serializePageContext(pageContext, true);\n\n    const loading$ = combineLatest([\n      this.routingService.getNextPageContext(),\n      this.store.pipe(\n        select(CmsSelectors.componentsLoaderStateSelectorFactory(uid, context))\n      ),\n    ]).pipe(\n      observeOn(queueScheduler),\n      tap(([nextContext, loadingState]) => {\n        const attemptedLoad =\n          loadingState.loading || loadingState.success || loadingState.error;\n        // if the requested context is the same as the one that's currently being navigated to\n        // (as it might already been triggered and might be available shortly from page data)\n        // TODO(issue:3649), TODO(issue:3668) - this optimization could be removed\n        const couldBeLoadedWithPageData = nextContext\n          ? serializePageContext(nextContext, true) === context\n          : false;\n\n        if (!attemptedLoad && !couldBeLoadedWithPageData) {\n          this.store.dispatch(\n            new CmsActions.LoadCmsComponent({ uid, pageContext })\n          );\n        }\n      })\n    );\n\n    const component$ = this.store.pipe(\n      select(CmsSelectors.componentsSelectorFactory(uid, context)),\n      filter((component) => component !== undefined)\n    ) as Observable<T | null>;\n\n    return using(\n      () => loading$.subscribe(),\n      () => component$\n    ).pipe(shareReplay({ bufferSize: 1, refCount: true }));\n  }\n\n  /**\n   * Given the position, get the content slot data\n   * @param position : content slot position\n   */\n  getContentSlot(position: string): Observable<ContentSlotData> {\n    return this.routingService\n      .getPageContext()\n      .pipe(\n        switchMap((pageContext) =>\n          this.store.pipe(\n            select(\n              CmsSelectors.getCurrentSlotSelectorFactory(pageContext, position)\n            ),\n            filter(Boolean)\n          )\n        )\n      );\n  }\n\n  /**\n   * Given navigation node uid, get items (with id and type) inside the navigation entries\n   * @param navigationNodeUid : uid of the navigation node\n   */\n  getNavigationEntryItems(navigationNodeUid: string): Observable<NodeItem> {\n    return this.store.pipe(\n      select(CmsSelectors.getNavigationEntryItems(navigationNodeUid))\n    );\n  }\n\n  /**\n   * Load navigation items data\n   * @param rootUid : the uid of the root navigation node\n   * @param itemList : list of items (with id and type)\n   */\n  loadNavigationItems(\n    rootUid: string,\n    itemList: { id: string; superType: string }[]\n  ): void {\n    this.store.dispatch(\n      new CmsActions.LoadCmsNavigationItems({\n        nodeId: rootUid,\n        items: itemList,\n      })\n    );\n  }\n\n  /**\n   * Refresh the content of the latest cms page\n   */\n  refreshLatestPage(): void {\n    this.routingService\n      .getPageContext()\n      .pipe(take(1))\n      .subscribe((pageContext) =>\n        this.store.dispatch(new CmsActions.LoadCmsPageData(pageContext))\n      );\n  }\n\n  /**\n   * Refresh the cms page content by page Id\n   * @param pageId\n   */\n  refreshPageById(pageId: string): void {\n    const pageContext: PageContext = { id: pageId };\n    this.store.dispatch(new CmsActions.LoadCmsPageData(pageContext));\n  }\n\n  /**\n   * Refresh cms component's content\n   * @param uid component uid\n   * @param pageContext an optional parameter that enables the caller to specify for which context the component should be refreshed.\n   * If not specified, 'current' page context is used.\n   */\n  refreshComponent(uid: string, pageContext?: PageContext): void {\n    this.store.dispatch(new CmsActions.LoadCmsComponent({ uid, pageContext }));\n  }\n\n  /**\n   * Given pageContext, return the CMS page data\n   * @param pageContext\n   */\n  getPageState(pageContext: PageContext): Observable<Page> {\n    return this.store.pipe(select(CmsSelectors.getPageData(pageContext)));\n  }\n\n  /**\n   * Given pageContext, return the CMS page data\n   * @param pageContext\n   */\n  getPageComponentTypes(pageContext: PageContext): Observable<string[]> {\n    return this.store.pipe(\n      select(CmsSelectors.getPageComponentTypes(pageContext))\n    );\n  }\n\n  /**\n   * Given pageContext, return whether the CMS page data exists or not\n   * @param pageContext\n   */\n  hasPage(pageContext: PageContext, forceReload = false): Observable<boolean> {\n    return this.store.pipe(\n      select(CmsSelectors.getPageStateIndexLoaderState(pageContext)),\n      tap((entity: LoaderState<string>) => {\n        const attemptedLoad = entity.loading || entity.success || entity.error;\n        const shouldReload = forceReload && !entity.loading;\n        if (!attemptedLoad || shouldReload) {\n          this.store.dispatch(new CmsActions.LoadCmsPageData(pageContext));\n          forceReload = false;\n        }\n      }),\n      filter((entity) => {\n        if (!entity.hasOwnProperty('value')) {\n          // if we have incomplete state from SSR failed load transfer state,\n          // we should wait for reload and actual value\n          return false;\n        }\n        return entity.success || (entity.error && !entity.loading);\n      }),\n      pluck('success'),\n      catchError(() => of(false))\n    );\n  }\n\n  /**\n   * Given pageContext, return the CMS page data\n   **/\n  getPage(pageContext: PageContext, forceReload = false): Observable<Page> {\n    return this.hasPage(pageContext, forceReload).pipe(\n      switchMap((hasPage) =>\n        hasPage ? this.getPageState(pageContext) : of(null)\n      )\n    );\n  }\n\n  getPageIndex(pageContext: PageContext): Observable<string> {\n    return this.store.pipe(\n      select(CmsSelectors.getPageStateIndexValue(pageContext))\n    );\n  }\n\n  setPageFailIndex(pageContext: PageContext, value: string): void {\n    this.store.dispatch(new CmsActions.CmsSetPageFailIndex(pageContext, value));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { TranslationService } from '../../../i18n/translation.service';\nimport { BreadcrumbMeta } from '../../model/page.model';\nimport {\n  RouteBreadcrumbConfig,\n  RouteBreadcrumbResolver,\n  RouteBreadcrumbResolverParams,\n} from './route-page-meta.model';\n\n/**\n * Resolves the breadcrumb for the Angular ActivatedRouteSnapshot\n */\n@Injectable({ providedIn: 'root' })\nexport abstract class DefaultRoutePageMetaResolver\n  implements RouteBreadcrumbResolver {\n  constructor(protected translation: TranslationService) {}\n\n  /**\n   * Resolves breadcrumb based on the given url and the breadcrumb config.\n   *\n   * - When breadcrumb config is empty, it returns an empty breadcrumb.\n   * - When breadcrumb config is a string or object with `i18n` property,\n   *    it translates it and use as a label of the returned breadcrumb.\n   * - When breadcrumb config is an object with property `raw`, then\n   *    it's used as a label of the returned breadcrumb.\n   */\n  resolveBreadcrumbs({\n    url,\n    pageMetaConfig,\n  }: RouteBreadcrumbResolverParams): Observable<BreadcrumbMeta[]> {\n    const breadcrumbConfig = pageMetaConfig?.breadcrumb;\n\n    if (!breadcrumbConfig) {\n      return of([]);\n    }\n\n    if (typeof breadcrumbConfig !== 'string' && breadcrumbConfig.raw) {\n      return of([{ link: url, label: breadcrumbConfig.raw }]);\n    }\n\n    return this.translateBreadcrumbLabel(breadcrumbConfig).pipe(\n      map((label) => [{ label, link: url }])\n    );\n  }\n\n  /**\n   * Translates the configured breadcrumb label\n   */\n  protected translateBreadcrumbLabel(\n    breadcrumbConfig: string | RouteBreadcrumbConfig\n  ): Observable<string> {\n    const i18nKey =\n      typeof breadcrumbConfig === 'string'\n        ? breadcrumbConfig\n        : breadcrumbConfig.i18n;\n\n    return this.getParams().pipe(\n      switchMap((params) => this.translation.translate(i18nKey, params ?? {}))\n    );\n  }\n\n  /**\n   * Resolves dynamic data for the whole resolver.\n   */\n  protected getParams(): Observable<{ [_: string]: any }> {\n    return of({});\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { ActivatedRouteSnapshot } from '@angular/router';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\nimport { ActivatedRoutesService } from '../../../routing/services/activated-routes.service';\nimport { BreadcrumbMeta } from '../../model/page.model';\nimport { DefaultRoutePageMetaResolver } from './default-route-page-meta.resolver';\nimport {\n  ActivatedRouteSnapshotWithPageMeta,\n  RouteBreadcrumbResolver,\n  RoutePageMetaConfig,\n} from './route-page-meta.model';\n\n// PRIVATE\nexport interface RouteWithExtras {\n  route: ActivatedRouteSnapshotWithPageMeta;\n  resolver: any;\n  url: string;\n}\n\nexport interface RoutingResolveBreadcrumbsOptions {\n  /**\n   * Includes the current route in the breadcrumbs.\n   */\n  includeCurrentRoute?: boolean;\n}\n\n/**\n * Resolves the page meta based on the Angular Activated Routes\n */\n@Injectable({ providedIn: 'root' })\nexport class RoutingPageMetaResolver {\n  constructor(\n    protected activatedRoutesService: ActivatedRoutesService,\n    protected injector: Injector\n  ) {}\n\n  /**\n   * Array of activated routes, excluding the special Angular `root` route.\n   */\n  protected readonly routes$ = this.activatedRoutesService.routes$.pipe(\n    // drop the first route - the special `root` route:\n    map((routes) => (routes = routes.slice(1, routes.length)))\n  );\n\n  /**\n   * Array of activated routes together with precalculated extras:\n   *\n   * - route's page meta resolver\n   * - route's absolute string URL\n   *\n   * In case when there is no page meta resolver configured for a specific route,\n   * it inherits its parent's resolver.\n   *\n   * When there is no page meta resolver configured for the highest parent in the hierarchy,\n   * it uses the `DefaultRoutePageMetaResolver`.\n   */\n  protected readonly routesWithExtras$: Observable<\n    RouteWithExtras[]\n  > = this.routes$.pipe(\n    map((routes) =>\n      routes.reduce<RouteWithExtras[]>((results, route) => {\n        const parent = results.length\n          ? results[results.length - 1]\n          : {\n              route: null,\n              resolver: this.injector.get(DefaultRoutePageMetaResolver),\n              url: '',\n            };\n\n        const resolver = this.getResolver(route) ?? parent.resolver; // fallback to parent's resolver\n\n        const urlPart = this.getUrlPart(route);\n        const url = parent.url + (urlPart ? `/${urlPart}` : ''); // don't add slash for a route with path '', to avoid double slash ...//...\n\n        return results.concat({ route, resolver, url });\n      }, [])\n    ),\n    shareReplay({ bufferSize: 1, refCount: true })\n  );\n\n  /**\n   * Array of breadcrumbs defined for all the activated routes (from the root route to the leaf route).\n   * It emits on every completed routing navigation.\n   */\n  resolveBreadcrumbs(\n    options?: RoutingResolveBreadcrumbsOptions\n  ): Observable<BreadcrumbMeta[]> {\n    return this.routesWithExtras$.pipe(\n      map((routesWithExtras) =>\n        options?.includeCurrentRoute\n          ? routesWithExtras\n          : this.trimCurrentRoute(routesWithExtras)\n      ),\n      switchMap((routesWithExtras) =>\n        routesWithExtras.length\n          ? combineLatest(\n              routesWithExtras.map((routeWithExtras) =>\n                this.resolveRouteBreadcrumb(routeWithExtras)\n              )\n            )\n          : of([])\n      ),\n      map((breadcrumbArrays) => breadcrumbArrays.flat())\n    );\n  }\n\n  /**\n   * Returns the instance of the RoutePageMetaResolver configured for the given activated route.\n   * Returns null in case there the resolver can't be injected or is undefined.\n   *\n   * @param route route to resolve\n   */\n  protected getResolver(route: ActivatedRouteSnapshotWithPageMeta): any {\n    const pageMetaConfig = this.getPageMetaConfig(route);\n\n    if (typeof pageMetaConfig !== 'string' && pageMetaConfig?.resolver) {\n      return this.injector.get(pageMetaConfig.resolver, null);\n    }\n    return null;\n  }\n\n  /**\n   * Resolvers breadcrumb for a specific route\n   */\n  protected resolveRouteBreadcrumb({\n    route,\n    resolver,\n    url,\n  }: RouteWithExtras): Observable<BreadcrumbMeta[]> {\n    const breadcrumbResolver = resolver as RouteBreadcrumbResolver;\n\n    if (typeof breadcrumbResolver.resolveBreadcrumbs === 'function') {\n      return breadcrumbResolver.resolveBreadcrumbs({\n        route,\n        url,\n        pageMetaConfig: this.getPageMetaConfig(route),\n      });\n    }\n    return of([]);\n  }\n\n  /**\n   * By default in breadcrumbs list we don't want to show a link to the current page, so this function\n   * trims the last breadcrumb (the breadcrumb of the current route).\n   *\n   * This function also handles special case when the current route has a configured empty path ('' route).\n   * The '' routes are often a _technical_ routes to organize other routes, assign common guards for its children, etc.\n   * It shouldn't happen that '' route has a defined breadcrumb config.\n   *\n   * In that case, we trim not only the last route ('' route), but also its parent route with non-empty path\n   * (which likely defines the breadcrumb config).\n   */\n  private trimCurrentRoute(\n    routesWithExtras: RouteWithExtras[]\n  ): RouteWithExtras[] {\n    // If the last route is '', we trim:\n    // - the '' route\n    // - all parent '' routes (until we meet route with non-empty path)\n\n    let i = routesWithExtras.length - 1;\n    while (routesWithExtras[i]?.route?.url.length === 0 && i >= 0) {\n      i--;\n    }\n\n    // Finally we trim the last route (the one with non-empty path)\n    return routesWithExtras.slice(0, i);\n  }\n\n  /**\n   * Returns the URL path for the given activated route in a string format.\n   * (ActivatedRouteSnapshot#url contains an array of `UrlSegment`s, not a string)\n   */\n  private getUrlPart(route: ActivatedRouteSnapshot): string {\n    return route.url.map((urlSegment) => urlSegment.path).join('/');\n  }\n\n  /**\n   * Returns the breadcrumb config placed in the route's `data` configuration.\n   */\n  protected getPageMetaConfig(\n    route: ActivatedRouteSnapshotWithPageMeta\n  ): RoutePageMetaConfig {\n    // Note: we use `route.routeConfig.data` (not `route.data`) to save us from\n    // an edge case bug. In Angular, by design the `data` of ActivatedRoute is inherited\n    // from the parent route, if only the child has an empty path ''.\n    // But in any case we don't want the page meta configs to be inherited, so we\n    // read data from the original `routeConfig` which is static.\n    //\n    // Note: we may inherit the parent's page meta resolver in case we don't define it,\n    // but we don't want to inherit parent's page meta config!\n    return route?.routeConfig?.data?.cxPageMeta;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { combineLatest, defer, Observable } from 'rxjs';\nimport { filter, map, shareReplay } from 'rxjs/operators';\nimport { TranslationService } from '../../i18n/translation.service';\nimport { CmsService } from '../facade/cms.service';\nimport { BreadcrumbMeta, Page, PageRobotsMeta } from '../model/page.model';\nimport {\n  PageBreadcrumbResolver,\n  PageRobotsResolver,\n  PageTitleResolver,\n} from './page.resolvers';\nimport { RoutingPageMetaResolver } from './routing/routing-page-meta.resolver';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BasePageMetaResolver\n  implements PageTitleResolver, PageBreadcrumbResolver, PageRobotsResolver {\n  constructor(\n    protected cmsService: CmsService,\n    protected translation: TranslationService,\n    protected routingPageMetaResolver: RoutingPageMetaResolver\n  ) {}\n\n  /**\n   * Helper to provide access to the current CMS page\n   */\n  protected page$: Observable<Page> = defer(() =>\n    this.cmsService.getCurrentPage()\n  ).pipe(filter((p) => Boolean(p)));\n\n  protected title$: Observable<string> = this.page$.pipe(map((p) => p.title));\n  protected robots$: Observable<PageRobotsMeta[]> = this.page$.pipe(\n    map((page) => page.robots)\n  );\n\n  /**\n   * Breadcrumb for the home page.\n   */\n  protected homeBreadcrumb$: Observable<\n    BreadcrumbMeta[]\n  > = this.translation\n    .translate('common.home')\n    .pipe(map((label) => [{ label: label, link: '/' }] as BreadcrumbMeta[]));\n\n  /**\n   * All the resolved breadcrumbs (including those from Angular child routes).\n   */\n  protected breadcrumb$: Observable<BreadcrumbMeta[]> = combineLatest([\n    this.homeBreadcrumb$,\n    defer(() => this.routingPageMetaResolver.resolveBreadcrumbs()),\n  ]).pipe(\n    map((breadcrumbs) => breadcrumbs.flat()),\n    shareReplay({ bufferSize: 1, refCount: true })\n  );\n\n  resolveTitle(): Observable<string> {\n    return this.title$;\n  }\n\n  resolveBreadcrumbs(): Observable<BreadcrumbMeta[]> {\n    return this.breadcrumb$;\n  }\n\n  resolveRobots(): Observable<PageRobotsMeta[]> {\n    return this.robots$;\n  }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { ActiveCartService } from '../../cart/facade/active-cart.service';\nimport { PageRobotsMeta } from '../../cms/model/page.model';\nimport { BasePageMetaResolver } from '../../cms/page/base-page-meta.resolver';\nimport { PageMetaResolver } from '../../cms/page/page-meta.resolver';\nimport {\n  PageRobotsResolver,\n  PageTitleResolver,\n} from '../../cms/page/page.resolvers';\nimport { TranslationService } from '../../i18n/translation.service';\nimport { PageType } from '../../model/cms.model';\n\n/**\n * Resolves the page data for all Content Pages based on the `PageType.CONTENT_PAGE`\n * and the `MultiStepCheckoutSummaryPageTemplate`. If the checkout page matches this template,\n * the more generic `ContentPageMetaResolver` is overridden by this resolver.\n *\n * The page title and robots are resolved in this implementation only.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutPageMetaResolver\n  extends PageMetaResolver\n  implements PageTitleResolver, PageRobotsResolver {\n  protected cart$ = this.activeCartService.getActive();\n\n  /**\n   * @deprecated since 3.1, we'll use the BasePageMetaResolver in future versions\n   */\n  // TODO(#10467): Remove deprecated constructors\n  constructor(\n    translation: TranslationService,\n    activeCartService: ActiveCartService\n  );\n  constructor(\n    translation: TranslationService,\n    activeCartService: ActiveCartService,\n    // tslint:disable-next-line: unified-signatures\n    basePageMetaResolver?: BasePageMetaResolver\n  );\n  constructor(\n    protected translation: TranslationService,\n    protected activeCartService: ActiveCartService,\n    @Optional() protected basePageMetaResolver?: BasePageMetaResolver\n  ) {\n    super();\n    this.pageType = PageType.CONTENT_PAGE;\n    this.pageTemplate = 'MultiStepCheckoutSummaryPageTemplate';\n  }\n\n  /**\n   * Resolves the page title from the translation `pageMetaResolver.checkout.title`\n   */\n  resolveTitle(): Observable<string> {\n    return this.cart$.pipe(\n      switchMap((c) =>\n        this.translation.translate('pageMetaResolver.checkout.title', {\n          count: c.totalItems,\n        })\n      )\n    );\n  }\n\n  /**\n   * @Override Returns robots for the checkout pages, which default to NOINDEX/NOFOLLOW.\n   */\n  // TODO(#10467): resolve robots from `BasePageMetaResolver` instead\n  resolveRobots(): Observable<PageRobotsMeta[]> {\n    return of([PageRobotsMeta.NOFOLLOW, PageRobotsMeta.NOINDEX]);\n  }\n}\n","import { Observable } from 'rxjs';\nimport { Address, AddressValidation } from '../../../model/address.model';\n\nexport abstract class UserAddressAdapter {\n  abstract loadAll(userId: string): Observable<Address[]>;\n\n  abstract add(userId: string, address: Address): Observable<{}>;\n\n  abstract update(\n    userId: string,\n    addressId: string,\n    address: Address\n  ): Observable<{}>;\n\n  abstract verify(\n    userId: string,\n    address: Address\n  ): Observable<AddressValidation>;\n\n  abstract delete(userId: string, addressId: string): Observable<{}>;\n}\n","import { Injectable } from '@angular/core';\nimport { UserAddressAdapter } from './user-address.adapter';\nimport { Observable } from 'rxjs';\nimport { Address, AddressValidation } from '../../../model/address.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserAddressConnector {\n  constructor(protected adapter: UserAddressAdapter) {}\n\n  getAll(userId: string): Observable<Address[]> {\n    return this.adapter.loadAll(userId);\n  }\n\n  add(userId: string, address: Address): Observable<{}> {\n    return this.adapter.add(userId, address);\n  }\n\n  update(userId: string, addressId: string, address: Address): Observable<{}> {\n    return this.adapter.update(userId, addressId, address);\n  }\n\n  verify(userId: string, address: Address): Observable<AddressValidation> {\n    return this.adapter.verify(userId, address);\n  }\n\n  delete(userId: string, addressId: string): Observable<{}> {\n    return this.adapter.delete(userId, addressId);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, mergeMap } from 'rxjs/operators';\nimport { UserAddressConnector } from '../../../user/connectors/address/user-address.connector';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { CheckoutActions } from '../actions/index';\n\n@Injectable()\nexport class AddressVerificationEffect {\n  @Effect()\n  verifyAddress$: Observable<\n    CheckoutActions.VerifyAddressSuccess | CheckoutActions.VerifyAddressFail\n  > = this.actions$.pipe(\n    ofType<CheckoutActions.VerifyAddress>(CheckoutActions.VERIFY_ADDRESS),\n    map((action) => action.payload),\n    mergeMap((payload) =>\n      this.userAddressConnector.verify(payload.userId, payload.address).pipe(\n        map((data) => new CheckoutActions.VerifyAddressSuccess(data)),\n        catchError((error) =>\n          of(new CheckoutActions.VerifyAddressFail(normalizeHttpError(error)))\n        )\n      )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private userAddressConnector: UserAddressConnector\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { CheckoutPaymentConnector } from '../../connectors/payment/checkout-payment.connector';\nimport { CheckoutActions } from '../actions/index';\n\n@Injectable()\nexport class CardTypesEffects {\n  @Effect()\n  loadCardTypes$: Observable<\n    CheckoutActions.LoadCardTypesSuccess | CheckoutActions.LoadCardTypesFail\n  > = this.actions$.pipe(\n    ofType(CheckoutActions.LOAD_CARD_TYPES),\n    switchMap(() => {\n      return this.checkoutPaymentConnector.getCardTypes().pipe(\n        map((cardTypes) => new CheckoutActions.LoadCardTypesSuccess(cardTypes)),\n        catchError((error) =>\n          of(new CheckoutActions.LoadCardTypesFail(normalizeHttpError(error)))\n        )\n      );\n    })\n  );\n\n  constructor(\n    private actions$: Actions,\n    private checkoutPaymentConnector: CheckoutPaymentConnector\n  ) {}\n}\n","import { Action } from '@ngrx/store';\n\nexport const LOAD_BILLING_COUNTRIES = '[User] Load Billing Countries';\nexport const LOAD_BILLING_COUNTRIES_FAIL = '[User] Load Billing Countries Fail';\nexport const LOAD_BILLING_COUNTRIES_SUCCESS =\n  '[User] Load Billing Countries Success';\n\nexport class LoadBillingCountries implements Action {\n  readonly type = LOAD_BILLING_COUNTRIES;\n  constructor() {}\n}\n\nexport class LoadBillingCountriesFail implements Action {\n  readonly type = LOAD_BILLING_COUNTRIES_FAIL;\n  constructor(public payload: any) {}\n}\n\nexport class LoadBillingCountriesSuccess implements Action {\n  readonly type = LOAD_BILLING_COUNTRIES_SUCCESS;\n  constructor(public payload: any) {}\n}\n\nexport type BillingCountriesAction =\n  | LoadBillingCountries\n  | LoadBillingCountriesFail\n  | LoadBillingCountriesSuccess;\n","import { Action } from '@ngrx/store';\nimport { ConsignmentTracking } from '../../../model/index';\n\nexport const LOAD_CONSIGNMENT_TRACKING = '[User] Load Consignment Tracking';\nexport const LOAD_CONSIGNMENT_TRACKING_FAIL =\n  '[User] Load Consignment Tracking Fail';\nexport const LOAD_CONSIGNMENT_TRACKING_SUCCESS =\n  '[User] Load Consignment Tracking Success';\nexport const CLEAR_CONSIGNMENT_TRACKING = '[User] Clear Consignment Tracking';\n\nexport class LoadConsignmentTracking implements Action {\n  readonly type = LOAD_CONSIGNMENT_TRACKING;\n  constructor(\n    public payload: {\n      userId?: string;\n      orderCode: string;\n      consignmentCode: string;\n    }\n  ) {}\n}\n\nexport class LoadConsignmentTrackingFail implements Action {\n  readonly type = LOAD_CONSIGNMENT_TRACKING_FAIL;\n  constructor(public payload: any) {}\n}\n\nexport class LoadConsignmentTrackingSuccess implements Action {\n  readonly type = LOAD_CONSIGNMENT_TRACKING_SUCCESS;\n  constructor(public payload: ConsignmentTracking) {}\n}\n\nexport class ClearConsignmentTracking {\n  readonly type = CLEAR_CONSIGNMENT_TRACKING;\n  constructor() {}\n}\n\nexport type ConsignmentTrackingAction =\n  | LoadConsignmentTracking\n  | LoadConsignmentTrackingFail\n  | LoadConsignmentTrackingSuccess\n  | ClearConsignmentTracking;\n","import { Address, Country, Region } from '../../model/address.model';\nimport { PaymentDetails } from '../../model/cart.model';\nimport { ConsentTemplate } from '../../model/consent.model';\nimport { ConsignmentTracking } from '../../model/consignment-tracking.model';\nimport { CustomerCouponSearchResult } from '../../model/customer-coupon.model';\nimport { Title, User } from '../../model/misc.model';\nimport { NotificationPreference } from '../../model/notification-preference.model';\nimport {\n  Order,\n  OrderHistoryList,\n  ReturnRequest,\n  ReturnRequestList,\n} from '../../model/order.model';\nimport { ReplenishmentOrderList } from '../../model/replenishment-order.model';\nimport { CostCenter } from '../../model/org-unit.model';\nimport { ProductInterestSearchResult } from '../../model/product-interest.model';\nimport { ReplenishmentOrder } from '../../model/replenishment-order.model';\nimport { StateUtils } from '../../state/utils/index';\n\nexport const USER_FEATURE = 'user';\nexport const UPDATE_EMAIL_PROCESS_ID = 'updateEmail';\nexport const UPDATE_PASSWORD_PROCESS_ID = 'updatePassword';\nexport const UPDATE_USER_DETAILS_PROCESS_ID = 'updateUserDetails';\nexport const REGISTER_USER_PROCESS_ID = 'registerUser';\nexport const REMOVE_USER_PROCESS_ID = 'removeUser';\nexport const GIVE_CONSENT_PROCESS_ID = 'giveConsent';\nexport const WITHDRAW_CONSENT_PROCESS_ID = 'withdrawConsent';\nexport const UPDATE_NOTIFICATION_PREFERENCES_PROCESS_ID =\n  'updateNotificationPreferences';\nexport const ADD_PRODUCT_INTEREST_PROCESS_ID = 'addProductInterests';\nexport const REMOVE_PRODUCT_INTERESTS_PROCESS_ID = 'removeProductInterests';\nexport const CANCEL_ORDER_PROCESS_ID = 'cancelOrder';\nexport const CANCEL_RETURN_PROCESS_ID = 'cancelReturn';\nexport const CANCEL_REPLENISHMENT_ORDER_PROCESS_ID = 'cancelReplenishmentOrder';\n\nexport const USER_CONSENTS = '[User] User Consents';\nexport const USER_PAYMENT_METHODS = '[User] User Payment Methods';\nexport const USER_ORDERS = '[User] User Orders';\nexport const USER_ADDRESSES = '[User] User Addresses';\nexport const USER_RETURN_REQUESTS = '[User] Order Return Requests';\nexport const USER_RETURN_REQUEST_DETAILS = '[User] Return Request Details';\nexport const USER_ORDER_DETAILS = '[User] User Order Details';\nexport const USER_COST_CENTERS = '[User] User Cost Centers';\nexport const USER_REPLENISHMENT_ORDERS = '[User] User Replenishment Orders';\nexport const USER_REPLENISHMENT_ORDER_DETAILS =\n  '[User] User Replenishment Order Details';\nexport const REGIONS = '[User] Regions';\n\nexport const CUSTOMER_COUPONS = '[User] Customer Coupons';\nexport const SUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID = 'subscribeCustomerCoupon';\nexport const UNSUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID =\n  'unsubscribeCustomerCoupon';\nexport const CLAIM_CUSTOMER_COUPON_PROCESS_ID = 'claimCustomerCoupon';\nexport const NOTIFICATION_PREFERENCES = '[User] Notification Preferences';\nexport const PRODUCT_INTERESTS = '[User] Product Interests';\n\nexport interface StateWithUser {\n  [USER_FEATURE]: UserState;\n}\n\nexport interface UserState {\n  account: UserDetailsState;\n  addresses: StateUtils.LoaderState<Address[]>;\n  consents: StateUtils.LoaderState<ConsentTemplate[]>;\n  billingCountries: BillingCountriesState;\n  countries: DeliveryCountriesState;\n  payments: StateUtils.LoaderState<PaymentDetails[]>;\n  orders: StateUtils.LoaderState<OrderHistoryList>;\n  order: StateUtils.LoaderState<Order>;\n  replenishmentOrders: StateUtils.LoaderState<ReplenishmentOrderList>;\n  orderReturn: StateUtils.LoaderState<ReturnRequest>;\n  orderReturnList: StateUtils.LoaderState<ReturnRequestList>;\n  titles: TitlesState;\n  regions: StateUtils.LoaderState<RegionsState>;\n  resetPassword: boolean;\n  consignmentTracking: ConsignmentTrackingState;\n  customerCoupons: StateUtils.LoaderState<CustomerCouponSearchResult>;\n  notificationPreferences: StateUtils.LoaderState<NotificationPreference[]>;\n  productInterests: StateUtils.LoaderState<ProductInterestSearchResult>;\n  costCenters: StateUtils.LoaderState<CostCenter[]>;\n  replenishmentOrder: StateUtils.LoaderState<ReplenishmentOrder>;\n}\n\nexport interface RegionsState {\n  entities: Region[];\n  country: string;\n}\n\nexport interface BillingCountryEntities {\n  [key: string]: Country;\n}\n\nexport interface BillingCountriesState {\n  entities: BillingCountryEntities;\n}\n\nexport interface DeliveryCountryEntities {\n  [key: string]: Country;\n}\n\nexport interface DeliveryCountriesState {\n  entities: DeliveryCountryEntities;\n}\n\nexport interface TitleEntities {\n  [key: string]: Title;\n}\n\nexport interface TitlesState {\n  entities: TitleEntities;\n}\n\nexport interface UserDetailsState {\n  details: User;\n}\n\nexport interface ConsignmentTrackingState {\n  tracking?: ConsignmentTracking;\n}\n","import { MemoizedSelector, createFeatureSelector } from '@ngrx/store';\n\nimport { StateWithProcess, PROCESS_FEATURE } from '../process-state';\nimport { EntityLoaderState } from '../../../state/utils/entity-loader/entity-loader-state';\n\nexport function getProcessState<T>(): MemoizedSelector<\n  StateWithProcess<T>,\n  EntityLoaderState<T>\n> {\n  return createFeatureSelector<EntityLoaderState<T>>(PROCESS_FEATURE);\n}\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { StateUtils } from '../../../state/utils/index';\nimport { LoaderState } from '../../../state/utils/loader/loader-state';\nimport {\n  loaderErrorSelector,\n  loaderLoadingSelector,\n  loaderSuccessSelector,\n} from '../../../state/utils/loader/loader.selectors';\nimport { StateWithProcess } from '../process-state';\nimport { getProcessState } from './feature.selector';\n\nexport function getProcessStateFactory<T>(\n  processId: string\n): MemoizedSelector<StateWithProcess<T>, LoaderState<T>> {\n  return createSelector(getProcessState(), (entityState) =>\n    StateUtils.entityLoaderStateSelector(entityState, processId)\n  );\n}\n\nexport function getProcessLoadingFactory<T>(\n  processId: string\n): MemoizedSelector<StateWithProcess<T>, boolean> {\n  return createSelector(getProcessStateFactory(processId), (loaderState) =>\n    loaderLoadingSelector(loaderState)\n  );\n}\n\nexport function getProcessSuccessFactory<T>(\n  processId: string\n): MemoizedSelector<StateWithProcess<T>, boolean> {\n  return createSelector(getProcessStateFactory(processId), (loaderState) =>\n    loaderSuccessSelector(loaderState)\n  );\n}\n\nexport function getProcessErrorFactory<T>(\n  processId: string\n): MemoizedSelector<StateWithProcess<T>, boolean> {\n  return createSelector(getProcessStateFactory(processId), (loaderState) =>\n    loaderErrorSelector(loaderState)\n  );\n}\n","import {\n  CUSTOMER_COUPONS,\n  SUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID,\n  UNSUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID,\n  CLAIM_CUSTOMER_COUPON_PROCESS_ID,\n} from '../user-state';\nimport {\n  LoaderLoadAction,\n  LoaderFailAction,\n  LoaderSuccessAction,\n  LoaderResetAction,\n} from '../../../state/utils/loader/loader.action';\nimport {\n  CustomerCouponSearchResult,\n  CustomerCouponNotification,\n  CustomerCoupon2Customer,\n} from '../../../model/customer-coupon.model';\nimport {\n  EntityFailAction,\n  EntityLoadAction,\n  EntityLoaderResetAction,\n  EntitySuccessAction,\n} from '../../../state/utils/entity-loader/entity-loader.action';\nimport { PROCESS_FEATURE } from '../../../process/store';\n\nexport const LOAD_CUSTOMER_COUPONS = '[User] Load Customer Coupons';\nexport const LOAD_CUSTOMER_COUPONS_FAIL = '[User] Load Customer Coupons Fail';\nexport const LOAD_CUSTOMER_COUPONS_SUCCESS =\n  '[User] Load Customer Coupons Success';\nexport const RESET_LOAD_CUSTOMER_COUPONS = '[User] Reset Load Customer Coupons';\n\nexport const SUBSCRIBE_CUSTOMER_COUPON =\n  '[User] Subscribe Customer Notification Coupon';\nexport const SUBSCRIBE_CUSTOMER_COUPON_FAIL =\n  '[User] Subscribe Customer Coupon Notification Fail';\nexport const SUBSCRIBE_CUSTOMER_COUPON_SUCCESS =\n  '[User] Subscribe Customer Coupon Notification Success';\nexport const RESET_SUBSCRIBE_CUSTOMER_COUPON_PROCESS =\n  '[User] Reset Subscribe Customer Coupon Process';\n\nexport const UNSUBSCRIBE_CUSTOMER_COUPON =\n  '[User] Unsubscribe Customer Notification Coupon';\nexport const UNSUBSCRIBE_CUSTOMER_COUPON_FAIL =\n  '[User] Unsubscribe Customer Coupon Notification Fail';\nexport const UNSUBSCRIBE_CUSTOMER_COUPON_SUCCESS =\n  '[User] Unsubscribe Customer Coupon Notification Success';\nexport const RESET_UNSUBSCRIBE_CUSTOMER_COUPON_PROCESS =\n  '[User] Reset Unsubscribe Customer Coupon Process';\n\nexport const CLAIM_CUSTOMER_COUPON = '[User] Claim Customer';\nexport const CLAIM_CUSTOMER_COUPON_FAIL = '[User] Claim Customer Fail';\nexport const CLAIM_CUSTOMER_COUPON_SUCCESS = '[User] Claim Customer Success';\n\nexport class LoadCustomerCoupons extends LoaderLoadAction {\n  readonly type = LOAD_CUSTOMER_COUPONS;\n  constructor(\n    public payload: {\n      userId: string;\n      pageSize: number;\n      currentPage?: number;\n      sort?: string;\n    }\n  ) {\n    super(CUSTOMER_COUPONS);\n  }\n}\n\nexport class LoadCustomerCouponsFail extends LoaderFailAction {\n  readonly type = LOAD_CUSTOMER_COUPONS_FAIL;\n  constructor(public payload: any) {\n    super(CUSTOMER_COUPONS, payload);\n  }\n}\n\nexport class LoadCustomerCouponsSuccess extends LoaderSuccessAction {\n  readonly type = LOAD_CUSTOMER_COUPONS_SUCCESS;\n  constructor(public payload: CustomerCouponSearchResult) {\n    super(CUSTOMER_COUPONS);\n  }\n}\n\nexport class ResetLoadCustomerCoupons extends LoaderResetAction {\n  readonly type = RESET_LOAD_CUSTOMER_COUPONS;\n  constructor() {\n    super(CUSTOMER_COUPONS);\n  }\n}\n\n// Subscribe coupon notification actions\nexport class SubscribeCustomerCoupon extends EntityLoadAction {\n  readonly type = SUBSCRIBE_CUSTOMER_COUPON;\n  constructor(\n    public payload: {\n      userId: string;\n      couponCode: string;\n    }\n  ) {\n    super(PROCESS_FEATURE, SUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID);\n  }\n}\n\nexport class SubscribeCustomerCouponFail extends EntityFailAction {\n  readonly type = SUBSCRIBE_CUSTOMER_COUPON_FAIL;\n  constructor(public payload: any) {\n    super(PROCESS_FEATURE, SUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID, payload);\n  }\n}\n\nexport class SubscribeCustomerCouponSuccess extends EntitySuccessAction {\n  readonly type = SUBSCRIBE_CUSTOMER_COUPON_SUCCESS;\n  constructor(public payload: CustomerCouponNotification) {\n    super(PROCESS_FEATURE, SUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID, payload);\n  }\n}\n\nexport class ResetSubscribeCustomerCouponProcess extends EntityLoaderResetAction {\n  readonly type = RESET_SUBSCRIBE_CUSTOMER_COUPON_PROCESS;\n  constructor() {\n    super(PROCESS_FEATURE, SUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID);\n  }\n}\n\nexport class UnsubscribeCustomerCoupon extends EntityLoadAction {\n  readonly type = UNSUBSCRIBE_CUSTOMER_COUPON;\n  constructor(\n    public payload: {\n      userId: string;\n      couponCode: string;\n    }\n  ) {\n    super(PROCESS_FEATURE, UNSUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID);\n  }\n}\n\nexport class UnsubscribeCustomerCouponFail extends EntityFailAction {\n  readonly type = UNSUBSCRIBE_CUSTOMER_COUPON_FAIL;\n  constructor(public payload: any) {\n    super(PROCESS_FEATURE, UNSUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID, payload);\n  }\n}\n\nexport class UnsubscribeCustomerCouponSuccess extends EntitySuccessAction {\n  readonly type = UNSUBSCRIBE_CUSTOMER_COUPON_SUCCESS;\n  constructor(public payload: any) {\n    super(PROCESS_FEATURE, UNSUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID, payload);\n  }\n}\n\nexport class ResetUnsubscribeCustomerCouponProcess extends EntityLoaderResetAction {\n  readonly type = RESET_UNSUBSCRIBE_CUSTOMER_COUPON_PROCESS;\n  constructor() {\n    super(PROCESS_FEATURE, UNSUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID);\n  }\n}\n\nexport class ClaimCustomerCoupon extends EntityLoadAction {\n  readonly type = CLAIM_CUSTOMER_COUPON;\n  constructor(\n    public payload: {\n      userId: string;\n      couponCode;\n    }\n  ) {\n    super(PROCESS_FEATURE, CLAIM_CUSTOMER_COUPON_PROCESS_ID);\n  }\n}\n\nexport class ClaimCustomerCouponFail extends EntityFailAction {\n  readonly type = CLAIM_CUSTOMER_COUPON_FAIL;\n  constructor(public payload: any) {\n    super(PROCESS_FEATURE, CLAIM_CUSTOMER_COUPON_PROCESS_ID, payload);\n  }\n}\n\nexport class ClaimCustomerCouponSuccess extends EntitySuccessAction {\n  readonly type = CLAIM_CUSTOMER_COUPON_SUCCESS;\n  constructor(public payload: CustomerCoupon2Customer) {\n    super(PROCESS_FEATURE, CLAIM_CUSTOMER_COUPON_PROCESS_ID, payload);\n  }\n}\n\n// action types\nexport type CustomerCouponAction =\n  | LoadCustomerCoupons\n  | LoadCustomerCouponsFail\n  | LoadCustomerCouponsSuccess\n  | ResetLoadCustomerCoupons\n  | SubscribeCustomerCoupon\n  | SubscribeCustomerCouponFail\n  | SubscribeCustomerCouponSuccess\n  | ResetSubscribeCustomerCouponProcess\n  | UnsubscribeCustomerCoupon\n  | UnsubscribeCustomerCouponFail\n  | UnsubscribeCustomerCouponSuccess\n  | ResetUnsubscribeCustomerCouponProcess\n  | ClaimCustomerCoupon\n  | ClaimCustomerCouponFail\n  | ClaimCustomerCouponSuccess;\n","import { Action } from '@ngrx/store';\nimport { Country } from '../../../model/address.model';\n\nexport const LOAD_DELIVERY_COUNTRIES = '[User] Load Delivery Countries';\nexport const LOAD_DELIVERY_COUNTRIES_FAIL =\n  '[User] Load Delivery Countries Fail';\nexport const LOAD_DELIVERY_COUNTRIES_SUCCESS =\n  '[User] Load Delivery Countries Success';\n\nexport class LoadDeliveryCountries implements Action {\n  readonly type = LOAD_DELIVERY_COUNTRIES;\n  constructor() {}\n}\n\nexport class LoadDeliveryCountriesFail implements Action {\n  readonly type = LOAD_DELIVERY_COUNTRIES_FAIL;\n  constructor(public payload: any) {}\n}\n\nexport class LoadDeliveryCountriesSuccess implements Action {\n  readonly type = LOAD_DELIVERY_COUNTRIES_SUCCESS;\n  constructor(public payload: Country[]) {}\n}\n\nexport type DeliveryCountriesAction =\n  | LoadDeliveryCountries\n  | LoadDeliveryCountriesFail\n  | LoadDeliveryCountriesSuccess;\n","import { Action } from '@ngrx/store';\n\nexport const FORGOT_PASSWORD_EMAIL_REQUEST =\n  '[User] Forgot Password Email Request';\nexport const FORGOT_PASSWORD_EMAIL_REQUEST_SUCCESS =\n  '[User] Forgot Password Email Request Success';\nexport const FORGOT_PASSWORD_EMAIL_REQUEST_FAIL =\n  '[User] Forgot Password Email Request Fail';\n\nexport class ForgotPasswordEmailRequest implements Action {\n  readonly type = FORGOT_PASSWORD_EMAIL_REQUEST;\n  constructor(public payload: string) {}\n}\n\nexport class ForgotPasswordEmailRequestFail implements Action {\n  readonly type = FORGOT_PASSWORD_EMAIL_REQUEST_FAIL;\n  constructor(public payload: any) {}\n}\n\nexport class ForgotPasswordEmailRequestSuccess implements Action {\n  readonly type = FORGOT_PASSWORD_EMAIL_REQUEST_SUCCESS;\n}\n\nexport type ForgotPasswordEmailRequestAction =\n  | ForgotPasswordEmailRequest\n  | ForgotPasswordEmailRequestFail\n  | ForgotPasswordEmailRequestSuccess;\n","import { StateUtils } from '../../../state/utils/index';\nimport { PROCESS_FEATURE } from '../../../process/store/process-state';\nimport {\n  EntityFailAction,\n  EntityLoadAction,\n  EntityLoaderResetAction,\n  EntitySuccessAction,\n} from '../../../state/utils/entity-loader/entity-loader.action';\nimport {\n  UPDATE_NOTIFICATION_PREFERENCES_PROCESS_ID,\n  NOTIFICATION_PREFERENCES,\n} from '../user-state';\nimport { NotificationPreference } from '../../../model/notification-preference.model';\n\nexport const LOAD_NOTIFICATION_PREFERENCES =\n  '[User] Load Notification Preferences';\nexport const LOAD_NOTIFICATION_PREFERENCES_FAIL =\n  '[User] Load Notification Preferences Fail';\nexport const LOAD_NOTIFICATION_PREFERENCES_SUCCESS =\n  '[User] Load Notification Preferences Success';\nexport const UPDATE_NOTIFICATION_PREFERENCES =\n  '[User] Update Notification Preferences';\nexport const UPDATE_NOTIFICATION_PREFERENCES_FAIL =\n  '[User] Update Notification Preferences Fail';\nexport const UPDATE_NOTIFICATION_PREFERENCES_SUCCESS =\n  '[User] Update Notification Preferences Success';\nexport const RESET_NOTIFICATION_PREFERENCES =\n  '[User] Reset Notification Preferences';\nexport const CLEAR_NOTIFICATION_PREFERENCES =\n  '[User] Clear Notification Preferences';\n\nexport class LoadNotificationPreferences extends StateUtils.LoaderLoadAction {\n  readonly type = LOAD_NOTIFICATION_PREFERENCES;\n  constructor(public payload: string) {\n    super(NOTIFICATION_PREFERENCES);\n  }\n}\n\nexport class LoadNotificationPreferencesFail extends StateUtils.LoaderFailAction {\n  readonly type = LOAD_NOTIFICATION_PREFERENCES_FAIL;\n  constructor(public payload: any) {\n    super(NOTIFICATION_PREFERENCES, payload);\n  }\n}\n\nexport class LoadNotificationPreferencesSuccess extends StateUtils.LoaderSuccessAction {\n  readonly type = LOAD_NOTIFICATION_PREFERENCES_SUCCESS;\n  constructor(public payload: NotificationPreference[]) {\n    super(NOTIFICATION_PREFERENCES);\n  }\n}\n\nexport class UpdateNotificationPreferences extends EntityLoadAction {\n  readonly type = UPDATE_NOTIFICATION_PREFERENCES;\n  constructor(\n    public payload: { userId: string; preferences: NotificationPreference[] }\n  ) {\n    super(PROCESS_FEATURE, UPDATE_NOTIFICATION_PREFERENCES_PROCESS_ID);\n  }\n}\n\nexport class UpdateNotificationPreferencesFail extends EntityFailAction {\n  readonly type = UPDATE_NOTIFICATION_PREFERENCES_FAIL;\n  constructor(public payload: any) {\n    super(PROCESS_FEATURE, UPDATE_NOTIFICATION_PREFERENCES_PROCESS_ID, payload);\n  }\n}\n\nexport class UpdateNotificationPreferencesSuccess extends EntitySuccessAction {\n  readonly type = UPDATE_NOTIFICATION_PREFERENCES_SUCCESS;\n  constructor(public payload: NotificationPreference[]) {\n    super(PROCESS_FEATURE, UPDATE_NOTIFICATION_PREFERENCES_PROCESS_ID);\n  }\n}\n\nexport class ResetNotificationPreferences extends EntityLoaderResetAction {\n  readonly type = RESET_NOTIFICATION_PREFERENCES;\n  constructor() {\n    super(PROCESS_FEATURE, UPDATE_NOTIFICATION_PREFERENCES_PROCESS_ID);\n  }\n}\n\nexport class ClearNotificationPreferences extends StateUtils.LoaderResetAction {\n  readonly type = CLEAR_NOTIFICATION_PREFERENCES;\n  constructor() {\n    super(NOTIFICATION_PREFERENCES);\n  }\n}\n\nexport type NotificationPreferenceAction =\n  | LoadNotificationPreferences\n  | LoadNotificationPreferencesFail\n  | LoadNotificationPreferencesSuccess\n  | UpdateNotificationPreferences\n  | UpdateNotificationPreferencesFail\n  | UpdateNotificationPreferencesSuccess\n  | ResetNotificationPreferences\n  | ClearNotificationPreferences;\n","import {\n  Order,\n  CancellationRequestEntryInputList,\n} from '../../../model/order.model';\nimport {\n  LoaderFailAction,\n  LoaderLoadAction,\n  LoaderSuccessAction,\n  LoaderResetAction,\n} from '../../../state/utils/loader/loader.action';\nimport { PROCESS_FEATURE } from '../../../process/store/process-state';\nimport { StateUtils } from '../../../state/utils/index';\nimport { USER_ORDER_DETAILS, CANCEL_ORDER_PROCESS_ID } from '../user-state';\n\nexport const LOAD_ORDER_DETAILS = '[User] Load Order Details';\nexport const LOAD_ORDER_DETAILS_FAIL = '[User] Load Order Details Fail';\nexport const LOAD_ORDER_DETAILS_SUCCESS = '[User] Load Order Details Success';\nexport const CLEAR_ORDER_DETAILS = '[User] Clear Order Details';\n\nexport const CANCEL_ORDER = '[User] Cancel Order';\nexport const CANCEL_ORDER_FAIL = '[User] Cancel Order Fail';\nexport const CANCEL_ORDER_SUCCESS = '[User] Cancel Order Success';\nexport const RESET_CANCEL_ORDER_PROCESS = '[User] Reset Cancel Order Process';\n\nexport class LoadOrderDetails extends LoaderLoadAction {\n  readonly type = LOAD_ORDER_DETAILS;\n  constructor(\n    public payload: {\n      userId: string;\n      orderCode: string;\n    }\n  ) {\n    super(USER_ORDER_DETAILS);\n  }\n}\n\nexport class LoadOrderDetailsFail extends LoaderFailAction {\n  readonly type = LOAD_ORDER_DETAILS_FAIL;\n  constructor(public payload: any) {\n    super(USER_ORDER_DETAILS, payload);\n  }\n}\n\nexport class LoadOrderDetailsSuccess extends LoaderSuccessAction {\n  readonly type = LOAD_ORDER_DETAILS_SUCCESS;\n  constructor(public payload: Order) {\n    super(USER_ORDER_DETAILS);\n  }\n}\n\nexport class ClearOrderDetails extends LoaderResetAction {\n  readonly type = CLEAR_ORDER_DETAILS;\n  constructor() {\n    super(USER_ORDER_DETAILS);\n  }\n}\n\nexport class CancelOrder extends StateUtils.EntityLoadAction {\n  readonly type = CANCEL_ORDER;\n  constructor(\n    public payload: {\n      userId: string;\n      orderCode: string;\n      cancelRequestInput: CancellationRequestEntryInputList;\n    }\n  ) {\n    super(PROCESS_FEATURE, CANCEL_ORDER_PROCESS_ID);\n  }\n}\n\nexport class CancelOrderFail extends StateUtils.EntityFailAction {\n  readonly type = CANCEL_ORDER_FAIL;\n  constructor(public payload: any) {\n    super(PROCESS_FEATURE, CANCEL_ORDER_PROCESS_ID, payload);\n  }\n}\n\nexport class CancelOrderSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = CANCEL_ORDER_SUCCESS;\n  constructor() {\n    super(PROCESS_FEATURE, CANCEL_ORDER_PROCESS_ID);\n  }\n}\n\nexport class ResetCancelOrderProcess extends StateUtils.EntityLoaderResetAction {\n  readonly type = RESET_CANCEL_ORDER_PROCESS;\n  constructor() {\n    super(PROCESS_FEATURE, CANCEL_ORDER_PROCESS_ID);\n  }\n}\n\nexport type OrderDetailsAction =\n  | LoadOrderDetails\n  | LoadOrderDetailsFail\n  | LoadOrderDetailsSuccess\n  | ClearOrderDetails\n  | CancelOrder\n  | CancelOrderFail\n  | CancelOrderSuccess;\n","import {\n  ReturnRequest,\n  ReturnRequestEntryInputList,\n  ReturnRequestList,\n  ReturnRequestModification,\n} from '../../../model/order.model';\nimport {\n  USER_RETURN_REQUESTS,\n  USER_RETURN_REQUEST_DETAILS,\n  CANCEL_RETURN_PROCESS_ID,\n} from '../user-state';\nimport {\n  LoaderFailAction,\n  LoaderLoadAction,\n  LoaderSuccessAction,\n  LoaderResetAction,\n} from '../../../state/utils/loader/loader.action';\nimport { StateUtils } from '../../../state/utils/index';\nimport { PROCESS_FEATURE } from '../../../process/store/process-state';\n\nexport const CREATE_ORDER_RETURN_REQUEST = '[User] Create Order Return Request';\nexport const CREATE_ORDER_RETURN_REQUEST_FAIL =\n  '[User] Create Order Return Request Fail';\nexport const CREATE_ORDER_RETURN_REQUEST_SUCCESS =\n  '[User] Create Order Return Request Success';\n\nexport const LOAD_ORDER_RETURN_REQUEST =\n  '[User] Load Order Return Request details';\nexport const LOAD_ORDER_RETURN_REQUEST_FAIL =\n  '[User] Load Order Return Request details Fail';\nexport const LOAD_ORDER_RETURN_REQUEST_SUCCESS =\n  '[User] Load Order Return Request details Success';\n\nexport const CANCEL_ORDER_RETURN_REQUEST = '[User] Cancel Order Return Request';\nexport const CANCEL_ORDER_RETURN_REQUEST_FAIL =\n  '[User] Cancel Order Return Request Fail';\nexport const CANCEL_ORDER_RETURN_REQUEST_SUCCESS =\n  '[User] Cancel Order Return Request Success';\n\nexport const LOAD_ORDER_RETURN_REQUEST_LIST =\n  '[User] Load User Order Return Request List';\nexport const LOAD_ORDER_RETURN_REQUEST_LIST_FAIL =\n  '[User] Load User Order Return Request List Fail';\nexport const LOAD_ORDER_RETURN_REQUEST_LIST_SUCCESS =\n  '[User] Load User Order Return Request List Success';\n\nexport const CLEAR_ORDER_RETURN_REQUEST =\n  '[User] Clear Order Return Request Details';\nexport const CLEAR_ORDER_RETURN_REQUEST_LIST =\n  '[User] Clear Order Return Request List';\nexport const RESET_CANCEL_RETURN_PROCESS =\n  '[User] Reset Cancel Return Request Process';\n\nexport class CreateOrderReturnRequest extends LoaderLoadAction {\n  readonly type = CREATE_ORDER_RETURN_REQUEST;\n  constructor(\n    public payload: {\n      userId: string;\n      returnRequestInput: ReturnRequestEntryInputList;\n    }\n  ) {\n    super(USER_RETURN_REQUEST_DETAILS);\n  }\n}\n\nexport class CreateOrderReturnRequestFail extends LoaderFailAction {\n  readonly type = CREATE_ORDER_RETURN_REQUEST_FAIL;\n  constructor(public payload: any) {\n    super(USER_RETURN_REQUEST_DETAILS, payload);\n  }\n}\n\nexport class CreateOrderReturnRequestSuccess extends LoaderSuccessAction {\n  readonly type = CREATE_ORDER_RETURN_REQUEST_SUCCESS;\n  constructor(public payload: ReturnRequest) {\n    super(USER_RETURN_REQUEST_DETAILS);\n  }\n}\n\nexport class LoadOrderReturnRequest extends LoaderLoadAction {\n  readonly type = LOAD_ORDER_RETURN_REQUEST;\n  constructor(\n    public payload: {\n      userId: string;\n      returnRequestCode: string;\n    }\n  ) {\n    super(USER_RETURN_REQUEST_DETAILS);\n  }\n}\n\nexport class LoadOrderReturnRequestFail extends LoaderFailAction {\n  readonly type = LOAD_ORDER_RETURN_REQUEST_FAIL;\n  constructor(public payload: any) {\n    super(USER_RETURN_REQUEST_DETAILS, payload);\n  }\n}\n\nexport class LoadOrderReturnRequestSuccess extends LoaderSuccessAction {\n  readonly type = LOAD_ORDER_RETURN_REQUEST_SUCCESS;\n  constructor(public payload: ReturnRequest) {\n    super(USER_RETURN_REQUEST_DETAILS);\n  }\n}\n\nexport class CancelOrderReturnRequest extends StateUtils.EntityLoadAction {\n  readonly type = CANCEL_ORDER_RETURN_REQUEST;\n  constructor(\n    public payload: {\n      userId: string;\n      returnRequestCode: string;\n      returnRequestModification: ReturnRequestModification;\n    }\n  ) {\n    super(PROCESS_FEATURE, CANCEL_RETURN_PROCESS_ID);\n  }\n}\n\nexport class CancelOrderReturnRequestFail extends StateUtils.EntityFailAction {\n  readonly type = CANCEL_ORDER_RETURN_REQUEST_FAIL;\n  constructor(public payload: any) {\n    super(PROCESS_FEATURE, CANCEL_RETURN_PROCESS_ID, payload);\n  }\n}\n\nexport class CancelOrderReturnRequestSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = CANCEL_ORDER_RETURN_REQUEST_SUCCESS;\n  constructor() {\n    super(PROCESS_FEATURE, CANCEL_RETURN_PROCESS_ID);\n  }\n}\n\nexport class LoadOrderReturnRequestList extends LoaderLoadAction {\n  readonly type = LOAD_ORDER_RETURN_REQUEST_LIST;\n  constructor(\n    public payload: {\n      userId: string;\n      pageSize?: number;\n      currentPage?: number;\n      sort?: string;\n    }\n  ) {\n    super(USER_RETURN_REQUESTS);\n  }\n}\n\nexport class LoadOrderReturnRequestListFail extends LoaderFailAction {\n  readonly type = LOAD_ORDER_RETURN_REQUEST_LIST_FAIL;\n  constructor(public payload: any) {\n    super(USER_RETURN_REQUESTS, payload);\n  }\n}\n\nexport class LoadOrderReturnRequestListSuccess extends LoaderSuccessAction {\n  readonly type = LOAD_ORDER_RETURN_REQUEST_LIST_SUCCESS;\n  constructor(public payload: ReturnRequestList) {\n    super(USER_RETURN_REQUESTS);\n  }\n}\n\nexport class ClearOrderReturnRequest extends LoaderResetAction {\n  readonly type = CLEAR_ORDER_RETURN_REQUEST;\n  constructor() {\n    super(USER_RETURN_REQUEST_DETAILS);\n  }\n}\n\nexport class ClearOrderReturnRequestList extends LoaderResetAction {\n  readonly type = CLEAR_ORDER_RETURN_REQUEST_LIST;\n  constructor() {\n    super(USER_RETURN_REQUESTS);\n  }\n}\n\nexport class ResetCancelReturnProcess extends StateUtils.EntityLoaderResetAction {\n  readonly type = RESET_CANCEL_RETURN_PROCESS;\n  constructor() {\n    super(PROCESS_FEATURE, CANCEL_RETURN_PROCESS_ID);\n  }\n}\n\nexport type OrderReturnRequestAction =\n  | CreateOrderReturnRequest\n  | CreateOrderReturnRequestFail\n  | CreateOrderReturnRequestSuccess\n  | LoadOrderReturnRequest\n  | LoadOrderReturnRequestFail\n  | LoadOrderReturnRequestSuccess\n  | CancelOrderReturnRequest\n  | CancelOrderReturnRequestFail\n  | CancelOrderReturnRequestSuccess\n  | LoadOrderReturnRequestList\n  | LoadOrderReturnRequestListFail\n  | LoadOrderReturnRequestListSuccess\n  | ClearOrderReturnRequest\n  | ClearOrderReturnRequestList\n  | ResetCancelReturnProcess;\n","import { PaymentDetails } from '../../../model/cart.model';\nimport { StateUtils } from '../../../state/utils/index';\nimport { USER_PAYMENT_METHODS } from '../user-state';\n\nexport const LOAD_USER_PAYMENT_METHODS = '[User] Load User Payment Methods';\nexport const LOAD_USER_PAYMENT_METHODS_FAIL =\n  '[User] Load User Payment Methods Fail';\nexport const LOAD_USER_PAYMENT_METHODS_SUCCESS =\n  '[User] Load User Payment Methods Success';\n\nexport const SET_DEFAULT_USER_PAYMENT_METHOD =\n  '[User] Set Default User Payment Method';\nexport const SET_DEFAULT_USER_PAYMENT_METHOD_FAIL =\n  '[User] Set Default User Payment Method Fail';\nexport const SET_DEFAULT_USER_PAYMENT_METHOD_SUCCESS =\n  '[User] Set Default User Payment Method Success';\n\nexport const DELETE_USER_PAYMENT_METHOD = '[User] Delete User Payment Method';\nexport const DELETE_USER_PAYMENT_METHOD_FAIL =\n  '[User] Delete User Payment Method Fail';\nexport const DELETE_USER_PAYMENT_METHOD_SUCCESS =\n  '[User] Delete User  Payment Method Success';\n\nexport class LoadUserPaymentMethods extends StateUtils.LoaderLoadAction {\n  readonly type = LOAD_USER_PAYMENT_METHODS;\n  constructor(public payload: string) {\n    super(USER_PAYMENT_METHODS);\n  }\n}\n\nexport class LoadUserPaymentMethodsFail extends StateUtils.LoaderFailAction {\n  readonly type = LOAD_USER_PAYMENT_METHODS_FAIL;\n  constructor(public payload: any) {\n    super(USER_PAYMENT_METHODS, payload);\n  }\n}\n\nexport class LoadUserPaymentMethodsSuccess extends StateUtils.LoaderSuccessAction {\n  readonly type = LOAD_USER_PAYMENT_METHODS_SUCCESS;\n  constructor(public payload: PaymentDetails[]) {\n    super(USER_PAYMENT_METHODS);\n  }\n}\n\nexport class SetDefaultUserPaymentMethod extends StateUtils.LoaderLoadAction {\n  readonly type = SET_DEFAULT_USER_PAYMENT_METHOD;\n  constructor(public payload: any) {\n    super(USER_PAYMENT_METHODS);\n  }\n}\n\nexport class SetDefaultUserPaymentMethodFail extends StateUtils.LoaderFailAction {\n  readonly type = SET_DEFAULT_USER_PAYMENT_METHOD_FAIL;\n  constructor(public payload: any) {\n    super(USER_PAYMENT_METHODS, payload);\n  }\n}\n\nexport class SetDefaultUserPaymentMethodSuccess extends StateUtils.LoaderSuccessAction {\n  readonly type = SET_DEFAULT_USER_PAYMENT_METHOD_SUCCESS;\n  constructor(public payload: any) {\n    super(USER_PAYMENT_METHODS);\n  }\n}\n\nexport class DeleteUserPaymentMethod extends StateUtils.LoaderLoadAction {\n  readonly type = DELETE_USER_PAYMENT_METHOD;\n  constructor(public payload: any) {\n    super(USER_PAYMENT_METHODS);\n  }\n}\n\nexport class DeleteUserPaymentMethodFail extends StateUtils.LoaderFailAction {\n  readonly type = DELETE_USER_PAYMENT_METHOD_FAIL;\n  constructor(public payload: any) {\n    super(USER_PAYMENT_METHODS, payload);\n  }\n}\n\nexport class DeleteUserPaymentMethodSuccess extends StateUtils.LoaderSuccessAction {\n  readonly type = DELETE_USER_PAYMENT_METHOD_SUCCESS;\n  constructor(public payload: any) {\n    super(USER_PAYMENT_METHODS);\n  }\n}\n\n// action types\nexport type UserPaymentMethodsAction =\n  | LoadUserPaymentMethods\n  | LoadUserPaymentMethodsFail\n  | LoadUserPaymentMethodsSuccess\n  | SetDefaultUserPaymentMethod\n  | SetDefaultUserPaymentMethodFail\n  | SetDefaultUserPaymentMethodSuccess\n  | DeleteUserPaymentMethod\n  | DeleteUserPaymentMethodFail\n  | DeleteUserPaymentMethodSuccess;\n","import {\n  PRODUCT_INTERESTS,\n  REMOVE_PRODUCT_INTERESTS_PROCESS_ID,\n  ADD_PRODUCT_INTEREST_PROCESS_ID,\n} from '../user-state';\nimport {\n  ProductInterestSearchResult,\n  ProductInterestEntryRelation,\n  NotificationType,\n} from '../../../model/product-interest.model';\nimport { PROCESS_FEATURE } from '../../../process/store/process-state';\nimport {\n  LoaderLoadAction,\n  LoaderFailAction,\n  LoaderSuccessAction,\n  LoaderResetAction,\n} from '../../../state/utils/loader/loader.action';\nimport {\n  EntityFailAction,\n  EntityLoadAction,\n  EntitySuccessAction,\n  EntityLoaderResetAction,\n} from '../../../state/utils/entity-loader/entity-loader.action';\n\nexport const LOAD_PRODUCT_INTERESTS = 'Load Product Interests';\nexport const LOAD_PRODUCT_INTERESTS_FAIL = 'Load Product Interests Fail';\nexport const LOAD_PRODUCT_INTERESTS_SUCCESS = 'Load Product Interests Success';\n\nexport const REMOVE_PRODUCT_INTEREST = 'Remove Product Interest';\nexport const REMOVE_PRODUCT_INTEREST_SUCCESS =\n  'Remove Product Interest Success';\nexport const REMOVE_PRODUCT_INTEREST_FAIL = 'Remove Product Interest Fail';\n\nexport const ADD_PRODUCT_INTEREST = 'Add Product Interest';\nexport const ADD_PRODUCT_INTEREST_FAIL = 'Add Product Interest Fail';\nexport const ADD_PRODUCT_INTEREST_SUCCESS = 'Add Product Interest Success';\n\nexport const ADD_PRODUCT_INTEREST_RESET = 'Add Product Interest Reset';\nexport const REMOVE_PRODUCT_INTEREST_RESET = 'Remove Product Interest Reset';\n\nexport const CLEAR_PRODUCT_INTERESTS = 'Clear Product Interests';\n\nexport class LoadProductInterests extends LoaderLoadAction {\n  readonly type = LOAD_PRODUCT_INTERESTS;\n  constructor(\n    public payload: {\n      userId: string;\n      pageSize?: number;\n      currentPage?: number;\n      sort?: string;\n      productCode?: string;\n      notificationType?: NotificationType;\n    }\n  ) {\n    super(PRODUCT_INTERESTS);\n  }\n}\n\nexport class LoadProductInterestsFail extends LoaderFailAction {\n  readonly type = LOAD_PRODUCT_INTERESTS_FAIL;\n  constructor(public payload: any) {\n    super(PRODUCT_INTERESTS, payload);\n  }\n}\n\nexport class LoadProductInterestsSuccess extends LoaderSuccessAction {\n  readonly type = LOAD_PRODUCT_INTERESTS_SUCCESS;\n  constructor(public payload: ProductInterestSearchResult) {\n    super(PRODUCT_INTERESTS);\n  }\n}\n\nexport class RemoveProductInterest extends EntityLoadAction {\n  readonly type = REMOVE_PRODUCT_INTEREST;\n  constructor(\n    public payload: {\n      userId: string;\n      item: ProductInterestEntryRelation;\n      singleDelete?: boolean;\n    }\n  ) {\n    super(PROCESS_FEATURE, REMOVE_PRODUCT_INTERESTS_PROCESS_ID);\n  }\n}\n\nexport class RemoveProductInterestSuccess extends EntitySuccessAction {\n  readonly type = REMOVE_PRODUCT_INTEREST_SUCCESS;\n  constructor(public payload: any) {\n    super(PROCESS_FEATURE, REMOVE_PRODUCT_INTERESTS_PROCESS_ID);\n  }\n}\n\nexport class RemoveProductInterestFail extends EntityFailAction {\n  readonly type = REMOVE_PRODUCT_INTEREST_FAIL;\n  constructor(public payload: any) {\n    super(PROCESS_FEATURE, REMOVE_PRODUCT_INTERESTS_PROCESS_ID, payload);\n  }\n}\n\nexport class AddProductInterest extends EntityLoadAction {\n  readonly type = ADD_PRODUCT_INTEREST;\n  constructor(\n    public payload: {\n      userId: string;\n      productCode: string;\n      notificationType: NotificationType;\n    }\n  ) {\n    super(PROCESS_FEATURE, ADD_PRODUCT_INTEREST_PROCESS_ID);\n  }\n}\n\nexport class AddProductInterestSuccess extends EntitySuccessAction {\n  readonly type = ADD_PRODUCT_INTEREST_SUCCESS;\n  constructor(public payload: any) {\n    super(PROCESS_FEATURE, ADD_PRODUCT_INTEREST_PROCESS_ID);\n  }\n}\n\nexport class AddProductInterestFail extends EntityFailAction {\n  readonly type = ADD_PRODUCT_INTEREST_FAIL;\n  constructor(public payload: any) {\n    super(PROCESS_FEATURE, ADD_PRODUCT_INTEREST_PROCESS_ID, payload);\n  }\n}\n\nexport class ResetAddInterestState extends EntityLoaderResetAction {\n  readonly type = ADD_PRODUCT_INTEREST_RESET;\n  constructor() {\n    super(PROCESS_FEATURE, ADD_PRODUCT_INTEREST_PROCESS_ID);\n  }\n}\n\nexport class ResetRemoveInterestState extends EntityLoaderResetAction {\n  readonly type = REMOVE_PRODUCT_INTEREST_RESET;\n  constructor() {\n    super(PROCESS_FEATURE, REMOVE_PRODUCT_INTERESTS_PROCESS_ID);\n  }\n}\n\nexport class ClearProductInterests extends LoaderResetAction {\n  readonly type = CLEAR_PRODUCT_INTERESTS;\n  constructor() {\n    super(PRODUCT_INTERESTS);\n  }\n}\n\nexport type ProductInterestsAction =\n  | LoadProductInterests\n  | LoadProductInterestsFail\n  | LoadProductInterestsSuccess\n  | RemoveProductInterest\n  | RemoveProductInterestSuccess\n  | RemoveProductInterestFail\n  | AddProductInterest\n  | AddProductInterestFail\n  | AddProductInterestSuccess\n  | ResetAddInterestState\n  | ResetRemoveInterestState\n  | ClearProductInterests;\n","import { Action } from '@ngrx/store';\nimport { Region } from '../../../model/address.model';\nimport { StateUtils } from '../../../state/utils/index';\nimport { REGIONS } from '../user-state';\n\nexport const LOAD_REGIONS = '[User] Load Regions';\nexport const LOAD_REGIONS_SUCCESS = '[User] Load Regions Success';\nexport const LOAD_REGIONS_FAIL = '[User] Load Regions Fail';\nexport const CLEAR_REGIONS = '[User] Clear Regions';\n\nexport class LoadRegions extends StateUtils.LoaderLoadAction {\n  readonly type = LOAD_REGIONS;\n  constructor(public payload: string) {\n    super(REGIONS);\n  }\n}\n\nexport class LoadRegionsFail extends StateUtils.LoaderFailAction {\n  readonly type = LOAD_REGIONS_FAIL;\n  constructor(public payload: any) {\n    super(REGIONS, payload);\n  }\n}\n\nexport class LoadRegionsSuccess extends StateUtils.LoaderSuccessAction {\n  readonly type = LOAD_REGIONS_SUCCESS;\n  constructor(public payload: { entities: Region[]; country: string }) {\n    super(REGIONS);\n  }\n}\n\nexport class ClearRegions implements Action {\n  readonly type = CLEAR_REGIONS;\n  constructor() {}\n}\n\nexport type RegionsAction =\n  | LoadRegions\n  | LoadRegionsFail\n  | LoadRegionsSuccess\n  | ClearRegions;\n","import { ReplenishmentOrder } from '../../../model/replenishment-order.model';\nimport { PROCESS_FEATURE } from '../../../process/store/process-state';\nimport { StateUtils } from '../../../state/utils/index';\nimport {\n  CANCEL_REPLENISHMENT_ORDER_PROCESS_ID,\n  USER_REPLENISHMENT_ORDER_DETAILS,\n} from '../user-state';\n\nexport const LOAD_REPLENISHMENT_ORDER_DETAILS =\n  '[User] Load Replenishment Order Details';\nexport const LOAD_REPLENISHMENT_ORDER_DETAILS_SUCCESS =\n  '[User] Load Replenishment Order Details Success';\nexport const LOAD_REPLENISHMENT_ORDER_DETAILS_FAIL =\n  '[User] Load Replenishment Order Details Fail';\nexport const ClEAR_REPLENISHMENT_ORDER_DETAILS =\n  '[User] Clear Replenishment Order Details';\n\nexport const CANCEL_REPLENISHMENT_ORDER = '[User] Cancel Replenishment Order';\nexport const CANCEL_REPLENISHMENT_ORDER_SUCCESS =\n  '[User] Cancel Replenishment Order Success';\nexport const CANCEL_REPLENISHMENT_ORDER_FAIL =\n  '[User] Cancel Replenishment Order Fail';\nexport const CLEAR_CANCEL_REPLENISHMENT_ORDER =\n  '[User] Clear Cancel Replenishment Order';\n\nexport class LoadReplenishmentOrderDetails extends StateUtils.LoaderLoadAction {\n  readonly type = LOAD_REPLENISHMENT_ORDER_DETAILS;\n  constructor(\n    public payload: {\n      userId: string;\n      replenishmentOrderCode: string;\n    }\n  ) {\n    super(USER_REPLENISHMENT_ORDER_DETAILS);\n  }\n}\n\nexport class LoadReplenishmentOrderDetailsSuccess extends StateUtils.LoaderSuccessAction {\n  readonly type = LOAD_REPLENISHMENT_ORDER_DETAILS_SUCCESS;\n  constructor(public payload: ReplenishmentOrder) {\n    super(USER_REPLENISHMENT_ORDER_DETAILS);\n  }\n}\n\nexport class LoadReplenishmentOrderDetailsFail extends StateUtils.LoaderFailAction {\n  readonly type = LOAD_REPLENISHMENT_ORDER_DETAILS_FAIL;\n  constructor(public payload: any) {\n    super(USER_REPLENISHMENT_ORDER_DETAILS, payload);\n  }\n}\n\nexport class ClearReplenishmentOrderDetails extends StateUtils.LoaderResetAction {\n  readonly type = ClEAR_REPLENISHMENT_ORDER_DETAILS;\n  constructor() {\n    super(USER_REPLENISHMENT_ORDER_DETAILS);\n  }\n}\n\nexport class CancelReplenishmentOrder extends StateUtils.EntityLoadAction {\n  readonly type = CANCEL_REPLENISHMENT_ORDER;\n  constructor(\n    public payload: {\n      userId: string;\n      replenishmentOrderCode: string;\n    }\n  ) {\n    super(PROCESS_FEATURE, CANCEL_REPLENISHMENT_ORDER_PROCESS_ID);\n  }\n}\n\nexport class CancelReplenishmentOrderSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = CANCEL_REPLENISHMENT_ORDER_SUCCESS;\n  constructor(public payload: ReplenishmentOrder) {\n    super(PROCESS_FEATURE, CANCEL_REPLENISHMENT_ORDER_PROCESS_ID);\n  }\n}\n\nexport class CancelReplenishmentOrderFail extends StateUtils.EntityFailAction {\n  readonly type = CANCEL_REPLENISHMENT_ORDER_FAIL;\n  constructor(public payload: any) {\n    super(PROCESS_FEATURE, CANCEL_REPLENISHMENT_ORDER_PROCESS_ID, payload);\n  }\n}\n\nexport class ClearCancelReplenishmentOrder extends StateUtils.EntityLoaderResetAction {\n  readonly type = CLEAR_CANCEL_REPLENISHMENT_ORDER;\n  constructor() {\n    super(PROCESS_FEATURE, CANCEL_REPLENISHMENT_ORDER_PROCESS_ID);\n  }\n}\n\nexport type ReplenishmentOrderDetailsAction =\n  | LoadReplenishmentOrderDetails\n  | LoadReplenishmentOrderDetailsSuccess\n  | LoadReplenishmentOrderDetailsFail\n  | ClearReplenishmentOrderDetails\n  | CancelReplenishmentOrder\n  | CancelReplenishmentOrderSuccess\n  | CancelReplenishmentOrderFail\n  | ClearCancelReplenishmentOrder;\n","import { Action } from '@ngrx/store';\n\nexport const RESET_PASSWORD = '[User] Reset Password';\nexport const RESET_PASSWORD_SUCCESS = '[User] Reset Password Success';\nexport const RESET_PASSWORD_FAIL = '[User] Reset Password Fail';\n\nexport class ResetPassword implements Action {\n  readonly type = RESET_PASSWORD;\n  constructor(public payload: { token: string; password: string }) {}\n}\n\nexport class ResetPasswordFail implements Action {\n  readonly type = RESET_PASSWORD_FAIL;\n  constructor(public payload: any) {}\n}\n\nexport class ResetPasswordSuccess implements Action {\n  readonly type = RESET_PASSWORD_SUCCESS;\n}\n\nexport type ResetPasswordAction =\n  | ResetPassword\n  | ResetPasswordFail\n  | ResetPasswordSuccess;\n","import { Action } from '@ngrx/store';\nimport { Title } from '../../../model/misc.model';\n\nexport const LOAD_TITLES = '[User] Load Tiltes';\nexport const LOAD_TITLES_FAIL = '[User] Load Titles Fail';\nexport const LOAD_TITLES_SUCCESS = '[User] Load Titles Success';\n\nexport class LoadTitles implements Action {\n  readonly type = LOAD_TITLES;\n  constructor() {}\n}\n\nexport class LoadTitlesFail implements Action {\n  readonly type = LOAD_TITLES_FAIL;\n  constructor(public payload: any) {}\n}\n\nexport class LoadTitlesSuccess implements Action {\n  readonly type = LOAD_TITLES_SUCCESS;\n  constructor(public payload: Title[]) {}\n}\n\nexport type TitlesAction = LoadTitles | LoadTitlesFail | LoadTitlesSuccess;\n","import { PROCESS_FEATURE } from '../../../process/store/process-state';\nimport { StateUtils } from '../../../state/utils/index';\nimport { UPDATE_EMAIL_PROCESS_ID } from '../user-state';\n\nexport const UPDATE_EMAIL = '[User] Update Email';\nexport const UPDATE_EMAIL_ERROR = '[User] Update Email Error';\nexport const UPDATE_EMAIL_SUCCESS = '[User] Update Email Success';\nexport const RESET_EMAIL = '[User] Reset Email';\n\nexport class UpdateEmailAction extends StateUtils.EntityLoadAction {\n  readonly type = UPDATE_EMAIL;\n  constructor(\n    public payload: {\n      uid: string;\n      password: string;\n      newUid: string;\n    }\n  ) {\n    super(PROCESS_FEATURE, UPDATE_EMAIL_PROCESS_ID);\n  }\n}\n\nexport class UpdateEmailSuccessAction extends StateUtils.EntitySuccessAction {\n  readonly type = UPDATE_EMAIL_SUCCESS;\n  constructor(public newUid: string) {\n    super(PROCESS_FEATURE, UPDATE_EMAIL_PROCESS_ID);\n  }\n}\n\nexport class UpdateEmailErrorAction extends StateUtils.EntityFailAction {\n  readonly type = UPDATE_EMAIL_ERROR;\n  constructor(public payload: any) {\n    super(PROCESS_FEATURE, UPDATE_EMAIL_PROCESS_ID, payload);\n  }\n}\n\nexport class ResetUpdateEmailAction extends StateUtils.EntityLoaderResetAction {\n  readonly type = RESET_EMAIL;\n  constructor() {\n    super(PROCESS_FEATURE, UPDATE_EMAIL_PROCESS_ID);\n  }\n}\n\nexport type EmailActions =\n  | UpdateEmailAction\n  | UpdateEmailSuccessAction\n  | UpdateEmailErrorAction\n  | ResetUpdateEmailAction;\n","import { PROCESS_FEATURE } from '../../../process/store/process-state';\nimport { StateUtils } from '../../../state/utils/index';\nimport { UPDATE_PASSWORD_PROCESS_ID } from '../user-state';\n\nexport const UPDATE_PASSWORD = '[User] Update Password';\nexport const UPDATE_PASSWORD_FAIL = '[User] Update Password Fail';\nexport const UPDATE_PASSWORD_SUCCESS = '[User] Update Password Success';\nexport const UPDATE_PASSWORD_RESET =\n  '[User] Reset Update Password Process State';\n\nexport class UpdatePassword extends StateUtils.EntityLoadAction {\n  readonly type = UPDATE_PASSWORD;\n  constructor(\n    public payload: { userId: string; oldPassword: string; newPassword: string }\n  ) {\n    super(PROCESS_FEATURE, UPDATE_PASSWORD_PROCESS_ID);\n  }\n}\n\nexport class UpdatePasswordFail extends StateUtils.EntityFailAction {\n  readonly type = UPDATE_PASSWORD_FAIL;\n  constructor(public payload: any) {\n    super(PROCESS_FEATURE, UPDATE_PASSWORD_PROCESS_ID, payload);\n  }\n}\n\nexport class UpdatePasswordSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = UPDATE_PASSWORD_SUCCESS;\n  constructor() {\n    super(PROCESS_FEATURE, UPDATE_PASSWORD_PROCESS_ID);\n  }\n}\n\nexport class UpdatePasswordReset extends StateUtils.EntityLoaderResetAction {\n  readonly type = UPDATE_PASSWORD_RESET;\n  constructor() {\n    super(PROCESS_FEATURE, UPDATE_PASSWORD_PROCESS_ID);\n  }\n}\n\n// action types\nexport type UpdatePasswordAction =\n  | UpdatePassword\n  | UpdatePasswordFail\n  | UpdatePasswordSuccess\n  | UpdatePasswordReset;\n","import { Address } from '../../../model/address.model';\nimport { StateUtils } from '../../../state/utils/index';\nimport { USER_ADDRESSES } from '../user-state';\n\nexport const LOAD_USER_ADDRESSES = '[User] Load User Addresses';\nexport const LOAD_USER_ADDRESSES_FAIL = '[User] Load User Addresses Fail';\nexport const LOAD_USER_ADDRESSES_SUCCESS = '[User] Load User Addresses Success';\n\nexport const ADD_USER_ADDRESS = '[User] Add User Address';\nexport const ADD_USER_ADDRESS_FAIL = '[User] Add User Address Fail';\nexport const ADD_USER_ADDRESS_SUCCESS = '[User] Add User Address Success';\n\nexport const UPDATE_USER_ADDRESS = '[User] Update User Address';\nexport const UPDATE_USER_ADDRESS_FAIL = '[User] Update User Address Fail';\nexport const UPDATE_USER_ADDRESS_SUCCESS = '[User] Update User Address Success';\n\nexport const DELETE_USER_ADDRESS = '[User] Delete User Address';\nexport const DELETE_USER_ADDRESS_FAIL = '[User] Delete User Address Fail';\nexport const DELETE_USER_ADDRESS_SUCCESS = '[User] Delete User Address Success';\n\nexport class LoadUserAddresses extends StateUtils.LoaderLoadAction {\n  readonly type = LOAD_USER_ADDRESSES;\n  constructor(public payload: string) {\n    super(USER_ADDRESSES);\n  }\n}\n\nexport class LoadUserAddressesFail extends StateUtils.LoaderFailAction {\n  readonly type = LOAD_USER_ADDRESSES_FAIL;\n  constructor(public payload: any) {\n    super(USER_ADDRESSES, payload);\n  }\n}\n\nexport class LoadUserAddressesSuccess extends StateUtils.LoaderSuccessAction {\n  readonly type = LOAD_USER_ADDRESSES_SUCCESS;\n  constructor(public payload: Address[]) {\n    super(USER_ADDRESSES);\n  }\n}\n\n// Adding address actions\nexport class AddUserAddress extends StateUtils.LoaderLoadAction {\n  readonly type = ADD_USER_ADDRESS;\n  constructor(public payload: { userId: string; address: Address }) {\n    super(USER_ADDRESSES);\n  }\n}\n\nexport class AddUserAddressFail extends StateUtils.LoaderFailAction {\n  readonly type = ADD_USER_ADDRESS_FAIL;\n  constructor(public payload: any) {\n    super(USER_ADDRESSES, payload);\n  }\n}\n\nexport class AddUserAddressSuccess extends StateUtils.LoaderSuccessAction {\n  readonly type = ADD_USER_ADDRESS_SUCCESS;\n  constructor(public payload: any) {\n    super(USER_ADDRESSES);\n  }\n}\n\n// Updating address actions\nexport class UpdateUserAddress extends StateUtils.LoaderLoadAction {\n  readonly type = UPDATE_USER_ADDRESS;\n  constructor(\n    public payload: { userId: string; addressId: string; address: Address }\n  ) {\n    super(USER_ADDRESSES);\n  }\n}\n\nexport class UpdateUserAddressFail extends StateUtils.LoaderFailAction {\n  readonly type = UPDATE_USER_ADDRESS_FAIL;\n  constructor(public payload: any) {\n    super(USER_ADDRESSES, payload);\n  }\n}\n\nexport class UpdateUserAddressSuccess extends StateUtils.LoaderSuccessAction {\n  readonly type = UPDATE_USER_ADDRESS_SUCCESS;\n  constructor(public payload: any) {\n    super(USER_ADDRESSES);\n  }\n}\n\n// Deleting address actions\nexport class DeleteUserAddress extends StateUtils.LoaderLoadAction {\n  readonly type = DELETE_USER_ADDRESS;\n  constructor(public payload: any) {\n    super(USER_ADDRESSES);\n  }\n}\n\nexport class DeleteUserAddressFail extends StateUtils.LoaderFailAction {\n  readonly type = DELETE_USER_ADDRESS_FAIL;\n  constructor(public payload: any) {\n    super(USER_ADDRESSES, payload);\n  }\n}\n\nexport class DeleteUserAddressSuccess extends StateUtils.LoaderSuccessAction {\n  readonly type = DELETE_USER_ADDRESS_SUCCESS;\n  constructor(public payload: any) {\n    super(USER_ADDRESSES);\n  }\n}\n\n// action types\nexport type UserAddressesAction =\n  | LoadUserAddresses\n  | LoadUserAddressesFail\n  | LoadUserAddressesSuccess\n  | AddUserAddress\n  | AddUserAddressFail\n  | AddUserAddressSuccess\n  | UpdateUserAddress\n  | UpdateUserAddressFail\n  | UpdateUserAddressSuccess\n  | DeleteUserAddress\n  | DeleteUserAddressFail\n  | DeleteUserAddressSuccess;\n","import { ConsentTemplate } from '../../../model/consent.model';\nimport { PROCESS_FEATURE } from '../../../process/store/process-state';\nimport { StateUtils } from '../../../state/utils/index';\nimport {\n  GIVE_CONSENT_PROCESS_ID,\n  USER_CONSENTS,\n  WITHDRAW_CONSENT_PROCESS_ID,\n} from '../user-state';\n\nexport const LOAD_USER_CONSENTS = '[User] Load User Consents';\nexport const LOAD_USER_CONSENTS_SUCCESS = '[User] Load User Consents Success';\nexport const LOAD_USER_CONSENTS_FAIL = '[User] Load User Consents Fail';\nexport const RESET_LOAD_USER_CONSENTS = '[User] Reset Load User Consents';\n\nexport const GIVE_USER_CONSENT = '[User] Give User Consent';\nexport const GIVE_USER_CONSENT_FAIL = '[User] Give User Consent Fail';\nexport const GIVE_USER_CONSENT_SUCCESS = '[User] Give User Consent Success';\nexport const RESET_GIVE_USER_CONSENT_PROCESS =\n  '[User] Reset Give User Consent Process';\nexport const TRANSFER_ANONYMOUS_CONSENT = '[User] Transfer Anonymous Consent';\n\nexport const WITHDRAW_USER_CONSENT = '[User] Withdraw User Consent';\nexport const WITHDRAW_USER_CONSENT_FAIL = '[User] Withdraw User Consent Fail';\nexport const WITHDRAW_USER_CONSENT_SUCCESS =\n  '[User] Withdraw User Consent Success';\nexport const RESET_WITHDRAW_USER_CONSENT_PROCESS =\n  '[User] Reset Withdraw User Consent Process';\n\nexport class LoadUserConsents extends StateUtils.LoaderLoadAction {\n  readonly type = LOAD_USER_CONSENTS;\n  constructor(public payload: string) {\n    super(USER_CONSENTS);\n  }\n}\n\nexport class LoadUserConsentsFail extends StateUtils.LoaderFailAction {\n  readonly type = LOAD_USER_CONSENTS_FAIL;\n  constructor(public payload: any) {\n    super(USER_CONSENTS, payload);\n  }\n}\n\nexport class LoadUserConsentsSuccess extends StateUtils.LoaderSuccessAction {\n  readonly type = LOAD_USER_CONSENTS_SUCCESS;\n  constructor(public payload: ConsentTemplate[]) {\n    super(USER_CONSENTS);\n  }\n}\n\nexport class ResetLoadUserConsents extends StateUtils.LoaderResetAction {\n  readonly type = RESET_LOAD_USER_CONSENTS;\n  constructor() {\n    super(USER_CONSENTS);\n  }\n}\n\nexport class GiveUserConsent extends StateUtils.EntityLoadAction {\n  readonly type = GIVE_USER_CONSENT;\n  constructor(\n    public payload: {\n      userId: string;\n      consentTemplateId: string;\n      consentTemplateVersion: number;\n    }\n  ) {\n    super(PROCESS_FEATURE, GIVE_CONSENT_PROCESS_ID);\n  }\n}\n\nexport class GiveUserConsentFail extends StateUtils.EntityFailAction {\n  readonly type = GIVE_USER_CONSENT_FAIL;\n  constructor(payload: any) {\n    super(PROCESS_FEATURE, GIVE_CONSENT_PROCESS_ID, payload);\n  }\n}\n\nexport class GiveUserConsentSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = GIVE_USER_CONSENT_SUCCESS;\n  constructor(public consentTemplate: ConsentTemplate) {\n    super(PROCESS_FEATURE, GIVE_CONSENT_PROCESS_ID);\n  }\n}\n\nexport class ResetGiveUserConsentProcess extends StateUtils.EntityLoaderResetAction {\n  readonly type = RESET_GIVE_USER_CONSENT_PROCESS;\n  constructor() {\n    super(PROCESS_FEATURE, GIVE_CONSENT_PROCESS_ID);\n  }\n}\n\nexport class TransferAnonymousConsent {\n  readonly type = TRANSFER_ANONYMOUS_CONSENT;\n  constructor(\n    public payload: {\n      userId: string;\n      consentTemplateId: string;\n      consentTemplateVersion: number;\n    }\n  ) {}\n}\n\nexport class WithdrawUserConsent extends StateUtils.EntityLoadAction {\n  readonly type = WITHDRAW_USER_CONSENT;\n  constructor(\n    public payload: {\n      userId: string;\n      consentCode: string;\n    }\n  ) {\n    super(PROCESS_FEATURE, WITHDRAW_CONSENT_PROCESS_ID);\n  }\n}\n\nexport class WithdrawUserConsentFail extends StateUtils.EntityFailAction {\n  readonly type = WITHDRAW_USER_CONSENT_FAIL;\n  constructor(payload: any) {\n    super(PROCESS_FEATURE, WITHDRAW_CONSENT_PROCESS_ID, payload);\n  }\n}\n\nexport class WithdrawUserConsentSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = WITHDRAW_USER_CONSENT_SUCCESS;\n  constructor() {\n    super(PROCESS_FEATURE, WITHDRAW_CONSENT_PROCESS_ID);\n  }\n}\n\nexport class ResetWithdrawUserConsentProcess extends StateUtils.EntityLoaderResetAction {\n  readonly type = RESET_WITHDRAW_USER_CONSENT_PROCESS;\n  constructor() {\n    super(PROCESS_FEATURE, WITHDRAW_CONSENT_PROCESS_ID);\n  }\n}\n\nexport type UserConsentsAction =\n  | LoadUserConsents\n  | LoadUserConsentsFail\n  | LoadUserConsentsSuccess\n  | ResetLoadUserConsents\n  | GiveUserConsent\n  | GiveUserConsentFail\n  | GiveUserConsentSuccess\n  | ResetGiveUserConsentProcess\n  | WithdrawUserConsent\n  | WithdrawUserConsentFail\n  | WithdrawUserConsentSuccess\n  | ResetWithdrawUserConsentProcess;\n","import { CostCenter } from '../../../model/org-unit.model';\nimport { StateUtils } from '../../../state/utils/index';\nimport { USER_COST_CENTERS } from '../user-state';\n\nexport const LOAD_ACTIVE_COST_CENTERS = '[User] Load Active CostCenters';\nexport const LOAD_ACTIVE_COST_CENTERS_FAIL =\n  '[User] Load Active CostCenters Fail';\nexport const LOAD_ACTIVE_COST_CENTERS_SUCCESS =\n  '[User] Load Active CostCenters Success';\n\nexport class LoadActiveCostCenters extends StateUtils.LoaderLoadAction {\n  readonly type = LOAD_ACTIVE_COST_CENTERS;\n  constructor(public payload: string) {\n    super(USER_COST_CENTERS);\n  }\n}\n\nexport class LoadActiveCostCentersFail extends StateUtils.LoaderFailAction {\n  readonly type = LOAD_ACTIVE_COST_CENTERS_FAIL;\n  constructor(public payload: any) {\n    super(USER_COST_CENTERS, payload);\n  }\n}\n\nexport class LoadActiveCostCentersSuccess extends StateUtils.LoaderSuccessAction {\n  readonly type = LOAD_ACTIVE_COST_CENTERS_SUCCESS;\n  constructor(public payload: CostCenter[]) {\n    super(USER_COST_CENTERS);\n  }\n}\n\nexport type UserCostCenterAction =\n  | LoadActiveCostCenters\n  | LoadActiveCostCentersFail\n  | LoadActiveCostCentersSuccess;\n","import { Action } from '@ngrx/store';\nimport { User } from '../../../model/misc.model';\nimport { PROCESS_FEATURE } from '../../../process/store/process-state';\nimport { StateUtils } from '../../../state/utils/index';\nimport { UPDATE_USER_DETAILS_PROCESS_ID } from '../user-state';\n\nexport const LOAD_USER_DETAILS = '[User] Load User Details';\nexport const LOAD_USER_DETAILS_FAIL = '[User] Load User Details Fail';\nexport const LOAD_USER_DETAILS_SUCCESS = '[User] Load User Details Success';\n\nexport const UPDATE_USER_DETAILS = '[User] Update User Details';\nexport const UPDATE_USER_DETAILS_FAIL = '[User] Update User Details Fail';\nexport const UPDATE_USER_DETAILS_SUCCESS = '[User] Update User Details Success';\nexport const RESET_USER_DETAILS = '[User] Reset User Details';\n\nexport class LoadUserDetails implements Action {\n  readonly type = LOAD_USER_DETAILS;\n  constructor(public payload: string) {}\n}\n\nexport class LoadUserDetailsFail implements Action {\n  readonly type = LOAD_USER_DETAILS_FAIL;\n  constructor(public payload: any) {}\n}\n\nexport class LoadUserDetailsSuccess implements Action {\n  readonly type = LOAD_USER_DETAILS_SUCCESS;\n  constructor(public payload: User) {}\n}\n\nexport class UpdateUserDetails extends StateUtils.EntityLoadAction {\n  readonly type = UPDATE_USER_DETAILS;\n  constructor(public payload: { username: string; userDetails: User }) {\n    super(PROCESS_FEATURE, UPDATE_USER_DETAILS_PROCESS_ID);\n  }\n}\n\nexport class UpdateUserDetailsFail extends StateUtils.EntityFailAction {\n  readonly type = UPDATE_USER_DETAILS_FAIL;\n  constructor(public payload: any) {\n    super(PROCESS_FEATURE, UPDATE_USER_DETAILS_PROCESS_ID, payload);\n  }\n}\n\nexport class UpdateUserDetailsSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = UPDATE_USER_DETAILS_SUCCESS;\n  constructor(public userUpdates: User) {\n    super(PROCESS_FEATURE, UPDATE_USER_DETAILS_PROCESS_ID);\n  }\n}\n\nexport class ResetUpdateUserDetails extends StateUtils.EntityLoaderResetAction {\n  readonly type = RESET_USER_DETAILS;\n  constructor() {\n    super(PROCESS_FEATURE, UPDATE_USER_DETAILS_PROCESS_ID);\n  }\n}\n\n// action types\nexport type UserDetailsAction =\n  | LoadUserDetails\n  | LoadUserDetailsFail\n  | LoadUserDetailsSuccess\n  | UpdateUserDetails\n  | UpdateUserDetailsFail\n  | UpdateUserDetailsSuccess\n  | ResetUpdateUserDetails;\n","import { Action } from '@ngrx/store';\nexport const CLEAR_USER_MISCS_DATA = '[User] Clear User Misc Data';\n\nexport class ClearUserMiscsData implements Action {\n  readonly type = CLEAR_USER_MISCS_DATA;\n}\n","import { OrderHistoryList } from '../../../model/order.model';\nimport { StateUtils } from '../../../state/utils/index';\nimport { USER_ORDERS } from '../user-state';\n\nexport const LOAD_USER_ORDERS = '[User] Load User Orders';\nexport const LOAD_USER_ORDERS_FAIL = '[User] Load User Orders Fail';\nexport const LOAD_USER_ORDERS_SUCCESS = '[User] Load User Orders Success';\nexport const CLEAR_USER_ORDERS = '[User] Clear User Orders';\n\nexport class LoadUserOrders extends StateUtils.LoaderLoadAction {\n  readonly type = LOAD_USER_ORDERS;\n  constructor(\n    public payload: {\n      userId: string;\n      pageSize?: number;\n      currentPage?: number;\n      sort?: string;\n      replenishmentOrderCode?: string;\n    }\n  ) {\n    super(USER_ORDERS);\n  }\n}\n\nexport class LoadUserOrdersFail extends StateUtils.LoaderFailAction {\n  readonly type = LOAD_USER_ORDERS_FAIL;\n  constructor(public payload: any) {\n    super(USER_ORDERS, payload);\n  }\n}\n\nexport class LoadUserOrdersSuccess extends StateUtils.LoaderSuccessAction {\n  readonly type = LOAD_USER_ORDERS_SUCCESS;\n  constructor(public payload: OrderHistoryList) {\n    super(USER_ORDERS);\n  }\n}\n\nexport class ClearUserOrders extends StateUtils.LoaderResetAction {\n  readonly type = CLEAR_USER_ORDERS;\n  constructor() {\n    super(USER_ORDERS);\n  }\n}\n\nexport type UserOrdersAction =\n  | LoadUserOrders\n  | LoadUserOrdersFail\n  | LoadUserOrdersSuccess\n  | ClearUserOrders;\n","import { Action } from '@ngrx/store';\nimport { UserSignUp } from '../../../model/misc.model';\nimport { PROCESS_FEATURE } from '../../../process/store/process-state';\nimport { StateUtils } from '../../../state/utils/index';\nimport {\n  REGISTER_USER_PROCESS_ID,\n  REMOVE_USER_PROCESS_ID,\n} from '../user-state';\n\nexport const REGISTER_USER = '[User] Register User';\nexport const REGISTER_USER_FAIL = '[User] Register User Fail';\nexport const REGISTER_USER_SUCCESS = '[User] Register User Success';\nexport const RESET_REGISTER_USER_PROCESS = '[User] Reset Register User Process';\n\nexport const REGISTER_GUEST = '[User] Register Guest';\nexport const REGISTER_GUEST_FAIL = '[User] Register Guest Fail';\nexport const REGISTER_GUEST_SUCCESS = '[User] Register Guest Success';\n\nexport const REMOVE_USER = '[User] Remove User';\nexport const REMOVE_USER_FAIL = '[User] Remove User Fail';\nexport const REMOVE_USER_SUCCESS = '[User] Remove User Success';\nexport const REMOVE_USER_RESET = '[User] Reset Remove User Process State';\n\nexport class RegisterUser extends StateUtils.EntityLoadAction {\n  readonly type = REGISTER_USER;\n  constructor(public payload: UserSignUp) {\n    super(PROCESS_FEATURE, REGISTER_USER_PROCESS_ID);\n  }\n}\n\nexport class RegisterUserFail extends StateUtils.EntityFailAction {\n  readonly type = REGISTER_USER_FAIL;\n  constructor(public payload: any) {\n    super(PROCESS_FEATURE, REGISTER_USER_PROCESS_ID, payload);\n  }\n}\n\nexport class RegisterUserSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = REGISTER_USER_SUCCESS;\n  constructor() {\n    super(PROCESS_FEATURE, REGISTER_USER_PROCESS_ID);\n  }\n}\n\nexport class ResetRegisterUserProcess extends StateUtils.EntityLoaderResetAction {\n  readonly type = RESET_REGISTER_USER_PROCESS;\n  constructor() {\n    super(PROCESS_FEATURE, REGISTER_USER_PROCESS_ID);\n  }\n}\n\nexport class RegisterGuest implements Action {\n  readonly type = REGISTER_GUEST;\n  constructor(public payload: { guid: string; password: string }) {}\n}\n\nexport class RegisterGuestFail implements Action {\n  readonly type = REGISTER_GUEST_FAIL;\n  constructor(public payload: any) {}\n}\n\nexport class RegisterGuestSuccess implements Action {\n  readonly type = REGISTER_GUEST_SUCCESS;\n}\n\nexport class RemoveUser extends StateUtils.EntityLoadAction {\n  readonly type = REMOVE_USER;\n  constructor(public payload: string) {\n    super(PROCESS_FEATURE, REMOVE_USER_PROCESS_ID);\n  }\n}\n\nexport class RemoveUserFail extends StateUtils.EntityFailAction {\n  readonly type = REMOVE_USER_FAIL;\n  constructor(public payload: any) {\n    super(PROCESS_FEATURE, REMOVE_USER_PROCESS_ID, payload);\n  }\n}\n\nexport class RemoveUserSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = REMOVE_USER_SUCCESS;\n  constructor() {\n    super(PROCESS_FEATURE, REMOVE_USER_PROCESS_ID);\n  }\n}\n\nexport class RemoveUserReset extends StateUtils.EntityLoaderResetAction {\n  readonly type = REMOVE_USER_RESET;\n  constructor() {\n    super(PROCESS_FEATURE, REMOVE_USER_PROCESS_ID);\n  }\n}\n\n// action types\nexport type UserRegisterOrRemoveAction =\n  | RegisterUser\n  | RegisterUserFail\n  | RegisterUserSuccess\n  | ResetRegisterUserProcess\n  | RegisterGuest\n  | RegisterGuestFail\n  | RegisterGuestSuccess\n  | RemoveUser\n  | RemoveUserFail\n  | RemoveUserSuccess\n  | RemoveUserReset;\n","import { ReplenishmentOrderList } from '../../../model/replenishment-order.model';\nimport { StateUtils } from '../../../state/utils/index';\nimport { USER_REPLENISHMENT_ORDERS } from '../user-state';\n\nexport const LOAD_USER_REPLENISHMENT_ORDERS =\n  '[User] Load User Replenishment Orders';\nexport const LOAD_USER_REPLENISHMENT_ORDERS_FAIL =\n  '[User] Load User Replenishment Orders Fail';\nexport const LOAD_USER_REPLENISHMENT_ORDERS_SUCCESS =\n  '[User] Load User Replenishment Orders Success';\nexport const CLEAR_USER_REPLENISHMENT_ORDERS =\n  '[User] Clear User Replenishment Orders';\n\nexport class LoadUserReplenishmentOrders extends StateUtils.LoaderLoadAction {\n  readonly type = LOAD_USER_REPLENISHMENT_ORDERS;\n  constructor(\n    public payload: {\n      userId: string;\n      pageSize?: number;\n      currentPage?: number;\n      sort?: string;\n    }\n  ) {\n    super(USER_REPLENISHMENT_ORDERS);\n  }\n}\n\nexport class LoadUserReplenishmentOrdersFail extends StateUtils.LoaderFailAction {\n  readonly type = LOAD_USER_REPLENISHMENT_ORDERS_FAIL;\n  constructor(public payload: any) {\n    super(USER_REPLENISHMENT_ORDERS, payload);\n  }\n}\n\nexport class LoadUserReplenishmentOrdersSuccess extends StateUtils.LoaderSuccessAction {\n  readonly type = LOAD_USER_REPLENISHMENT_ORDERS_SUCCESS;\n  constructor(public payload: ReplenishmentOrderList) {\n    super(USER_REPLENISHMENT_ORDERS);\n  }\n}\n\nexport class ClearUserReplenishmentOrders extends StateUtils.LoaderResetAction {\n  readonly type = CLEAR_USER_REPLENISHMENT_ORDERS;\n  constructor() {\n    super(USER_REPLENISHMENT_ORDERS);\n  }\n}\n\nexport type UserReplenishmentOrdersAction =\n  | LoadUserReplenishmentOrders\n  | LoadUserReplenishmentOrdersFail\n  | LoadUserReplenishmentOrdersSuccess\n  | ClearUserReplenishmentOrders;\n","import { Observable, OperatorFunction } from 'rxjs';\nimport { startWith, switchMapTo } from 'rxjs/operators';\n\n/**\n *\n * Withdraw from the source observable when notifier emits a value\n *\n * Withdraw will result in resubscribing to the source observable\n * Operator is useful to kill ongoing emission transformation on notifier emission\n *\n * @param notifier\n */\nexport function withdrawOn<T>(\n  notifier: Observable<any>\n): OperatorFunction<T, T> {\n  return (source: Observable<T>) =>\n    notifier.pipe(startWith(undefined), switchMapTo(source));\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { from, Observable, of } from 'rxjs';\nimport {\n  catchError,\n  concatMap,\n  filter,\n  map,\n  mergeMap,\n  switchMap,\n} from 'rxjs/operators';\nimport { AuthActions } from '../../../auth/user-auth/store/actions/index';\nimport { CartActions } from '../../../cart/store/actions/index';\nimport { CheckoutDetails } from '../../../checkout/models/checkout.model';\nimport { GlobalMessageActions } from '../../../global-message/store/actions/index';\nimport { OCC_USER_ID_ANONYMOUS } from '../../../occ/utils/occ-constants';\nimport { SiteContextActions } from '../../../site-context/store/actions/index';\nimport { UserActions } from '../../../user/store/actions/index';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { withdrawOn } from '../../../util/rxjs/withdraw-on';\nimport { CheckoutConnector } from '../../connectors/checkout/checkout.connector';\nimport { CheckoutCostCenterConnector } from '../../connectors/cost-center/checkout-cost-center.connector';\nimport { CheckoutDeliveryConnector } from '../../connectors/delivery/checkout-delivery.connector';\nimport { CheckoutPaymentConnector } from '../../connectors/payment/checkout-payment.connector';\nimport { CheckoutActions } from '../actions/index';\n\n@Injectable()\nexport class CheckoutEffects {\n  private contextChange$ = this.actions$.pipe(\n    ofType(\n      SiteContextActions.CURRENCY_CHANGE,\n      SiteContextActions.LANGUAGE_CHANGE\n    )\n  );\n\n  @Effect()\n  addDeliveryAddress$: Observable<\n    | UserActions.LoadUserAddresses\n    | CheckoutActions.SetDeliveryAddress\n    | CheckoutActions.AddDeliveryAddressFail\n  > = this.actions$.pipe(\n    ofType(CheckoutActions.ADD_DELIVERY_ADDRESS),\n    map((action: CheckoutActions.AddDeliveryAddress) => action.payload),\n    mergeMap((payload) =>\n      this.checkoutDeliveryConnector\n        .createAddress(payload.userId, payload.cartId, payload.address)\n        .pipe(\n          mergeMap((address) => {\n            address['titleCode'] = payload.address.titleCode;\n            if (payload.address.region && payload.address.region.isocodeShort) {\n              Object.assign(address.region, {\n                isocodeShort: payload.address.region.isocodeShort,\n              });\n            }\n            if (payload.userId === OCC_USER_ID_ANONYMOUS) {\n              return [\n                new CheckoutActions.SetDeliveryAddress({\n                  userId: payload.userId,\n                  cartId: payload.cartId,\n                  address: address,\n                }),\n              ];\n            } else {\n              return [\n                new UserActions.LoadUserAddresses(payload.userId),\n                new CheckoutActions.SetDeliveryAddress({\n                  userId: payload.userId,\n                  cartId: payload.cartId,\n                  address: address,\n                }),\n              ];\n            }\n          }),\n          catchError((error) =>\n            of(\n              new CheckoutActions.AddDeliveryAddressFail(\n                normalizeHttpError(error)\n              )\n            )\n          )\n        )\n    ),\n    withdrawOn(this.contextChange$)\n  );\n\n  @Effect()\n  setDeliveryAddress$: Observable<\n    | CheckoutActions.SetDeliveryAddressSuccess\n    | CheckoutActions.ClearSupportedDeliveryModes\n    | CheckoutActions.ClearCheckoutDeliveryMode\n    | CheckoutActions.ResetLoadSupportedDeliveryModesProcess\n    | CheckoutActions.LoadSupportedDeliveryModes\n    | CheckoutActions.SetDeliveryAddressFail\n  > = this.actions$.pipe(\n    ofType(CheckoutActions.SET_DELIVERY_ADDRESS),\n    map((action: any) => action.payload),\n    mergeMap((payload) => {\n      return this.checkoutDeliveryConnector\n        .setAddress(payload.userId, payload.cartId, payload.address.id)\n        .pipe(\n          mergeMap(() => [\n            new CheckoutActions.SetDeliveryAddressSuccess(payload.address),\n            new CheckoutActions.ClearCheckoutDeliveryMode({\n              userId: payload.userId,\n              cartId: payload.cartId,\n            }),\n            new CheckoutActions.ClearSupportedDeliveryModes(),\n            new CheckoutActions.ResetLoadSupportedDeliveryModesProcess(),\n            new CheckoutActions.LoadSupportedDeliveryModes({\n              userId: payload.userId,\n              cartId: payload.cartId,\n            }),\n          ]),\n          catchError((error) =>\n            of(\n              new CheckoutActions.SetDeliveryAddressFail(\n                normalizeHttpError(error)\n              )\n            )\n          )\n        );\n    }),\n    withdrawOn(this.contextChange$)\n  );\n\n  @Effect()\n  loadSupportedDeliveryModes$: Observable<\n    | CheckoutActions.LoadSupportedDeliveryModesSuccess\n    | CheckoutActions.LoadSupportedDeliveryModesFail\n  > = this.actions$.pipe(\n    ofType(CheckoutActions.LOAD_SUPPORTED_DELIVERY_MODES),\n    map((action: any) => action.payload),\n    mergeMap((payload) => {\n      return this.checkoutDeliveryConnector\n        .getSupportedModes(payload.userId, payload.cartId)\n        .pipe(\n          map((data) => {\n            return new CheckoutActions.LoadSupportedDeliveryModesSuccess(data);\n          }),\n          catchError((error) =>\n            of(\n              new CheckoutActions.LoadSupportedDeliveryModesFail(\n                normalizeHttpError(error)\n              )\n            )\n          )\n        );\n    }),\n    withdrawOn(this.contextChange$)\n  );\n\n  @Effect()\n  clearCheckoutMiscsDataOnLanguageChange$: Observable<\n    | CheckoutActions.CheckoutClearMiscsData\n    | CheckoutActions.ResetLoadSupportedDeliveryModesProcess\n    | CheckoutActions.ResetLoadPaymentTypesProcess\n  > = this.actions$.pipe(\n    ofType(SiteContextActions.LANGUAGE_CHANGE),\n    mergeMap(() => [\n      new CheckoutActions.ResetLoadSupportedDeliveryModesProcess(),\n      new CheckoutActions.ResetLoadPaymentTypesProcess(),\n      new CheckoutActions.CheckoutClearMiscsData(),\n    ])\n  );\n\n  @Effect()\n  clearDeliveryModesOnCurrencyChange$: Observable<\n    CheckoutActions.ClearSupportedDeliveryModes\n  > = this.actions$.pipe(\n    ofType(SiteContextActions.CURRENCY_CHANGE),\n    map(() => new CheckoutActions.ClearSupportedDeliveryModes())\n  );\n\n  @Effect()\n  clearCheckoutDataOnLogout$: Observable<\n    CheckoutActions.ClearCheckoutData\n  > = this.actions$.pipe(\n    ofType(AuthActions.LOGOUT),\n    map(() => new CheckoutActions.ClearCheckoutData())\n  );\n\n  @Effect()\n  clearCheckoutDataOnLogin$: Observable<\n    CheckoutActions.ClearCheckoutData\n  > = this.actions$.pipe(\n    ofType(AuthActions.LOGIN),\n    map(() => new CheckoutActions.ClearCheckoutData())\n  );\n\n  @Effect()\n  setDeliveryMode$: Observable<\n    | CheckoutActions.SetDeliveryModeSuccess\n    | CheckoutActions.SetDeliveryModeFail\n    | CartActions.LoadCart\n  > = this.actions$.pipe(\n    ofType(CheckoutActions.SET_DELIVERY_MODE),\n    map((action: any) => action.payload),\n    mergeMap((payload) => {\n      return this.checkoutDeliveryConnector\n        .setMode(payload.userId, payload.cartId, payload.selectedModeId)\n        .pipe(\n          mergeMap(() => {\n            return [\n              new CheckoutActions.SetDeliveryModeSuccess(\n                payload.selectedModeId\n              ),\n              new CartActions.LoadCart({\n                userId: payload.userId,\n                cartId: payload.cartId,\n              }),\n            ];\n          }),\n          catchError((error) =>\n            of(\n              new CheckoutActions.SetDeliveryModeFail(normalizeHttpError(error))\n            )\n          )\n        );\n    }),\n    withdrawOn(this.contextChange$)\n  );\n\n  @Effect()\n  createPaymentDetails$: Observable<\n    | UserActions.LoadUserPaymentMethods\n    | CheckoutActions.CreatePaymentDetailsSuccess\n    | CheckoutActions.CreatePaymentDetailsFail\n  > = this.actions$.pipe(\n    ofType(CheckoutActions.CREATE_PAYMENT_DETAILS),\n    map((action: any) => action.payload),\n    mergeMap((payload) => {\n      // get information for creating a subscription directly with payment provider\n      return this.checkoutPaymentConnector\n        .create(payload.userId, payload.cartId, payload.paymentDetails)\n        .pipe(\n          mergeMap((details) => {\n            if (payload.userId === OCC_USER_ID_ANONYMOUS) {\n              return [new CheckoutActions.CreatePaymentDetailsSuccess(details)];\n            } else {\n              return [\n                new UserActions.LoadUserPaymentMethods(payload.userId),\n                new CheckoutActions.CreatePaymentDetailsSuccess(details),\n              ];\n            }\n          }),\n          catchError((error) =>\n            of(\n              new CheckoutActions.CreatePaymentDetailsFail(\n                normalizeHttpError(error)\n              )\n            )\n          )\n        );\n    }),\n    withdrawOn(this.contextChange$)\n  );\n\n  @Effect()\n  setPaymentDetails$: Observable<\n    | CheckoutActions.SetPaymentDetailsSuccess\n    | CheckoutActions.SetPaymentDetailsFail\n  > = this.actions$.pipe(\n    ofType(CheckoutActions.SET_PAYMENT_DETAILS),\n    map((action: any) => action.payload),\n    mergeMap((payload) => {\n      return this.checkoutPaymentConnector\n        .set(payload.userId, payload.cartId, payload.paymentDetails.id)\n        .pipe(\n          map(\n            () =>\n              new CheckoutActions.SetPaymentDetailsSuccess(\n                payload.paymentDetails\n              )\n          ),\n          catchError((error) =>\n            of(\n              new CheckoutActions.SetPaymentDetailsFail(\n                normalizeHttpError(error)\n              )\n            )\n          )\n        );\n    }),\n    withdrawOn(this.contextChange$)\n  );\n\n  @Effect()\n  placeOrder$: Observable<\n    | CheckoutActions.PlaceOrderSuccess\n    | GlobalMessageActions.AddMessage\n    | CheckoutActions.PlaceOrderFail\n    | CartActions.RemoveCart\n  > = this.actions$.pipe(\n    ofType(CheckoutActions.PLACE_ORDER),\n    map((action: any) => action.payload),\n    mergeMap((payload) => {\n      return this.checkoutConnector\n        .placeOrder(payload.userId, payload.cartId, payload.termsChecked)\n        .pipe(\n          switchMap((data) => [\n            new CartActions.RemoveCart({ cartId: payload.cartId }),\n            new CheckoutActions.PlaceOrderSuccess(data),\n          ]),\n          catchError((error) =>\n            of(new CheckoutActions.PlaceOrderFail(normalizeHttpError(error)))\n          )\n        );\n    }),\n    withdrawOn(this.contextChange$)\n  );\n\n  @Effect()\n  loadCheckoutDetails$: Observable<\n    | CheckoutActions.LoadCheckoutDetailsSuccess\n    | CheckoutActions.LoadCheckoutDetailsFail\n  > = this.actions$.pipe(\n    ofType(CheckoutActions.LOAD_CHECKOUT_DETAILS),\n    map((action: CheckoutActions.LoadCheckoutDetails) => action.payload),\n    mergeMap((payload) => {\n      return this.checkoutConnector\n        .loadCheckoutDetails(payload.userId, payload.cartId)\n        .pipe(\n          map(\n            (data: CheckoutDetails) =>\n              new CheckoutActions.LoadCheckoutDetailsSuccess(data)\n          ),\n          catchError((error) =>\n            of(\n              new CheckoutActions.LoadCheckoutDetailsFail(\n                normalizeHttpError(error)\n              )\n            )\n          )\n        );\n    }),\n    withdrawOn(this.contextChange$)\n  );\n\n  @Effect()\n  reloadDetailsOnMergeCart$: Observable<\n    CheckoutActions.LoadCheckoutDetails\n  > = this.actions$.pipe(\n    ofType(CartActions.MERGE_CART_SUCCESS),\n    map((action: CartActions.MergeCartSuccess) => action.payload),\n    map((payload) => {\n      return new CheckoutActions.LoadCheckoutDetails({\n        userId: payload.userId,\n        cartId: payload.cartId,\n      });\n    })\n  );\n\n  @Effect()\n  clearCheckoutDeliveryAddress$: Observable<\n    | CheckoutActions.ClearCheckoutDeliveryAddressFail\n    | CheckoutActions.ClearCheckoutDeliveryAddressSuccess\n  > = this.actions$.pipe(\n    ofType(CheckoutActions.CLEAR_CHECKOUT_DELIVERY_ADDRESS),\n    map(\n      (action: CheckoutActions.ClearCheckoutDeliveryAddress) => action.payload\n    ),\n    filter((payload) => Boolean(payload.cartId)),\n    switchMap((payload) => {\n      return this.checkoutConnector\n        .clearCheckoutDeliveryAddress(payload.userId, payload.cartId)\n        .pipe(\n          map(() => new CheckoutActions.ClearCheckoutDeliveryAddressSuccess()),\n          catchError((error) =>\n            of(\n              new CheckoutActions.ClearCheckoutDeliveryAddressFail(\n                normalizeHttpError(error)\n              )\n            )\n          )\n        );\n    }),\n    withdrawOn(this.contextChange$)\n  );\n\n  @Effect()\n  clearCheckoutDeliveryMode$: Observable<\n    | CheckoutActions.ClearCheckoutDeliveryModeFail\n    | CheckoutActions.ClearCheckoutDeliveryModeSuccess\n    | CartActions.LoadCart\n  > = this.actions$.pipe(\n    ofType(CheckoutActions.CLEAR_CHECKOUT_DELIVERY_MODE),\n    map((action: CheckoutActions.ClearCheckoutDeliveryMode) => action.payload),\n    filter((payload) => Boolean(payload.cartId)),\n    concatMap((payload) => {\n      return this.checkoutConnector\n        .clearCheckoutDeliveryMode(payload.userId, payload.cartId)\n        .pipe(\n          map(\n            () =>\n              new CheckoutActions.ClearCheckoutDeliveryModeSuccess({\n                ...payload,\n              })\n          ),\n          catchError((error) =>\n            from([\n              new CheckoutActions.ClearCheckoutDeliveryModeFail({\n                ...payload,\n                error: normalizeHttpError(error),\n              }),\n              new CartActions.LoadCart({\n                cartId: payload.cartId,\n                userId: payload.userId,\n              }),\n            ])\n          )\n        );\n    }),\n    withdrawOn(this.contextChange$)\n  );\n\n  @Effect()\n  setCostCenter$: Observable<\n    | CheckoutActions.SetCostCenterSuccess\n    | CheckoutActions.SetCostCenterFail\n    | CheckoutActions.ClearCheckoutDeliveryAddress\n    | CartActions.LoadCart\n  > = this.actions$.pipe(\n    ofType(CheckoutActions.SET_COST_CENTER),\n    map((action: CheckoutActions.SetCostCenter) => action.payload),\n    switchMap((payload) => {\n      return this.checkoutCostCenterConnector\n        .setCostCenter(payload.userId, payload.cartId, payload.costCenterId)\n        .pipe(\n          mergeMap((_data) => [\n            new CartActions.LoadCart({\n              cartId: payload.cartId,\n              userId: payload.userId,\n            }),\n            new CheckoutActions.SetCostCenterSuccess(payload.costCenterId),\n            new CheckoutActions.ClearCheckoutDeliveryAddress({\n              userId: payload.userId,\n              cartId: payload.cartId,\n            }),\n          ]),\n          catchError((error) =>\n            of(new CheckoutActions.SetCostCenterFail(normalizeHttpError(error)))\n          )\n        );\n    }),\n    withdrawOn(this.contextChange$)\n  );\n\n  constructor(\n    private actions$: Actions,\n    private checkoutDeliveryConnector: CheckoutDeliveryConnector,\n    private checkoutPaymentConnector: CheckoutPaymentConnector,\n    private checkoutCostCenterConnector: CheckoutCostCenterConnector,\n    private checkoutConnector: CheckoutConnector\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, mergeMap, switchMap } from 'rxjs/operators';\nimport { CartActions } from '../../../cart/store/actions/index';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { PaymentTypeConnector } from '../../connectors/payment-type/payment-type.connector';\nimport { CheckoutActions } from '../actions/index';\n\n@Injectable()\nexport class PaymentTypesEffects {\n  @Effect()\n  loadPaymentTypes$: Observable<\n    | CheckoutActions.LoadPaymentTypesSuccess\n    | CheckoutActions.LoadPaymentTypesFail\n  > = this.actions$.pipe(\n    ofType(CheckoutActions.LOAD_PAYMENT_TYPES),\n    switchMap(() => {\n      return this.paymentTypeConnector.getPaymentTypes().pipe(\n        map(\n          (paymentTypes) =>\n            new CheckoutActions.LoadPaymentTypesSuccess(paymentTypes)\n        ),\n        catchError((error) =>\n          of(\n            new CheckoutActions.LoadPaymentTypesFail(normalizeHttpError(error))\n          )\n        )\n      );\n    })\n  );\n\n  @Effect()\n  setPaymentType$: Observable<\n    | CheckoutActions.SetPaymentTypeSuccess\n    | CheckoutActions.SetPaymentTypeFail\n    | CartActions.LoadCartSuccess\n    | CheckoutActions.ClearCheckoutData\n  > = this.actions$.pipe(\n    ofType(CheckoutActions.SET_PAYMENT_TYPE),\n    map((action: CheckoutActions.SetPaymentType) => action.payload),\n    switchMap((payload) => {\n      return this.paymentTypeConnector\n        .setPaymentType(\n          payload.userId,\n          payload.cartId,\n          payload.typeCode,\n          payload.poNumber\n        )\n        .pipe(\n          mergeMap((data) => {\n            return [\n              new CartActions.LoadCartSuccess({\n                cart: data,\n                userId: payload.userId,\n                cartId: payload.cartId,\n              }),\n              new CheckoutActions.ClearCheckoutData(),\n              new CheckoutActions.SetPaymentTypeSuccess(data),\n            ];\n          }),\n          catchError((error) =>\n            of(\n              new CheckoutActions.SetPaymentTypeFail(normalizeHttpError(error))\n            )\n          )\n        );\n    })\n  );\n\n  constructor(\n    private actions$: Actions,\n    private paymentTypeConnector: PaymentTypeConnector\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, mergeMap, switchMap } from 'rxjs/operators';\nimport { CartActions } from '../../../cart/store/actions/index';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { CheckoutReplenishmentOrderConnector } from '../../connectors/index';\nimport { CheckoutActions } from '../actions/index';\n\n@Injectable()\nexport class ReplenishmentOrderEffects {\n  @Effect()\n  scheduleReplenishmentOrder$: Observable<\n    | CheckoutActions.ScheduleReplenishmentOrderSuccess\n    | CheckoutActions.ScheduleReplenishmentOrderFail\n    | CartActions.RemoveCart\n  > = this.actions$.pipe(\n    ofType(CheckoutActions.SCHEDULE_REPLENISHMENT_ORDER),\n    map((action: CheckoutActions.ScheduleReplenishmentOrder) => action.payload),\n    mergeMap((payload) => {\n      return this.checkoutReplOrderConnector\n        .scheduleReplenishmentOrder(\n          payload.cartId,\n          payload.scheduleReplenishmentForm,\n          payload.termsChecked,\n          payload.userId\n        )\n        .pipe(\n          switchMap((data) => [\n            new CartActions.RemoveCart({ cartId: payload.cartId }),\n            new CheckoutActions.ScheduleReplenishmentOrderSuccess(data),\n          ]),\n          catchError((error) =>\n            of(\n              new CheckoutActions.ScheduleReplenishmentOrderFail(\n                normalizeHttpError(error)\n              )\n            )\n          )\n        );\n    })\n  );\n\n  constructor(\n    private actions$: Actions,\n    private checkoutReplOrderConnector: CheckoutReplenishmentOrderConnector\n  ) {}\n}\n","import { AddressVerificationEffect } from './address-verification.effect';\nimport { CardTypesEffects } from './card-types.effect';\nimport { CheckoutEffects } from './checkout.effect';\nimport { PaymentTypesEffects } from './payment-types.effect';\nimport { ReplenishmentOrderEffects } from './replenishment-order.effect';\n\nexport const effects: any[] = [\n  CheckoutEffects,\n  AddressVerificationEffect,\n  CardTypesEffects,\n  PaymentTypesEffects,\n  ReplenishmentOrderEffects,\n];\n\nexport * from './address-verification.effect';\nexport * from './card-types.effect';\nexport * from './checkout.effect';\nexport * from './payment-types.effect';\nexport * from './replenishment-order.effect';\n","import { CheckoutActions } from '../actions/index';\nimport { AddressVerificationState } from '../checkout-state';\n\nexport const initialState: AddressVerificationState = {\n  results: {},\n};\n\nexport function reducer(\n  state = initialState,\n  action: CheckoutActions.AddressVerificationActions\n): AddressVerificationState {\n  switch (action.type) {\n    case CheckoutActions.VERIFY_ADDRESS_SUCCESS: {\n      const results = action.payload;\n\n      return {\n        ...state,\n        results,\n      };\n    }\n\n    case CheckoutActions.VERIFY_ADDRESS_FAIL: {\n      return {\n        ...state,\n        results: 'FAIL',\n      };\n    }\n\n    case CheckoutActions.CLEAR_ADDRESS_VERIFICATION_RESULTS: {\n      return {\n        ...state,\n        results: {},\n      };\n    }\n  }\n\n  return state;\n}\n\nexport const getAddressVerificationResults = (\n  state: AddressVerificationState\n) => state.results;\n","import { CardType } from '../../../model/cart.model';\nimport { CheckoutActions } from '../actions/index';\nimport { CardTypesState } from '../checkout-state';\n\nexport const initialState: CardTypesState = {\n  entities: {},\n};\n\nexport function reducer(\n  state = initialState,\n  action:\n    | CheckoutActions.CardTypesAction\n    | CheckoutActions.CheckoutClearMiscsData\n): CardTypesState {\n  switch (action.type) {\n    case CheckoutActions.LOAD_CARD_TYPES_SUCCESS: {\n      const cardTypes: CardType[] = action.payload;\n      const entities = cardTypes.reduce(\n        (cardTypesEntities: { [code: string]: CardType }, name: CardType) => {\n          return {\n            ...cardTypesEntities,\n            [name.code]: name,\n          };\n        },\n        {\n          ...state.entities,\n        }\n      );\n\n      return {\n        ...state,\n        entities,\n      };\n    }\n\n    case CheckoutActions.CHECKOUT_CLEAR_MISCS_DATA: {\n      return initialState;\n    }\n  }\n\n  return state;\n}\n\nexport const getCardTypesEntites = (state: CardTypesState) => state.entities;\n","import { Address } from '../../../model/address.model';\nimport { Cart } from '../../../model/cart.model';\nimport { DeliveryMode, Order } from '../../../model/order.model';\nimport { ReplenishmentOrder } from '../../../model/replenishment-order.model';\nimport { CheckoutStepsState } from '../checkout-state';\nimport { CheckoutActions } from './../actions/index';\n\nexport const initialState: CheckoutStepsState = {\n  poNumber: { po: undefined, costCenter: undefined },\n  address: {},\n  deliveryMode: {\n    supported: {},\n    selected: '',\n  },\n  paymentDetails: {},\n  orderDetails: {},\n};\n\nexport function reducer(\n  state = initialState,\n  action:\n    | CheckoutActions.CheckoutAction\n    | CheckoutActions.CheckoutClearMiscsData\n    | CheckoutActions.SetPaymentTypeSuccess\n    | CheckoutActions.ReplenishmentOrderActions\n): CheckoutStepsState {\n  switch (action.type) {\n    case CheckoutActions.SET_PAYMENT_TYPE_SUCCESS: {\n      const cart: Cart = action.payload;\n      return {\n        ...state,\n        poNumber: {\n          ...state.poNumber,\n          po: cart.purchaseOrderNumber,\n        },\n      };\n    }\n\n    case CheckoutActions.SET_COST_CENTER_SUCCESS: {\n      return {\n        ...state,\n        poNumber: {\n          ...state.poNumber,\n          costCenter: action.payload,\n        },\n      };\n    }\n\n    case CheckoutActions.ADD_DELIVERY_ADDRESS_SUCCESS:\n    case CheckoutActions.SET_DELIVERY_ADDRESS_SUCCESS: {\n      const address: Address = action.payload;\n\n      return {\n        ...state,\n        address,\n      };\n    }\n\n    case CheckoutActions.LOAD_SUPPORTED_DELIVERY_MODES_SUCCESS: {\n      const supportedModes = action.payload;\n      if (!supportedModes) {\n        return state;\n      }\n\n      const supported = supportedModes.reduce(\n        (modes: { [code: string]: DeliveryMode }, mode: DeliveryMode) => {\n          return {\n            ...modes,\n            [mode.code]: mode,\n          };\n        },\n        {\n          ...state.deliveryMode.supported,\n        }\n      );\n\n      return {\n        ...state,\n        deliveryMode: {\n          ...state.deliveryMode,\n          supported,\n        },\n      };\n    }\n\n    case CheckoutActions.SET_DELIVERY_MODE_SUCCESS: {\n      const selected = action.payload;\n\n      return {\n        ...state,\n        deliveryMode: {\n          ...state.deliveryMode,\n          selected,\n        },\n      };\n    }\n\n    case CheckoutActions.CREATE_PAYMENT_DETAILS_SUCCESS:\n    case CheckoutActions.SET_PAYMENT_DETAILS_SUCCESS: {\n      return {\n        ...state,\n        paymentDetails: action.payload,\n      };\n    }\n\n    case CheckoutActions.CREATE_PAYMENT_DETAILS_FAIL: {\n      const paymentDetails = action.payload;\n      if (paymentDetails['hasError']) {\n        return {\n          ...state,\n          paymentDetails,\n        };\n      }\n\n      return state;\n    }\n\n    case CheckoutActions.PLACE_ORDER_SUCCESS:\n    case CheckoutActions.SCHEDULE_REPLENISHMENT_ORDER_SUCCESS: {\n      const orderDetails: Order | ReplenishmentOrder = action.payload;\n\n      return {\n        ...state,\n        orderDetails,\n      };\n    }\n\n    case CheckoutActions.CLEAR_CHECKOUT_DATA: {\n      return initialState;\n    }\n\n    case CheckoutActions.CLEAR_CHECKOUT_STEP: {\n      const stepNumber = action.payload;\n      switch (stepNumber) {\n        case 1: {\n          return {\n            ...state,\n            address: {},\n          };\n        }\n\n        case 2: {\n          return {\n            ...state,\n            deliveryMode: {\n              ...state.deliveryMode,\n              supported: {},\n              selected: '',\n            },\n          };\n        }\n\n        case 3: {\n          return {\n            ...state,\n            paymentDetails: {},\n          };\n        }\n      }\n\n      return state;\n    }\n\n    case CheckoutActions.CLEAR_SUPPORTED_DELIVERY_MODES:\n    case CheckoutActions.CHECKOUT_CLEAR_MISCS_DATA: {\n      return {\n        ...state,\n        deliveryMode: {\n          ...state.deliveryMode,\n          supported: {},\n        },\n      };\n    }\n    case CheckoutActions.LOAD_CHECKOUT_DETAILS_SUCCESS: {\n      return {\n        ...state,\n        address: action.payload.deliveryAddress,\n        deliveryMode: {\n          ...state.deliveryMode,\n          selected:\n            action.payload.deliveryMode && action.payload.deliveryMode.code,\n        },\n        paymentDetails: action.payload.paymentInfo,\n      };\n    }\n\n    case CheckoutActions.CLEAR_CHECKOUT_DELIVERY_ADDRESS: {\n      return {\n        ...state,\n        address: {},\n      };\n    }\n\n    case CheckoutActions.CLEAR_CHECKOUT_DELIVERY_MODE: {\n      return {\n        ...state,\n        deliveryMode: {\n          ...state.deliveryMode,\n          selected: '',\n        },\n      };\n    }\n  }\n\n  return state;\n}\n","import { ORDER_TYPE } from '../../../model/replenishment-order.model';\nimport { CheckoutActions } from '../actions/index';\nimport { OrderTypesState } from '../checkout-state';\n\nexport const initialState: OrderTypesState = {\n  selected: ORDER_TYPE.PLACE_ORDER,\n};\n\nexport function reducer(\n  state = initialState,\n  action: CheckoutActions.OrderTypesActions | CheckoutActions.CheckoutAction\n): OrderTypesState {\n  switch (action.type) {\n    case CheckoutActions.SET_ORDER_TYPE: {\n      return {\n        ...state,\n        selected: action.payload,\n      };\n    }\n\n    case CheckoutActions.CLEAR_CHECKOUT_DATA: {\n      return initialState;\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","import { PaymentType } from '../../../model/cart.model';\nimport { CheckoutActions } from '../actions/index';\nimport { PaymentTypesState } from '../checkout-state';\n\nexport const initialState: PaymentTypesState = {\n  entities: {},\n  selected: undefined,\n};\n\nexport function reducer(\n  state = initialState,\n  action:\n    | CheckoutActions.PaymentTypesAction\n    | CheckoutActions.ClearCheckoutData\n    | CheckoutActions.CheckoutClearMiscsData\n): PaymentTypesState {\n  switch (action.type) {\n    case CheckoutActions.LOAD_PAYMENT_TYPES_SUCCESS: {\n      const paymentTypes: PaymentType[] = action.payload;\n      const entities = paymentTypes.reduce(\n        (\n          paymentTypesEntities: { [code: string]: PaymentType },\n          name: PaymentType\n        ) => {\n          return {\n            ...paymentTypesEntities,\n            [name.code]: name,\n          };\n        },\n        {\n          ...state.entities,\n        }\n      );\n\n      return {\n        ...state,\n        entities,\n      };\n    }\n\n    case CheckoutActions.SET_PAYMENT_TYPE_SUCCESS: {\n      return {\n        ...state,\n        selected: action.payload.paymentType.code,\n      };\n    }\n\n    case CheckoutActions.CLEAR_CHECKOUT_DATA: {\n      return {\n        ...state,\n        selected: undefined,\n      };\n    }\n\n    case CheckoutActions.CHECKOUT_CLEAR_MISCS_DATA: {\n      return initialState;\n    }\n  }\n\n  return state;\n}\n\nexport const getPaymentTypesEntites = (state: PaymentTypesState) =>\n  state.entities;\nexport const getSelectedPaymentType = (state: PaymentTypesState) =>\n  state.selected;\n","import { InjectionToken, Provider } from '@angular/core';\nimport { ActionReducerMap } from '@ngrx/store';\nimport { loaderReducer } from '../../../state/utils/loader/loader.reducer';\nimport {\n  CheckoutState,\n  CheckoutStepsState,\n  CHECKOUT_DETAILS,\n} from '../checkout-state';\nimport * as fromAddressVerification from './address-verification.reducer';\nimport * as fromCardTypes from './card-types.reducer';\nimport * as fromCheckout from './checkout.reducer';\nimport * as fromOrderTypes from './order-types.reducer';\nimport * as fromPaymentTypes from './payment-types.reducer';\n\nexport function getReducers(): ActionReducerMap<CheckoutState> {\n  return {\n    steps: loaderReducer<CheckoutStepsState>(\n      CHECKOUT_DETAILS,\n      fromCheckout.reducer\n    ),\n    cardTypes: fromCardTypes.reducer,\n    addressVerification: fromAddressVerification.reducer,\n    paymentTypes: fromPaymentTypes.reducer,\n    orderType: fromOrderTypes.reducer,\n  };\n}\n\nexport const reducerToken: InjectionToken<ActionReducerMap<\n  CheckoutState\n>> = new InjectionToken<ActionReducerMap<CheckoutState>>('CheckoutReducers');\n\nexport const reducerProvider: Provider = {\n  provide: reducerToken,\n  useFactory: getReducers,\n};\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { CHECKOUT_FEATURE } from './checkout-state';\nimport { effects } from './effects/index';\nimport { reducerProvider, reducerToken } from './reducers/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forFeature(CHECKOUT_FEATURE, reducerToken),\n    EffectsModule.forFeature(effects),\n  ],\n  providers: [reducerProvider],\n})\nexport class CheckoutStoreModule {}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { PageMetaResolver } from '../cms/page/page-meta.resolver';\nimport { CheckoutEventModule } from './events/checkout-event.module';\nimport { interceptors } from './http-interceptors/index';\nimport { CheckoutPageMetaResolver } from './services/checkout-page-meta.resolver';\nimport { CheckoutStoreModule } from './store/checkout-store.module';\n\n@NgModule({\n  imports: [CheckoutStoreModule, CheckoutEventModule],\n})\nexport class CheckoutModule {\n  static forRoot(): ModuleWithProviders<CheckoutModule> {\n    return {\n      ngModule: CheckoutModule,\n      providers: [\n        ...interceptors,\n        {\n          provide: PageMetaResolver,\n          useExisting: CheckoutPageMetaResolver,\n          multi: true,\n        },\n      ],\n    };\n  }\n}\n","import {\n  createFeatureSelector,\n  createSelector,\n  MemoizedSelector,\n} from '@ngrx/store';\nimport { Address } from '../../../model/address.model';\nimport { PaymentDetails } from '../../../model/cart.model';\nimport { DeliveryMode, Order } from '../../../model/order.model';\nimport { ReplenishmentOrder } from '../../../model/replenishment-order.model';\nimport { StateUtils } from '../../../state/utils/index';\nimport { LoaderState } from '../../../state/utils/loader/loader-state';\nimport {\n  CheckoutState,\n  CheckoutStepsState,\n  CHECKOUT_FEATURE,\n  StateWithCheckout,\n} from '../checkout-state';\n\nconst getDeliveryAddressSelector = (state: CheckoutStepsState) => state.address;\nconst getDeliveryModeSelector = (state: CheckoutStepsState) =>\n  state.deliveryMode;\nconst getPaymentDetailsSelector = (state: CheckoutStepsState) =>\n  state.paymentDetails;\nconst getOrderDetailsSelector = (state: CheckoutStepsState) =>\n  state.orderDetails;\n\nexport const getCheckoutState: MemoizedSelector<\n  StateWithCheckout,\n  CheckoutState\n> = createFeatureSelector<CheckoutState>(CHECKOUT_FEATURE);\n\nexport const getCheckoutStepsState: MemoizedSelector<\n  StateWithCheckout,\n  LoaderState<CheckoutStepsState>\n> = createSelector(\n  getCheckoutState,\n  (checkoutState: CheckoutState) => checkoutState.steps\n);\n\nexport const getCheckoutSteps: MemoizedSelector<\n  StateWithCheckout,\n  CheckoutStepsState\n> = createSelector(getCheckoutStepsState, (state) =>\n  StateUtils.loaderValueSelector(state)\n);\n\nexport const getDeliveryAddress: MemoizedSelector<\n  StateWithCheckout,\n  Address\n> = createSelector(getCheckoutSteps, getDeliveryAddressSelector);\n\nexport const getDeliveryMode: MemoizedSelector<\n  StateWithCheckout,\n  {\n    supported: { [code: string]: DeliveryMode };\n    selected: string;\n  }\n> = createSelector(getCheckoutSteps, getDeliveryModeSelector);\n\nexport const getSupportedDeliveryModes: MemoizedSelector<\n  StateWithCheckout,\n  DeliveryMode[]\n> = createSelector(getDeliveryMode, (deliveryMode) => {\n  return (\n    deliveryMode &&\n    Object.keys(deliveryMode.supported).map(\n      (code) => deliveryMode.supported[code]\n    )\n  );\n});\n\nexport const getSelectedDeliveryModeCode: MemoizedSelector<\n  StateWithCheckout,\n  string\n> = createSelector(getDeliveryMode, (deliveryMode) => {\n  return deliveryMode && deliveryMode.selected;\n});\n\nexport const getSelectedDeliveryMode: MemoizedSelector<\n  StateWithCheckout,\n  DeliveryMode\n> = createSelector(getDeliveryMode, (deliveryMode) => {\n  if (deliveryMode.selected !== '') {\n    if (Object.keys(deliveryMode.supported).length === 0) {\n      return null;\n    }\n    return deliveryMode.supported[deliveryMode.selected];\n  }\n});\n\nexport const getPaymentDetails: MemoizedSelector<\n  StateWithCheckout,\n  PaymentDetails\n> = createSelector(getCheckoutSteps, getPaymentDetailsSelector);\n\nexport const getCheckoutOrderDetails: MemoizedSelector<\n  StateWithCheckout,\n  Order | ReplenishmentOrder\n> = createSelector(getCheckoutSteps, getOrderDetailsSelector);\n\nexport const getCheckoutDetailsLoaded: MemoizedSelector<\n  StateWithCheckout,\n  boolean\n> = createSelector(\n  getCheckoutStepsState,\n  (state) =>\n    StateUtils.loaderSuccessSelector(state) &&\n    !StateUtils.loaderLoadingSelector(state)\n);\n\nexport const getPoNumer: MemoizedSelector<\n  StateWithCheckout,\n  string\n> = createSelector(\n  getCheckoutSteps,\n  (state: CheckoutStepsState) => state.poNumber.po\n);\n\nexport const getCostCenter: MemoizedSelector<\n  StateWithCheckout,\n  string\n> = createSelector(\n  getCheckoutSteps,\n  (state: CheckoutStepsState) => state.poNumber.costCenter\n);\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { AddressValidation } from '../../../model/address.model';\nimport {\n  AddressVerificationState,\n  CheckoutState,\n  StateWithCheckout,\n} from '../checkout-state';\nimport * as fromReducer from './../reducers/address-verification.reducer';\nimport { getCheckoutState } from './checkout.selectors';\n\nexport const getAddressVerificationResultsState: MemoizedSelector<\n  StateWithCheckout,\n  AddressVerificationState\n> = createSelector(\n  getCheckoutState,\n  (state: CheckoutState) => state.addressVerification\n);\n\nexport const getAddressVerificationResults: MemoizedSelector<\n  StateWithCheckout,\n  string | AddressValidation\n> = createSelector(\n  getAddressVerificationResultsState,\n  fromReducer.getAddressVerificationResults\n);\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { CardType } from '../../../model/cart.model';\nimport {\n  CardTypesState,\n  CheckoutState,\n  StateWithCheckout,\n} from '../checkout-state';\nimport * as fromReducer from './../reducers/card-types.reducer';\nimport { getCheckoutState } from './checkout.selectors';\n\nexport const getCardTypesState: MemoizedSelector<\n  StateWithCheckout,\n  CardTypesState\n> = createSelector(getCheckoutState, (state: CheckoutState) => state.cardTypes);\n\nexport const getCardTypesEntites: MemoizedSelector<\n  StateWithCheckout,\n  { [code: string]: CardType }\n> = createSelector(getCardTypesState, fromReducer.getCardTypesEntites);\n\nexport const getAllCardTypes: MemoizedSelector<\n  StateWithCheckout,\n  CardType[]\n> = createSelector(getCardTypesEntites, (entites) => {\n  return Object.keys(entites).map((code) => entites[code]);\n});\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { ORDER_TYPE } from '../../../model/replenishment-order.model';\nimport {\n  CheckoutState,\n  OrderTypesState,\n  StateWithCheckout,\n} from '../checkout-state';\nimport { getCheckoutState } from './checkout.selectors';\n\nexport const getSelectedOrderTypeSelector = (state: OrderTypesState) =>\n  state.selected;\n\nexport const getOrderTypesState: MemoizedSelector<\n  StateWithCheckout,\n  OrderTypesState\n> = createSelector(getCheckoutState, (state: CheckoutState) => state.orderType);\n\nexport const getSelectedOrderType: MemoizedSelector<\n  StateWithCheckout,\n  ORDER_TYPE\n> = createSelector(getOrderTypesState, getSelectedOrderTypeSelector);\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { PaymentType } from '../../../model/cart.model';\nimport {\n  PaymentTypesState,\n  CheckoutState,\n  StateWithCheckout,\n} from '../checkout-state';\nimport * as fromReducer from './../reducers/payment-types.reducer';\nimport { getCheckoutState } from './checkout.selectors';\n\nexport const getPaymentTypesState: MemoizedSelector<\n  StateWithCheckout,\n  PaymentTypesState\n> = createSelector(\n  getCheckoutState,\n  (state: CheckoutState) => state.paymentTypes\n);\n\nexport const getPaymentTypesEntites: MemoizedSelector<\n  StateWithCheckout,\n  { [code: string]: PaymentType }\n> = createSelector(getPaymentTypesState, fromReducer.getPaymentTypesEntites);\n\nexport const getAllPaymentTypes: MemoizedSelector<\n  StateWithCheckout,\n  PaymentType[]\n> = createSelector(getPaymentTypesEntites, (entites) => {\n  return Object.keys(entites).map((code) => entites[code]);\n});\n\nexport const getSelectedPaymentType: MemoizedSelector<\n  StateWithCheckout,\n  string\n> = createSelector(getPaymentTypesState, fromReducer.getSelectedPaymentType);\n","import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map, take } from 'rxjs/operators';\nimport { UserIdService } from '../../auth/user-auth/facade/user-id.service';\nimport { ActiveCartService } from '../../cart/facade/active-cart.service';\nimport { OCC_USER_ID_ANONYMOUS } from '../../occ/utils/occ-constants';\nimport { StateWithProcess } from '../../process/store/process-state';\nimport { CheckoutActions } from '../store/actions/index';\nimport { StateWithCheckout } from '../store/checkout-state';\nimport { CheckoutSelectors } from '../store/selectors/index';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutCostCenterService {\n  constructor(\n    protected checkoutStore: Store<StateWithCheckout | StateWithProcess<void>>,\n    protected activeCartService: ActiveCartService,\n    protected userIdService: UserIdService\n  ) {}\n\n  /**\n   * Set cost center to cart\n   * @param costCenterId : cost center id\n   */\n  setCostCenter(costCenterId: string): void {\n    let cartId;\n    this.activeCartService\n      .getActiveCartId()\n      .pipe(take(1))\n      .subscribe((activeCartId) => (cartId = activeCartId));\n\n    this.userIdService.invokeWithUserId((userId) => {\n      if (userId && userId !== OCC_USER_ID_ANONYMOUS && cartId) {\n        this.checkoutStore.dispatch(\n          new CheckoutActions.SetCostCenter({\n            userId: userId,\n            cartId: cartId,\n            costCenterId: costCenterId,\n          })\n        );\n      }\n    });\n  }\n\n  /**\n   * Get cost center id from cart\n   */\n  getCostCenter(): Observable<string> {\n    return combineLatest([\n      this.activeCartService.getActive(),\n      this.checkoutStore.pipe(select(CheckoutSelectors.getCostCenter)),\n    ]).pipe(\n      filter(([cart]) => Boolean(cart)),\n      map(([cart, costCenterId]) => {\n        if (costCenterId === undefined && cart.costCenter) {\n          costCenterId = cart.costCenter.code;\n          this.checkoutStore.dispatch(\n            new CheckoutActions.SetCostCenterSuccess(cart.costCenter.code)\n          );\n        }\n        return costCenterId;\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport {\n  filter,\n  pluck,\n  shareReplay,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { UserIdService } from '../../auth/user-auth/facade/user-id.service';\nimport { ActiveCartService } from '../../cart/facade/active-cart.service';\nimport { Address, AddressValidation } from '../../model/address.model';\nimport { DeliveryMode } from '../../model/order.model';\nimport { OCC_USER_ID_ANONYMOUS } from '../../occ/utils/occ-constants';\nimport { StateWithProcess } from '../../process/store/process-state';\nimport { getProcessStateFactory } from '../../process/store/selectors/process-group.selectors';\nimport { LoaderState } from '../../state/utils/loader/loader-state';\nimport { CheckoutActions } from '../store/actions/index';\nimport {\n  SET_DELIVERY_ADDRESS_PROCESS_ID,\n  SET_DELIVERY_MODE_PROCESS_ID,\n  SET_SUPPORTED_DELIVERY_MODE_PROCESS_ID,\n  StateWithCheckout,\n} from '../store/checkout-state';\nimport { CheckoutSelectors } from '../store/selectors/index';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutDeliveryService {\n  constructor(\n    protected checkoutStore: Store<StateWithCheckout | StateWithProcess<void>>,\n    protected activeCartService: ActiveCartService,\n    protected userIdService: UserIdService\n  ) {}\n\n  /**\n   * Get supported delivery modes\n   */\n  getSupportedDeliveryModes(): Observable<DeliveryMode[]> {\n    return this.checkoutStore.pipe(\n      select(CheckoutSelectors.getSupportedDeliveryModes),\n      withLatestFrom(\n        this.checkoutStore.pipe(\n          select(getProcessStateFactory(SET_SUPPORTED_DELIVERY_MODE_PROCESS_ID))\n        )\n      ),\n      tap(([, loadingState]) => {\n        if (\n          !(loadingState.loading || loadingState.success || loadingState.error)\n        ) {\n          this.loadSupportedDeliveryModes();\n        }\n      }),\n      pluck(0),\n      shareReplay({ bufferSize: 1, refCount: true })\n    );\n  }\n\n  /**\n   * Get selected delivery mode\n   */\n  getSelectedDeliveryMode(): Observable<DeliveryMode> {\n    return this.checkoutStore.pipe(\n      select(CheckoutSelectors.getSelectedDeliveryMode)\n    );\n  }\n\n  /**\n   * Get selected delivery mode code\n   */\n  getSelectedDeliveryModeCode(): Observable<string> {\n    return this.checkoutStore.pipe(\n      select(CheckoutSelectors.getSelectedDeliveryModeCode)\n    );\n  }\n\n  /**\n   * Get delivery address\n   */\n  getDeliveryAddress(): Observable<Address> {\n    return this.checkoutStore.pipe(\n      select(CheckoutSelectors.getDeliveryAddress)\n    );\n  }\n\n  /**\n   * Get status about successfully set Delivery Address\n   */\n  getSetDeliveryAddressProcess(): Observable<LoaderState<void>> {\n    return this.checkoutStore.pipe(\n      select(getProcessStateFactory(SET_DELIVERY_ADDRESS_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Clear info about process of setting Delivery Address\n   */\n  resetSetDeliveryAddressProcess(): void {\n    this.checkoutStore.dispatch(\n      new CheckoutActions.ResetSetDeliveryAddressProcess()\n    );\n  }\n\n  /**\n   * Get status about of set Delivery Mode process\n   */\n  getSetDeliveryModeProcess(): Observable<LoaderState<void>> {\n    return this.checkoutStore.pipe(\n      select(getProcessStateFactory(SET_DELIVERY_MODE_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Clear info about process of setting Delivery Mode\n   */\n  resetSetDeliveryModeProcess(): void {\n    this.checkoutStore.dispatch(\n      new CheckoutActions.ResetSetDeliveryModeProcess()\n    );\n  }\n\n  /**\n   * Clear info about process of setting Supported Delivery Modes\n   */\n  resetLoadSupportedDeliveryModesProcess(): void {\n    this.checkoutStore.dispatch(\n      new CheckoutActions.ResetLoadSupportedDeliveryModesProcess()\n    );\n  }\n\n  /**\n   * Get status about of set supported Delivery Modes process\n   */\n  getLoadSupportedDeliveryModeProcess(): Observable<LoaderState<void>> {\n    return this.checkoutStore.pipe(\n      select(getProcessStateFactory(SET_SUPPORTED_DELIVERY_MODE_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Clear supported delivery modes loaded in last checkout process\n   */\n  clearCheckoutDeliveryModes(): void {\n    this.checkoutStore.dispatch(\n      new CheckoutActions.ClearSupportedDeliveryModes()\n    );\n  }\n\n  /**\n   * Get address verification results\n   */\n  getAddressVerificationResults(): Observable<AddressValidation | string> {\n    return this.checkoutStore.pipe(\n      select(CheckoutSelectors.getAddressVerificationResults),\n      filter((results) => Object.keys(results).length !== 0)\n    );\n  }\n\n  /**\n   * Create and set a delivery address using the address param\n   * @param address : the Address to be created and set\n   */\n  createAndSetAddress(address: Address): void {\n    if (this.actionAllowed()) {\n      let userId;\n      this.userIdService\n        .getUserId()\n        .subscribe((occUserId) => (userId = occUserId))\n        .unsubscribe();\n\n      let cartId;\n      this.activeCartService\n        .getActiveCartId()\n        .subscribe((activeCartId) => (cartId = activeCartId))\n        .unsubscribe();\n      if (userId && cartId) {\n        this.checkoutStore.dispatch(\n          new CheckoutActions.AddDeliveryAddress({\n            userId,\n            cartId,\n            address: address,\n          })\n        );\n      }\n    }\n  }\n\n  /**\n   * Load supported delivery modes\n   */\n  loadSupportedDeliveryModes(): void {\n    if (this.actionAllowed()) {\n      let userId;\n      this.userIdService\n        .getUserId()\n        .subscribe((occUserId) => (userId = occUserId))\n        .unsubscribe();\n\n      let cartId;\n      this.activeCartService\n        .getActiveCartId()\n        .subscribe((activeCartId) => (cartId = activeCartId))\n        .unsubscribe();\n      if (userId && cartId) {\n        this.checkoutStore.dispatch(\n          new CheckoutActions.LoadSupportedDeliveryModes({\n            userId,\n            cartId,\n          })\n        );\n      }\n    }\n  }\n\n  /**\n   * Set delivery mode\n   * @param mode : The delivery mode to be set\n   */\n  setDeliveryMode(mode: string): void {\n    if (this.actionAllowed()) {\n      let userId;\n      this.userIdService\n        .getUserId()\n        .subscribe((occUserId) => (userId = occUserId))\n        .unsubscribe();\n\n      let cartId;\n      this.activeCartService\n        .getActiveCartId()\n        .subscribe((activeCartId) => (cartId = activeCartId))\n        .unsubscribe();\n      if (userId && cartId) {\n        this.checkoutStore.dispatch(\n          new CheckoutActions.SetDeliveryMode({\n            userId,\n            cartId,\n            selectedModeId: mode,\n          })\n        );\n      }\n    }\n  }\n\n  /**\n   * Verifies the address\n   * @param address : the address to be verified\n   */\n  verifyAddress(address: Address): void {\n    if (this.actionAllowed()) {\n      let userId;\n      this.userIdService\n        .getUserId()\n        .subscribe((occUserId) => (userId = occUserId))\n        .unsubscribe();\n      if (userId) {\n        this.checkoutStore.dispatch(\n          new CheckoutActions.VerifyAddress({\n            userId,\n            address,\n          })\n        );\n      }\n    }\n  }\n\n  /**\n   * Set delivery address\n   * @param address : The address to be set\n   */\n  setDeliveryAddress(address: Address): void {\n    if (this.actionAllowed()) {\n      let userId;\n      this.userIdService\n        .getUserId()\n        .subscribe((occUserId) => (userId = occUserId))\n        .unsubscribe();\n\n      let cartId;\n      this.activeCartService\n        .getActiveCartId()\n        .subscribe((activeCartId) => (cartId = activeCartId))\n        .unsubscribe();\n      if (cartId && userId) {\n        this.checkoutStore.dispatch(\n          new CheckoutActions.SetDeliveryAddress({\n            userId,\n            cartId,\n            address: address,\n          })\n        );\n      }\n    }\n  }\n\n  /**\n   * Clear address verification results\n   */\n  clearAddressVerificationResults(): void {\n    this.checkoutStore.dispatch(\n      new CheckoutActions.ClearAddressVerificationResults()\n    );\n  }\n\n  /**\n   * Clear address already setup in last checkout process\n   */\n  clearCheckoutDeliveryAddress(): void {\n    let userId;\n    this.userIdService\n      .getUserId()\n      .subscribe((occUserId) => (userId = occUserId))\n      .unsubscribe();\n\n    let cartId;\n    this.activeCartService\n      .getActiveCartId()\n      .subscribe((activeCartId) => (cartId = activeCartId))\n      .unsubscribe();\n    if (userId && cartId) {\n      this.checkoutStore.dispatch(\n        new CheckoutActions.ClearCheckoutDeliveryAddress({\n          userId,\n          cartId,\n        })\n      );\n    }\n  }\n\n  /**\n   * Clear selected delivery mode setup in last checkout process\n   */\n  clearCheckoutDeliveryMode(): void {\n    let userId;\n    this.userIdService\n      .getUserId()\n      .subscribe((occUserId) => (userId = occUserId))\n      .unsubscribe();\n\n    let cartId;\n    this.activeCartService\n      .getActiveCartId()\n      .subscribe((activeCartId) => (cartId = activeCartId))\n      .unsubscribe();\n    if (userId && cartId) {\n      this.checkoutStore.dispatch(\n        new CheckoutActions.ClearCheckoutDeliveryMode({\n          userId,\n          cartId,\n        })\n      );\n    }\n  }\n\n  /**\n   * Clear address and delivery mode already setup in last checkout process\n   */\n  clearCheckoutDeliveryDetails(): void {\n    this.clearCheckoutDeliveryAddress();\n    this.clearCheckoutDeliveryMode();\n    this.clearCheckoutDeliveryModes();\n  }\n\n  protected actionAllowed(): boolean {\n    let userId;\n    this.userIdService\n      .getUserId()\n      .subscribe((occUserId) => (userId = occUserId))\n      .unsubscribe();\n    return (\n      (userId && userId !== OCC_USER_ID_ANONYMOUS) ||\n      this.activeCartService.isGuestCart()\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { UserIdService } from '../../auth/user-auth/facade/user-id.service';\nimport { ActiveCartService } from '../../cart/facade/active-cart.service';\nimport { CardType, PaymentDetails } from '../../model/cart.model';\nimport { OCC_USER_ID_ANONYMOUS } from '../../occ/utils/occ-constants';\nimport { StateWithProcess } from '../../process/store/process-state';\nimport { getProcessStateFactory } from '../../process/store/selectors/process-group.selectors';\nimport { LoaderState } from '../../state/utils/loader/loader-state';\nimport { CheckoutActions } from '../store/actions/index';\nimport {\n  SET_PAYMENT_DETAILS_PROCESS_ID,\n  StateWithCheckout,\n} from '../store/checkout-state';\nimport { CheckoutSelectors } from '../store/selectors/index';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutPaymentService {\n  constructor(\n    protected checkoutStore: Store<StateWithCheckout | StateWithProcess<void>>,\n    protected activeCartService: ActiveCartService,\n    protected userIdService: UserIdService\n  ) {}\n\n  /**\n   * Get card types\n   */\n  getCardTypes(): Observable<CardType[]> {\n    return this.checkoutStore.pipe(select(CheckoutSelectors.getAllCardTypes));\n  }\n\n  /**\n   * Get payment details\n   */\n  getPaymentDetails(): Observable<PaymentDetails> {\n    return this.checkoutStore.pipe(select(CheckoutSelectors.getPaymentDetails));\n  }\n\n  /**\n   * Get status about set Payment Details process\n   */\n  getSetPaymentDetailsResultProcess(): Observable<LoaderState<void>> {\n    return this.checkoutStore.pipe(\n      select(getProcessStateFactory(SET_PAYMENT_DETAILS_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Clear info about process of setting Payment Details\n   */\n  resetSetPaymentDetailsProcess(): void {\n    this.checkoutStore.dispatch(\n      new CheckoutActions.ResetSetPaymentDetailsProcess()\n    );\n  }\n\n  /**\n   * Load the supported card types\n   */\n  loadSupportedCardTypes(): void {\n    this.checkoutStore.dispatch(new CheckoutActions.LoadCardTypes());\n  }\n\n  /**\n   * Create payment details using the given paymentDetails param\n   * @param paymentDetails: the PaymentDetails to be created\n   */\n  createPaymentDetails(paymentDetails: PaymentDetails): void {\n    if (this.actionAllowed()) {\n      let userId;\n      this.userIdService\n        .getUserId()\n        .subscribe((occUserId) => (userId = occUserId))\n        .unsubscribe();\n\n      let cartId;\n      this.activeCartService\n        .getActiveCartId()\n        .subscribe((activeCartId) => (cartId = activeCartId))\n        .unsubscribe();\n\n      if (userId && cartId) {\n        this.checkoutStore.dispatch(\n          new CheckoutActions.CreatePaymentDetails({\n            userId,\n            cartId,\n            paymentDetails,\n          })\n        );\n      }\n    }\n  }\n\n  /**\n   * Set payment details\n   * @param paymentDetails : the PaymentDetails to be set\n   */\n  setPaymentDetails(paymentDetails: PaymentDetails): void {\n    if (this.actionAllowed()) {\n      let userId;\n      this.userIdService\n        .getUserId()\n        .subscribe((occUserId) => (userId = occUserId))\n        .unsubscribe();\n\n      let cart;\n      this.activeCartService\n        .getActive()\n        .subscribe((activeCart) => (cart = activeCart))\n        .unsubscribe();\n      if (userId && cart) {\n        this.checkoutStore.dispatch(\n          new CheckoutActions.SetPaymentDetails({\n            userId,\n            cartId: cart.code,\n            paymentDetails: paymentDetails,\n          })\n        );\n      }\n    }\n  }\n\n  /**\n   * Sets payment loading to true without having the flicker issue (GH-3102)\n   */\n  paymentProcessSuccess() {\n    this.checkoutStore.dispatch(new CheckoutActions.PaymentProcessSuccess());\n  }\n\n  protected actionAllowed(): boolean {\n    let userId;\n    this.userIdService\n      .getUserId()\n      .subscribe((occUserId) => (userId = occUserId))\n      .unsubscribe();\n    return (\n      (userId && userId !== OCC_USER_ID_ANONYMOUS) ||\n      this.activeCartService.isGuestCart()\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { UserIdService } from '../../auth/user-auth/facade/user-id.service';\nimport { ActiveCartService } from '../../cart/facade/active-cart.service';\nimport { Order } from '../../model/order.model';\nimport {\n  ORDER_TYPE,\n  ReplenishmentOrder,\n  ScheduleReplenishmentForm,\n} from '../../model/replenishment-order.model';\nimport { OCC_USER_ID_ANONYMOUS } from '../../occ/utils/occ-constants';\nimport { StateWithProcess } from '../../process/store/process-state';\nimport {\n  getProcessErrorFactory,\n  getProcessLoadingFactory,\n  getProcessSuccessFactory,\n} from '../../process/store/selectors/process-group.selectors';\nimport { CheckoutActions } from '../store/actions/index';\nimport {\n  PLACED_ORDER_PROCESS_ID,\n  StateWithCheckout,\n} from '../store/checkout-state';\nimport { CheckoutSelectors } from '../store/selectors/index';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutService {\n  constructor(\n    protected checkoutStore: Store<StateWithCheckout | StateWithProcess<void>>,\n    protected activeCartService: ActiveCartService,\n    protected userIdService: UserIdService\n  ) {}\n\n  /**\n   * Places an order\n   */\n  placeOrder(termsChecked: boolean): void {\n    if (this.actionAllowed()) {\n      let userId;\n      this.userIdService\n        .getUserId()\n        .subscribe((occUserId) => (userId = occUserId))\n        .unsubscribe();\n\n      let cartId;\n      this.activeCartService\n        .getActiveCartId()\n        .subscribe((activeCartId) => (cartId = activeCartId))\n        .unsubscribe();\n\n      if (userId && cartId) {\n        this.checkoutStore.dispatch(\n          new CheckoutActions.PlaceOrder({\n            userId,\n            cartId,\n            termsChecked,\n          })\n        );\n      }\n    }\n  }\n\n  /**\n   * Schedule a replenishment order\n   */\n  scheduleReplenishmentOrder(\n    scheduleReplenishmentForm: ScheduleReplenishmentForm,\n    termsChecked: boolean\n  ): void {\n    let cartId;\n\n    this.activeCartService\n      .getActiveCartId()\n      .pipe(take(1))\n      .subscribe((activeCartId) => (cartId = activeCartId));\n\n    this.userIdService.invokeWithUserId((userId) => {\n      if (\n        Boolean(cartId) &&\n        Boolean(userId) &&\n        userId !== OCC_USER_ID_ANONYMOUS\n      ) {\n        this.checkoutStore.dispatch(\n          new CheckoutActions.ScheduleReplenishmentOrder({\n            cartId,\n            scheduleReplenishmentForm,\n            termsChecked,\n            userId,\n          })\n        );\n      }\n    });\n  }\n\n  /**\n   * Returns the place or schedule replenishment order's loading flag\n   */\n  getPlaceOrderLoading(): Observable<boolean> {\n    return this.checkoutStore.pipe(\n      select(getProcessLoadingFactory(PLACED_ORDER_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns the place or schedule replenishment order's success flag\n   */\n  getPlaceOrderSuccess(): Observable<boolean> {\n    return this.checkoutStore.pipe(\n      select(getProcessSuccessFactory(PLACED_ORDER_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns the place or schedule replenishment order's error flag\n   */\n  getPlaceOrderError(): Observable<boolean> {\n    return this.checkoutStore.pipe(\n      select(getProcessErrorFactory(PLACED_ORDER_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Resets the place or schedule replenishment order's processing state\n   */\n  clearPlaceOrderState(): void {\n    this.checkoutStore.dispatch(new CheckoutActions.ClearPlaceOrder());\n  }\n\n  /**\n   * Clear checkout data\n   */\n  clearCheckoutData(): void {\n    this.checkoutStore.dispatch(new CheckoutActions.ClearCheckoutData());\n  }\n\n  /**\n   * Clear checkout step\n   * @param stepNumber : the step number to be cleared\n   */\n  clearCheckoutStep(stepNumber: number): void {\n    this.checkoutStore.dispatch(\n      new CheckoutActions.ClearCheckoutStep(stepNumber)\n    );\n  }\n\n  /**\n   * Load checkout details data\n   * @param cartId : string Cart ID of loaded cart\n   */\n  loadCheckoutDetails(cartId: string) {\n    let userId;\n    this.userIdService\n      .getUserId()\n      .subscribe((occUserId) => (userId = occUserId))\n      .unsubscribe();\n    if (userId) {\n      this.checkoutStore.dispatch(\n        new CheckoutActions.LoadCheckoutDetails({\n          userId,\n          cartId,\n        })\n      );\n    }\n  }\n\n  /**\n   * Get status of checkout details loaded\n   */\n  getCheckoutDetailsLoaded(): Observable<boolean> {\n    return this.checkoutStore.pipe(\n      select(CheckoutSelectors.getCheckoutDetailsLoaded)\n    );\n  }\n\n  /**\n   * Get order details\n   */\n  getOrderDetails(): Observable<Order | ReplenishmentOrder> {\n    return this.checkoutStore.pipe(\n      select(CheckoutSelectors.getCheckoutOrderDetails)\n    );\n  }\n\n  /**\n   * Set checkout order type\n   * @param orderType : an enum of types of order we are placing\n   */\n  setOrderType(orderType: ORDER_TYPE): void {\n    this.checkoutStore.dispatch(new CheckoutActions.SetOrderType(orderType));\n  }\n\n  /**\n   * Get current checkout order type\n   */\n  getCurrentOrderType(): Observable<ORDER_TYPE> {\n    return this.checkoutStore.pipe(\n      select(CheckoutSelectors.getSelectedOrderType)\n    );\n  }\n\n  protected actionAllowed(): boolean {\n    let userId;\n    this.userIdService\n      .getUserId()\n      .subscribe((occUserId) => (userId = occUserId))\n      .unsubscribe();\n    return (\n      (userId && userId !== OCC_USER_ID_ANONYMOUS) ||\n      this.activeCartService.isGuestCart()\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { combineLatest, Observable } from 'rxjs';\nimport {\n  map,\n  pluck,\n  shareReplay,\n  take,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { UserIdService } from '../../auth/user-auth/facade/user-id.service';\nimport { ActiveCartService } from '../../cart/facade/active-cart.service';\nimport { B2BPaymentTypeEnum, PaymentType } from '../../model/cart.model';\nimport { OCC_USER_ID_ANONYMOUS } from '../../occ/utils/occ-constants';\nimport { StateWithProcess } from '../../process/store/process-state';\nimport { getProcessStateFactory } from '../../process/store/selectors/process-group.selectors';\nimport { CheckoutActions } from '../store/actions/index';\nimport {\n  GET_PAYMENT_TYPES_PROCESS_ID,\n  StateWithCheckout,\n} from '../store/checkout-state';\nimport { CheckoutSelectors } from '../store/selectors/index';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PaymentTypeService {\n  constructor(\n    protected checkoutStore: Store<StateWithCheckout | StateWithProcess<void>>,\n    protected activeCartService: ActiveCartService,\n    protected userIdService: UserIdService\n  ) {}\n\n  /**\n   * Get payment types\n   */\n  getPaymentTypes(): Observable<PaymentType[]> {\n    return this.checkoutStore.pipe(\n      select(CheckoutSelectors.getAllPaymentTypes),\n      withLatestFrom(\n        this.checkoutStore.pipe(\n          select(getProcessStateFactory(GET_PAYMENT_TYPES_PROCESS_ID))\n        )\n      ),\n      tap(([_, loadingState]) => {\n        if (\n          !(loadingState.loading || loadingState.success || loadingState.error)\n        ) {\n          this.loadPaymentTypes();\n        }\n      }),\n      pluck(0),\n      shareReplay({ bufferSize: 1, refCount: true })\n    );\n  }\n\n  /**\n   * Load the supported payment types\n   */\n  loadPaymentTypes(): void {\n    this.checkoutStore.dispatch(new CheckoutActions.LoadPaymentTypes());\n  }\n\n  /**\n   * Set payment type to cart\n   * @param typeCode\n   * @param poNumber : purchase order number\n   */\n  setPaymentType(typeCode: string, poNumber?: string): void {\n    let cartId;\n    this.activeCartService\n      .getActiveCartId()\n      .pipe(take(1))\n      .subscribe((activeCartId) => (cartId = activeCartId));\n\n    this.userIdService.invokeWithUserId((userId) => {\n      if (userId && userId !== OCC_USER_ID_ANONYMOUS && cartId) {\n        this.checkoutStore.dispatch(\n          new CheckoutActions.SetPaymentType({\n            userId: userId,\n            cartId: cartId,\n            typeCode: typeCode,\n            poNumber: poNumber,\n          })\n        );\n      }\n    });\n  }\n\n  /**\n   * Get the selected payment type\n   */\n  getSelectedPaymentType(): Observable<string> {\n    return combineLatest([\n      this.activeCartService.getActive(),\n      this.checkoutStore.pipe(select(CheckoutSelectors.getSelectedPaymentType)),\n    ]).pipe(\n      tap(([cart, selected]) => {\n        if (selected === undefined) {\n          // in b2b, cart always has paymentType (default value 'CARD')\n          if (cart && cart.paymentType) {\n            this.checkoutStore.dispatch(\n              new CheckoutActions.SetPaymentTypeSuccess(cart)\n            );\n          }\n        }\n      }),\n      map(([, selected]) => selected)\n    );\n  }\n\n  /**\n   * Get whether the selected payment type is \"ACCOUNT\" payment\n   */\n  isAccountPayment(): Observable<boolean> {\n    return this.getSelectedPaymentType().pipe(\n      map((selected) => selected === B2BPaymentTypeEnum.ACCOUNT_PAYMENT)\n    );\n  }\n\n  /**\n   * Get PO Number\n   */\n  getPoNumber(): Observable<string> {\n    return combineLatest([\n      this.activeCartService.getActive(),\n      this.checkoutStore.pipe(select(CheckoutSelectors.getPoNumer)),\n    ]).pipe(\n      tap(([cart, po]) => {\n        if (po === undefined && cart && cart.purchaseOrderNumber) {\n          this.checkoutStore.dispatch(\n            new CheckoutActions.SetPaymentTypeSuccess(cart)\n          );\n        }\n      }),\n      map(([_, po]) => po)\n    );\n  }\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {\n  CheckoutReplenishmentOrderAdapter,\n  REPLENISHMENT_ORDER_FORM_SERIALIZER,\n  REPLENISHMENT_ORDER_NORMALIZER,\n} from '../../../checkout/index';\nimport {\n  ReplenishmentOrder,\n  ScheduleReplenishmentForm,\n} from '../../../model/replenishment-order.model';\nimport { ConverterService } from '../../../util/converter.service';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\n\n@Injectable()\nexport class OccCheckoutReplenishmentOrderAdapter\n  implements CheckoutReplenishmentOrderAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  scheduleReplenishmentOrder(\n    cartId: string,\n    scheduleReplenishmentForm: ScheduleReplenishmentForm,\n    termsChecked: boolean,\n    userId: string\n  ): Observable<ReplenishmentOrder> {\n    scheduleReplenishmentForm = this.converter.convert(\n      scheduleReplenishmentForm,\n      REPLENISHMENT_ORDER_FORM_SERIALIZER\n    );\n\n    const headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n    const params = new HttpParams()\n      .set('cartId', cartId)\n      .set('termsChecked', termsChecked.toString());\n\n    return this.http\n      .post(\n        this.occEndpoints.getUrl('scheduleReplenishmentOrder', {\n          userId,\n        }),\n        scheduleReplenishmentForm,\n        { headers, params }\n      )\n      .pipe(this.converter.pipeable(REPLENISHMENT_ORDER_NORMALIZER));\n  }\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CheckoutAdapter } from '../../../checkout/connectors/checkout/checkout.adapter';\nimport { ORDER_NORMALIZER } from '../../../checkout/connectors/checkout/converters';\nimport { CheckoutDetails } from '../../../checkout/models/checkout.model';\nimport { Order } from '../../../model/order.model';\nimport { ConverterService } from '../../../util/converter.service';\nimport { Occ } from '../../occ-models/occ.models';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\nimport {\n  InterceptorUtil,\n  USE_CLIENT_TOKEN,\n} from '../../utils/interceptor-util';\nimport { OCC_USER_ID_ANONYMOUS } from '../../utils/occ-constants';\n\n// To be changed to a more optimised params after ticket: C3PO-1076\nconst CHECKOUT_PARAMS = 'deliveryAddress(FULL),deliveryMode,paymentInfo(FULL)';\nconst CARTS_ENDPOINT = '/carts/';\n\n@Injectable()\nexport class OccCheckoutAdapter implements CheckoutAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  protected getEndpoint(userId: string, subEndpoint: string): string {\n    const orderEndpoint = 'users/' + userId + subEndpoint;\n    return this.occEndpoints.getEndpoint(orderEndpoint);\n  }\n\n  public placeOrder(\n    userId: string,\n    cartId: string,\n    termsChecked: boolean\n  ): Observable<Order> {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/x-www-form-urlencoded',\n    });\n\n    if (userId === OCC_USER_ID_ANONYMOUS) {\n      headers = InterceptorUtil.createHeader(USE_CLIENT_TOKEN, true, headers);\n    }\n    const params = new HttpParams()\n      .set('cartId', cartId)\n      .set('termsChecked', termsChecked.toString());\n\n    return this.http\n      .post<Occ.Order>(\n        this.occEndpoints.getUrl('placeOrder', { userId }),\n        {},\n        { headers, params }\n      )\n      .pipe(this.converter.pipeable(ORDER_NORMALIZER));\n  }\n\n  loadCheckoutDetails(\n    userId: string,\n    cartId: string\n  ): Observable<CheckoutDetails> {\n    const url = this.getEndpoint(userId, CARTS_ENDPOINT) + cartId;\n    const params = new HttpParams({\n      fromString: `fields=${CHECKOUT_PARAMS}`,\n    });\n    return this.http.get<CheckoutDetails>(url, { params });\n  }\n\n  clearCheckoutDeliveryAddress(\n    userId: string,\n    cartId: string\n  ): Observable<any> {\n    const url = `${this.getEndpoint(\n      userId,\n      CARTS_ENDPOINT\n    )}${cartId}/addresses/delivery`;\n    return this.http.delete<any>(url);\n  }\n\n  clearCheckoutDeliveryMode(userId: string, cartId: string): Observable<any> {\n    const url = `${this.getEndpoint(\n      userId,\n      CARTS_ENDPOINT\n    )}${cartId}/deliverymode`;\n    return this.http.delete<any>(url);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CheckoutAdapter } from '../../../checkout/connectors/checkout/checkout.adapter';\nimport { ORDER_NORMALIZER } from '../../../checkout/connectors/checkout/converters';\nimport { CheckoutCostCenterAdapter } from '../../../checkout/connectors/cost-center/checkout-cost-center.adapter';\nimport { CheckoutDeliveryAdapter } from '../../../checkout/connectors/delivery/checkout-delivery.adapter';\nimport {\n  CheckoutReplenishmentOrderAdapter,\n  REPLENISHMENT_ORDER_FORM_SERIALIZER,\n  REPLENISHMENT_ORDER_NORMALIZER,\n} from '../../../checkout/connectors/index';\nimport { PaymentTypeAdapter } from '../../../checkout/connectors/payment-type/payment-type.adapter';\nimport { CheckoutPaymentAdapter } from '../../../checkout/connectors/payment/checkout-payment.adapter';\nimport { provideDefaultConfig } from '../../../config/config-providers';\nimport {\n  OccOrderNormalizer,\n  OccReplenishmentOrderFormSerializer,\n  OccReplenishmentOrderNormalizer,\n} from './converters/index';\nimport { defaultOccCheckoutConfig } from './default-occ-checkout-config';\nimport { OccCheckoutCostCenterAdapter } from './occ-checkout-cost-center.adapter';\nimport { OccCheckoutDeliveryAdapter } from './occ-checkout-delivery.adapter';\nimport { OccCheckoutPaymentTypeAdapter } from './occ-checkout-payment-type.adapter';\nimport { OccCheckoutPaymentAdapter } from './occ-checkout-payment.adapter';\nimport { OccCheckoutReplenishmentOrderAdapter } from './occ-checkout-replenishment-order.adapter';\nimport { OccCheckoutAdapter } from './occ-checkout.adapter';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(defaultOccCheckoutConfig),\n    {\n      provide: CheckoutAdapter,\n      useClass: OccCheckoutAdapter,\n    },\n    { provide: ORDER_NORMALIZER, useExisting: OccOrderNormalizer, multi: true },\n    {\n      provide: CheckoutDeliveryAdapter,\n      useClass: OccCheckoutDeliveryAdapter,\n    },\n    {\n      provide: CheckoutPaymentAdapter,\n      useClass: OccCheckoutPaymentAdapter,\n    },\n    {\n      provide: PaymentTypeAdapter,\n      useClass: OccCheckoutPaymentTypeAdapter,\n    },\n    {\n      provide: CheckoutCostCenterAdapter,\n      useClass: OccCheckoutCostCenterAdapter,\n    },\n    {\n      provide: CheckoutReplenishmentOrderAdapter,\n      useClass: OccCheckoutReplenishmentOrderAdapter,\n    },\n    {\n      provide: REPLENISHMENT_ORDER_NORMALIZER,\n      useExisting: OccReplenishmentOrderNormalizer,\n      multi: true,\n    },\n    {\n      provide: REPLENISHMENT_ORDER_FORM_SERIALIZER,\n      useExisting: OccReplenishmentOrderFormSerializer,\n      multi: true,\n    },\n  ],\n})\nexport class CheckoutOccModule {}\n","import { Observable } from 'rxjs';\nimport { PageContext } from '../../../routing/models/page-context.model';\nimport { CmsStructureModel } from '../../model/page.model';\n\n/**\n * Abstract class that can be used to implement custom loader logic\n * in order to load CMS structure from third-party CMS system.\n */\nexport abstract class CmsPageAdapter {\n  /**\n   * Abstract method must be used to load the page structure for a given `PageContext`.\n   * The page can be loaded from alternative sources, as long as the structure\n   * converts to the `CmsStructureModel`.\n   *\n   * @param pageContext The `PageContext` holding the page Id.\n   */\n  abstract load(pageContext: PageContext): Observable<CmsStructureModel>;\n}\n","import { InjectionToken } from '@angular/core';\nimport { CmsComponent } from '../../../model/cms.model';\nimport { Converter } from '../../../util/converter.service';\n\nexport const CMS_COMPONENT_NORMALIZER = new InjectionToken<\n  Converter<any, CmsComponent>\n>('CmsComponentNormalizer');\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { pluck } from 'rxjs/operators';\nimport { CmsComponentAdapter } from '../../../cms/connectors/component/cms-component.adapter';\nimport { CMS_COMPONENT_NORMALIZER } from '../../../cms/connectors/component/converters';\nimport { CmsComponent, PageType } from '../../../model/cms.model';\nimport { PageContext } from '../../../routing';\nimport { ConverterService } from '../../../util/converter.service';\nimport { Occ } from '../../occ-models/occ.models';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OccCmsComponentAdapter implements CmsComponentAdapter {\n  protected headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  load<T extends CmsComponent>(\n    id: string,\n    pageContext: PageContext\n  ): Observable<T> {\n    return this.http\n      .get<T>(this.getComponentEndPoint(id, pageContext), {\n        headers: this.headers,\n      })\n      .pipe(this.converter.pipeable<any, T>(CMS_COMPONENT_NORMALIZER));\n  }\n\n  findComponentsByIds(\n    ids: string[],\n    pageContext: PageContext,\n    fields = 'DEFAULT',\n    currentPage = 0,\n    pageSize = ids.length,\n    sort?: string\n  ): Observable<CmsComponent[]> {\n    const requestParams = {\n      ...this.getContextParams(pageContext),\n      ...this.getPaginationParams(currentPage, pageSize, sort),\n    };\n\n    requestParams['componentIds'] = ids.toString();\n\n    return this.http\n      .get<Occ.ComponentList>(\n        this.getComponentsEndpoint(requestParams, fields),\n        {\n          headers: this.headers,\n        }\n      )\n      .pipe(\n        pluck('component'),\n        this.converter.pipeableMany(CMS_COMPONENT_NORMALIZER)\n      );\n  }\n\n  protected getComponentEndPoint(id: string, pageContext: PageContext): string {\n    return this.occEndpoints.getUrl(\n      'component',\n      { id },\n      this.getContextParams(pageContext)\n    );\n  }\n\n  protected getComponentsEndpoint(requestParams: any, fields: string): string {\n    return this.occEndpoints.getUrl(\n      'components',\n      {},\n      { fields, ...requestParams }\n    );\n  }\n\n  protected getPaginationParams(\n    currentPage?: number,\n    pageSize?: number,\n    sort?: string\n  ): { [key: string]: string } {\n    const requestParams = {};\n    if (currentPage !== undefined) {\n      requestParams['currentPage'] = currentPage.toString();\n    }\n    if (pageSize !== undefined) {\n      requestParams['pageSize'] = pageSize.toString();\n    }\n    if (sort !== undefined) {\n      requestParams['sort'] = sort;\n    }\n\n    return requestParams;\n  }\n\n  protected getContextParams(\n    pageContext: PageContext\n  ): { [key: string]: string } {\n    let requestParams = {};\n    switch (pageContext.type) {\n      case PageType.PRODUCT_PAGE: {\n        requestParams = { productCode: pageContext.id };\n        break;\n      }\n      case PageType.CATEGORY_PAGE: {\n        requestParams = { categoryCode: pageContext.id };\n        break;\n      }\n      case PageType.CATALOG_PAGE: {\n        requestParams = { catalogCode: pageContext.id };\n        break;\n      }\n    }\n\n    return requestParams;\n  }\n}\n","import { Injectable, StaticProvider } from '@angular/core';\nimport { Route } from '@angular/router';\nimport { Config } from '../../config/config-tokens';\nimport { CmsComponent } from '../../model/cms.model';\nimport { OccConfig } from '../../occ/config/occ-config';\n\nexport interface StandardCmsComponentConfig {\n  CMSSiteContextComponent?: CmsComponentMapping;\n  CMSLinkComponent?: CmsComponentMapping;\n  SimpleResponsiveBannerComponent?: CmsComponentMapping;\n  SimpleBannerComponent?: CmsComponentMapping;\n  BannerComponent?: CmsComponentMapping;\n  CMSParagraphComponent?: CmsComponentMapping;\n  BreadcrumbComponent?: CmsComponentMapping;\n  NavigationComponent?: CmsComponentMapping;\n  FooterNavigationComponent?: CmsComponentMapping;\n  CategoryNavigationComponent?: CmsComponentMapping;\n  ProductAddToCartComponent?: CmsComponentMapping;\n  MiniCartComponent?: CmsComponentMapping;\n  ProductCarouselComponent?: CmsComponentMapping;\n  SearchBoxComponent?: CmsComponentMapping;\n  ProductReferencesComponent?: CmsComponentMapping;\n  CMSTabParagraphComponent?: CmsComponentMapping;\n  LoginComponent?: CmsComponentMapping;\n}\n\nexport interface JspIncludeCmsComponentConfig {\n  AccountAddressBookComponent?: CmsComponentMapping;\n  ForgotPasswordComponent?: CmsComponentMapping;\n  ResetPasswordComponent?: CmsComponentMapping;\n  ProductDetailsTabComponent?: CmsComponentMapping;\n  ProductSpecsTabComponent?: CmsComponentMapping;\n  ProductReviewsTabComponent?: CmsComponentMapping;\n}\n\nexport const JSP_INCLUDE_CMS_COMPONENT_TYPE = 'JspIncludeComponent';\nexport const CMS_FLEX_COMPONENT_TYPE = 'CMSFlexComponent';\n\n/**\n * Configuration of the CMS component's child routes\n */\nexport interface CmsComponentChildRoutesConfig {\n  /**\n   * Route `data` property to apply on the parent (host) route of the CMS child routes.\n   */\n  parent?: Pick<Route, 'data'>;\n\n  /**\n   * Child routes defined by the existence of the CMS component on the page.\n   */\n  children?: Route[];\n}\n\nexport interface CmsComponentMapping<T = CmsComponent> {\n  component?: any;\n  providers?: StaticProvider[];\n  childRoutes?: Route[] | CmsComponentChildRoutesConfig;\n  disableSSR?: boolean;\n  i18nKeys?: string[];\n  guards?: any[];\n\n  /**\n   * The component data can be statically configured. The data can be used for various reasons:\n   * - Improve performance with an initial data that doesn't require API response\n   * - Introduce UI properties that are not available on the API\n   * - Build ghost design based on the initial data that is used prior to the backend data is loaded\n   */\n  data?: T;\n\n  /**\n   * DeferLoading can be specified globally, but also per component.\n   * Some components require direct loading while it's not initially\n   * in the viewport.\n   */\n  deferLoading?: DeferLoadingStrategy;\n}\n\n/** Strategy to control the loading strategy of DOM elements. */\nexport enum DeferLoadingStrategy {\n  /** Defers loading of DOM elements until element is near/in the users view port */\n  DEFER = 'DEFERRED-LOADING',\n  /** Renders the DOM instantly without being concerned with the view port */\n  INSTANT = 'INSTANT-LOADING',\n}\n\nexport interface CMSComponentConfig\n  extends StandardCmsComponentConfig,\n    JspIncludeCmsComponentConfig {\n  [componentType: string]: CmsComponentMapping;\n}\n\nexport interface FeatureModuleConfig {\n  /**\n   * Lazy resolved feature module\n   */\n  module?: () => Promise<any>;\n  /**\n   * Lazy resolved dependency modules\n   */\n  dependencies?: (() => Promise<any>)[];\n  /**\n   * Cms components covered by this feature\n   */\n  cmsComponents?: string[];\n}\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class CmsConfig extends OccConfig {\n  featureModules?: { [featureName: string]: FeatureModuleConfig };\n  cmsComponents?: CMSComponentConfig;\n}\n","export namespace Occ {\n  /**\n   *\n   * An interface representing Country.\n   */\n  export interface Country {\n    /**\n     * @member {string} [isocode]\n     */\n    isocode?: string;\n    /**\n     * @member {string} [name]\n     */\n    name?: string;\n  }\n\n  /**\n   *\n   * An interface representing Region.\n   */\n  export interface Region {\n    /**\n     * @member {string} [countryIso]\n     */\n    countryIso?: string;\n    /**\n     * @member {string} [isocode]\n     */\n    isocode?: string;\n    /**\n     * @member {string} [isocodeShort]\n     */\n    isocodeShort?: string;\n    /**\n     * @member {string} [name]\n     */\n    name?: string;\n  }\n\n  /**\n   *\n   * An interface representing RegionList.\n   */\n  export interface RegionList {\n    /**\n     * @member {Region[]} [regions]\n     */\n    regions?: Region[];\n  }\n\n  export interface AddressList {\n    addresses?: Address[];\n  }\n\n  /**\n   *\n   * An interface representing Address.\n   */\n  export interface Address {\n    /**\n     * @member {string} [companyName]\n     */\n    companyName?: string;\n    /**\n     * @member {Country} [country]\n     */\n    country?: Country;\n    /**\n     * @member {boolean} [defaultAddress]\n     */\n    defaultAddress?: boolean;\n    /**\n     * @member {string} [email]\n     */\n    email?: string;\n    /**\n     * @member {string} [firstName]\n     */\n    firstName?: string;\n    /**\n     * @member {string} [formattedAddress]\n     */\n    formattedAddress?: string;\n    /**\n     * @member {string} [id]\n     */\n    id?: string;\n    /**\n     * @member {string} [lastName]\n     */\n    lastName?: string;\n    /**\n     * @member {string} [line1]\n     */\n    line1?: string;\n    /**\n     * @member {string} [line2]\n     */\n    line2?: string;\n    /**\n     * @member {string} [phone]\n     */\n    phone?: string;\n    /**\n     * @member {string} [town]\n     */\n    cellphone?: string;\n    /**\n     * @member {string} [postalCode]\n     */\n    postalCode?: string;\n    /**\n     * @member {Region} [region]\n     */\n    region?: Region;\n    /**\n     * @member {string} [town]\n     */\n    district?: string;\n    /**\n     * @member {boolean} [shippingAddress]\n     */\n    shippingAddress?: boolean;\n    /**\n     * @member {string} [title]\n     */\n    title?: string;\n    /**\n     * @member {string} [titleCode]\n     */\n    titleCode?: string;\n    /**\n     * @member {string} [town]\n     */\n    town?: string;\n    /**\n     * @member {boolean} [visibleInAddressBook]\n     */\n    visibleInAddressBook?: boolean;\n  }\n\n  /**\n   *\n   * An interface representing AddressList.\n   */\n  export interface AddressList {\n    /**\n     * @member {Address[]} [addresses]\n     */\n    addresses?: Address[];\n  }\n\n  /**\n   *\n   * An interface representing ErrorModel.\n   * Error message\n   *\n   */\n  export interface ErrorModel {\n    /**\n     * @member {string} [message] Descriptive, human readable error message.\n     */\n    message?: string;\n    /**\n     * @member {string} [reason] Additional classification specific for each\n     * error type e.g. 'noStock'.\n     */\n    reason?: string;\n    /**\n     * @member {string} [subject] Identifier of the related object e.g. '1'.\n     */\n    subject?: string;\n    /**\n     * @member {string} [subjectType] Type of the object related to the error\n     * e.g. 'entry'.\n     */\n    subjectType?: string;\n    /**\n     * @member {string} [type] Type of the error e.g. 'LowStockError'.\n     */\n    type?: string;\n  }\n\n  /**\n   *\n   * An interface representing ErrorList.\n   * List of errors\n   *\n   */\n  export interface ErrorList {\n    /**\n     * @member {ErrorModel[]} [errors]\n     */\n    errors?: ErrorModel[];\n  }\n\n  /**\n   *\n   * An interface representing AddressValidation.\n   */\n  export interface AddressValidation {\n    /**\n     * @member {string} [decision]\n     */\n    decision?: string;\n    /**\n     * @member {ErrorList} [errors]\n     */\n    errors?: ErrorList;\n    /**\n     * @member {Address[]} [suggestedAddresses]\n     */\n    suggestedAddresses?: Address[];\n  }\n\n  /**\n   *\n   * An interface representing Price.\n   */\n  export interface Price {\n    /**\n     * @member {string} [currencyIso]\n     */\n    currencyIso?: string;\n    /**\n     * @member {string} [formattedValue]\n     */\n    formattedValue?: string;\n    /**\n     * @member {number} [maxQuantity]\n     */\n    maxQuantity?: number;\n    /**\n     * @member {number} [minQuantity]\n     */\n    minQuantity?: number;\n    /**\n     * @member {PriceType} [priceType] Possible values include: 'BUY', 'FROM'\n     */\n    priceType?: PriceType;\n    /**\n     * @member {number} [value]\n     */\n    value?: number;\n  }\n\n  /**\n   *\n   * An interface representing Stock.\n   */\n  export interface Stock {\n    /**\n     * @member {number} [stockLevel]\n     */\n    stockLevel?: number;\n    /**\n     * @member {string} [stockLevelStatus]\n     */\n    stockLevelStatus?: string;\n  }\n\n  /**\n   *\n   * An interface representing Image.\n   */\n  export interface Image {\n    /**\n     * @member {string} [altText]\n     */\n    altText?: string;\n    /**\n     * @member {string} [format]\n     */\n    format?: string;\n    /**\n     * @member {number} [galleryIndex]\n     */\n    galleryIndex?: number;\n    /**\n     * @member {ImageType} [imageType] Possible values include: 'PRIMARY',\n     * 'GALLERY'\n     */\n    imageType?: ImageType;\n    /**\n     * @member {string} [url]\n     */\n    url?: string;\n  }\n\n  /**\n   *\n   * An interface representing VariantOptionQualifier.\n   */\n  export interface VariantOptionQualifier {\n    /**\n     * @member {Image} [image]\n     */\n    image?: Image;\n    /**\n     * @member {string} [name]\n     */\n    name?: string;\n    /**\n     * @member {string} [qualifier]\n     */\n    qualifier?: string;\n    /**\n     * @member {string} [value]\n     */\n    value?: string;\n  }\n\n  /**\n   *\n   * An interface representing VariantOption.\n   */\n  export interface VariantOption {\n    /**\n     * @member {string} [code]\n     */\n    code?: string;\n    /**\n     * @member {Price} [priceData]\n     */\n    priceData?: Price;\n    /**\n     * @member {Stock} [stock]\n     */\n    stock?: Stock;\n    /**\n     * @member {string} [url]\n     */\n    url?: string;\n    /**\n     * @member {VariantOptionQualifier[]} [variantOptionQualifiers]\n     */\n    variantOptionQualifiers?: VariantOptionQualifier[];\n  }\n\n  /**\n   *\n   * An interface representing BaseOption.\n   */\n  export interface BaseOption {\n    /**\n     * @member {VariantOption[]} [options]\n     */\n    options?: VariantOption[];\n    /**\n     * @member {VariantOption} [selected]\n     */\n    selected?: VariantOption;\n    /**\n     * @member {string} [variantType]\n     */\n    variantType?: string;\n  }\n\n  /**\n   *\n   * An interface representing SearchQuery.\n   */\n  export interface SearchQuery {\n    /**\n     * @member {string} [value]\n     */\n    value?: string;\n  }\n\n  /**\n   *\n   * An interface representing SearchState.\n   */\n  export interface SearchState {\n    /**\n     * @member {SearchQuery} [query]\n     */\n    query?: SearchQuery;\n    /**\n     * @member {string} [url]\n     */\n    url?: string;\n  }\n\n  /**\n   *\n   * An interface representing Breadcrumb.\n   */\n  export interface Breadcrumb {\n    /**\n     * @member {string} [facetCode]\n     */\n    facetCode?: string;\n    /**\n     * @member {string} [facetName]\n     */\n    facetName?: string;\n    /**\n     * @member {string} [facetValueCode]\n     */\n    facetValueCode?: string;\n    /**\n     * @member {string} [facetValueName]\n     */\n    facetValueName?: string;\n    /**\n     * @member {SearchState} [removeQuery]\n     */\n    removeQuery?: SearchState;\n    /**\n     * @member {SearchState} [truncateQuery]\n     */\n    truncateQuery?: SearchState;\n  }\n\n  /**\n   *\n   * An interface representing Component.\n   */\n  export interface Component {\n    /**\n     * @member {Date} [modifiedTime]\n     */\n    modifiedTime?: Date;\n    /**\n     * @member {string} [name]\n     */\n    name?: string;\n    /**\n     * @member {any} [otherProperties]\n     */\n    otherProperties?: any;\n    /**\n     * @member {string} [typeCode]\n     */\n    typeCode?: string;\n    /**\n     * @member {string} [uid]\n     */\n    uid?: string;\n  }\n\n  /**\n   *\n   * An interface representing ComponentList.\n   */\n  export interface ComponentList {\n    /**\n     * @member {Component[]} [component]\n     */\n    component?: Component[] | any[];\n  }\n\n  /**\n   *\n   * An interface representing ContentSlot.\n   */\n  export interface ContentSlot {\n    /**\n     * @member {ComponentList} [components]\n     */\n    components?: ComponentList;\n    /**\n     * @member {string} [name]\n     */\n    name?: string;\n    /**\n     * @member {string} [position]\n     */\n    position?: string;\n    /**\n     * @member {string} [slotId]\n     */\n    slotId?: string;\n    /**\n     * @member {boolean} [slotShared]\n     */\n    slotShared?: boolean;\n    /**\n     * @member {string} [slotStatus]\n     */\n    slotStatus?: string;\n    /**\n     * @member {any} [properties]\n     */\n    properties?: any;\n  }\n\n  /**\n   *\n   * An interface representing ContentSlotList.\n   */\n  export interface ContentSlotList {\n    /**\n     * @member {ContentSlot[]} [contentSlot]\n     */\n    contentSlot?: ContentSlot[];\n  }\n\n  /**\n   *\n   * An interface representing CMSPage.\n   */\n  export interface CMSPage {\n    /**\n     * @member {ContentSlotList} [contentSlots]\n     */\n    contentSlots?: ContentSlotList;\n    /**\n     * @member {boolean} [defaultPage]\n     */\n    defaultPage?: boolean;\n    /**\n     * @member {string} [name]\n     */\n    name?: string;\n    /**\n     * @member {string} [template]\n     */\n    template?: string;\n    /**\n     * @member {string} [title]\n     */\n    title?: string;\n    /**\n     * @member {string} [typeCode]\n     */\n    typeCode?: string;\n    /**\n     * @member {string} [uid]\n     */\n    uid?: string;\n    /**\n     * @member {string} [label]\n     */\n    label?: string;\n    /**\n     * @member {any} [properties]\n     */\n    properties?: any;\n\n    robotTag?: PageRobots;\n  }\n\n  /**\n   * The page robot information is exposed with 4 string values.\n   */\n  export enum PageRobots {\n    INDEX_FOLLOW = 'INDEX_FOLLOW',\n    NOINDEX_FOLLOW = 'NOINDEX_FOLLOW',\n    INDEX_NOFOLLOW = 'INDEX_NOFOLLOW',\n    NOINDEX_NOFOLLOW = 'NOINDEX_NOFOLLOW',\n  }\n\n  /**\n   *\n   * An interface representing CardType.\n   */\n  export interface CardType {\n    /**\n     * @member {string} [code]\n     */\n    code?: string;\n    /**\n     * @member {string} [name]\n     */\n    name?: string;\n  }\n\n  /**\n   *\n   * An interface representing CardTypeList.\n   */\n  export interface CardTypeList {\n    /**\n     * @member {CardType[]} [cardTypes]\n     */\n    cardTypes?: CardType[];\n  }\n\n  /**\n   *\n   * An interface representing PaymentType.\n   */\n  export interface PaymentType {\n    /**\n     * @member {string} [code]\n     */\n    code?: string;\n    /**\n     * @member {string} [displayName]\n     */\n    displayName?: string;\n  }\n\n  /**\n   *\n   * An interface representing PaymentTypeList.\n   */\n  export interface PaymentTypeList {\n    /**\n     * @member {PaymentType[]} [paymentTypes]\n     */\n    paymentTypes?: PaymentType[];\n  }\n\n  /**\n   *\n   * An interface representing PromotionOrderEntryConsumed.\n   */\n  export interface PromotionOrderEntryConsumed {\n    /**\n     * @member {number} [adjustedUnitPrice]\n     */\n    adjustedUnitPrice?: number;\n    /**\n     * @member {string} [code]\n     */\n    code?: string;\n    /**\n     * @member {number} [orderEntryNumber]\n     */\n    orderEntryNumber?: number;\n    /**\n     * @member {number} [quantity]\n     */\n    quantity?: number;\n  }\n\n  /**\n   *\n   * An interface representing PromotionRestriction.\n   */\n  export interface PromotionRestriction {\n    /**\n     * @member {string} [description]\n     */\n    description?: string;\n    /**\n     * @member {string} [restrictionType]\n     */\n    restrictionType?: string;\n  }\n\n  /**\n   *\n   * An interface representing Promotion.\n   */\n  export interface Promotion {\n    /**\n     * @member {string} [code]\n     */\n    code?: string;\n    /**\n     * @member {string[]} [couldFireMessages]\n     */\n    couldFireMessages?: string[];\n    /**\n     * @member {string} [description]\n     */\n    description?: string;\n    /**\n     * @member {boolean} [enabled]\n     */\n    enabled?: boolean;\n    /**\n     * @member {Date} [endDate]\n     */\n    endDate?: Date;\n    /**\n     * @member {string[]} [firedMessages]\n     */\n    firedMessages?: string[];\n    /**\n     * @member {number} [priority]\n     */\n    priority?: number;\n    /**\n     * @member {Image} [productBanner]\n     */\n    productBanner?: Image;\n    /**\n     * @member {string} [promotionGroup]\n     */\n    promotionGroup?: string;\n    /**\n     * @member {string} [promotionType]\n     */\n    promotionType?: string;\n    /**\n     * @member {PromotionRestriction[]} [restrictions]\n     */\n    restrictions?: PromotionRestriction[];\n    /**\n     * @member {Date} [startDate]\n     */\n    startDate?: Date;\n    /**\n     * @member {string} [title]\n     */\n    title?: string;\n  }\n\n  /**\n   *\n   * An interface representing PromotionResult.\n   */\n  export interface PromotionResult {\n    /**\n     * @member {PromotionOrderEntryConsumed[]} [consumedEntries]\n     */\n    consumedEntries?: PromotionOrderEntryConsumed[];\n    /**\n     * @member {string} [description]\n     */\n    description?: string;\n    /**\n     * @member {Promotion} [promotion]\n     */\n    promotion?: Promotion;\n  }\n\n  /**\n   *\n   * An interface representing Currency.\n   */\n  export interface Currency {\n    /**\n     * @member {boolean} [active]\n     */\n    active?: boolean;\n    /**\n     * @member {string} [isocode]\n     */\n    isocode?: string;\n    /**\n     * @member {string} [name]\n     */\n    name?: string;\n    /**\n     * @member {string} [symbol]\n     */\n    symbol?: string;\n  }\n\n  /**\n   *\n   * An interface representing Voucher.\n   */\n  export interface Voucher {\n    /**\n     * @member {Price} [appliedValue]\n     */\n    appliedValue?: Price;\n    /**\n     * @member {string} [code]\n     */\n    code?: string;\n    /**\n     * @member {Currency} [currency]\n     */\n    currency?: Currency;\n    /**\n     * @member {string} [description]\n     */\n    description?: string;\n    /**\n     * @member {boolean} [freeShipping]\n     */\n    freeShipping?: boolean;\n    /**\n     * @member {string} [name]\n     */\n    name?: string;\n    /**\n     * @member {number} [value]\n     */\n    value?: number;\n    /**\n     * @member {string} [valueFormatted]\n     */\n    valueFormatted?: string;\n    /**\n     * @member {string} [valueString]\n     */\n    valueString?: string;\n    /**\n     * @member {string} [voucherCode]\n     */\n    voucherCode?: string;\n  }\n\n  /**\n   *\n   * An interface representing DeliveryMode.\n   */\n  export interface DeliveryMode {\n    /**\n     * @member {string} [code]\n     */\n    code?: string;\n    /**\n     * @member {Price} [deliveryCost]\n     */\n    deliveryCost?: Price;\n    /**\n     * @member {string} [description]\n     */\n    description?: string;\n    /**\n     * @member {string} [name]\n     */\n    name?: string;\n  }\n\n  /**\n   *\n   * An interface representing GeoPoint.\n   */\n  export interface GeoPoint {\n    /**\n     * @member {number} [latitude]\n     */\n    latitude?: number;\n    /**\n     * @member {number} [longitude]\n     */\n    longitude?: number;\n  }\n\n  /**\n   *\n   * An interface representing Time.\n   */\n  export interface Time {\n    /**\n     * @member {string} [formattedHour]\n     */\n    formattedHour?: string;\n    /**\n     * @member {number} [hour]\n     */\n    hour?: number;\n    /**\n     * @member {number} [minute]\n     */\n    minute?: number;\n  }\n\n  /**\n   *\n   * An interface representing SpecialOpeningDay.\n   */\n  export interface SpecialOpeningDay {\n    /**\n     * @member {boolean} [closed]\n     */\n    closed?: boolean;\n    /**\n     * @member {Time} [closingTime]\n     */\n    closingTime?: Time;\n    /**\n     * @member {string} [comment]\n     */\n    comment?: string;\n    /**\n     * @member {Date} [date]\n     */\n    date?: Date;\n    /**\n     * @member {string} [formattedDate]\n     */\n    formattedDate?: string;\n    /**\n     * @member {string} [name]\n     */\n    name?: string;\n    /**\n     * @member {Time} [openingTime]\n     */\n    openingTime?: Time;\n  }\n\n  /**\n   *\n   * An interface representing WeekdayOpeningDay.\n   */\n  export interface WeekdayOpeningDay {\n    /**\n     * @member {boolean} [closed]\n     */\n    closed?: boolean;\n    /**\n     * @member {Time} [closingTime]\n     */\n    closingTime?: Time;\n    /**\n     * @member {Time} [openingTime]\n     */\n    openingTime?: Time;\n    /**\n     * @member {string} [weekDay]\n     */\n    weekDay?: string;\n  }\n\n  /**\n   *\n   * An interface representing OpeningSchedule.\n   */\n  export interface OpeningSchedule {\n    /**\n     * @member {string} [code]\n     */\n    code?: string;\n    /**\n     * @member {string} [name]\n     */\n    name?: string;\n    /**\n     * @member {SpecialOpeningDay[]} [specialDayOpeningList]\n     */\n    specialDayOpeningList?: SpecialOpeningDay[];\n    /**\n     * @member {WeekdayOpeningDay[]} [weekDayOpeningList]\n     */\n    weekDayOpeningList?: WeekdayOpeningDay[];\n  }\n\n  /**\n   *\n   * An interface representing PointOfService.\n   */\n  export interface PointOfService {\n    /**\n     * @member {Address} [address]\n     */\n    address?: Address;\n    /**\n     * @member {string} [description]\n     */\n    description?: string;\n    /**\n     * @member {string} [displayName]\n     */\n    displayName?: string;\n    /**\n     * @member {number} [distanceKm]\n     */\n    distanceKm?: number;\n    /**\n     * @member {{ [propertyName: string]: string }} [features]\n     */\n    features?: { [propertyName: string]: string };\n    /**\n     * @member {string} [formattedDistance]\n     */\n    formattedDistance?: string;\n    /**\n     * @member {GeoPoint} [geoPoint]\n     */\n    geoPoint?: GeoPoint;\n    /**\n     * @member {Image} [mapIcon]\n     */\n    mapIcon?: Image;\n    /**\n     * @member {string} [name]\n     */\n    name?: string;\n    /**\n     * @member {OpeningSchedule} [openingHours]\n     */\n    openingHours?: OpeningSchedule;\n    /**\n     * @member {string} [storeContent]\n     */\n    storeContent?: string;\n    /**\n     * @member {Image[]} [storeImages]\n     */\n    storeImages?: Image[];\n    /**\n     * @member {string} [url]\n     */\n    url?: string;\n  }\n\n  /**\n   *\n   * An interface representing Category.\n   */\n  export interface Category {\n    /**\n     * @member {string} [code]\n     */\n    code?: string;\n    /**\n     * @member {string} [code]\n     */\n    name?: string;\n    /**\n     * @member {Image} [image]\n     */\n    image?: Image;\n    /**\n     * @member {string} [url]\n     */\n    url?: string;\n  }\n\n  /**\n   *\n   * An interface representing FeatureUnit.\n   */\n  export interface FeatureUnit {\n    /**\n     * @member {string} [name]\n     */\n    name?: string;\n    /**\n     * @member {string} [symbol]\n     */\n    symbol?: string;\n    /**\n     * @member {string} [unitType]\n     */\n    unitType?: string;\n  }\n\n  /**\n   *\n   * An interface representing FeatureValue.\n   */\n  export interface FeatureValue {\n    /**\n     * @member {string} [value]\n     */\n    value?: string;\n  }\n\n  /**\n   *\n   * An interface representing Feature.\n   */\n  export interface Feature {\n    /**\n     * @member {string} [code]\n     */\n    code?: string;\n    /**\n     * @member {boolean} [comparable]\n     */\n    comparable?: boolean;\n    /**\n     * @member {string} [description]\n     */\n    description?: string;\n    /**\n     * @member {FeatureUnit} [featureUnit]\n     */\n    featureUnit?: FeatureUnit;\n    /**\n     * @member {FeatureValue[]} [featureValues]\n     */\n    featureValues?: FeatureValue[];\n    /**\n     * @member {string} [name]\n     */\n    name?: string;\n    /**\n     * @member {boolean} [range]\n     */\n    range?: boolean;\n    /**\n     * @member {string} [type]\n     */\n    type?: string;\n  }\n\n  /**\n   *\n   * An interface representing Classification.\n   */\n  export interface Classification {\n    /**\n     * @member {string} [code]\n     */\n    code?: string;\n    /**\n     * @member {Feature[]} [features]\n     */\n    features?: Feature[];\n    /**\n     * @member {string} [name]\n     */\n    name?: string;\n  }\n\n  /**\n   *\n   * An interface representing FutureStock.\n   */\n  export interface FutureStock {\n    /**\n     * @member {Date} [date]\n     */\n    date?: Date;\n    /**\n     * @member {string} [formattedDate]\n     */\n    formattedDate?: string;\n    /**\n     * @member {Stock} [stock]\n     */\n    stock?: Stock;\n  }\n\n  /**\n   *\n   * An interface representing PriceRange.\n   */\n  export interface PriceRange {\n    /**\n     * @member {Price} [maxPrice]\n     */\n    maxPrice?: Price;\n    /**\n     * @member {Price} [minPrice]\n     */\n    minPrice?: Price;\n  }\n\n  /**\n   *\n   * An interface representing ProductReference.\n   */\n  export interface ProductReference {\n    /**\n     * @member {string} [description]\n     */\n    description?: string;\n    /**\n     * @member {boolean} [preselected]\n     */\n    preselected?: boolean;\n    /**\n     * @member {number} [quantity]\n     */\n    quantity?: number;\n    /**\n     * @member {string} [referenceType]\n     */\n    referenceType?: string;\n    /**\n     * @member {Product} [target]\n     */\n    target?: Product;\n  }\n\n  /**\n   *\n   * An interface representing Language.\n   */\n  export interface Language {\n    /**\n     * @member {boolean} [active]\n     */\n    active?: boolean;\n    /**\n     * @member {string} [isocode]\n     */\n    isocode?: string;\n    /**\n     * @member {string} [name]\n     */\n    name?: string;\n    /**\n     * @member {string} [nativeName]\n     */\n    nativeName?: string;\n  }\n\n  /**\n   *\n   * An interface representing User.\n   */\n  export interface User {\n    /**\n     * @member {Currency} [currency]\n     */\n    currency?: Currency;\n    /**\n     * @member {string} [customerId]\n     */\n    customerId?: string;\n    /**\n     * @member {Date} [deactivationDate]\n     */\n    deactivationDate?: Date;\n    /**\n     * @member {Address} [defaultAddress]\n     */\n    defaultAddress?: Address;\n    /**\n     * @member {string} [displayUid]\n     */\n    displayUid?: string;\n    /**\n     * @member {string} [firstName]\n     */\n    firstName?: string;\n    /**\n     * @member {Language} [language]\n     */\n    language?: Language;\n    /**\n     * @member {string} [lastName]\n     */\n    lastName?: string;\n    /**\n     * @member {string} [name]\n     */\n    name?: string;\n    /**\n     * @member {string} [title]\n     */\n    title?: string;\n    /**\n     * @member {string} [titleCode]\n     */\n    titleCode?: string;\n    /**\n     * @member {string} [uid]\n     */\n    uid?: string;\n  }\n\n  /**\n   *\n   * An interface representing Review.\n   */\n  export interface Review {\n    /**\n     * @member {string} [alias]\n     */\n    alias?: string;\n    /**\n     * @member {string} [comment]\n     */\n    comment?: string;\n    /**\n     * @member {Date} [date]\n     */\n    date?: Date;\n    /**\n     * @member {string} [headline]\n     */\n    headline?: string;\n    /**\n     * @member {string} [id]\n     */\n    id?: string;\n    /**\n     * @member {User} [principal]\n     */\n    principal?: User;\n    /**\n     * @member {number} [rating]\n     */\n    rating?: number;\n  }\n\n  /**\n   *\n   * An interface representing VariantCategory.\n   */\n  export interface VariantCategory {\n    /**\n     * @member {boolean} [hasImage]\n     */\n    hasImage?: boolean;\n    /**\n     * @member {string} [name]\n     */\n    name?: string;\n    /**\n     * @member {number} [priority]\n     */\n    priority?: number;\n  }\n\n  /**\n   *\n   * An interface representing VariantValueCategory.\n   */\n  export interface VariantValueCategory {\n    /**\n     * @member {string} [name]\n     */\n    name?: string;\n    /**\n     * @member {number} [sequence]\n     */\n    sequence?: number;\n    /**\n     * @member {VariantCategory[]} [superCategories]\n     */\n    superCategories?: VariantCategory[];\n  }\n\n  /**\n   *\n   * An interface representing VariantMatrixElement.\n   */\n  export interface VariantMatrixElement {\n    /**\n     * @member {VariantMatrixElement[]} [elements]\n     */\n    elements?: VariantMatrixElement[];\n    /**\n     * @member {boolean} [isLeaf]\n     */\n    isLeaf?: boolean;\n    /**\n     * @member {VariantCategory} [parentVariantCategory]\n     */\n    parentVariantCategory?: VariantCategory;\n    /**\n     * @member {VariantOption} [variantOption]\n     */\n    variantOption?: VariantOption;\n    /**\n     * @member {VariantValueCategory} [variantValueCategory]\n     */\n    variantValueCategory?: VariantValueCategory;\n  }\n\n  /**\n   *\n   * An interface representing Product.\n   */\n  export interface Product {\n    /**\n     * @member {boolean} [availableForPickup]\n     */\n    availableForPickup?: boolean;\n    /**\n     * @member {number} [averageRating]\n     */\n    averageRating?: number;\n    /**\n     * @member {BaseOption[]} [baseOptions]\n     */\n    baseOptions?: BaseOption[];\n    /**\n     * @member {string} [baseProduct]\n     */\n    baseProduct?: string;\n    /**\n     * @member {Category[]} [categories]\n     */\n    categories?: Category[];\n    /**\n     * @member {Classification[]} [classifications]\n     */\n    classifications?: Classification[];\n    /**\n     * @member {string} [code]\n     */\n    code?: string;\n    /**\n     * @member {string} [description]\n     */\n    description?: string;\n    /**\n     * @member {FutureStock[]} [futureStocks]\n     */\n    futureStocks?: FutureStock[];\n    /**\n     * @member {Image[]} [images]\n     */\n    images?: Image[];\n    /**\n     * @member {string} [manufacturer]\n     */\n    manufacturer?: string;\n    /**\n     * @member {boolean} [multidimensional]\n     */\n    multidimensional?: boolean;\n    /**\n     * @member {string} [name]\n     */\n    name?: string;\n    /**\n     * @member {number} [numberOfReviews]\n     */\n    numberOfReviews?: number;\n    /**\n     * @member {Promotion[]} [potentialPromotions]\n     */\n    potentialPromotions?: Promotion[];\n    /**\n     * @member {Price} [price]\n     */\n    price?: Price;\n    /**\n     * @member {PriceRange} [priceRange]\n     */\n    priceRange?: PriceRange;\n    /**\n     * @member {ProductReference[]} [productReferences]\n     */\n    productReferences?: ProductReference[];\n    /**\n     * @member {boolean} [purchasable]\n     */\n    purchasable?: boolean;\n    /**\n     * @member {Review[]} [reviews]\n     */\n    reviews?: Review[];\n    /**\n     * @member {Stock} [stock]\n     */\n    stock?: Stock;\n    /**\n     * @member {string} [summary]\n     */\n    summary?: string;\n    /**\n     * @member {string} [url]\n     */\n    url?: string;\n    /**\n     * @member {VariantMatrixElement[]} [variantMatrix]\n     */\n    variantMatrix?: VariantMatrixElement[];\n    /**\n     * @member {VariantOption[]} [variantOptions]\n     */\n    variantOptions?: VariantOption[];\n    /**\n     * @member {string} [variantType]\n     */\n    variantType?: string;\n    /**\n     * @member {Price[]} [volumePrices]\n     */\n    volumePrices?: Price[];\n    /**\n     * @member {boolean} [volumePricesFlag]\n     */\n    volumePricesFlag?: boolean;\n  }\n\n  /**\n   *\n   * An interface representing OrderEntry.\n   */\n  export interface OrderEntry {\n    /**\n     * @member {Price} [basePrice]\n     */\n    basePrice?: Price;\n    /**\n     * @member {DeliveryMode} [deliveryMode]\n     */\n    deliveryMode?: DeliveryMode;\n    /**\n     * @member {PointOfService} [deliveryPointOfService]\n     */\n    deliveryPointOfService?: PointOfService;\n    /**\n     * @member {number} [entryNumber]\n     */\n    entryNumber?: number;\n    /**\n     * @member {Product} [product]\n     */\n    product?: Product;\n    /**\n     * @member {number} [quantity]\n     */\n    quantity?: number;\n    /**\n     * @member {Price} [totalPrice]\n     */\n    totalPrice?: Price;\n    /**\n     * @member {boolean} [updateable]\n     */\n    updateable?: boolean;\n  }\n\n  /**\n   *\n   * An interface representing DeliveryOrderEntryGroup.\n   */\n  export interface DeliveryOrderEntryGroup {\n    /**\n     * @member {Address} [deliveryAddress]\n     */\n    deliveryAddress?: Address;\n    /**\n     * @member {OrderEntry[]} [entries]\n     */\n    entries?: OrderEntry[];\n    /**\n     * @member {number} [quantity]\n     */\n    quantity?: number;\n    /**\n     * @member {Price} [totalPriceWithTax]\n     */\n    totalPriceWithTax?: Price;\n  }\n\n  /**\n   *\n   * An interface representing PaymentDetails.\n   */\n  export interface PaymentDetails {\n    /**\n     * @member {string} [accountHolderName]\n     */\n    accountHolderName?: string;\n    /**\n     * @member {Address} [billingAddress]\n     */\n    billingAddress?: Address;\n    /**\n     * @member {string} [cardNumber]\n     */\n    cardNumber?: string;\n    /**\n     * @member {CardType} [cardType]\n     */\n    cardType?: CardType;\n    /**\n     * @member {string} [cvn]\n     */\n    cvn?: string;\n    /**\n     * @member {boolean} [defaultPayment]\n     */\n    defaultPayment?: boolean;\n    /**\n     * @member {string} [expiryMonth]\n     */\n    expiryMonth?: string;\n    /**\n     * @member {string} [expiryYear]\n     */\n    expiryYear?: string;\n    /**\n     * @member {string} [id]\n     */\n    id?: string;\n    /**\n     * @member {string} [issueNumber]\n     */\n    issueNumber?: string;\n    /**\n     * @member {boolean} [saved]\n     */\n    saved?: boolean;\n    /**\n     * @member {string} [startMonth]\n     */\n    startMonth?: string;\n    /**\n     * @member {string} [startYear]\n     */\n    startYear?: string;\n    /**\n     * @member {string} [subscriptionId]\n     */\n    subscriptionId?: string;\n  }\n\n  /**\n   *\n   * An interface representing PickupOrderEntryGroup.\n   */\n  export interface PickupOrderEntryGroup {\n    /**\n     * @member {PointOfService} [deliveryPointOfService]\n     */\n    deliveryPointOfService?: PointOfService;\n    /**\n     * @member {number} [distance]\n     */\n    distance?: number;\n    /**\n     * @member {OrderEntry[]} [entries]\n     */\n    entries?: OrderEntry[];\n    /**\n     * @member {number} [quantity]\n     */\n    quantity?: number;\n    /**\n     * @member {Price} [totalPriceWithTax]\n     */\n    totalPriceWithTax?: Price;\n  }\n\n  /**\n   *\n   * An interface representing Principal.\n   */\n  export interface Principal {\n    /**\n     * @member {string} [name]\n     */\n    name?: string;\n    /**\n     * @member {string} [uid]\n     */\n    uid?: string;\n  }\n\n  /**\n   *\n   * An interface representing Cart.\n   */\n  export interface Cart {\n    /**\n     * @member {PromotionResult[]} [appliedOrderPromotions]\n     */\n    appliedOrderPromotions?: PromotionResult[];\n    /**\n     * @member {PromotionResult[]} [appliedProductPromotions]\n     */\n    appliedProductPromotions?: PromotionResult[];\n    /**\n     * @member {Voucher[]} [appliedVouchers]\n     */\n    appliedVouchers?: Voucher[];\n    /**\n     * @member {boolean} [calculated]\n     */\n    calculated?: boolean;\n    /**\n     * @member {string} [code]\n     */\n    code?: string;\n    /**\n     * @member {Address} [deliveryAddress]\n     */\n    deliveryAddress?: Address;\n    /**\n     * @member {Price} [deliveryCost]\n     */\n    deliveryCost?: Price;\n    /**\n     * @member {number} [deliveryItemsQuantity]\n     */\n    deliveryItemsQuantity?: number;\n    /**\n     * @member {DeliveryMode} [deliveryMode]\n     */\n    deliveryMode?: DeliveryMode;\n    /**\n     * @member {DeliveryOrderEntryGroup[]} [deliveryOrderGroups]\n     */\n    deliveryOrderGroups?: DeliveryOrderEntryGroup[];\n    /**\n     * @member {string} [description]\n     */\n    description?: string;\n    /**\n     * @member {OrderEntry[]} [entries]\n     */\n    entries?: OrderEntry[];\n    /**\n     * @member {Date} [expirationTime]\n     */\n    expirationTime?: Date;\n    /**\n     * @member {string} [guid]\n     */\n    guid?: string;\n    /**\n     * @member {string} [name]\n     */\n    name?: string;\n    /**\n     * @member {boolean} [net]\n     */\n    net?: boolean;\n    /**\n     * @member {Price} [orderDiscounts]\n     */\n    orderDiscounts?: Price;\n    /**\n     * @member {PaymentDetails} [paymentInfo]\n     */\n    paymentInfo?: PaymentDetails;\n    /**\n     * @member {number} [pickupItemsQuantity]\n     */\n    pickupItemsQuantity?: number;\n    /**\n     * @member {PickupOrderEntryGroup[]} [pickupOrderGroups]\n     */\n    pickupOrderGroups?: PickupOrderEntryGroup[];\n    /**\n     * @member {PromotionResult[]} [potentialOrderPromotions]\n     */\n    potentialOrderPromotions?: PromotionResult[];\n    /**\n     * @member {PromotionResult[]} [potentialProductPromotions]\n     */\n    potentialProductPromotions?: PromotionResult[];\n    /**\n     * @member {Price} [productDiscounts]\n     */\n    productDiscounts?: Price;\n    /**\n     * @member {Date} [saveTime]\n     */\n    saveTime?: Date;\n    /**\n     * @member {Principal} [savedBy]\n     */\n    savedBy?: Principal;\n    /**\n     * @member {string} [site]\n     */\n    site?: string;\n    /**\n     * @member {string} [store]\n     */\n    store?: string;\n    /**\n     * @member {Price} [subTotal]\n     */\n    subTotal?: Price;\n    /**\n     * @member {Price} [totalDiscounts]\n     */\n    totalDiscounts?: Price;\n    /**\n     * @member {number} [totalItems]\n     */\n    totalItems?: number;\n    /**\n     * @member {Price} [totalPrice]\n     */\n    totalPrice?: Price;\n    /**\n     * @member {Price} [totalPriceWithTax]\n     */\n    totalPriceWithTax?: Price;\n    /**\n     * @member {Price} [totalTax]\n     */\n    totalTax?: Price;\n    /**\n     * @member {number} [totalUnitCount]\n     */\n    totalUnitCount?: number;\n    /**\n     * @member {Principal} [user]\n     */\n    user?: Principal;\n  }\n\n  /**\n   *\n   * An interface representing CartList.\n   */\n  export interface CartList {\n    /**\n     * @member {Cart[]} [carts]\n     */\n    carts?: Cart[];\n  }\n\n  /**\n   *\n   * An interface representing CartModification.\n   */\n  export interface CartModification {\n    /**\n     * @member {boolean} [deliveryModeChanged]\n     */\n    deliveryModeChanged?: boolean;\n    /**\n     * @member {OrderEntry} [entry]\n     */\n    entry?: OrderEntry;\n    /**\n     * @member {number} [quantity]\n     */\n    quantity?: number;\n    /**\n     * @member {number} [quantityAdded]\n     */\n    quantityAdded?: number;\n    /**\n     * @member {string} [statusCode]\n     */\n    statusCode?: string;\n    /**\n     * @member {string} [statusMessage]\n     */\n    statusMessage?: string;\n  }\n\n  /**\n   *\n   * An interface representing CategoryHierarchy.\n   */\n  export interface CategoryHierarchy {\n    /**\n     * @member {string} [id]\n     */\n    id?: string;\n    /**\n     * @member {Date} [lastModified]\n     */\n    lastModified?: Date;\n    /**\n     * @member {string} [name]\n     */\n    name?: string;\n    /**\n     * @member {CategoryHierarchy[]} [subcategories]\n     */\n    subcategories?: CategoryHierarchy[];\n    /**\n     * @member {string} [url]\n     */\n    url?: string;\n  }\n\n  /**\n   *\n   * An interface representing CatalogVersion.\n   */\n  export interface CatalogVersion {\n    /**\n     * @member {CategoryHierarchy[]} [categories]\n     */\n    categories?: CategoryHierarchy[];\n    /**\n     * @member {string} [id]\n     */\n    id?: string;\n    /**\n     * @member {Date} [lastModified]\n     */\n    lastModified?: Date;\n    /**\n     * @member {string} [name]\n     */\n    name?: string;\n    /**\n     * @member {string} [url]\n     */\n    url?: string;\n  }\n\n  /**\n   *\n   * An interface representing Catalog.\n   */\n  export interface Catalog {\n    /**\n     * @member {CatalogVersion[]} [catalogVersions]\n     */\n    catalogVersions?: CatalogVersion[];\n    /**\n     * @member {string} [id]\n     */\n    id?: string;\n    /**\n     * @member {Date} [lastModified]\n     */\n    lastModified?: Date;\n    /**\n     * @member {string} [name]\n     */\n    name?: string;\n    /**\n     * @member {string} [url]\n     */\n    url?: string;\n  }\n\n  /**\n   *\n   * An interface representing CatalogList.\n   */\n  export interface CatalogList {\n    /**\n     * @member {Catalog[]} [catalogs]\n     */\n    catalogs?: Catalog[];\n  }\n\n  /**\n   *\n   * An interface representing ComponentIDList.\n   */\n  export interface ComponentIDList {\n    /**\n     * @member {string[]} [idList]\n     */\n    idList?: string[];\n  }\n\n  /**\n   *\n   * An interface representing ConsignmentEntry.\n   */\n  export interface ConsignmentEntry {\n    /**\n     * @member {OrderEntry} [orderEntry]\n     */\n    orderEntry?: OrderEntry;\n    /**\n     * @member {number} [quantity]\n     */\n    quantity?: number;\n    /**\n     * @member {number} [shippedQuantity]\n     */\n    shippedQuantity?: number;\n  }\n\n  /**\n   *\n   * An interface representing Consignment.\n   */\n  export interface Consignment {\n    /**\n     * @member {string} [code]\n     */\n    code?: string;\n    /**\n     * @member {PointOfService} [deliveryPointOfService]\n     */\n    deliveryPointOfService?: PointOfService;\n    /**\n     * @member {ConsignmentEntry[]} [entries]\n     */\n    entries?: ConsignmentEntry[];\n    /**\n     * @member {Address} [shippingAddress]\n     */\n    shippingAddress?: Address;\n    /**\n     * @member {string} [status]\n     */\n    status?: string;\n    /**\n     * @member {Date} [statusDate]\n     */\n    statusDate?: Date;\n    /**\n     * @member {string} [trackingID]\n     */\n    trackingID?: string;\n  }\n\n  /**\n   *\n   * An interface representing CountryList.\n   */\n  export interface CountryList {\n    /**\n     * @member {Country[]} [countries]\n     */\n    countries?: Country[];\n  }\n\n  /**\n   *\n   * An interface representing CurrencyList.\n   */\n  export interface CurrencyList {\n    /**\n     * @member {Currency[]} [currencies]\n     */\n    currencies?: Currency[];\n  }\n\n  /**\n   * An interface representing CustomerCoupon\n   */\n  export interface CustomerCoupon {\n    /**\n     * @member {string} [couponId]\n     */\n    couponId?: string;\n    /**\n     * @member {string} [name]\n     */\n    name?: string;\n    /**\n     * @member {string} [startDate]\n     */\n    startDate?: string;\n    /**\n     * @member {string} [endDate]\n     */\n    endDate?: string;\n    /**\n     * @member {string} [endDate]\n     */\n    status?: string;\n    /**\n     * @member {string} [description]\n     */\n    description?: string;\n    /**\n     * @member {boolean} [notificationOn]\n     */\n    notificationOn?: boolean;\n    /**\n     * @member {boolean} [allProductsApplicable]\n     */\n    allProductsApplicable?: boolean;\n  }\n\n  /**\n   * An interface representing CustomerCouponSearchResult\n   */\n  export interface CustomerCouponSearchResult {\n    /**\n     * @member {CustomerCoupon[]} [coupons]\n     */\n    coupons?: CustomerCoupon[];\n    /**\n     * @member {Sort[]} [sorts]\n     */\n    sorts?: Sort[];\n    /**\n     * @member {Pagination} [pagination]\n     */\n    pagination?: Pagination;\n  }\n\n  /**\n   *\n   * An interface representing DeliveryModeList.\n   */\n  export interface DeliveryModeList {\n    /**\n     * @member {DeliveryMode[]} [deliveryModes]\n     */\n    deliveryModes?: DeliveryMode[];\n  }\n\n  /**\n   *\n   * An interface representing FacetValue.\n   */\n  export interface FacetValue {\n    /**\n     * @member {number} [count]\n     */\n    count?: number;\n    /**\n     * @member {string} [name]\n     */\n    name?: string;\n    /**\n     * @member {SearchState} [query]\n     */\n    query?: SearchState;\n    /**\n     * @member {boolean} [selected]\n     */\n    selected?: boolean;\n  }\n\n  /**\n   *\n   * An interface representing Facet.\n   */\n  export interface Facet {\n    /**\n     * @member {boolean} [category]\n     */\n    category?: boolean;\n    /**\n     * @member {boolean} [multiSelect]\n     */\n    multiSelect?: boolean;\n    /**\n     * @member {string} [name]\n     */\n    name?: string;\n    /**\n     * @member {number} [priority]\n     */\n    priority?: number;\n    /**\n     * @member {FacetValue[]} [topValues]\n     */\n    topValues?: FacetValue[];\n    /**\n     * @member {FacetValue[]} [values]\n     */\n    values?: FacetValue[];\n    /**\n     * @member {boolean} [visible]\n     */\n    visible?: boolean;\n  }\n\n  /**\n   *\n   * An interface representing LanguageList.\n   */\n  export interface LanguageList {\n    /**\n     * @member {Language[]} [languages]\n     */\n    languages?: Language[];\n  }\n\n  /**\n   *\n   * An interface representing Pagination.\n   * Pagination info\n   *\n   */\n  export interface Pagination {\n    /**\n     * @member {number} [count] Number of elements on this page\n     */\n    count?: number;\n    /**\n     * @member {number} [page] Current page number\n     */\n    page?: number;\n    /**\n     * @member {number} [totalCount] Total number of elements\n     */\n    totalCount?: number;\n    /**\n     * @member {number} [totalPages] Total number of pages\n     */\n    totalPages?: number;\n  }\n\n  /**\n   *\n   * An interface representing Sort.\n   * Sort option\n   *\n   */\n  export interface Sort {\n    /**\n     * @member {boolean} [asc]\n     */\n    asc?: boolean;\n    /**\n     * @member {string} [code]\n     */\n    code?: string;\n  }\n\n  /**\n   *\n   * An interface representing ListAdaptedComponents.\n   */\n  export interface ListAdaptedComponents {\n    /**\n     * @member {any[]} [components]\n     */\n    components?: any[];\n    /**\n     * @member {Pagination} [pagination]\n     */\n    pagination?: Pagination;\n    /**\n     * @member {Sort[]} [sorts]\n     */\n    sorts?: Sort[];\n  }\n\n  /**\n   *\n   * An interface representing MemberList.\n   */\n  export interface MemberList {\n    /**\n     * @member {Principal[]} [members]\n     */\n    members?: Principal[];\n  }\n\n  /**\n   *\n   * An interface representing OrderEntryList.\n   */\n  export interface OrderEntryList {\n    /**\n     * @member {OrderEntry[]} [orderEntries]\n     */\n    orderEntries?: OrderEntry[];\n  }\n\n  /**\n   *\n   * An interface representing OrderHistory.\n   */\n  export interface OrderHistory {\n    /**\n     * @member {string} [code]\n     */\n    code?: string;\n    /**\n     * @member {string} [guid]\n     */\n    guid?: string;\n    /**\n     * @member {Date} [placed]\n     */\n    placed?: Date;\n    /**\n     * @member {string} [status]\n     */\n    status?: string;\n    /**\n     * @member {string} [statusDisplay]\n     */\n    statusDisplay?: string;\n    /**\n     * @member {Price} [total]\n     */\n    total?: Price;\n  }\n\n  /**\n   *\n   * An interface representing PaginationModel.\n   */\n  export interface PaginationModel {\n    /**\n     * @member {number} [currentPage]\n     */\n    currentPage?: number;\n    /**\n     * @member {number} [pageSize]\n     */\n    pageSize?: number;\n    /**\n     * @member {string} [sort]\n     */\n    sort?: string;\n    /**\n     * @member {number} [totalPages]\n     */\n    totalPages?: number;\n    /**\n     * @member {number} [totalResults]\n     */\n    totalResults?: number;\n  }\n\n  /**\n   *\n   * An interface representing SortModel.\n   */\n  export interface SortModel {\n    /**\n     * @member {string} [code]\n     */\n    code?: string;\n    /**\n     * @member {string} [name]\n     */\n    name?: string;\n    /**\n     * @member {boolean} [selected]\n     */\n    selected?: boolean;\n  }\n\n  /**\n   *\n   * An interface representing OrderHistoryList.\n   */\n  export interface OrderHistoryList {\n    /**\n     * @member {OrderHistory[]} [orders]\n     */\n    orders?: OrderHistory[];\n    /**\n     * @member {PaginationModel} [pagination]\n     */\n    pagination?: PaginationModel;\n    /**\n     * @member {SortModel[]} [sorts]\n     */\n    sorts?: SortModel[];\n  }\n\n  /**\n   *\n   * An interface representing OrderStatusUpdateElement.\n   */\n  export interface OrderStatusUpdateElement {\n    /**\n     * @member {string} [baseSiteId]\n     */\n    baseSiteId?: string;\n    /**\n     * @member {string} [code]\n     */\n    code?: string;\n    /**\n     * @member {string} [status]\n     */\n    status?: string;\n  }\n\n  /**\n   *\n   * An interface representing OrderStatusUpdateElementList.\n   */\n  export interface OrderStatusUpdateElementList {\n    /**\n     * @member {OrderStatusUpdateElement[]} [orderStatusUpdateElements]\n     */\n    orderStatusUpdateElements?: OrderStatusUpdateElement[];\n  }\n\n  /**\n   *\n   * An interface representing Order.\n   */\n  export interface Order {\n    /**\n     * @member {PromotionResult[]} [appliedOrderPromotions]\n     */\n    appliedOrderPromotions?: PromotionResult[];\n    /**\n     * @member {PromotionResult[]} [appliedProductPromotions]\n     */\n    appliedProductPromotions?: PromotionResult[];\n    /**\n     * @member {Voucher[]} [appliedVouchers]\n     */\n    appliedVouchers?: Voucher[];\n    /**\n     * @member {boolean} [calculated]\n     */\n    calculated?: boolean;\n    /**\n     * @member {string} [code]\n     */\n    code?: string;\n    /**\n     * @member {Consignment[]} [consignments]\n     */\n    consignments?: Consignment[];\n    /**\n     * @member {Date} [created]\n     */\n    created?: Date;\n    /**\n     * @member {Address} [deliveryAddress]\n     */\n    deliveryAddress?: Address;\n    /**\n     * @member {Price} [deliveryCost]\n     */\n    deliveryCost?: Price;\n    /**\n     * @member {number} [deliveryItemsQuantity]\n     */\n    deliveryItemsQuantity?: number;\n    /**\n     * @member {DeliveryMode} [deliveryMode]\n     */\n    deliveryMode?: DeliveryMode;\n    /**\n     * @member {DeliveryOrderEntryGroup[]} [deliveryOrderGroups]\n     */\n    deliveryOrderGroups?: DeliveryOrderEntryGroup[];\n    /**\n     * @member {string} [deliveryStatus]\n     */\n    deliveryStatus?: string;\n    /**\n     * @member {string} [deliveryStatusDisplay]\n     */\n    deliveryStatusDisplay?: string;\n    /**\n     * @member {OrderEntry[]} [entries]\n     */\n    entries?: OrderEntry[];\n    /**\n     * @member {boolean} [guestCustomer]\n     */\n    guestCustomer?: boolean;\n    /**\n     * @member {string} [guid]\n     */\n    guid?: string;\n    /**\n     * @member {boolean} [net]\n     */\n    net?: boolean;\n    /**\n     * @member {Price} [orderDiscounts]\n     */\n    orderDiscounts?: Price;\n    /**\n     * @member {PaymentDetails} [paymentInfo]\n     */\n    paymentInfo?: PaymentDetails;\n    /**\n     * @member {number} [pickupItemsQuantity]\n     */\n    pickupItemsQuantity?: number;\n    /**\n     * @member {PickupOrderEntryGroup[]} [pickupOrderGroups]\n     */\n    pickupOrderGroups?: PickupOrderEntryGroup[];\n    /**\n     * @member {Price} [productDiscounts]\n     */\n    productDiscounts?: Price;\n    /**\n     * @member {string} [site]\n     */\n    site?: string;\n    /**\n     * @member {string} [status]\n     */\n    status?: string;\n    /**\n     * @member {string} [statusDisplay]\n     */\n    statusDisplay?: string;\n    /**\n     * @member {string} [store]\n     */\n    store?: string;\n    /**\n     * @member {Price} [subTotal]\n     */\n    subTotal?: Price;\n    /**\n     * @member {Price} [totalDiscounts]\n     */\n    totalDiscounts?: Price;\n    /**\n     * @member {number} [totalItems]\n     */\n    totalItems?: number;\n    /**\n     * @member {Price} [totalPrice]\n     */\n    totalPrice?: Price;\n    /**\n     * @member {Price} [totalPriceWithTax]\n     */\n    totalPriceWithTax?: Price;\n    /**\n     * @member {Price} [totalTax]\n     */\n    totalTax?: Price;\n    /**\n     * @member {OrderEntry[]} [unconsignedEntries]\n     */\n    unconsignedEntries?: OrderEntry[];\n    /**\n     * @member {Principal} [user]\n     */\n    user?: Principal;\n  }\n\n  /**\n   *\n   * An interface representing ReturnRequest.\n   */\n  export interface ReturnRequest {\n    /**\n     * @member {boolean} [cancellable]\n     */\n    cancellable?: boolean;\n    /**\n     * @member {string} [code]\n     */\n    code?: string;\n    /**\n     * @member {Date} [creationTime]\n     */\n    creationTime?: Date;\n    /**\n     * @member {Price} [deliveryCost]\n     */\n    deliveryCost?: Price;\n    /**\n     * @member {order} [order]\n     */\n    order?: Order;\n    /**\n     * @member {boolean} [refundDeliveryCost]\n     */\n    refundDeliveryCost?: boolean;\n    /**\n     * @member {ReturnRequestEntry[]} [returnEntries]\n     */\n    returnEntries?: ReturnRequestEntry[];\n    /**\n     * @member {string} [returnLabelDownloadUrl]\n     */\n    returnLabelDownloadUrl?: string;\n    /**\n     * @member {string} [rma]\n     */\n    rma?: string;\n    /**\n     * @member {string} [status]\n     */\n    status?: string;\n    /**\n     * @member {Price} [subTotal]\n     */\n    subTotal?: Price;\n    /**\n     * @member {Price} [totalPrice]\n     */\n    totalPrice?: Price;\n  }\n\n  /**\n   *\n   * An interface representing ReturnRequestEntry.\n   */\n  export interface ReturnRequestEntry {\n    /**\n     * @member {OrderEntry} [orderEntry]\n     */\n    orderEntry?: OrderEntry;\n    /**\n     * @member {number} [expectedQuantity]\n     */\n    expectedQuantity?: number;\n    /**\n     * @member {Price} [refundAmount]\n     */\n    refundAmount?: Price;\n  }\n\n  /**\n   *\n   * An interface representing PaymentDetailsList.\n   */\n  export interface PaymentDetailsList {\n    /**\n     * @member {PaymentDetails[]} [payments]\n     */\n    payments?: PaymentDetails[];\n  }\n\n  /**\n   *\n   * An interface representing PointOfServiceStock.\n   */\n  export interface PointOfServiceStock {\n    /**\n     * @member {Address} [address]\n     */\n    address?: Address;\n    /**\n     * @member {string} [description]\n     */\n    description?: string;\n    /**\n     * @member {string} [displayName]\n     */\n    displayName?: string;\n    /**\n     * @member {number} [distanceKm]\n     */\n    distanceKm?: number;\n    /**\n     * @member {{ [propertyName: string]: string }} [features]\n     */\n    features?: { [propertyName: string]: string };\n    /**\n     * @member {string} [formattedDistance]\n     */\n    formattedDistance?: string;\n    /**\n     * @member {GeoPoint} [geoPoint]\n     */\n    geoPoint?: GeoPoint;\n    /**\n     * @member {Image} [mapIcon]\n     */\n    mapIcon?: Image;\n    /**\n     * @member {string} [name]\n     */\n    name?: string;\n    /**\n     * @member {OpeningSchedule} [openingHours]\n     */\n    openingHours?: OpeningSchedule;\n    /**\n     * @member {Stock} [stockInfo]\n     */\n    stockInfo?: Stock;\n    /**\n     * @member {string} [storeContent]\n     */\n    storeContent?: string;\n    /**\n     * @member {Image[]} [storeImages]\n     */\n    storeImages?: Image[];\n    /**\n     * @member {string} [url]\n     */\n    url?: string;\n  }\n\n  /**\n   *\n   * An interface representing ProductExpressUpdateElement.\n   */\n  export interface ProductExpressUpdateElement {\n    /**\n     * @member {string} [catalogId]\n     */\n    catalogId?: string;\n    /**\n     * @member {string} [catalogVersion]\n     */\n    catalogVersion?: string;\n    /**\n     * @member {string} [code]\n     */\n    code?: string;\n  }\n\n  /**\n   *\n   * An interface representing ProductExpressUpdateElementList.\n   */\n  export interface ProductExpressUpdateElementList {\n    /**\n     * @member {ProductExpressUpdateElement[]} [productExpressUpdateElements]\n     */\n    productExpressUpdateElements?: ProductExpressUpdateElement[];\n  }\n\n  /**\n   *\n   * An interface representing ProductList.\n   */\n  export interface ProductList {\n    /**\n     * @member {string} [catalog]\n     */\n    catalog?: string;\n    /**\n     * @member {number} [currentPage]\n     */\n    currentPage?: number;\n    /**\n     * @member {Product[]} [products]\n     */\n    products?: Product[];\n    /**\n     * @member {number} [totalPageCount]\n     */\n    totalPageCount?: number;\n    /**\n     * @member {number} [totalProductCount]\n     */\n    totalProductCount?: number;\n    /**\n     * @member {string} [version]\n     */\n    version?: string;\n  }\n\n  /**\n   *\n   * An interface representing ProductReferenceList.\n   */\n  export interface ProductReferenceList {\n    /**\n     * @member {ProductReference[]} [references]\n     */\n    references?: ProductReference[];\n  }\n\n  /**\n   *\n   * An interface representing SpellingSuggestion.\n   */\n  export interface SpellingSuggestion {\n    /**\n     * @member {string} [query]\n     */\n    query?: string;\n    /**\n     * @member {string} [suggestion]\n     */\n    suggestion?: string;\n  }\n\n  /**\n   *\n   * An interface representing ProductSearchPage.\n   */\n  export interface ProductSearchPage {\n    /**\n     * @member {Breadcrumb[]} [breadcrumbs]\n     */\n    breadcrumbs?: Breadcrumb[];\n    /**\n     * @member {string} [categoryCode]\n     */\n    categoryCode?: string;\n    /**\n     * @member {SearchState} [currentQuery]\n     */\n    currentQuery?: SearchState;\n    /**\n     * @member {Facet[]} [facets]\n     */\n    facets?: Facet[];\n    /**\n     * @member {string} [freeTextSearch]\n     */\n    freeTextSearch?: string;\n    /**\n     * @member {string} [keywordRedirectUrl]\n     */\n    keywordRedirectUrl?: string;\n    /**\n     * @member {PaginationModel} [pagination]\n     */\n    pagination?: PaginationModel;\n    /**\n     * @member {Product[]} [products]\n     */\n    products?: Product[];\n    /**\n     * @member {SortModel[]} [sorts]\n     */\n    sorts?: SortModel[];\n    /**\n     * @member {SpellingSuggestion} [spellingSuggestion]\n     */\n    spellingSuggestion?: SpellingSuggestion;\n  }\n\n  /**\n   *\n   * An interface representing PromotionList.\n   */\n  export interface PromotionList {\n    /**\n     * @member {Promotion[]} [promotions]\n     */\n    promotions?: Promotion[];\n  }\n\n  /**\n   *\n   * An interface representing PromotionResultList.\n   */\n  export interface PromotionResultList {\n    /**\n     * @member {PromotionResult[]} [promotions]\n     */\n    promotions?: PromotionResult[];\n  }\n\n  /**\n   *\n   * An interface representing ReviewList.\n   */\n  export interface ReviewList {\n    /**\n     * @member {Review[]} [reviews]\n     */\n    reviews?: Review[];\n  }\n\n  /**\n   *\n   * An interface representing SaveCartResult.\n   */\n  export interface SaveCartResult {\n    /**\n     * @member {Cart} [savedCartData]\n     */\n    savedCartData?: Cart;\n  }\n\n  /**\n   *\n   * An interface representing StoreFinderSearchPage.\n   */\n  export interface StoreFinderSearchPage {\n    /**\n     * @member {number} [boundEastLongitude]\n     */\n    boundEastLongitude?: number;\n    /**\n     * @member {number} [boundNorthLatitude]\n     */\n    boundNorthLatitude?: number;\n    /**\n     * @member {number} [boundSouthLatitude]\n     */\n    boundSouthLatitude?: number;\n    /**\n     * @member {number} [boundWestLongitude]\n     */\n    boundWestLongitude?: number;\n    /**\n     * @member {string} [locationText]\n     */\n    locationText?: string;\n    /**\n     * @member {PaginationModel} [pagination]\n     */\n    pagination?: PaginationModel;\n    /**\n     * @member {SortModel[]} [sorts]\n     */\n    sorts?: SortModel[];\n    /**\n     * @member {number} [sourceLatitude]\n     */\n    sourceLatitude?: number;\n    /**\n     * @member {number} [sourceLongitude]\n     */\n    sourceLongitude?: number;\n    /**\n     * @member {PointOfService[]} [stores]\n     */\n    stores?: PointOfService[];\n  }\n\n  /**\n   *\n   * An interface representing StoreFinderStockSearchPage.\n   */\n  export interface StoreFinderStockSearchPage {\n    /**\n     * @member {number} [boundEastLongitude]\n     */\n    boundEastLongitude?: number;\n    /**\n     * @member {number} [boundNorthLatitude]\n     */\n    boundNorthLatitude?: number;\n    /**\n     * @member {number} [boundSouthLatitude]\n     */\n    boundSouthLatitude?: number;\n    /**\n     * @member {number} [boundWestLongitude]\n     */\n    boundWestLongitude?: number;\n    /**\n     * @member {string} [locationText]\n     */\n    locationText?: string;\n    /**\n     * @member {PaginationModel} [pagination]\n     */\n    pagination?: PaginationModel;\n    /**\n     * @member {Product} [product]\n     */\n    product?: Product;\n    /**\n     * @member {SortModel[]} [sorts]\n     */\n    sorts?: SortModel[];\n    /**\n     * @member {number} [sourceLatitude]\n     */\n    sourceLatitude?: number;\n    /**\n     * @member {number} [sourceLongitude]\n     */\n    sourceLongitude?: number;\n    /**\n     * @member {PointOfServiceStock[]} [stores]\n     */\n    stores?: PointOfServiceStock[];\n  }\n\n  /**\n   *\n   * An interface representing Suggestion.\n   */\n  export interface Suggestion {\n    /**\n     * @member {string} [value]\n     */\n    value?: string;\n  }\n\n  /**\n   *\n   * An interface representing SuggestionList.\n   */\n  export interface SuggestionList {\n    /**\n     * @member {Suggestion[]} [suggestions]\n     */\n    suggestions?: Suggestion[];\n  }\n\n  /**\n   *\n   * An interface representing Title.\n   */\n  export interface Title {\n    /**\n     * @member {string} [code]\n     */\n    code?: string;\n    /**\n     * @member {string} [name]\n     */\n    name?: string;\n  }\n\n  /**\n   *\n   * An interface representing TitleList.\n   */\n  export interface TitleList {\n    /**\n     * @member {Title[]} [titles]\n     */\n    titles?: Title[];\n  }\n\n  /**\n   *\n   * An interface representing UserGroup.\n   */\n  export interface UserGroup {\n    /**\n     * @member {Principal[]} [members]\n     */\n    members?: Principal[];\n    /**\n     * @member {number} [membersCount]\n     */\n    membersCount?: number;\n    /**\n     * @member {string} [name]\n     */\n    name?: string;\n    /**\n     * @member {UserGroup[]} [subGroups]\n     */\n    subGroups?: UserGroup[];\n    /**\n     * @member {string} [uid]\n     */\n    uid?: string;\n  }\n\n  export interface StoreCount {\n    count?: number;\n    isoCode?: string;\n    name?: string;\n    type?: string;\n  }\n\n  export interface StoreCountList {\n    countriesAndRegionsStoreCount?: StoreCount[];\n  }\n\n  /**\n   *\n   * An interface representing VoucherList.\n   */\n  export interface VoucherList {\n    /**\n     * @member {Voucher[]} [vouchers]\n     */\n    vouchers?: Voucher[];\n  }\n\n  /**\n   * Defines values for PriceType.\n   * Possible values include: 'BUY', 'FROM'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: PriceType = <PriceType>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum PriceType {\n    BUY = 'BUY',\n    FROM = 'FROM',\n  }\n\n  /**\n   * Defines values for ImageType.\n   * Possible values include: 'PRIMARY', 'GALLERY'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: ImageType = <ImageType>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum ImageType {\n    PRIMARY = 'PRIMARY',\n    GALLERY = 'GALLERY',\n  }\n\n  /**\n   * Defines values for Fields.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields = <Fields>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields1.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields1 = <Fields1>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields1 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields2.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields2 = <Fields2>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields2 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields3.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields3 = <Fields3>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields3 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields4.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields4 = <Fields4>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields4 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields5.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields5 = <Fields5>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields5 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields6.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields6 = <Fields6>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields6 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for PageType.\n   * Possible values include: 'ContentPage', 'ProductPage', 'CategoryPage',\n   * 'CatalogPage'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: PageType = <PageType>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum PageType {\n    CONTENT_PAGE = 'ContentPage',\n    PRODUCT_PAGE = 'ProductPage',\n    CATEGORY_PAGE = 'CategoryPage',\n    CATALOG_PAGE = 'CatalogPage',\n  }\n\n  /**\n   * Defines values for Fields7.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields7 = <Fields7>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields7 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields8.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields8 = <Fields8>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields8 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields9.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields9 = <Fields9>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields9 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields10.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields10 = <Fields10>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields10 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields11.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields11 = <Fields11>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields11 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields12.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields12 = <Fields12>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields12 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields13.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields13 = <Fields13>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields13 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields14.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields14 = <Fields14>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields14 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields15.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields15 = <Fields15>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields15 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields16.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields16 = <Fields16>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields16 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for SortEnum.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: SortEnum = <SortEnum>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum SortEnum {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields17.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields17 = <Fields17>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields17 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields18.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields18 = <Fields18>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields18 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields19.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields19 = <Fields19>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields19 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields20.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields20 = <Fields20>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields20 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields21.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields21 = <Fields21>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields21 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields22.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields22 = <Fields22>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields22 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields23.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields23 = <Fields23>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields23 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields24.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields24 = <Fields24>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields24 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields25.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields25 = <Fields25>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields25 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields26.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields26 = <Fields26>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields26 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields27.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields27 = <Fields27>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields27 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields28.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields28 = <Fields28>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields28 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields29.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields29 = <Fields29>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields29 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields30.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields30 = <Fields30>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields30 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields31.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields31 = <Fields31>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields31 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields32.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields32 = <Fields32>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields32 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields33.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields33 = <Fields33>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields33 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields34.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields34 = <Fields34>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields34 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields35.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields35 = <Fields35>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields35 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields36.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields36 = <Fields36>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields36 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields37.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields37 = <Fields37>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields37 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields38.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields38 = <Fields38>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields38 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields39.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields39 = <Fields39>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields39 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields40.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields40 = <Fields40>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields40 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields41.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields41 = <Fields41>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields41 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields42.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields42 = <Fields42>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields42 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields43.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields43 = <Fields43>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields43 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields44.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields44 = <Fields44>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields44 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields45.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields45 = <Fields45>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields45 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields46.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields46 = <Fields46>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields46 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields47.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields47 = <Fields47>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields47 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields48.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields48 = <Fields48>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields48 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields49.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields49 = <Fields49>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields49 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields50.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields50 = <Fields50>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields50 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields51.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields51 = <Fields51>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields51 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields52.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields52 = <Fields52>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields52 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields53.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields53 = <Fields53>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields53 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields54.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields54 = <Fields54>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields54 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields55.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields55 = <Fields55>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields55 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields56.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields56 = <Fields56>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields56 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields57.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields57 = <Fields57>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields57 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields58.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields58 = <Fields58>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields58 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields59.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields59 = <Fields59>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields59 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields60.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields60 = <Fields60>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields60 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Fields61.\n   * Possible values include: 'BASIC', 'DEFAULT', 'FULL'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Fields61 = <Fields61>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Fields61 {\n    BASIC = 'BASIC',\n    DEFAULT = 'DEFAULT',\n    FULL = 'FULL',\n  }\n\n  /**\n   * Defines values for Type.\n   * Possible values include: 'all', 'product', 'order'\n   * There could be more values for this enum apart from the ones defined here.If\n   * you want to set a value that is not from the known values then you can do\n   * the following:\n   * let param: Type = <Type>\"someUnknownValueThatWillStillBeValid\";\n   * @readonly\n   * @enum {string}\n   */\n  export enum Type {\n    All = 'all',\n    Product = 'product',\n    Order = 'order',\n  }\n\n  export interface AnonymousConsent {\n    templateCode?: string;\n    version?: number;\n    consentState?: CONSENT_STATUS;\n  }\n\n  export enum CONSENT_STATUS {\n    ANONYMOUS_CONSENT_GIVEN = 'GIVEN',\n    ANONYMOUS_CONSENT_WITHDRAWN = 'WITHDRAWN',\n  }\n\n  export interface ConsentTemplate {\n    id?: string;\n    name?: string;\n    description?: string;\n    version?: number;\n    currentConsent?: Consent;\n  }\n\n  export interface Consent {\n    code?: string;\n    consentGivenDate?: Date;\n    consentWithdrawnDate?: Date;\n  }\n\n  export interface ConsentTemplateList {\n    consentTemplates?: ConsentTemplate[];\n  }\n\n  export interface BaseSites {\n    baseSites?: BaseSite[];\n  }\n\n  export interface BaseSite {\n    channel?: string;\n    defaultLanguage?: Language;\n    defaultPreviewCatalogId?: string;\n    defaultPreviewCategoryCode?: string;\n    defaultPreviewProductCode?: string;\n    locale?: string;\n    name?: string;\n    theme?: string;\n    uid?: string;\n    stores?: BaseStore[];\n    urlPatterns?: string[];\n    urlEncodingAttributes?: string[];\n  }\n\n  export interface BaseStore {\n    currencies?: Currency[];\n    defaultCurrency?: Currency;\n    languages?: Language[];\n    defaultLanguage?: Language;\n  }\n\n  export interface ProductInterestEntry {\n    interestType?: NotificationType;\n    dateAdded?: string;\n    expirationDate?: string;\n  }\n\n  export interface ProductInterestEntryRelation {\n    product?: Product;\n    productInterestEntry?: ProductInterestEntry[];\n  }\n\n  export interface ProductInterestSearchResult {\n    results?: ProductInterestEntryRelation[];\n    sorts?: Sort[];\n    pagination?: Pagination;\n  }\n\n  export enum NotificationType {\n    BACK_IN_STOCK = 'BACK_IN_STOCK',\n  }\n\n  export interface Budget {\n    active?: boolean;\n    budget?: number;\n    code?: string;\n    currency?: Currency;\n    endDate?: string;\n    startDate?: string;\n    name?: string;\n    orgUnit?: B2BUnit;\n    costCenters?: CostCenter[];\n  }\n\n  export interface BudgetsList {\n    budgets?: Budget[];\n    pagination?: PaginationModel;\n    sorts?: SortModel[];\n  }\n\n  export interface CostCenter {\n    active?: string;\n    activeFlag?: boolean;\n    code?: string;\n    currency?: Currency;\n    name?: string;\n    originalCode?: string;\n    unit?: B2BUnit;\n  }\n\n  export interface CostCentersList {\n    costCenters: CostCenter[];\n    pagination?: PaginationModel;\n    sorts?: SortModel[];\n  }\n\n  // TODO(#8878): Which models we can remove from here?\n  export interface OrgUnitUserGroup {\n    members?: B2BUser[];\n    membersCoun?: number;\n    name?: string;\n    orgUnit?: B2BUnit;\n    permissions?: Permission[];\n    roles?: any;\n    selected?: boolean;\n    subGroups?: any;\n    uid?: string;\n  }\n\n  export interface OrgUnitUserGroupList {\n    orgUnitUserGroups: OrgUnitUserGroup[];\n    pagination?: PaginationModel;\n    sorts?: SortModel[];\n  }\n\n  export interface B2BUnitNode {\n    active?: boolean;\n    children?: B2BUnitNode[];\n    id?: string;\n    name?: string;\n    parent?: string;\n  }\n\n  export interface B2BUnitNodeList {\n    unitNodes?: B2BUnitNode[];\n  }\n\n  export interface B2BUser extends User {\n    active?: boolean;\n    approvers?: [];\n    orgUnit?: B2BUnit;\n    roles?: string[];\n    selected?: boolean;\n  }\n\n  export interface OrgUnitUserList {\n    users: B2BUser[];\n    pagination?: PaginationModel;\n    sorts?: SortModel[];\n  }\n\n  export interface B2BApprovalProcess {\n    code?: string;\n    name?: string;\n  }\n\n  export interface B2BApprovalProcessList {\n    approvalProcesses?: B2BApprovalProcess[];\n  }\n\n  export interface B2BUnit {\n    active?: boolean;\n    addresses?: Address[];\n    uid?: string;\n    name?: string;\n    parentOrgUnit?: Partial<B2BUnit>;\n    approvalProcess?: B2BApprovalProcess;\n    administrators?: B2BUser[];\n    approvers?: B2BUser[];\n    customers?: B2BUser[];\n    managers?: B2BUser[];\n  }\n\n  export interface OrderApprovalPermissionType {\n    code?: string;\n    name?: string;\n  }\n\n  export interface OrderApprovalPermissionTypeList {\n    orderApprovalPermissionTypes?: OrderApprovalPermissionType[];\n  }\n\n  export enum Period {\n    DAY = 'DAY',\n    WEEK = 'WEEK',\n    MONTH = 'MONTH',\n    QUARTER = 'QUARTER',\n    YEAR = 'YEAR',\n  }\n\n  export interface Permission {\n    active?: boolean;\n    code?: string;\n    currency?: Currency;\n    orderApprovalPermissionType?: OrderApprovalPermissionType;\n    orgUnit?: B2BUnitNode;\n    periodRange?: Period;\n    selected?: boolean;\n    treshold?: number;\n  }\n\n  export interface PermissionsList {\n    orderApprovalPermissions?: Permission[];\n    pagination?: PaginationModel;\n    sorts?: SortModel[];\n  }\n\n  export interface ReplenishmentOrder {\n    active?: boolean;\n    appliedOrderPromotions?: PromotionResult[];\n    appliedProductPromotions?: PromotionResult[];\n    appliedVouchers?: Voucher[];\n    calculated?: boolean;\n    code?: string;\n    costCenter?: CostCenter;\n    deliveryAddress?: Address;\n    deliveryCost?: Price;\n    deliveryItemsQuantity?: number;\n    deliveryMode?: DeliveryMode;\n    deliveryOrderGroups?: DeliveryOrderEntryGroup[];\n    description?: string;\n    entries?: OrderEntry[];\n    expirationTime?: string;\n    firstDate?: string;\n    guid?: string;\n    name?: string;\n    net?: boolean;\n    orderDiscounts?: Price;\n    paymentInfo?: PaymentDetails;\n    paymentStatus?: string;\n    paymentType?: PaymentType;\n    pickupItemsQuantity?: number;\n    pickupOrderGroups?: PickupOrderEntryGroup[];\n    potentialOrderPromotions?: PromotionResult[];\n    potentialProductPromotions?: PromotionResult[];\n    productDiscounts?: Price;\n    purchaseOrderNumber?: string;\n    replenishmentOrderCode?: string;\n    saveTime?: string;\n    savedBy?: Principal;\n    site?: string;\n    store?: string;\n    subTotal?: Price;\n    totalDiscounts?: Price;\n    totalItems?: number;\n    totalPrice?: Price;\n    totalPriceWithTax?: Price;\n    totalTax?: Price;\n    totalUnitCount?: number;\n    trigger?: Trigger;\n    user?: Principal;\n  }\n\n  export interface ReplenishmentOrderList {\n    replenishmentOrders?: ReplenishmentOrder[];\n    pagination?: PaginationModel;\n    sorts?: SortModel[];\n  }\n\n  export interface Trigger {\n    activationTime?: string;\n    displayTimeTable?: string;\n  }\n\n  export interface ScheduleReplenishmentForm {\n    daysOfWeek?: DaysOfWeek[];\n    nthDayOfMonth?: string;\n    numberOfDays?: string;\n    numberOfWeeks?: string;\n    recurrencePeriod?: string;\n    replenishmentStartDate?: string;\n  }\n\n  export enum DaysOfWeek {\n    MONDAY = 'MONDAY',\n    TUESDAY = 'TUESDAY',\n    WEDNESDAY = 'WEDNESDAY',\n    THURSDAY = 'THURSDAY',\n    FRIDAY = 'FRIDAY',\n    SATURDAY = 'SATURDAY',\n    SUNDAY = 'SUNDAY',\n  }\n\n  export enum OrderApprovalDecisionValue {\n    APPROVE = 'APPROVE',\n    REJECT = 'REJECT',\n  }\n  export interface OrderApprovalDecision {\n    decision?: OrderApprovalDecisionValue;\n    comment?: string;\n  }\n\n  export interface OrderApprovalRecord {\n    approver?: Principal;\n    comments?: string;\n    permissionTypes?: OrderApprovalPermissionType[];\n    statusDisplay?: string;\n  }\n\n  export interface OrderApproval {\n    approvalDecisionRequired?: boolean;\n    code?: string;\n    customerOrderApprovalRecords?: OrderApprovalRecord[];\n    merchantOrderApprovalRecords?: OrderApprovalRecord[];\n    order?: Order;\n    trigger?: Trigger;\n  }\n\n  export interface OrderApprovalsList {\n    orderApprovals?: OrderApproval[];\n    pagination?: PaginationModel;\n    sorts?: SortModel[];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CMS_FLEX_COMPONENT_TYPE,\n  JSP_INCLUDE_CMS_COMPONENT_TYPE,\n} from '../../../../cms/config/cms-config';\nimport { ContentSlotComponentData } from '../../../../cms/model/content-slot-component-data.model';\nimport { ContentSlotData } from '../../../../cms/model/content-slot-data.model';\nimport {\n  CmsStructureModel,\n  Page,\n  PageRobotsMeta,\n} from '../../../../cms/model/page.model';\nimport { Converter } from '../../../../util/converter.service';\nimport { Occ } from '../../../occ-models/occ.models';\n\n@Injectable({ providedIn: 'root' })\nexport class OccCmsPageNormalizer\n  implements Converter<Occ.CMSPage, CmsStructureModel> {\n  convert(\n    source: Occ.CMSPage,\n    target: CmsStructureModel = {}\n  ): CmsStructureModel {\n    this.normalizePageData(source, target);\n    this.normalizePageSlotData(source, target);\n    this.normalizePageComponentData(source, target);\n    this.normalizeComponentData(source, target);\n    return target;\n  }\n\n  /**\n   * Converts the OCC cms page model to the `Page` in the `CmsStructureModel`.\n   */\n  protected normalizePageData(\n    source: Occ.CMSPage,\n    target: CmsStructureModel\n  ): void {\n    if (!source) {\n      return;\n    }\n    const page: Page = {};\n\n    if (source.name) {\n      page.name = source.name;\n    }\n    if (source.typeCode) {\n      page.type = source.typeCode;\n    }\n    if (source.label) {\n      page.label = source.label;\n    }\n    if (source.template) {\n      page.template = source.template;\n    }\n    if (source.uid) {\n      page.pageId = source.uid;\n    }\n    if (source.title) {\n      page.title = source.title;\n    }\n    if (source.properties) {\n      page.properties = source.properties;\n    }\n\n    this.normalizeRobots(source, page);\n\n    target.page = page;\n  }\n\n  /**\n   * Adds a ContentSlotData for each page slot in the `CmsStructureModel`.\n   */\n  protected normalizePageSlotData(\n    source: Occ.CMSPage,\n    target: CmsStructureModel\n  ): void {\n    if (!source?.contentSlots) {\n      return;\n    }\n    if (!Array.isArray(source.contentSlots.contentSlot)) {\n      source.contentSlots.contentSlot = [source.contentSlots.contentSlot];\n    }\n    target.page.slots = {};\n    for (const slot of source.contentSlots.contentSlot) {\n      target.page.slots[slot.position] = {} as ContentSlotData;\n      if (slot.properties) {\n        target.page.slots[slot.position].properties = slot.properties;\n      }\n    }\n  }\n\n  /**\n   * Registers the `ContentSlotComponentData` for each component.\n   */\n  protected normalizePageComponentData(\n    source: Occ.CMSPage,\n    target: CmsStructureModel\n  ): void {\n    if (!source?.contentSlots?.contentSlot) {\n      return;\n    }\n    for (const slot of source.contentSlots.contentSlot) {\n      if (Array.isArray(slot.components?.component)) {\n        for (const component of slot.components.component) {\n          const comp: ContentSlotComponentData = {\n            uid: component.uid,\n            typeCode: component.typeCode,\n          };\n          if (component.properties) {\n            comp.properties = component.properties;\n          }\n\n          if (component.typeCode === CMS_FLEX_COMPONENT_TYPE) {\n            comp.flexType = component.flexType;\n          } else if (component.typeCode === JSP_INCLUDE_CMS_COMPONENT_TYPE) {\n            comp.flexType = component.uid;\n          } else {\n            comp.flexType = component.typeCode;\n          }\n          if (!target.page.slots[slot.position].components) {\n            target.page.slots[slot.position].components = [];\n          }\n          target.page.slots[slot.position].components.push(comp);\n        }\n      }\n    }\n  }\n\n  /**\n   * Adds the actual component data whenever available in the CMS page data.\n   *\n   * If the data is not populated in this payload, it is loaded separately\n   * (`OccCmsComponentAdapter`).\n   */\n  protected normalizeComponentData(\n    source: Occ.CMSPage,\n    target: CmsStructureModel\n  ): void {\n    if (!source?.contentSlots?.contentSlot) {\n      return;\n    }\n\n    for (const slot of source.contentSlots.contentSlot) {\n      if (Array.isArray(slot.components?.component)) {\n        for (const component of slot.components.component as any) {\n          // while we're hoping to get this right from the backend api,\n          // the OCC api stills seems out of sync with the right model.\n          if (component.modifiedtime) {\n            component.modifiedTime = component.modifiedtime;\n            delete component.modifiedtime;\n          }\n\n          // we don't put properties into component state\n          if (component.properties) {\n            component.properties = undefined;\n          }\n          if (!target.components) {\n            target.components = [];\n          }\n          target.components.push(component);\n        }\n      }\n    }\n  }\n\n  /**\n   * Normalizes the page robot string to an array of `PageRobotsMeta` items.\n   */\n  protected normalizeRobots(source: Occ.CMSPage, target: Page): void {\n    const robots = [];\n    if (source.robotTag) {\n      switch (source.robotTag) {\n        case Occ.PageRobots.INDEX_FOLLOW:\n          robots.push(PageRobotsMeta.INDEX);\n          robots.push(PageRobotsMeta.FOLLOW);\n          break;\n        case Occ.PageRobots.NOINDEX_FOLLOW:\n          robots.push(PageRobotsMeta.NOINDEX);\n          robots.push(PageRobotsMeta.FOLLOW);\n          break;\n        case Occ.PageRobots.INDEX_NOFOLLOW:\n          robots.push(PageRobotsMeta.INDEX);\n          robots.push(PageRobotsMeta.NOFOLLOW);\n          break;\n        case Occ.PageRobots.NOINDEX_NOFOLLOW:\n          robots.push(PageRobotsMeta.NOINDEX);\n          robots.push(PageRobotsMeta.NOFOLLOW);\n          break;\n      }\n    }\n\n    target.robots = robots;\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { CmsStructureModel } from '../../model/page.model';\nimport { Converter } from '../../../util/converter.service';\n\nexport const CMS_PAGE_NORMALIZER = new InjectionToken<\n  Converter<any, CmsStructureModel>\n>('CmsPageNormalizer');\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CmsPageAdapter } from '../../../cms/connectors/page/cms-page.adapter';\nimport { CMS_PAGE_NORMALIZER } from '../../../cms/connectors/page/converters';\nimport { CmsStructureModel } from '../../../cms/model/page.model';\nimport { PageType } from '../../../model/cms.model';\nimport {\n  HOME_PAGE_CONTEXT,\n  PageContext,\n  SMART_EDIT_CONTEXT,\n} from '../../../routing/models/page-context.model';\nimport { ConverterService } from '../../../util/converter.service';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\n\nexport interface OccCmsPageRequest {\n  pageLabelOrId?: string;\n  pageType?: PageType;\n  code?: string;\n  fields?: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OccCmsPageAdapter implements CmsPageAdapter {\n  protected headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  /**\n   * @override returns the OCC CMS page data for the given context and converts\n   * the data by any configured `CMS_PAGE_NORMALIZER`.\n   */\n  load(pageContext: PageContext): Observable<CmsStructureModel> {\n    const params = this.getPagesRequestParams(pageContext);\n\n    const endpoint = !pageContext.type\n      ? this.occEndpoints.getUrl('page', undefined, params)\n      : this.occEndpoints.getUrl('pages', undefined, params);\n\n    return this.http\n      .get(endpoint, { headers: this.headers })\n      .pipe(this.converter.pipeable(CMS_PAGE_NORMALIZER));\n  }\n\n  /**\n   * The OCC CMS API allows to query pages by a combination of pageType, label and code.\n   *\n   * When a `ContentPage` is requested, we use the `pageLabelOrId`:\n   *\n   * ```\n   * \"/pages?pageLabelOrId=/my-page&pageType=ContentPage\"\n   * ```\n   *\n   * Other pages are queried by code:\n   *\n   * ```\n   * \"/pages?code=1234&pageType=ProductPage\"\n   * ```\n   *\n   * The page context is ignored for a home page request or in case of a\n   * `smartedit-preview` request.\n   */\n  protected getPagesRequestParams(context: PageContext): OccCmsPageRequest {\n    if (context.id === HOME_PAGE_CONTEXT || context.id === SMART_EDIT_CONTEXT) {\n      return {};\n    }\n\n    const httpParams: OccCmsPageRequest = {};\n    if (context.type) {\n      httpParams.pageType = context.type;\n    }\n    if (context.type === PageType.CONTENT_PAGE) {\n      httpParams.pageLabelOrId = context.id;\n    } else {\n      httpParams.code = context.id;\n    }\n\n    return httpParams;\n  }\n}\n","import { Observable } from 'rxjs';\nimport { CmsComponent } from '../../../model/cms.model';\nimport { PageContext } from '../../../routing/models/page-context.model';\n\nexport abstract class CmsComponentAdapter {\n  /**\n   * Abstract method must be used to load the component for a given `id` and `PageContext`.\n   * The component can be loaded from alternative backend, as long as the structure\n   * converts to the `CmsStructureModel`.\n   *\n   * @param pageContext The `PageContext` holding the page Id.\n   */\n  abstract load<T extends CmsComponent>(\n    id: string,\n    pageContext: PageContext,\n    fields?: string\n  ): Observable<T>;\n\n  abstract findComponentsByIds(\n    ids: string[],\n    pageContext: PageContext\n  ): Observable<CmsComponent[]>;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsPageAdapter } from '../../../cms/connectors/page/cms-page.adapter';\nimport { OccCmsComponentAdapter } from './occ-cms-component.adapter';\nimport { OccCmsPageNormalizer } from './converters/occ-cms-page-normalizer';\nimport { OccCmsPageAdapter } from './occ-cms-page.adapter';\nimport { CMS_PAGE_NORMALIZER } from '../../../cms/connectors/page/converters';\nimport { CmsComponentAdapter } from '../../../cms/connectors/component/cms-component.adapter';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    {\n      provide: CmsPageAdapter,\n      useClass: OccCmsPageAdapter,\n    },\n    {\n      provide: CMS_PAGE_NORMALIZER,\n      useExisting: OccCmsPageNormalizer,\n      multi: true,\n    },\n    {\n      provide: CmsComponentAdapter,\n      useClass: OccCmsComponentAdapter,\n    },\n  ],\n})\nexport class CmsOccModule {}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { pluck } from 'rxjs/operators';\nimport { CMS_COMPONENT_NORMALIZER } from '../../../cms/connectors/component/converters';\nimport { CmsComponent } from '../../../model/cms.model';\nimport { PageContext } from '../../../routing';\nimport { Occ } from '../../occ-models/occ.models';\nimport { OccCmsComponentAdapter } from './occ-cms-component.adapter';\n\n/**\n * Before 1905, the OCC CMS component API required was using POST method\n * to load a (potentially large) number of components. With 1905, the endpoint\n * evaluated to use GET. Switching from POST to GET has been initially implemented\n * with the `legacy` flag, but from version 3.0 onwards, we're moving the\n * implementation to this optional Adapter.\n *\n * If you like to connect to a pre 1905 version, you can provide this adapter for the\n * `CmsComponentAdapter` injection token.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LegacyOccCmsComponentAdapter extends OccCmsComponentAdapter {\n  findComponentsByIds(\n    ids: string[],\n    pageContext: PageContext,\n    fields = 'DEFAULT',\n    currentPage = 0,\n    pageSize = ids.length,\n    sort?: string\n  ): Observable<CmsComponent[]> {\n    const idList: Occ.ComponentIDList = { idList: ids };\n\n    const requestParams = {\n      ...this.getContextParams(pageContext),\n      ...this.getPaginationParams(currentPage, pageSize, sort),\n    };\n\n    return this.http\n      .post<Occ.ComponentList>(\n        this.getComponentsEndpoint(requestParams, fields),\n        idList,\n        {\n          headers: this.headers,\n        }\n      )\n      .pipe(\n        pluck('component'),\n        this.converter.pipeableMany(CMS_COMPONENT_NORMALIZER)\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CostCenter } from '../../../../model/org-unit.model';\nimport { Converter } from '../../../../util/converter.service';\nimport { Occ } from '../../../occ-models/occ.models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OccCostCenterNormalizer\n  implements Converter<Occ.CostCenter, CostCenter> {\n  convert(source: Occ.CostCenter, target?: CostCenter): CostCenter {\n    if (target === undefined) {\n      target = {\n        ...(source as any),\n        active: this.normalizeBoolean(source.active),\n      };\n    }\n    return target;\n  }\n\n  /**\n   * Returns the boolean value for a string property that is supposed\n   * to be of type boolean.\n   */\n  protected normalizeBoolean(property: string | boolean): boolean {\n    return typeof property === 'string' ? property === 'true' : property;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CostCenter } from '../../../../model/org-unit.model';\nimport { Converter } from '../../../../util/converter.service';\nimport { Occ } from '../../../occ-models/occ.models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OccCostCenterSerializer\n  implements Converter<CostCenter, Occ.CostCenter> {\n  convert(source: CostCenter, target?: Occ.CostCenter): Occ.CostCenter {\n    if (target === undefined) {\n      target = {\n        ...(source as any),\n        activeFlag: source.active,\n      };\n      delete target.active;\n    }\n    return target;\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { Converter } from '../../../util/converter.service';\nimport { CostCenter } from '../../../model/org-unit.model';\nimport { EntitiesModel } from '../../../model/misc.model';\n\nexport const COST_CENTER_NORMALIZER = new InjectionToken<\n  Converter<any, CostCenter>\n>('CostCenterNormalizer');\n\nexport const COST_CENTERS_NORMALIZER = new InjectionToken<\n  Converter<any, EntitiesModel<CostCenter>>\n>('CostCentersListNormalizer');\n\nexport const COST_CENTER_SERIALIZER = new InjectionToken<\n  Converter<CostCenter, any>\n>('CostCenterSerializer');\n","import { Injectable } from '@angular/core';\nimport { COST_CENTER_NORMALIZER } from '../../../../cost-center/connectors/cost-center/converters';\nimport { EntitiesModel } from '../../../../model/misc.model';\nimport { CostCenter } from '../../../../model/org-unit.model';\nimport {\n  Converter,\n  ConverterService,\n} from '../../../../util/converter.service';\nimport { Occ } from '../../../occ-models/occ.models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OccCostCenterListNormalizer\n  implements Converter<Occ.CostCentersList, EntitiesModel<CostCenter>> {\n  constructor(private converter: ConverterService) {}\n\n  convert(\n    source: Occ.CostCentersList,\n    target?: EntitiesModel<CostCenter>\n  ): EntitiesModel<CostCenter> {\n    if (target === undefined) {\n      target = {\n        ...(source as any),\n        values: source.costCenters.map((costCenter) => ({\n          ...this.converter.convert(costCenter, COST_CENTER_NORMALIZER),\n        })),\n      };\n    }\n    return target;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Config } from '../../config/config-tokens';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class FeaturesConfig {\n  features?: {\n    [featureToggle: string]: string | boolean;\n  };\n}\n","import { FeaturesConfig } from '../config/features-config';\n\nfunction isFeatureConfig(config: any): config is FeaturesConfig {\n  return typeof config === 'object' && config.features;\n}\n\nfunction isInLevel(level, version) {\n  if (level === '*') {\n    return true;\n  }\n  const levelParts = level.split('.');\n  const versionParts = version.split('.');\n\n  for (let i = 0; i < versionParts.length; i++) {\n    const versionNumberPart = Number(versionParts[i]);\n    const levelNumberPart = Number(levelParts[i]) || 0;\n\n    if (versionNumberPart !== levelNumberPart) {\n      return levelNumberPart > versionNumberPart;\n    }\n  }\n  return true;\n}\n\nexport function isFeatureLevel(config: unknown, level: string): boolean {\n  if (isFeatureConfig(config)) {\n    return level[0] === '!'\n      ? !isInLevel(config.features.level, level.substr(1, level.length))\n      : isInLevel(config.features.level, level);\n  }\n}\n\nexport function isFeatureEnabled(config: unknown, feature: string): boolean {\n  if (isFeatureConfig(config)) {\n    const featureConfig =\n      feature[0] === '!'\n        ? config.features[feature.substr(1, feature.length)]\n        : config.features[feature];\n\n    const result =\n      typeof featureConfig === 'string'\n        ? isFeatureLevel(config, featureConfig)\n        : featureConfig;\n\n    return feature[0] === '!' ? !result : result;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FeaturesConfig } from '../config/features-config';\nimport {\n  isFeatureEnabled,\n  isFeatureLevel,\n} from '../utils/feature-config-utils';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FeatureConfigService {\n  constructor(protected config: FeaturesConfig) {}\n\n  isLevel(version: string): boolean {\n    return isFeatureLevel(this.config, version);\n  }\n\n  isEnabled(feature: string) {\n    return isFeatureEnabled(this.config, feature);\n  }\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { FeatureConfigService } from '../services/feature-config.service';\n\n@Directive({\n  selector: '[cxFeatureLevel]',\n})\nexport class FeatureLevelDirective {\n  constructor(\n    protected templateRef: TemplateRef<any>,\n    protected viewContainer: ViewContainerRef,\n    protected featureConfig: FeatureConfigService\n  ) {}\n\n  private hasView = false;\n\n  @Input() set cxFeatureLevel(level: string | number) {\n    if (this.featureConfig.isLevel(level.toString()) && !this.hasView) {\n      this.viewContainer.createEmbeddedView(this.templateRef);\n      this.hasView = true;\n    } else if (!this.featureConfig.isLevel(level.toString()) && this.hasView) {\n      this.viewContainer.clear();\n      this.hasView = false;\n    }\n  }\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { FeatureConfigService } from '../services/feature-config.service';\n\n@Directive({\n  selector: '[cxFeature]',\n})\nexport class FeatureDirective {\n  constructor(\n    protected templateRef: TemplateRef<any>,\n    protected viewContainer: ViewContainerRef,\n    protected featureConfig: FeatureConfigService\n  ) {}\n\n  private hasView = false;\n\n  @Input() set cxFeature(feature: string) {\n    if (this.featureConfig.isEnabled(feature) && !this.hasView) {\n      this.viewContainer.createEmbeddedView(this.templateRef);\n      this.hasView = true;\n    } else if (!this.featureConfig.isEnabled(feature) && this.hasView) {\n      this.viewContainer.clear();\n      this.hasView = false;\n    }\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FeaturesConfig } from './config/features-config';\nimport { FeatureLevelDirective } from './directives/feature-level.directive';\nimport { FeatureDirective } from './directives/feature.directive';\nimport { provideDefaultConfig } from '../config/config-providers';\n\n@NgModule({\n  declarations: [FeatureLevelDirective, FeatureDirective],\n  exports: [FeatureLevelDirective, FeatureDirective],\n})\nexport class FeaturesConfigModule {\n  static forRoot(\n    defaultLevel?: string\n  ): ModuleWithProviders<FeaturesConfigModule> {\n    return {\n      ngModule: FeaturesConfigModule,\n      providers: [\n        provideDefaultConfig(<FeaturesConfig>{\n          features: {\n            level: defaultLevel || '*',\n          },\n        }),\n      ],\n    };\n  }\n}\n","import { Inject, Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription, zip } from 'rxjs';\nimport { deepMerge } from '../utils/deep-merge';\nimport { isFeatureEnabled } from '../../features-config';\nimport {\n  Config,\n  ConfigChunk,\n  DefaultConfig,\n  DefaultConfigChunk,\n  RootConfig,\n} from '../config-tokens';\nimport { UnifiedInjector } from '../../lazy-loading/unified-injector';\nimport { skip, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfigurationService implements OnDestroy {\n  /**\n   * Will emit unified configuration when some ambient configuration will appear\n   *\n   * Ambient configuration can appear when we lazy load module with configuration\n   */\n  readonly unifiedConfig$: Observable<any>;\n\n  /**\n   * Global application configuration\n   */\n  readonly config: any;\n\n  private readonly ambientDefaultConfig: any = {};\n  private readonly ambientConfig: any = {};\n\n  private subscription: Subscription;\n\n  constructor(\n    @Inject(RootConfig) protected rootConfig: any,\n    @Inject(DefaultConfig) protected defaultConfig: any,\n    protected unifiedInjector: UnifiedInjector,\n    @Inject(Config) config: any\n  ) {\n    this.config = config;\n    this.unifiedConfig$ = new BehaviorSubject(config);\n\n    // We need to use subscription to propagate changes to the config from the beginning.\n    // It will be possible to make it lazy, when we drop this compatibility feature\n    // in the future.\n    this.subscription = this.feedUnifiedConfig().subscribe();\n  }\n\n  private feedUnifiedConfig(): Observable<any> {\n    const configChunks$: Observable<object[]> = this.unifiedInjector.get(\n      ConfigChunk,\n      []\n    );\n    const defaultConfigChunks$ = this.unifiedInjector.get(\n      DefaultConfigChunk,\n      []\n    );\n\n    return zip(configChunks$, defaultConfigChunks$).pipe(\n      // we don't need result from the root injector\n      skip(1),\n      tap(([configChunks, defaultConfigChunks]) =>\n        this.processConfig(configChunks, defaultConfigChunks)\n      )\n    );\n  }\n\n  private processConfig(configChunks: any[], defaultConfigChunks: any[]) {\n    if (defaultConfigChunks?.length) {\n      deepMerge(this.ambientDefaultConfig, ...defaultConfigChunks);\n    }\n    if (configChunks.length) {\n      deepMerge(this.ambientConfig, ...configChunks);\n    }\n\n    if (configChunks.length || defaultConfigChunks.length) {\n      this.emitUnifiedConfig();\n    }\n  }\n\n  private emitUnifiedConfig(): void {\n    const newConfig = deepMerge(\n      {},\n      this.defaultConfig,\n      this.ambientDefaultConfig,\n      this.ambientConfig,\n      this.rootConfig\n    );\n    (this.unifiedConfig$ as BehaviorSubject<any>).next(newConfig);\n\n    // compatibility mechanism, can be disabled with feature toggle\n    if (!isFeatureEnabled(this.config, 'disableConfigUpdates')) {\n      deepMerge(this.config, newConfig);\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n    (this.unifiedConfig$ as BehaviorSubject<any>).complete();\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { provideConfig, provideConfigFactory } from './config-providers';\nimport { ConfigurationService } from './services/configuration.service';\n\n@NgModule({})\nexport class ConfigModule {\n  // To make sure ConfigurationService will be instantiated, we inject it into\n  // module constructor\n  constructor(_configurationService: ConfigurationService) {}\n\n  /**\n   * Import ConfigModule and contribute config to the global configuration\n   *\n   * To provide default configuration in libraries provideDefaultConfig should be used instead.\n   *\n   * @param config Config object to merge with the global configuration\n   */\n  static withConfig(config: object): ModuleWithProviders<ConfigModule> {\n    return {\n      ngModule: ConfigModule,\n      providers: [provideConfig(config)],\n    };\n  }\n\n  /**\n   * Import ConfigModule and contribute config to the global configuration using factory function\n   *\n   * To provide default configuration in libraries provideDefaultConfigFactory should be used instead.\n   *\n   * @param configFactory Factory function that will generate configuration\n   * @param deps Optional dependencies to factory function\n   */\n  static withConfigFactory(\n    configFactory: Function,\n    deps?: any[]\n  ): ModuleWithProviders<ConfigModule> {\n    return {\n      ngModule: ConfigModule,\n      providers: [provideConfigFactory(configFactory, deps)],\n    };\n  }\n\n  /**\n   * Module with providers, should be imported only once, if possible, at the root of the app.\n   *\n   * @param config\n   */\n  static forRoot(config: any = {}): ModuleWithProviders<ConfigModule> {\n    return {\n      ngModule: ConfigModule,\n      providers: [provideConfig(config)],\n    };\n  }\n}\n","import { OccConfig } from '../../config/occ-config';\n\nexport const defaultOccCostCentersConfig: OccConfig = {\n  backend: {\n    occ: {\n      endpoints: {\n        getActiveCostCenters:\n          '/costcenters?fields=DEFAULT,unit(BASIC,addresses(DEFAULT))',\n      },\n    },\n  },\n};\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ConfigModule } from '../../../config/config.module';\nimport {\n  COST_CENTERS_NORMALIZER,\n  COST_CENTER_NORMALIZER,\n  COST_CENTER_SERIALIZER,\n} from '../../../cost-center/connectors/cost-center/converters';\nimport { OccCostCenterListNormalizer } from './converters/occ-cost-center-list-normalizer';\nimport { OccCostCenterNormalizer } from './converters/occ-cost-center-normalizer';\nimport { OccCostCenterSerializer } from './converters/occ-cost-center-serializer';\nimport { defaultOccCostCentersConfig } from './default-occ-cost-centers-config';\n\n@NgModule({\n  imports: [CommonModule, ConfigModule.withConfig(defaultOccCostCentersConfig)],\n  providers: [\n    {\n      provide: COST_CENTERS_NORMALIZER,\n      useExisting: OccCostCenterListNormalizer,\n      multi: true,\n    },\n    {\n      provide: COST_CENTER_NORMALIZER,\n      useExisting: OccCostCenterNormalizer,\n      multi: true,\n    },\n    {\n      provide: COST_CENTER_SERIALIZER,\n      useExisting: OccCostCenterSerializer,\n      multi: true,\n    },\n  ],\n})\nexport class CostCenterOccModule {}\n","import { Injectable } from '@angular/core';\nimport { OccConfig } from '../../../config/occ-config';\nimport { Occ } from '../../../occ-models/occ.models';\nimport { Converter } from '../../../../util/converter.service';\nimport { Product } from '../../../../model/product.model';\nimport { Images } from '../../../../model/image.model';\n\n@Injectable({ providedIn: 'root' })\nexport class ProductImageNormalizer implements Converter<Occ.Product, Product> {\n  constructor(protected config: OccConfig) {}\n\n  convert(source: Occ.Product, target?: Product): Product {\n    if (target === undefined) {\n      target = { ...(source as any) };\n    }\n    if (source.images) {\n      target.images = this.normalize(source.images);\n    }\n    return target;\n  }\n\n  /**\n   * @desc\n   * Creates the image structure we'd like to have. Instead of\n   * having a single list with all images despite type and format\n   * we create a proper structure. With that we can do:\n   * - images.primary.thumnail.url\n   * - images.GALLERY[0].thumnail.url\n   */\n  normalize(source: Occ.Image[]): Images {\n    const images = {};\n    if (source) {\n      for (const image of source) {\n        const isList = image.hasOwnProperty('galleryIndex');\n        if (!images.hasOwnProperty(image.imageType)) {\n          images[image.imageType] = isList ? [] : {};\n        }\n\n        let imageContainer;\n        if (isList && !images[image.imageType][image.galleryIndex]) {\n          images[image.imageType][image.galleryIndex] = {};\n        }\n\n        if (isList) {\n          imageContainer = images[image.imageType][image.galleryIndex];\n        } else {\n          imageContainer = images[image.imageType];\n        }\n\n        const targetImage = { ...image };\n        targetImage.url = this.normalizeImageUrl(targetImage.url);\n        imageContainer[image.format] = targetImage;\n      }\n    }\n    return images;\n  }\n  /**\n   * Traditionally, in an on-prem world, medias and other backend related calls\n   * are hosted at the same platform, but in a cloud setup, applications are are\n   * typically distributed cross different environments. For media, we use the\n   * `backend.media.baseUrl` by default, but fallback to `backend.occ.baseUrl`\n   * if none provided.\n   */\n  private normalizeImageUrl(url: string): string {\n    if (new RegExp(/^(http|data:image|\\/\\/)/i).test(url)) {\n      return url;\n    }\n    return (\n      (this.config.backend.media.baseUrl ||\n        this.config.backend.occ.baseUrl ||\n        '') + url\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Occ } from '../../../occ-models/occ.models';\nimport { Converter } from '../../../../util/converter.service';\nimport { Product, ProductReferences } from '../../../../model/product.model';\n\n@Injectable()\nexport class ProductReferenceNormalizer\n  implements Converter<Occ.Product, Product> {\n  convert(source: Occ.Product, target?: Product): Product {\n    if (target === undefined) {\n      target = { ...(source as any) };\n    }\n\n    if (source.productReferences) {\n      target.productReferences = this.normalize(source.productReferences);\n    }\n    return target;\n  }\n\n  /**\n   * @desc\n   * Creates the reference structure we'd like to have. Instead of\n   * having a single list with all references we create a proper structure.\n   * With that we have a semantic API for the clients\n   * - product.references.SIMILAR[0].code\n   */\n  protected normalize(source: Occ.ProductReference[]): ProductReferences {\n    const references = {};\n\n    if (source) {\n      for (const reference of source) {\n        if (!references.hasOwnProperty(reference.referenceType)) {\n          references[reference.referenceType] = [];\n        }\n        references[reference.referenceType].push(reference);\n      }\n    }\n    return references;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  Facet,\n  ProductSearchPage,\n} from '../../../../model/product-search.model';\nimport { PRODUCT_NORMALIZER } from '../../../../product/connectors/product/converters';\nimport {\n  Converter,\n  ConverterService,\n} from '../../../../util/converter.service';\nimport { Occ } from '../../../occ-models/occ.models';\n\n@Injectable({ providedIn: 'root' })\nexport class OccProductSearchPageNormalizer\n  implements Converter<Occ.ProductSearchPage, ProductSearchPage> {\n  constructor(private converterService: ConverterService) {}\n\n  /**\n   * Specifies the minimal number of top values in case\n   * non have been setup by the business.\n   */\n  protected DEFAULT_TOP_VALUES = 6;\n\n  convert(\n    source: Occ.ProductSearchPage,\n    target: ProductSearchPage = {}\n  ): ProductSearchPage {\n    target = {\n      ...target,\n      ...(source as any),\n    };\n\n    this.normalizeFacets(target);\n    if (source.products) {\n      target.products = source.products.map((product) =>\n        this.converterService.convert(product, PRODUCT_NORMALIZER)\n      );\n    }\n    return target;\n  }\n\n  private normalizeFacets(target: ProductSearchPage): void {\n    this.normalizeFacetValues(target);\n    this.normalizeUselessFacets(target);\n  }\n\n  /**\n   * The (current) backend returns facets with values that do not contribute\n   * to the facet navigation much, as the number in the result list will not get\n   * behavior, see https://jira.hybris.com/browse/CS-427.\n   *\n   * As long as this is not in place, we manually filter the facet from the list;\n   * any facet that does not have a count < the total results will be dropped from\n   * the facets.\n   */\n  private normalizeUselessFacets(target: ProductSearchPage): void {\n    if (target.facets) {\n      target.facets = target.facets.filter((facet) => {\n        return (\n          !target.pagination ||\n          !target.pagination.totalResults ||\n          ((!facet.hasOwnProperty('visible') || facet.visible) &&\n            facet.values &&\n            facet.values.find((value) => {\n              return (\n                value.selected || value.count < target.pagination.totalResults\n              );\n            }))\n        );\n      });\n    }\n  }\n\n  /*\n   * In case there are so-called `topValues` given for the facet values,\n   * values are obsolete.\n   *\n   * `topValues` is a feature in Adaptive Search which can limit a large\n   * amount of facet values to a small set (5 by default). As long as the backend\n   * provides all facet values AND topValues, we normalize the data to not bother\n   * the UI with this specific feature.\n   */\n  private normalizeFacetValues(target: ProductSearchPage): void {\n    if (target.facets) {\n      target.facets = target.facets.map((facetSource: Facet) => {\n        const { topValues, ...facetTarget } = facetSource;\n        facetTarget.topValueCount =\n          topValues?.length > 0 ? topValues.length : this.DEFAULT_TOP_VALUES;\n        return facetTarget;\n      });\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ProductReference } from '../../../../model/product.model';\nimport { Occ } from '../../../occ-models/occ.models';\nimport { PRODUCT_NORMALIZER } from '../../../../product/connectors/product/converters';\nimport {\n  Converter,\n  ConverterService,\n} from '../../../../util/converter.service';\n\n@Injectable({ providedIn: 'root' })\nexport class OccProductReferencesListNormalizer\n  implements Converter<Occ.ProductReferenceList, ProductReference[]> {\n  constructor(private converter: ConverterService) {}\n\n  convert(\n    source: Occ.ProductReferenceList,\n    target: ProductReference[] = []\n  ): ProductReference[] {\n    if (target === undefined) {\n      target = { ...(source as any) };\n    }\n\n    if (source && source.references) {\n      target = source.references.map((reference) => ({\n        ...reference,\n        target: this.converter.convert(reference.target, PRODUCT_NORMALIZER),\n      }));\n\n      return target;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { OccConfig } from '../../../config/occ-config';\nimport { Occ } from '../../../occ-models/occ.models';\nimport { Converter } from '../../../../util/converter.service';\nimport { Product } from '../../../../model/product.model';\n\n@Injectable({ providedIn: 'root' })\nexport class ProductNameNormalizer implements Converter<Occ.Product, Product> {\n  constructor(protected config: OccConfig) {}\n\n  convert(source: Occ.Product, target?: Product): Product {\n    if (target === undefined) {\n      target = { ...(source as any) };\n    }\n    if (source.name) {\n      target.name = this.normalize(source.name);\n      target.nameHtml = source.name;\n    }\n    return target;\n  }\n\n  protected normalize(name: string): string {\n    return name.replace(/<[^>]*>/g, '');\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { ProductReference } from '../../../model/product.model';\nimport { Converter } from '../../../util/converter.service';\n\nexport const PRODUCT_REFERENCES_NORMALIZER = new InjectionToken<\n  Converter<any, ProductReference[]>\n>('ProductReferencesListNormalizer');\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ProductReference } from '../../../model/product.model';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\nimport { ConverterService } from '../../../util/converter.service';\nimport { PRODUCT_REFERENCES_NORMALIZER } from '../../../product/connectors/references/converters';\nimport { ProductReferencesAdapter } from '../../../product/connectors/references/product-references.adapter';\n\n@Injectable()\nexport class OccProductReferencesAdapter implements ProductReferencesAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  load(\n    productCode: string,\n    referenceType?: string,\n    pageSize?: number\n  ): Observable<ProductReference[]> {\n    return this.http\n      .get(this.getEndpoint(productCode, referenceType, pageSize))\n      .pipe(this.converter.pipeable(PRODUCT_REFERENCES_NORMALIZER));\n  }\n\n  protected getEndpoint(\n    code: string,\n    reference?: string,\n    pageSize?: number\n  ): string {\n    return this.occEndpoints.getUrl(\n      'productReferences',\n      {\n        productCode: code,\n      },\n      { referenceType: reference, pageSize }\n    );\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { Converter } from '../../../util/converter.service';\nimport { Review } from '../../../model/product.model';\n\nexport const PRODUCT_REVIEW_NORMALIZER = new InjectionToken<\n  Converter<any, Review>\n>('ProductReviewNormalizer');\n\nexport const PRODUCT_REVIEW_SERIALIZER = new InjectionToken<\n  Converter<Review, any>\n>('ProductReviewSerializer');\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { pluck } from 'rxjs/operators';\nimport { Review } from '../../../model/product.model';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\nimport { ConverterService } from '../../../util/converter.service';\nimport {\n  PRODUCT_REVIEW_NORMALIZER,\n  PRODUCT_REVIEW_SERIALIZER,\n} from '../../../product/connectors/reviews/converters';\nimport { ProductReviewsAdapter } from '../../../product/connectors/reviews/product-reviews.adapter';\n\n@Injectable()\nexport class OccProductReviewsAdapter implements ProductReviewsAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  load(productCode: string, maxCount?: number): Observable<Review[]> {\n    return this.http\n      .get(this.getEndpoint(productCode, maxCount))\n      .pipe(\n        pluck('reviews'),\n        this.converter.pipeableMany(PRODUCT_REVIEW_NORMALIZER)\n      );\n  }\n\n  post(productCode: string, review: any): Observable<Review> {\n    review = this.converter.convert(review, PRODUCT_REVIEW_SERIALIZER);\n\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/x-www-form-urlencoded',\n    });\n\n    const body = new URLSearchParams();\n    body.append('headline', review.headline);\n    body.append('comment', review.comment);\n    body.append('rating', review.rating.toString());\n    body.append('alias', review.alias);\n\n    return this.http.post(this.getEndpoint(productCode), body.toString(), {\n      headers,\n    });\n  }\n\n  protected getEndpoint(code: string, maxCount?: number): string {\n    return this.occEndpoints.getUrl(\n      'productReviews',\n      {\n        productCode: code,\n      },\n      { maxCount }\n    );\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { Converter } from '../../../util/converter.service';\nimport {\n  Suggestion,\n  ProductSearchPage,\n} from '../../../model/product-search.model';\n\nexport const PRODUCT_SEARCH_PAGE_NORMALIZER = new InjectionToken<\n  Converter<any, ProductSearchPage>\n>('ProductSearchPageNormalizer');\n\nexport const PRODUCT_SUGGESTION_NORMALIZER = new InjectionToken<\n  Converter<any, Suggestion>\n>('ProductSuggestionNormalizer');\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { pluck } from 'rxjs/operators';\nimport {\n  ProductSearchPage,\n  Suggestion,\n} from '../../../model/product-search.model';\nimport {\n  PRODUCT_SEARCH_PAGE_NORMALIZER,\n  PRODUCT_SUGGESTION_NORMALIZER,\n} from '../../../product/connectors/search/converters';\nimport { ProductSearchAdapter } from '../../../product/connectors/search/product-search.adapter';\nimport { SearchConfig } from '../../../product/model/search-config';\nimport { ConverterService } from '../../../util/converter.service';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\n\nconst DEFAULT_SEARCH_CONFIG: SearchConfig = {\n  pageSize: 20,\n};\n\n@Injectable()\nexport class OccProductSearchAdapter implements ProductSearchAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  search(\n    query: string,\n    searchConfig: SearchConfig = DEFAULT_SEARCH_CONFIG\n  ): Observable<ProductSearchPage> {\n    return this.http\n      .get(this.getSearchEndpoint(query, searchConfig))\n      .pipe(this.converter.pipeable(PRODUCT_SEARCH_PAGE_NORMALIZER));\n  }\n\n  loadSuggestions(\n    term: string,\n    pageSize: number = 3\n  ): Observable<Suggestion[]> {\n    return this.http\n      .get(this.getSuggestionEndpoint(term, pageSize.toString()))\n      .pipe(\n        pluck('suggestions'),\n        this.converter.pipeableMany(PRODUCT_SUGGESTION_NORMALIZER)\n      );\n  }\n\n  protected getSearchEndpoint(\n    query: string,\n    searchConfig: SearchConfig\n  ): string {\n    return this.occEndpoints.getUrl(\n      'productSearch',\n      {},\n      {\n        query,\n        ...searchConfig,\n      }\n    );\n  }\n\n  protected getSuggestionEndpoint(term: string, max: string): string {\n    return this.occEndpoints.getUrl('productSuggestions', {}, { term, max });\n  }\n}\n","import { deepMerge, isObject } from '../../config/utils/deep-merge';\n\n/**\n * Merge occ fields parameters\n *\n * @param fields Fields definition as string or object\n */\nexport function mergeFields(fields: (string | object)[]): string {\n  const parsedFields = fields.map((f) =>\n    typeof f === 'string' ? parseFields(f) : f\n  );\n  const mergedFields = optimizeFields(deepMerge({}, ...parsedFields));\n  return stringifyFields(mergedFields);\n}\n\n/**\n * Optimize fields definition by removing not needed groups\n *\n * @param fields\n */\nexport function optimizeFields(fields: object = {}): object {\n  const keys = Object.keys(fields);\n  if (keys.includes('FULL')) {\n    delete fields['DEFAULT'];\n    delete fields['BASIC'];\n  } else if (keys.includes('DEFAULT')) {\n    delete fields['BASIC'];\n  }\n  Object.keys(fields).forEach((key) => {\n    fields[key] = optimizeFields(fields[key]);\n  });\n  return fields;\n}\n\n/**\n * Parse string field definition to an AST object\n *\n * @param fields Fields string definition\n * @param startIndex Used for recurrence\n */\nexport function parseFields(\n  fields: string,\n  startIndex = 0\n): [object, number] | object {\n  const parsedFields = {};\n\n  let i = startIndex;\n  while (i < fields.length) {\n    if (fields[i] === ',') {\n      if (i > startIndex) {\n        parsedFields[fields.substr(startIndex, i - startIndex)] = {};\n      }\n      startIndex = i + 1;\n    } else if (fields[i] === '(') {\n      const subFields = parseFields(fields, i + 1);\n      if (Array.isArray(subFields)) {\n        parsedFields[fields.substr(startIndex, i - startIndex)] = subFields[0];\n        startIndex = subFields[1];\n        i = startIndex - 1;\n      } else {\n        return parsedFields;\n      }\n    } else if (fields[i] === ')') {\n      if (i > startIndex) {\n        parsedFields[fields.substr(startIndex, i - startIndex)] = {};\n      }\n      return [parsedFields, i + 1];\n    }\n    i++;\n  }\n\n  if (startIndex < fields.length) {\n    parsedFields[fields.substr(startIndex, i - startIndex)] = {};\n  }\n\n  return parsedFields;\n}\n\n/**\n * Convert AST object fields definition to string representation\n *\n * @param fields\n */\nexport function stringifyFields(fields: object): string {\n  return Object.keys(fields)\n    .map((key) => {\n      const subFields = stringifyFields(fields[key]);\n      return subFields ? `${key}(${subFields})` : key;\n    })\n    .join(',');\n}\n\n/**\n * Extract part of the object described by fields definition\n *\n * @param data\n * @param fields\n */\nexport function extractFields<T>(data: T, fields: string | object): T {\n  const parsedFields =\n    typeof fields === 'string' ? parseFields(fields) : fields;\n  return getObjectPart<T>(data, parsedFields);\n}\n\nfunction getObjectPart<T>(data: T, fields: object): T {\n  if (!isObject(data)) {\n    return data;\n  }\n\n  const keys = Object.keys(fields);\n\n  if (\n    keys.length === 0 ||\n    // we should not extract parts of the object with ambiguous fields definitions\n    keys.find((el) => el === 'BASIC' || el === 'DEFAULT' || el === 'FULL')\n  ) {\n    return data;\n  }\n\n  const result = {} as T;\n\n  keys.forEach((key) => {\n    if (data.hasOwnProperty(key)) {\n      result[key] = getObjectPart(data[key], fields[key]);\n    }\n  });\n\n  return result;\n}\n","import { Injectable } from '@angular/core';\nimport { mergeFields, parseFields } from '../utils/occ-fields';\nimport { ScopedData } from '../../model/scoped-data';\nimport { HttpClient } from '@angular/common/http';\n\nexport interface ScopedDataWithUrl {\n  /** Url (with fields) to load scoped data */\n  url?: string;\n  /** scoped data model */\n  scopedData: ScopedData<any>;\n}\n\n/**\n * Intermediate model to accommodate all data needed to perform occ fields optimizations\n * wrapping ScopedData with url and fields\n */\nexport interface OccFieldsModel extends ScopedDataWithUrl {\n  /** extracted fields object, used to extract data from broader model */\n  fields?: object;\n}\n\n/**\n * Grouped rest calls with optimal urls\n *\n * One url groups all scopes it covers with related occFieldsModels\n */\nexport interface OccOptimimalUrlGroups {\n  [optimalUrl: string]: {\n    [scope: string]: OccFieldsModel;\n  };\n}\n\n/**\n * Helper service for optimizing endpoint calls to occ backend\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OccFieldsService {\n  constructor(protected http: HttpClient) {}\n\n  protected FIELDS_PARAM = 'fields';\n\n  /**\n   * Merge similar occ endpoints calls by merging fields parameter\n   *\n   * We assume that different scopes are defined by different fields parameters,\n   * so we are grouping all requests with the same urls (except fields definition)\n   * and merging into one request with fields that will satisfy all separate ones.\n   *\n   * @param models\n   */\n  getOptimalUrlGroups(models: ScopedDataWithUrl[]): OccOptimimalUrlGroups {\n    const groupedByUrls: OccOptimimalUrlGroups = {};\n    for (const model of models as OccFieldsModel[]) {\n      const [urlPart, fields] = this.splitFields(model.url);\n      if (!groupedByUrls[urlPart]) {\n        groupedByUrls[urlPart] = {};\n      }\n      model.fields = fields ? parseFields(fields) : {};\n      groupedByUrls[urlPart][model.scopedData.scope] = model;\n    }\n\n    const mergedUrls: OccOptimimalUrlGroups = {};\n    for (const [url, group] of Object.entries(groupedByUrls)) {\n      const urlWithFields = this.getUrlWithFields(\n        url,\n        Object.values(group).map((lo) => lo.fields)\n      );\n      mergedUrls[urlWithFields] = group;\n    }\n\n    return mergedUrls;\n  }\n\n  /**\n   * Extract fields parameter from occ endpoint url\n   *\n   * @param urlWithFields\n   */\n  private splitFields(urlWithFields: string): [string, string] {\n    const [url, params] = urlWithFields.split('?');\n\n    const paramsMap = {};\n\n    if (params) {\n      params.split('&').forEach((param) => {\n        const keyValue = param.split('=');\n        paramsMap[keyValue[0]] = keyValue[1];\n      });\n    }\n\n    const nonFieldsParams = Object.keys(paramsMap)\n      .sort()\n      .reduce((id, par) => {\n        if (par !== this.FIELDS_PARAM) {\n          id.push(paramsMap[par] ? `${par}=${paramsMap[par]}` : par);\n        }\n        return id;\n      }, []);\n\n    const nonFields = nonFieldsParams.join('&');\n\n    return [\n      nonFields ? `${url}?${nonFields}` : url,\n      paramsMap[this.FIELDS_PARAM],\n    ];\n  }\n\n  /**\n   * Combine url with field parameters\n   *\n   * @param url\n   * @param fields\n   */\n  private getUrlWithFields(url: string, fields: (string | object)[]): string {\n    const mergedFields = mergeFields(fields);\n\n    if (mergedFields) {\n      url += url.includes('?') ? '&' : '?';\n      url += `${this.FIELDS_PARAM}=${mergedFields}`;\n    }\n\n    return url;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ScopedData } from '../../model/scoped-data';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { extractFields } from '../utils/occ-fields';\nimport {\n  OccFieldsModel,\n  OccFieldsService,\n  ScopedDataWithUrl,\n} from './occ-fields.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OccRequestsOptimizerService {\n  constructor(\n    protected http: HttpClient,\n    protected occFields: OccFieldsService\n  ) {}\n\n  /**\n   * Optimize occ endpoint calls merging requests to the same url by merging field parameters\n   *\n   * @param scopedDataWithUrls\n   * @param dataFactory\n   */\n  scopedDataLoad<T>(\n    scopedDataWithUrls: ScopedDataWithUrl[],\n    dataFactory?: (url: string) => Observable<T>\n  ): ScopedData<T>[] {\n    const result = [];\n\n    if (!dataFactory) {\n      dataFactory = (url) => this.http.get<any>(url);\n    }\n\n    const mergedUrls = this.occFields.getOptimalUrlGroups(scopedDataWithUrls);\n\n    Object.entries(mergedUrls).forEach(\n      ([url, groupedModelsSet]: [\n        string,\n        {\n          [scope: string]: OccFieldsModel;\n        }\n      ]) => {\n        const groupedModels = Object.values(groupedModelsSet);\n\n        if (groupedModels.length === 1) {\n          // only one scope for url, we can pass the data straightaway\n          result.push({\n            ...groupedModels[0].scopedData,\n            data$: dataFactory(url),\n          });\n        } else {\n          // multiple scopes per url\n          // we have to split the model per each scope\n          const data$ = dataFactory(url).pipe(shareReplay(1));\n\n          groupedModels.forEach((modelData) => {\n            result.push({\n              ...modelData.scopedData,\n              data$: data$.pipe(\n                map((data) => extractFields<T>(data, modelData.fields))\n              ),\n            });\n          });\n        }\n      }\n    );\n\n    return result;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ProductAdapter } from '../../../product/connectors/product/product.adapter';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\nimport { ConverterService } from '../../../util/converter.service';\nimport { PRODUCT_NORMALIZER } from '../../../product/connectors/product/converters';\nimport { Product } from '../../../model/product.model';\nimport { ScopedProductData } from '../../../product/connectors/product/scoped-product-data';\nimport { ScopedDataWithUrl } from '../../services/occ-fields.service';\nimport { Occ } from '../../occ-models';\nimport { OccRequestsOptimizerService } from '../../services/occ-requests-optimizer.service';\n\n@Injectable()\nexport class OccProductAdapter implements ProductAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService,\n    protected requestsOptimizer: OccRequestsOptimizerService\n  ) {}\n\n  load(productCode: string, scope?: string): Observable<Product> {\n    return this.http\n      .get(this.getEndpoint(productCode, scope))\n      .pipe(this.converter.pipeable(PRODUCT_NORMALIZER));\n  }\n\n  loadMany(products: ScopedProductData[]): ScopedProductData[] {\n    const scopedDataWithUrls: ScopedDataWithUrl[] = products.map((model) => ({\n      scopedData: model,\n      url: this.getEndpoint(model.code, model.scope),\n    }));\n\n    return this.requestsOptimizer\n      .scopedDataLoad<Occ.Product>(scopedDataWithUrls)\n      .map(\n        (scopedProduct) =>\n          ({\n            ...scopedProduct,\n            data$: scopedProduct.data$.pipe(\n              this.converter.pipeable(PRODUCT_NORMALIZER)\n            ),\n          } as ScopedProductData)\n      );\n  }\n\n  protected getEndpoint(code: string, scope?: string): string {\n    return this.occEndpoints.getUrl(\n      'product',\n      {\n        productCode: code,\n      },\n      undefined,\n      scope\n    );\n  }\n}\n","import { Observable } from 'rxjs';\nimport { Product } from '../../../model/product.model';\nimport { ScopedProductData } from './scoped-product-data';\n\nexport abstract class ProductAdapter {\n  /**\n   * Abstract method used to load product's details data.\n   * Product's data can be loaded from alternative sources, as long as the structure\n   * converts to the `Product`.\n   *\n   * @param productCode The `productCode` for given product\n   * @param scope The product scope to load\n   */\n  abstract load(productCode: string, scope?: string): Observable<Product>;\n\n  /**\n   * Abstract method used to load data for multiple product and scopes\n   * Adapter is able to optimize necessary backend calls and load\n   * products in the most efficient way possible.\n   *\n   * @param products\n   */\n  abstract loadMany?(products: ScopedProductData[]): ScopedProductData[];\n}\n","import { Observable } from 'rxjs';\nimport { ProductReference } from '../../../model/product.model';\n\nexport abstract class ProductReferencesAdapter {\n  /**\n   * Abstract method used to load product references for a given product.\n   * References can be loaded from alternative sources, as long as the structure\n   * converts to the `ProductReference[]`.\n   *\n   * @param productCode The `productCode` for given product\n   * @param referenceType Reference type according to enum ProductReferenceTypeEnum\n   * @param pageSize Maximum number of product refrence to load\n   */\n  abstract load(\n    productCode: string,\n    referenceType?: string,\n    pageSize?: number\n  ): Observable<ProductReference[]>;\n}\n","import { Observable } from 'rxjs';\nimport { Review } from '../../../model/product.model';\n\nexport abstract class ProductReviewsAdapter {\n  /**\n   * Abstract method used to load reviews for a given product.\n   * Reviews can be loaded from alternative sources, as long as the structure\n   * converts to the `Review[]`.\n   *\n   * @param productCode The `productCode` for given product\n   * @param maxCount Maximum number of review to load\n   */\n  abstract load(productCode: string, maxCount?: number): Observable<Review[]>;\n\n  /**\n   * Abstract method used to post review for a given product.\n   *\n   * @param productCode The `productCode` for given product\n   * @param review Review to post\n   */\n  abstract post(productCode: string, review: any): Observable<Review>;\n}\n","import { SearchConfig } from '../../model/search-config';\n\nimport { Observable } from 'rxjs';\nimport {\n  Suggestion,\n  ProductSearchPage,\n} from '../../../model/product-search.model';\n\nexport abstract class ProductSearchAdapter {\n  abstract search(\n    query: string,\n    searchConfig?: SearchConfig\n  ): Observable<ProductSearchPage>;\n\n  abstract loadSuggestions(\n    term: string,\n    pageSize?: number\n  ): Observable<Suggestion[]>;\n}\n","export enum ProductScope {\n  LIST = 'list',\n  DETAILS = 'details',\n  ATTRIBUTES = 'attributes',\n  VARIANTS = 'variants',\n}\n","import { ProductScope } from '../../../product/model/product-scope';\nimport { OccConfig } from '../../config/occ-config';\n\nexport const defaultOccProductConfig: OccConfig = {\n  backend: {\n    occ: {\n      endpoints: {\n        product: {\n          default:\n            'products/${productCode}?fields=DEFAULT,averageRating,images(FULL),classifications,manufacturer,numberOfReviews,categories(FULL),baseOptions,baseProduct,variantOptions,variantType',\n          list:\n            'products/${productCode}?fields=code,name,summary,price(formattedValue),images(DEFAULT,galleryIndex)',\n          details:\n            'products/${productCode}?fields=averageRating,stock(DEFAULT),description,availableForPickup,code,url,price(DEFAULT),numberOfReviews,manufacturer,categories(FULL),priceRange,multidimensional,configuratorType,configurable,tags,images(FULL)',\n          attributes: 'products/${productCode}?fields=classifications',\n          variants:\n            'products/${productCode}?fields=name,purchasable,baseOptions(DEFAULT),baseProduct,variantOptions(DEFAULT),variantType',\n        },\n        productReviews: 'products/${productCode}/reviews',\n        // Uncomment this when occ gets configured\n        // productReferences:\n        //   'products/${productCode}/references?fields=DEFAULT,references(target(images(FULL)))&referenceType=${referenceType}',\n        productReferences:\n          'products/${productCode}/references?fields=DEFAULT,references(target(images(FULL)))',\n        // tslint:disable:max-line-length\n        productSearch:\n          'products/search?fields=products(code,name,summary,price(FULL),images(DEFAULT),stock(FULL),averageRating,variantOptions),facets,breadcrumbs,pagination(DEFAULT),sorts(DEFAULT),freeTextSearch,currentQuery',\n        // tslint:enable\n        productSuggestions: 'products/suggestions',\n      },\n    },\n    loadingScopes: {\n      product: {\n        details: {\n          include: [ProductScope.LIST, ProductScope.VARIANTS],\n        },\n      },\n    },\n  },\n};\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PRODUCT_NORMALIZER } from '../../../product/connectors/product/converters';\nimport { ProductAdapter } from '../../../product/connectors/product/product.adapter';\nimport { PRODUCT_REFERENCES_NORMALIZER } from '../../../product/connectors/references/converters';\nimport { ProductReferencesAdapter } from '../../../product/connectors/references/product-references.adapter';\nimport { ProductReviewsAdapter } from '../../../product/connectors/reviews/product-reviews.adapter';\nimport { PRODUCT_SEARCH_PAGE_NORMALIZER } from '../../../product/connectors/search/converters';\nimport { ProductSearchAdapter } from '../../../product/connectors/search/product-search.adapter';\nimport { OccProductReferencesListNormalizer } from './converters/occ-product-references-list-normalizer';\nimport { OccProductSearchPageNormalizer } from './converters/occ-product-search-page-normalizer';\nimport { ProductImageNormalizer } from './converters/product-image-normalizer';\nimport { OccProductReferencesAdapter } from './occ-product-references.adapter';\nimport { OccProductReviewsAdapter } from './occ-product-reviews.adapter';\nimport { OccProductSearchAdapter } from './occ-product-search.adapter';\nimport { OccProductAdapter } from './occ-product.adapter';\nimport { ProductNameNormalizer } from './converters/product-name-normalizer';\nimport { defaultOccProductConfig } from './default-occ-product-config';\nimport './product-occ-config';\nimport { provideDefaultConfig } from '../../../config/config-providers';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(defaultOccProductConfig),\n    {\n      provide: ProductAdapter,\n      useClass: OccProductAdapter,\n    },\n    {\n      provide: PRODUCT_NORMALIZER,\n      useExisting: ProductImageNormalizer,\n      multi: true,\n    },\n    {\n      provide: PRODUCT_NORMALIZER,\n      useExisting: ProductNameNormalizer,\n      multi: true,\n    },\n    {\n      provide: ProductReferencesAdapter,\n      useClass: OccProductReferencesAdapter,\n    },\n    {\n      provide: PRODUCT_REFERENCES_NORMALIZER,\n      useExisting: OccProductReferencesListNormalizer,\n      multi: true,\n    },\n    {\n      provide: ProductSearchAdapter,\n      useClass: OccProductSearchAdapter,\n    },\n    {\n      provide: PRODUCT_SEARCH_PAGE_NORMALIZER,\n      useExisting: OccProductSearchPageNormalizer,\n      multi: true,\n    },\n    {\n      provide: ProductReviewsAdapter,\n      useClass: OccProductReviewsAdapter,\n    },\n  ],\n})\nexport class ProductOccModule {}\n","import { InjectionToken } from '@angular/core';\nimport { Converter } from '../../util/converter.service';\nimport { BaseSite, Currency, Language } from '../../model/misc.model';\nimport { Country, Region } from '../../model/address.model';\n\nexport const LANGUAGE_NORMALIZER = new InjectionToken<Converter<any, Language>>(\n  'LanguageNormalizer'\n);\n\nexport const CURRENCY_NORMALIZER = new InjectionToken<Converter<any, Currency>>(\n  'CurrencyNormalizer'\n);\n\nexport const COUNTRY_NORMALIZER = new InjectionToken<Converter<any, Country>>(\n  'CountryNormalizer'\n);\n\nexport const REGION_NORMALIZER = new InjectionToken<Converter<any, Region>>(\n  'RegionNormalizer'\n);\n\nexport const BASE_SITE_NORMALIZER = new InjectionToken<\n  Converter<any, BaseSite>\n>('BaseSiteNormalizer');\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Country, CountryType, Region } from '../../../model/address.model';\nimport { BaseSite, Currency, Language } from '../../../model/misc.model';\nimport {\n  BASE_SITE_NORMALIZER,\n  COUNTRY_NORMALIZER,\n  CURRENCY_NORMALIZER,\n  LANGUAGE_NORMALIZER,\n  REGION_NORMALIZER,\n} from '../../../site-context/connectors/converters';\nimport { SiteAdapter } from '../../../site-context/connectors/site.adapter';\nimport { ConverterService } from '../../../util/converter.service';\nimport { Occ } from '../../occ-models/occ.models';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\n\n@Injectable()\nexport class OccSiteAdapter implements SiteAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpointsService: OccEndpointsService,\n    protected converterService: ConverterService\n  ) {}\n\n  loadLanguages(): Observable<Language[]> {\n    return this.http\n      .get<Occ.LanguageList>(this.occEndpointsService.getUrl('languages'))\n      .pipe(\n        map((languageList) => languageList.languages),\n        this.converterService.pipeableMany(LANGUAGE_NORMALIZER)\n      );\n  }\n\n  loadCurrencies(): Observable<Currency[]> {\n    return this.http\n      .get<Occ.CurrencyList>(this.occEndpointsService.getUrl('currencies'))\n      .pipe(\n        map((currencyList) => currencyList.currencies),\n        this.converterService.pipeableMany(CURRENCY_NORMALIZER)\n      );\n  }\n\n  loadCountries(type?: CountryType): Observable<Country[]> {\n    return this.http\n      .get<Occ.CountryList>(\n        this.occEndpointsService.getUrl(\n          'countries',\n          undefined,\n          type ? { type } : undefined\n        )\n      )\n      .pipe(\n        map((countryList) => countryList.countries),\n        this.converterService.pipeableMany(COUNTRY_NORMALIZER)\n      );\n  }\n\n  loadRegions(countryIsoCode: string): Observable<Region[]> {\n    return this.http\n      .get<Occ.RegionList>(\n        this.occEndpointsService.getUrl('regions', { isoCode: countryIsoCode })\n      )\n      .pipe(\n        map((regionList) => regionList.regions),\n        this.converterService.pipeableMany(REGION_NORMALIZER)\n      );\n  }\n\n  /**\n   * There is no OCC API to load one site based on Uid.\n   * So, we have to load all sites, and find the one from the list.\n   */\n  loadBaseSite(siteUid?: string): Observable<BaseSite> {\n    if (!siteUid) {\n      const baseUrl = this.occEndpointsService.getBaseEndpoint();\n      const urlSplits = baseUrl.split('/');\n      siteUid = urlSplits.pop();\n    }\n\n    return this.http\n      .get<{ baseSites: BaseSite[] }>(\n        this.occEndpointsService.getOccEndpoint('baseSites')\n      )\n      .pipe(\n        map((siteList) => {\n          return siteList.baseSites.find((site) => site.uid === siteUid);\n        })\n      );\n  }\n\n  loadBaseSites(): Observable<BaseSite[]> {\n    return this.http\n      .get<{ baseSites: BaseSite[] }>(\n        this.occEndpointsService.getOccEndpoint('baseSites')\n      )\n      .pipe(\n        map((baseSiteList) => baseSiteList.baseSites),\n        this.converterService.pipeableMany(BASE_SITE_NORMALIZER)\n      );\n  }\n}\n","import { Observable } from 'rxjs';\nimport { Country, CountryType, Region } from '../../model/address.model';\nimport { BaseSite, Currency, Language } from '../../model/misc.model';\n\nexport abstract class SiteAdapter {\n  /**\n   * Abstract method used to load languages.\n   */\n  abstract loadLanguages(): Observable<Language[]>;\n\n  /**\n   * Abstract method used to load currencies.\n   */\n  abstract loadCurrencies(): Observable<Currency[]>;\n\n  /**\n   * Abstract method used to get countries with optional type.\n   */\n  abstract loadCountries(type?: CountryType): Observable<Country[]>;\n\n  /**\n   * Abstract method used to get regions for a country.\n   */\n  abstract loadRegions(countryIsoCode: string): Observable<Region[]>;\n\n  /**\n   * Abstract method used to get base site data based on siteUid.\n   */\n  abstract loadBaseSite(siteUid?: string): Observable<BaseSite>;\n\n  /**\n   * Abstract method used to get all base sites data.\n   */\n  abstract loadBaseSites(): Observable<BaseSite[]>;\n}\n","import { OccConfig } from '../../config/occ-config';\n\nexport const defaultOccSiteContextConfig: OccConfig = {\n  backend: {\n    occ: {\n      endpoints: {\n        languages: 'languages',\n        currencies: 'currencies',\n        countries: 'countries',\n        regions:\n          'countries/${isoCode}/regions?fields=regions(name,isocode,isocodeShort)',\n        baseSites:\n          'basesites?fields=DEFAULT,baseSites(defaultPreviewCatalogId,defaultPreviewCategoryCode,defaultPreviewProductCode,urlEncodingAttributes)',\n      },\n    },\n  },\n};\n","import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { filter, take, tap } from 'rxjs/operators';\nimport { Currency } from '../../model/misc.model';\nimport { WindowRef } from '../../window/window-ref';\nimport {\n  getContextParameterDefault,\n  getContextParameterValues,\n} from '../config/context-config-utils';\nimport { SiteContextConfig } from '../config/site-context-config';\nimport { CURRENCY_CONTEXT_ID } from '../providers/context-ids';\nimport { SiteContextActions } from '../store/actions/index';\nimport { SiteContextSelectors } from '../store/selectors/index';\nimport { StateWithSiteContext } from '../store/state';\nimport { SiteContext } from './site-context.interface';\n\n/**\n * Facade that provides easy access to curreny state, actions and selectors.\n */\n@Injectable()\nexport class CurrencyService implements SiteContext<Currency> {\n  private sessionStorage: Storage;\n\n  constructor(\n    protected store: Store<StateWithSiteContext>,\n    winRef: WindowRef,\n    protected config: SiteContextConfig\n  ) {\n    this.sessionStorage = winRef.sessionStorage;\n  }\n\n  /**\n   * Represents all the currencies supported by the current store.\n   */\n  getAll(): Observable<Currency[]> {\n    return this.store.pipe(\n      select(SiteContextSelectors.getAllCurrencies),\n      tap((currencies) => {\n        if (!currencies) {\n          this.store.dispatch(new SiteContextActions.LoadCurrencies());\n        }\n      }),\n      filter((currenies) => Boolean(currenies))\n    );\n  }\n\n  /**\n   * Represents the isocode of the active currency.\n   */\n  getActive(): Observable<string> {\n    return this.store.pipe(\n      select(SiteContextSelectors.getActiveCurrency),\n      filter((active) => Boolean(active))\n    );\n  }\n\n  /**\n   * Sets the active language.\n   */\n  setActive(isocode: string): void {\n    this.store\n      .pipe(select(SiteContextSelectors.getActiveCurrency), take(1))\n      .subscribe((activeCurrency) => {\n        if (activeCurrency !== isocode) {\n          this.store.dispatch(\n            new SiteContextActions.SetActiveCurrency(isocode)\n          );\n        }\n      });\n  }\n\n  /**\n   * Initials the active currency. The active currency is either given\n   * by the last visit (stored in session storage) or by the\n   * default session currency of the store.\n   */\n  initialize(): void {\n    let value;\n    this.getActive()\n      .subscribe((val) => (value = val))\n      .unsubscribe();\n    if (value) {\n      // don't initialize, if there is already a value (i.e. retrieved from route or transferred from SSR)\n      return;\n    }\n\n    const sessionCurrency =\n      this.sessionStorage && this.sessionStorage.getItem('currency');\n    if (\n      sessionCurrency &&\n      getContextParameterValues(this.config, CURRENCY_CONTEXT_ID).includes(\n        sessionCurrency\n      )\n    ) {\n      this.setActive(sessionCurrency);\n    } else {\n      this.setActive(\n        getContextParameterDefault(this.config, CURRENCY_CONTEXT_ID)\n      );\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { filter, take, tap } from 'rxjs/operators';\nimport { Language } from '../../model/misc.model';\nimport { WindowRef } from '../../window/window-ref';\nimport {\n  getContextParameterDefault,\n  getContextParameterValues,\n} from '../config/context-config-utils';\nimport { SiteContextConfig } from '../config/site-context-config';\nimport { LANGUAGE_CONTEXT_ID } from '../providers/context-ids';\nimport { SiteContextActions } from '../store/actions/index';\nimport { SiteContextSelectors } from '../store/selectors/index';\nimport { StateWithSiteContext } from '../store/state';\nimport { SiteContext } from './site-context.interface';\n\n/**\n * Facade that provides easy access to language state, actions and selectors.\n */\n@Injectable()\nexport class LanguageService implements SiteContext<Language> {\n  private sessionStorage: Storage;\n\n  constructor(\n    protected store: Store<StateWithSiteContext>,\n    winRef: WindowRef,\n    protected config: SiteContextConfig\n  ) {\n    this.sessionStorage = winRef.sessionStorage;\n  }\n\n  /**\n   * Represents all the languages supported by the current store.\n   */\n  getAll(): Observable<Language[]> {\n    return this.store.pipe(\n      select(SiteContextSelectors.getAllLanguages),\n      tap((languages) => {\n        if (!languages) {\n          this.store.dispatch(new SiteContextActions.LoadLanguages());\n        }\n      }),\n      filter((languages) => Boolean(languages))\n    );\n  }\n\n  /**\n   * Represents the isocode of the active language.\n   */\n  getActive(): Observable<string> {\n    return this.store.pipe(\n      select(SiteContextSelectors.getActiveLanguage),\n      filter((active) => Boolean(active))\n    );\n  }\n\n  /**\n   * Sets the active language.\n   */\n  setActive(isocode: string): void {\n    this.store\n      .pipe(select(SiteContextSelectors.getActiveLanguage), take(1))\n      .subscribe((activeLanguage) => {\n        if (activeLanguage !== isocode) {\n          this.store.dispatch(\n            new SiteContextActions.SetActiveLanguage(isocode)\n          );\n        }\n      });\n  }\n\n  /**\n   * Initials the active language. The active language is either given\n   * by the last visit (stored in session storage) or by the\n   * default session language of the store.\n   */\n  initialize(): void {\n    let value;\n    this.getActive()\n      .subscribe((val) => (value = val))\n      .unsubscribe();\n    if (value) {\n      // don't initialize, if there is already a value (i.e. retrieved from route or transferred from SSR)\n      return;\n    }\n\n    const sessionLanguage =\n      this.sessionStorage && this.sessionStorage.getItem('language');\n    if (\n      sessionLanguage &&\n      getContextParameterValues(this.config, LANGUAGE_CONTEXT_ID).includes(\n        sessionLanguage\n      )\n    ) {\n      this.setActive(sessionLanguage);\n    } else {\n      this.setActive(\n        getContextParameterDefault(this.config, LANGUAGE_CONTEXT_ID)\n      );\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { CurrencyService } from '../../../site-context/facade/currency.service';\nimport { LanguageService } from '../../../site-context/facade/language.service';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\nimport { SiteContextConfig } from '../../../site-context/config/site-context-config';\nimport { getContextParameterDefault } from '../../../site-context/config/context-config-utils';\nimport {\n  CURRENCY_CONTEXT_ID,\n  LANGUAGE_CONTEXT_ID,\n} from '../../../site-context/providers/context-ids';\n\n@Injectable({ providedIn: 'root' })\nexport class SiteContextInterceptor implements HttpInterceptor {\n  activeLang: string;\n  activeCurr: string;\n\n  constructor(\n    private languageService: LanguageService,\n    private currencyService: CurrencyService,\n    private occEndpoints: OccEndpointsService,\n    private config: SiteContextConfig\n  ) {\n    this.activeLang = getContextParameterDefault(\n      this.config,\n      LANGUAGE_CONTEXT_ID\n    );\n    this.activeCurr = getContextParameterDefault(\n      this.config,\n      CURRENCY_CONTEXT_ID\n    );\n\n    this.languageService\n      .getActive()\n      .subscribe((data) => (this.activeLang = data));\n\n    this.currencyService.getActive().subscribe((data) => {\n      this.activeCurr = data;\n    });\n  }\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    if (request.url.includes(this.occEndpoints.getBaseEndpoint())) {\n      request = request.clone({\n        setParams: {\n          lang: this.activeLang,\n          curr: this.activeCurr,\n        },\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { SiteAdapter } from '../../../site-context/connectors/site.adapter';\nimport { defaultOccSiteContextConfig } from './default-occ-site-context-config';\nimport { OccSiteAdapter } from './occ-site.adapter';\nimport { SiteContextInterceptor } from './site-context.interceptor';\nimport { provideDefaultConfig } from '../../../config/config-providers';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(defaultOccSiteContextConfig),\n    {\n      provide: SiteAdapter,\n      useClass: OccSiteAdapter,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useExisting: SiteContextInterceptor,\n      multi: true,\n    },\n  ],\n})\nexport class SiteContextOccModule {}\n","import { Injectable } from '@angular/core';\nimport { AnonymousConsentsService } from '../../../../anonymous-consents/facade/anonymous-consents.service';\nimport { AnonymousConsent } from '../../../../model/consent.model';\nimport { Converter } from '../../../../util/converter.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AnonymousConsentNormalizer\n  implements Converter<string, AnonymousConsent[]> {\n  constructor(protected anonymousConsentsService: AnonymousConsentsService) {}\n\n  convert(source: string): AnonymousConsent[] {\n    return this.anonymousConsentsService.decodeAndDeserialize(source);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Occ } from '../../../occ-models/occ.models';\nimport {\n  Converter,\n  ConverterService,\n} from '../../../../util/converter.service';\nimport { OrderEntry, ReturnRequest } from '../../../../model/order.model';\nimport { PRODUCT_NORMALIZER } from '../../../../product/connectors/product/converters';\n\n@Injectable({ providedIn: 'root' })\nexport class OccReturnRequestNormalizer\n  implements Converter<Occ.ReturnRequest, ReturnRequest> {\n  constructor(private converter: ConverterService) {}\n\n  convert(source: Occ.ReturnRequest, target?: ReturnRequest): ReturnRequest {\n    if (target === undefined) {\n      target = { ...(source as any) };\n    }\n\n    if (source.returnEntries) {\n      target.returnEntries = source.returnEntries.map((entry) => ({\n        ...entry,\n        orderEntry: this.convertOrderEntry(entry.orderEntry),\n      }));\n    }\n\n    return target;\n  }\n\n  private convertOrderEntry(source: Occ.OrderEntry): OrderEntry {\n    return {\n      ...source,\n      product: this.converter.convert(source.product, PRODUCT_NORMALIZER),\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Occ } from '../../../occ-models/occ.models';\nimport { PRODUCT_NORMALIZER } from '../../../../product/connectors/product/converters';\nimport {\n  Converter,\n  ConverterService,\n} from '../../../../util/converter.service';\nimport { ProductInterestSearchResult } from '../../../../model/product-interest.model';\n\n@Injectable({ providedIn: 'root' })\nexport class OccUserInterestsNormalizer\n  implements\n    Converter<Occ.ProductInterestSearchResult, ProductInterestSearchResult> {\n  constructor(private converter: ConverterService) {}\n\n  convert(\n    source: Occ.ProductInterestSearchResult,\n    target?: ProductInterestSearchResult\n  ): ProductInterestSearchResult {\n    if (target === undefined) {\n      target = { ...(source as any) };\n    }\n    if (source && source.results) {\n      target.results = source.results.map((result) => ({\n        ...result,\n        product: this.converter.convert(result.product, PRODUCT_NORMALIZER),\n      }));\n    }\n\n    return target;\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { AnonymousConsent } from '../../model/consent.model';\nimport { Converter } from '../../util/converter.service';\n\nexport const ANONYMOUS_CONSENT_NORMALIZER = new InjectionToken<\n  Converter<string, AnonymousConsent[]>\n>('AnonymousConsentNormalizer');\n","import { InjectionToken } from '@angular/core';\nimport { Converter } from '../../../util/converter.service';\nimport { ConsentTemplate } from '../../../model/consent.model';\n\nexport const CONSENT_TEMPLATE_NORMALIZER = new InjectionToken<\n  Converter<any, ConsentTemplate>\n>('ConsentTemplateNormalizer');\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { AnonymousConsentTemplatesAdapter } from '../../../anonymous-consents/connectors/anonymous-consent-templates.adapter';\nimport { ANONYMOUS_CONSENT_NORMALIZER } from '../../../anonymous-consents/connectors/converters';\nimport {\n  AnonymousConsent,\n  ANONYMOUS_CONSENTS_HEADER,\n  ConsentTemplate,\n} from '../../../model/consent.model';\nimport { CONSENT_TEMPLATE_NORMALIZER } from '../../../user/connectors/consent/converters';\nimport { ConverterService } from '../../../util/converter.service';\nimport { Occ } from '../../occ-models/occ.models';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\n\n@Injectable()\nexport class OccAnonymousConsentTemplatesAdapter\n  implements AnonymousConsentTemplatesAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  loadAnonymousConsentTemplates(): Observable<ConsentTemplate[]> {\n    const url = this.occEndpoints.getUrl('anonymousConsentTemplates');\n    return this.http.get<Occ.ConsentTemplateList>(url).pipe(\n      catchError((error) => throwError(error)),\n      map((consentList) => consentList.consentTemplates),\n      this.converter.pipeableMany(CONSENT_TEMPLATE_NORMALIZER)\n    );\n  }\n\n  loadAnonymousConsents(): Observable<AnonymousConsent[]> {\n    // using the endpoint that doesn't set caching headers\n    const url = this.occEndpoints.getUrl('anonymousConsentTemplates');\n    return this.http\n      .head<Occ.ConsentTemplateList>(url, { observe: 'response' })\n      .pipe(\n        catchError((error) => throwError(error)),\n        map((response) => response.headers.get(ANONYMOUS_CONSENTS_HEADER)),\n        this.converter.pipeable(ANONYMOUS_CONSENT_NORMALIZER)\n      );\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { Converter } from '../../../util/converter.service';\nimport { CustomerCouponSearchResult } from '../../../model/customer-coupon.model';\n\nexport const CUSTOMER_COUPON_SEARCH_RESULT_NORMALIZER = new InjectionToken<\n  Converter<any, CustomerCouponSearchResult>\n>('CustomerCouponSearchResultNormalizer');\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport {\n  CustomerCoupon2Customer,\n  CustomerCouponNotification,\n  CustomerCouponSearchResult,\n} from '../../../model/customer-coupon.model';\nimport { CUSTOMER_COUPON_SEARCH_RESULT_NORMALIZER } from '../../../user/connectors/customer-coupon/converters';\nimport { CustomerCouponAdapter } from '../../../user/connectors/customer-coupon/customer-coupon.adapter';\nimport { ConverterService } from '../../../util/converter.service';\nimport { Occ } from '../../occ-models/occ.models';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\nimport { OCC_USER_ID_ANONYMOUS } from '../../utils/occ-constants';\n\n@Injectable()\nexport class OccCustomerCouponAdapter implements CustomerCouponAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  getCustomerCoupons(\n    userId: string,\n    pageSize: number,\n    currentPage: number,\n    sort: string\n  ): Observable<CustomerCouponSearchResult> {\n    // Currently OCC only supports calls for customer coupons in case of logged users\n    if (userId === OCC_USER_ID_ANONYMOUS) {\n      return of({});\n    }\n\n    const url = this.occEndpoints.getUrl('customerCoupons', { userId });\n\n    let params = new HttpParams().set('sort', sort ? sort : 'startDate:asc');\n\n    if (pageSize) {\n      params = params.set('pageSize', pageSize.toString());\n    }\n    if (currentPage) {\n      params = params.set('currentPage', currentPage.toString());\n    }\n\n    const headers = this.newHttpHeader();\n\n    return this.http\n      .get<Occ.CustomerCouponSearchResult>(url, { headers, params })\n      .pipe(this.converter.pipeable(CUSTOMER_COUPON_SEARCH_RESULT_NORMALIZER));\n  }\n\n  turnOffNotification(userId: string, couponCode: string): Observable<{}> {\n    const url = this.occEndpoints.getUrl('couponNotification', {\n      userId,\n      couponCode,\n    });\n    const headers = this.newHttpHeader();\n\n    return this.http.delete(url, { headers });\n  }\n\n  turnOnNotification(\n    userId: string,\n    couponCode: string\n  ): Observable<CustomerCouponNotification> {\n    const url = this.occEndpoints.getUrl('couponNotification', {\n      userId,\n      couponCode,\n    });\n    const headers = this.newHttpHeader();\n\n    return this.http.post(url, { headers });\n  }\n\n  claimCustomerCoupon(\n    userId: string,\n    couponCode: string\n  ): Observable<CustomerCoupon2Customer> {\n    const url = this.occEndpoints.getUrl('claimCoupon', {\n      userId,\n      couponCode,\n    });\n    const headers = this.newHttpHeader();\n\n    return this.http.post(url, { headers });\n  }\n\n  private newHttpHeader() {\n    return new HttpHeaders({\n      'Content-Type': 'application/json',\n    });\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { Address, AddressValidation } from '../../../model/address.model';\nimport {\n  ADDRESS_NORMALIZER,\n  ADDRESS_SERIALIZER,\n  ADDRESS_VALIDATION_NORMALIZER,\n} from '../../../user/connectors/address/converters';\nimport { UserAddressAdapter } from '../../../user/connectors/address/user-address.adapter';\nimport { ConverterService } from '../../../util/converter.service';\nimport { Occ } from '../../occ-models/occ.models';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\nimport {\n  InterceptorUtil,\n  USE_CLIENT_TOKEN,\n} from '../../utils/interceptor-util';\nimport { OCC_USER_ID_ANONYMOUS } from '../../utils/occ-constants';\n\n@Injectable()\nexport class OccUserAddressAdapter implements UserAddressAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  loadAll(userId: string): Observable<Address[]> {\n    const url = this.occEndpoints.getUrl('addresses', { userId });\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n    });\n\n    return this.http\n      .get<Occ.AddressList>(url, { headers })\n      .pipe(\n        catchError((error: any) => throwError(error)),\n        map((addressList) => addressList.addresses),\n        this.converter.pipeableMany(ADDRESS_NORMALIZER)\n      );\n  }\n\n  add(userId: string, address: Address): Observable<{}> {\n    const url = this.occEndpoints.getUrl('addresses', { userId });\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n    });\n    address = this.converter.convert(address, ADDRESS_SERIALIZER);\n\n    return this.http\n      .post(url, address, { headers })\n      .pipe(catchError((error: any) => throwError(error)));\n  }\n\n  update(userId: string, addressId: string, address: Address): Observable<{}> {\n    const url = this.occEndpoints.getUrl('addressDetail', {\n      userId,\n      addressId,\n    });\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n    });\n    address = this.converter.convert(address, ADDRESS_SERIALIZER);\n\n    return this.http\n      .patch(url, address, { headers })\n      .pipe(catchError((error: any) => throwError(error)));\n  }\n\n  verify(userId: string, address: Address): Observable<AddressValidation> {\n    const url = this.occEndpoints.getUrl('addressVerification', { userId });\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n    });\n    if (userId === OCC_USER_ID_ANONYMOUS) {\n      headers = InterceptorUtil.createHeader(USE_CLIENT_TOKEN, true, headers);\n    }\n    address = this.converter.convert(address, ADDRESS_SERIALIZER);\n\n    return this.http\n      .post<AddressValidation>(url, address, { headers })\n      .pipe(\n        catchError((error: any) => throwError(error)),\n        this.converter.pipeable(ADDRESS_VALIDATION_NORMALIZER)\n      );\n  }\n\n  delete(userId: string, addressId: string): Observable<{}> {\n    const url = this.occEndpoints.getUrl('addressDetail', {\n      userId,\n      addressId,\n    });\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n    });\n\n    return this.http\n      .delete(url, { headers })\n      .pipe(catchError((error: any) => throwError(error)));\n  }\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { ConsentTemplate } from '../../../model/consent.model';\nimport { CONSENT_TEMPLATE_NORMALIZER } from '../../../user/connectors/consent/converters';\nimport { UserConsentAdapter } from '../../../user/connectors/consent/user-consent.adapter';\nimport { ConverterService } from '../../../util/converter.service';\nimport { Occ } from '../../occ-models/occ.models';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\n\n@Injectable()\nexport class OccUserConsentAdapter implements UserConsentAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  loadConsents(userId: string): Observable<ConsentTemplate[]> {\n    const url = this.occEndpoints.getUrl('consentTemplates', { userId });\n    const headers = new HttpHeaders({ 'Cache-Control': 'no-cache' });\n    return this.http\n      .get<Occ.ConsentTemplateList>(url, { headers })\n      .pipe(\n        catchError((error: any) => throwError(error)),\n        map((consentList) => consentList.consentTemplates),\n        this.converter.pipeableMany(CONSENT_TEMPLATE_NORMALIZER)\n      );\n  }\n\n  giveConsent(\n    userId: string,\n    consentTemplateId: string,\n    consentTemplateVersion: number\n  ): Observable<ConsentTemplate> {\n    const url = this.occEndpoints.getUrl('consents', { userId });\n    const httpParams = new HttpParams()\n      .set('consentTemplateId', consentTemplateId)\n      .set('consentTemplateVersion', consentTemplateVersion.toString());\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Cache-Control': 'no-cache',\n    });\n    return this.http\n      .post<Occ.ConsentTemplate>(url, httpParams, { headers })\n      .pipe(\n        catchError((error) => throwError(error)),\n        this.converter.pipeable(CONSENT_TEMPLATE_NORMALIZER)\n      );\n  }\n\n  withdrawConsent(userId: string, consentCode: string): Observable<{}> {\n    const headers = new HttpHeaders({\n      'Cache-Control': 'no-cache',\n    });\n    const url = this.occEndpoints.getUrl('consentDetail', {\n      userId,\n      consentId: consentCode,\n    });\n\n    return this.http.delete(url, { headers });\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { Converter } from '../../../util/converter.service';\nimport { ProductInterestSearchResult } from '../../../model/product-interest.model';\n\nexport const PRODUCT_INTERESTS_NORMALIZER = new InjectionToken<\n  Converter<any, ProductInterestSearchResult>\n>('ProductInterestsNormalizer');\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\nimport { Observable, throwError, forkJoin } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { UserInterestsAdapter } from '../../../user/connectors/interests/user-interests.adapter';\nimport {\n  ProductInterestSearchResult,\n  ProductInterestEntryRelation,\n  NotificationType,\n} from '../../../model/product-interest.model';\nimport { OccConfig } from '../../config/occ-config';\nimport { ConverterService } from '../../../util/converter.service';\nimport { PRODUCT_INTERESTS_NORMALIZER } from '../../../user/connectors/interests/converters';\n\nconst headers = new HttpHeaders({\n  'Content-Type': 'application/json',\n});\n\n@Injectable()\nexport class OccUserInterestsAdapter implements UserInterestsAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected config: OccConfig,\n    protected converter: ConverterService\n  ) {}\n\n  public getInterests(\n    userId: string,\n    pageSize?: number,\n    currentPage?: number,\n    sort?: string,\n    productCode?: string,\n    notificationType?: NotificationType\n  ): Observable<ProductInterestSearchResult> {\n    let params = new HttpParams().set('sort', sort ? sort : 'name:asc');\n    if (pageSize) {\n      params = params.set('pageSize', pageSize.toString());\n    }\n    if (currentPage) {\n      params = params.set('currentPage', currentPage.toString());\n    }\n    if (productCode) {\n      params = params.set('productCode', productCode);\n    }\n    if (notificationType) {\n      params = params.set('notificationType', notificationType.toString());\n    }\n\n    return this.http\n      .get(this.occEndpoints.getUrl('getProductInterests', { userId }), {\n        headers,\n        params,\n      })\n      .pipe(\n        this.converter.pipeable(PRODUCT_INTERESTS_NORMALIZER),\n        catchError((error: any) => throwError(error))\n      );\n  }\n\n  public removeInterest(\n    userId: string,\n    item: ProductInterestEntryRelation\n  ): Observable<any[]> {\n    const r: Observable<any>[] = [];\n    item.productInterestEntry.forEach((entry: any) => {\n      const params: HttpParams = new HttpParams()\n        .set('productCode', item.product.code)\n        .set('notificationType', entry.interestType);\n      r.push(\n        this.http\n          .delete(this.occEndpoints.getUrl('productInterests', { userId }), {\n            params: params,\n          })\n          .pipe(catchError((error: any) => throwError(error)))\n      );\n    });\n    return forkJoin(r);\n  }\n\n  public addInterest(\n    userId: string,\n    productCode: string,\n    notificationType: NotificationType\n  ): Observable<any> {\n    const params = new HttpParams()\n      .set('productCode', productCode)\n      .set('notificationType', notificationType.toString());\n    return this.http\n      .post(\n        this.occEndpoints.getUrl('productInterests', { userId }),\n        {},\n        {\n          headers,\n          params,\n        }\n      )\n      .pipe(catchError((error: any) => throwError(error)));\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { NotificationPreference } from '../../../model/notification-preference.model';\nimport { Converter } from '../../../util/converter.service';\n\nexport const NOTIFICATION_PREFERENCE_SERIALIZER = new InjectionToken<\n  Converter<NotificationPreference[], any>\n>('NotificationPreferenceSerializer');\n\nexport const NOTIFICATION_PREFERENCE_NORMALIZER = new InjectionToken<\n  Converter<any, NotificationPreference>\n>('NotificationPreferenceNormalizer');\n","import { Observable } from 'rxjs';\nimport { NotificationPreference } from '../../../model/notification-preference.model';\n\nexport abstract class UserNotificationPreferenceAdapter {\n  /**\n   * Abstract method used to load notification preferences for an user.\n   *\n   * @param userId The `userId` for given user\n   */\n  abstract loadAll(userId: string): Observable<NotificationPreference[]>;\n\n  /**\n   * Abstract method used to update notification preferences for an user.\n   *\n   * @param userId The `userId` for given user\n   * @param preferences The notification preferences to be updated.\n   */\n  abstract update(\n    userId: string,\n    preferences: NotificationPreference[]\n  ): Observable<{}>;\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { UserNotificationPreferenceAdapter } from './user-notification-preference.adapter';\nimport { NotificationPreference } from '../../../model/notification-preference.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserNotificationPreferenceConnector {\n  constructor(protected adapter: UserNotificationPreferenceAdapter) {}\n\n  loadAll(userId: string): Observable<NotificationPreference[]> {\n    return this.adapter.loadAll(userId);\n  }\n\n  update(userId: string, preferences: NotificationPreference[]) {\n    return this.adapter.update(userId, preferences);\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport {\n  NotificationPreference,\n  NotificationPreferenceList,\n} from '../../../model/notification-preference.model';\nimport {\n  NOTIFICATION_PREFERENCE_NORMALIZER,\n  NOTIFICATION_PREFERENCE_SERIALIZER,\n} from '../../../user/connectors/notification-preference';\nimport { UserNotificationPreferenceAdapter } from '../../../user/connectors/notification-preference/user-notification-preference.adapter';\nimport { ConverterService } from '../../../util/converter.service';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\n\nconst headers = new HttpHeaders({\n  'Content-Type': 'application/json',\n});\n\n@Injectable()\nexport class OccUserNotificationPreferenceAdapter\n  implements UserNotificationPreferenceAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected converter: ConverterService,\n    protected occEndpoints: OccEndpointsService\n  ) {}\n\n  loadAll(userId: string): Observable<NotificationPreference[]> {\n    return this.http\n      .get<NotificationPreferenceList>(\n        this.occEndpoints.getUrl('notificationPreference', { userId }),\n        {\n          headers,\n        }\n      )\n      .pipe(\n        map((list) => list.preferences),\n        this.converter.pipeableMany(NOTIFICATION_PREFERENCE_NORMALIZER),\n        catchError((error: any) => throwError(error))\n      );\n  }\n\n  update(\n    userId: string,\n    preferences: NotificationPreference[]\n  ): Observable<{}> {\n    preferences = this.converter.convert(\n      preferences,\n      NOTIFICATION_PREFERENCE_SERIALIZER\n    );\n    return this.http\n      .patch(\n        this.occEndpoints.getUrl('notificationPreference', { userId }),\n        { preferences: preferences },\n        { headers }\n      )\n      .pipe(catchError((error: any) => throwError(error)));\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { Converter } from '../../../util/converter.service';\nimport {\n  OrderHistoryList,\n  ReturnRequestEntryInputList,\n  ReturnRequestList,\n  ReturnRequest,\n} from '../../../model/order.model';\nimport { ConsignmentTracking } from '../../../model/consignment-tracking.model';\n\nexport const ORDER_HISTORY_NORMALIZER = new InjectionToken<\n  Converter<any, OrderHistoryList>\n>('OrderHistoryNormalizer');\n\nexport const CONSIGNMENT_TRACKING_NORMALIZER = new InjectionToken<\n  Converter<any, ConsignmentTracking>\n>('ConsignmentTrackingNormalizer');\n\nexport const ORDER_RETURN_REQUEST_NORMALIZER = new InjectionToken<\n  Converter<any, ReturnRequest>\n>('OrderReturnRequestNormalizer');\n\nexport const ORDER_RETURN_REQUEST_INPUT_SERIALIZER = new InjectionToken<\n  Converter<ReturnRequestEntryInputList, any>\n>('OrderReturnRequestInputSerializer');\n\nexport const ORDER_RETURNS_NORMALIZER = new InjectionToken<\n  Converter<any, ReturnRequestList>\n>('OrderReturnsNormalizer');\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { ORDER_NORMALIZER } from '../../../checkout/connectors/checkout/converters';\nimport { ConsignmentTracking } from '../../../model/consignment-tracking.model';\nimport {\n  CancellationRequestEntryInputList,\n  Order,\n  OrderHistoryList,\n  ReturnRequest,\n  ReturnRequestEntryInputList,\n  ReturnRequestList,\n  ReturnRequestModification,\n} from '../../../model/order.model';\nimport {\n  CONSIGNMENT_TRACKING_NORMALIZER,\n  ORDER_HISTORY_NORMALIZER,\n  ORDER_RETURNS_NORMALIZER,\n  ORDER_RETURN_REQUEST_INPUT_SERIALIZER,\n  ORDER_RETURN_REQUEST_NORMALIZER,\n} from '../../../user/connectors/order/converters';\nimport { UserOrderAdapter } from '../../../user/connectors/order/user-order.adapter';\nimport { ConverterService } from '../../../util/converter.service';\nimport { Occ } from '../../occ-models/occ.models';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\nimport {\n  InterceptorUtil,\n  USE_CLIENT_TOKEN,\n} from '../../utils/interceptor-util';\nimport {\n  OCC_USER_ID_ANONYMOUS,\n  OCC_USER_ID_CURRENT,\n} from '../../utils/occ-constants';\n\n@Injectable()\nexport class OccUserOrderAdapter implements UserOrderAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  public load(userId: string, orderCode: string): Observable<Order> {\n    const url = this.occEndpoints.getUrl('orderDetail', {\n      userId,\n      orderId: orderCode,\n    });\n\n    let headers = new HttpHeaders();\n    if (userId === OCC_USER_ID_ANONYMOUS) {\n      headers = InterceptorUtil.createHeader(USE_CLIENT_TOKEN, true, headers);\n    }\n\n    return this.http\n      .get<Occ.Order>(url, { headers })\n      .pipe(this.converter.pipeable(ORDER_NORMALIZER));\n  }\n\n  public loadHistory(\n    userId: string,\n    pageSize?: number,\n    currentPage?: number,\n    sort?: string\n  ): Observable<OrderHistoryList> {\n    const params = {};\n    if (pageSize) {\n      params['pageSize'] = pageSize.toString();\n    }\n    if (currentPage) {\n      params['currentPage'] = currentPage.toString();\n    }\n    if (sort) {\n      params['sort'] = sort.toString();\n    }\n\n    const url = this.occEndpoints.getUrl('orderHistory', { userId }, params);\n\n    return this.http\n      .get<Occ.OrderHistoryList>(url)\n      .pipe(this.converter.pipeable(ORDER_HISTORY_NORMALIZER));\n  }\n\n  public getConsignmentTracking(\n    orderCode: string,\n    consignmentCode: string,\n    userId: string = OCC_USER_ID_CURRENT\n  ): Observable<ConsignmentTracking> {\n    const url = this.occEndpoints.getUrl('consignmentTracking', {\n      userId,\n      orderCode,\n      consignmentCode,\n    });\n    return this.http\n      .get<ConsignmentTracking>(url)\n      .pipe(this.converter.pipeable(CONSIGNMENT_TRACKING_NORMALIZER));\n  }\n\n  public cancel(\n    userId: string,\n    orderCode: string,\n    cancelRequestInput: CancellationRequestEntryInputList\n  ): Observable<{}> {\n    const url = this.occEndpoints.getUrl('cancelOrder', {\n      userId,\n      orderId: orderCode,\n    });\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n    });\n\n    return this.http\n      .post(url, cancelRequestInput, { headers })\n      .pipe(catchError((error: any) => throwError(error)));\n  }\n\n  public createReturnRequest(\n    userId: string,\n    returnRequestInput: ReturnRequestEntryInputList\n  ): Observable<ReturnRequest> {\n    const url = this.occEndpoints.getUrl('returnOrder', {\n      userId,\n    });\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n    });\n\n    returnRequestInput = this.converter.convert(\n      returnRequestInput,\n      ORDER_RETURN_REQUEST_INPUT_SERIALIZER\n    );\n\n    return this.http.post(url, returnRequestInput, { headers }).pipe(\n      catchError((error: any) => throwError(error)),\n      this.converter.pipeable(ORDER_RETURN_REQUEST_NORMALIZER)\n    );\n  }\n\n  public loadReturnRequestList(\n    userId: string,\n    pageSize?: number,\n    currentPage?: number,\n    sort?: string\n  ): Observable<ReturnRequestList> {\n    const params = {};\n    if (pageSize) {\n      params['pageSize'] = pageSize.toString();\n    }\n    if (currentPage) {\n      params['currentPage'] = currentPage.toString();\n    }\n    if (sort) {\n      params['sort'] = sort.toString();\n    }\n\n    const url = this.occEndpoints.getUrl('orderReturns', { userId }, params);\n\n    return this.http\n      .get<ReturnRequestList>(url)\n      .pipe(this.converter.pipeable(ORDER_RETURNS_NORMALIZER));\n  }\n\n  public loadReturnRequestDetail(\n    userId: string,\n    returnRequestCode: string\n  ): Observable<ReturnRequest> {\n    const url = this.occEndpoints.getUrl('orderReturnDetail', {\n      userId,\n      returnRequestCode,\n    });\n\n    return this.http\n      .get<ReturnRequest>(url)\n      .pipe(this.converter.pipeable(ORDER_RETURN_REQUEST_NORMALIZER));\n  }\n\n  public cancelReturnRequest(\n    userId: string,\n    returnRequestCode: string,\n    returnRequestModification: ReturnRequestModification\n  ): Observable<{}> {\n    const url = this.occEndpoints.getUrl('cancelReturn', {\n      userId,\n      returnRequestCode,\n    });\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n    });\n\n    return this.http\n      .patch(url, returnRequestModification, { headers })\n      .pipe(catchError((error: any) => throwError(error)));\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { PAYMENT_DETAILS_NORMALIZER } from '../../../checkout/connectors/payment/converters';\nimport { PaymentDetails } from '../../../model/cart.model';\nimport { UserPaymentAdapter } from '../../../user/connectors/payment/user-payment.adapter';\nimport { ConverterService } from '../../../util/converter.service';\nimport { Occ } from '../../occ-models/occ.models';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\n\n@Injectable()\nexport class OccUserPaymentAdapter implements UserPaymentAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  loadAll(userId: string): Observable<PaymentDetails[]> {\n    const url =\n      this.occEndpoints.getUrl('paymentDetailsAll', { userId }) + '?saved=true';\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n    });\n\n    return this.http\n      .get<Occ.PaymentDetailsList>(url, { headers })\n      .pipe(\n        catchError((error: any) => throwError(error)),\n        map((methodList) => methodList.payments),\n        this.converter.pipeableMany(PAYMENT_DETAILS_NORMALIZER)\n      );\n  }\n\n  delete(userId: string, paymentMethodID: string): Observable<{}> {\n    const url = this.occEndpoints.getUrl('paymentDetail', {\n      userId,\n      paymentDetailId: paymentMethodID,\n    });\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n    });\n\n    return this.http\n      .delete(url, { headers })\n      .pipe(catchError((error: any) => throwError(error)));\n  }\n\n  setDefault(userId: string, paymentMethodID: string): Observable<{}> {\n    const url = this.occEndpoints.getUrl('paymentDetail', {\n      userId,\n      paymentDetailId: paymentMethodID,\n    });\n\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n    });\n\n    return this.http\n      .patch(\n        url,\n        // TODO: Remove billingAddress property\n        { billingAddress: { titleCode: 'mr' }, defaultPayment: true },\n        { headers }\n      )\n      .pipe(catchError((error: any) => throwError(error)));\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { ReplenishmentOrderList } from '../../../model/replenishment-order.model';\nimport { Converter } from '../../../util/converter.service';\n\nexport const REPLENISHMENT_ORDER_HISTORY_NORMALIZER = new InjectionToken<\n  Converter<any, ReplenishmentOrderList>\n>('ReplenishmentOrderHistoryNormalizer');\n","import { ReplenishmentOrderList } from '../../../model/replenishment-order.model';\nimport { REPLENISHMENT_ORDER_HISTORY_NORMALIZER } from '../../../user/connectors/replenishment-order/converters';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { REPLENISHMENT_ORDER_NORMALIZER } from '../../../checkout/connectors/replenishment-order/converters';\nimport { OrderHistoryList, ReplenishmentOrder } from '../../../model/index';\nimport { ORDER_HISTORY_NORMALIZER } from '../../../user/connectors/order/converters';\nimport { UserReplenishmentOrderAdapter } from '../../../user/connectors/replenishment-order/user-replenishment-order.adapter';\nimport { ConverterService } from '../../../util/converter.service';\nimport { Occ } from '../../occ-models/occ.models';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\n\n@Injectable()\nexport class OccUserReplenishmentOrderAdapter\n  implements UserReplenishmentOrderAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n  public load(\n    userId: string,\n    replenishmentOrderCode: string\n  ): Observable<ReplenishmentOrder> {\n    return this.http\n      .get<Occ.ReplenishmentOrder>(\n        this.occEndpoints.getUrl('replenishmentOrderDetails', {\n          userId,\n          replenishmentOrderCode,\n        })\n      )\n      .pipe(this.converter.pipeable(REPLENISHMENT_ORDER_NORMALIZER));\n  }\n\n  public loadReplenishmentDetailsHistory(\n    userId: string,\n    replenishmentOrderCode: string,\n    pageSize?: number,\n    currentPage?: number,\n    sort?: string\n  ): Observable<OrderHistoryList> {\n    const params = {};\n\n    if (pageSize) {\n      params['pageSize'] = pageSize.toString();\n    }\n    if (currentPage) {\n      params['currentPage'] = currentPage.toString();\n    }\n    if (sort) {\n      params['sort'] = sort.toString();\n    }\n\n    return this.http\n      .get<Occ.OrderHistoryList>(\n        this.occEndpoints.getUrl(\n          'replenishmentOrderDetailsHistory',\n          {\n            userId,\n            replenishmentOrderCode,\n          },\n          params\n        )\n      )\n      .pipe(this.converter.pipeable(ORDER_HISTORY_NORMALIZER));\n  }\n\n  public cancelReplenishmentOrder(\n    userId: string,\n    replenishmentOrderCode: string\n  ): Observable<ReplenishmentOrder> {\n    const headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n    return this.http\n      .patch<Occ.ReplenishmentOrder>(\n        this.occEndpoints.getUrl('cancelReplenishmentOrder', {\n          userId,\n          replenishmentOrderCode,\n        }),\n        {},\n        { headers }\n      )\n      .pipe(this.converter.pipeable(REPLENISHMENT_ORDER_NORMALIZER));\n  }\n\n  public loadHistory(\n    userId: string,\n    pageSize?: number,\n    currentPage?: number,\n    sort?: string\n  ): Observable<ReplenishmentOrderList> {\n    const params = {};\n    if (pageSize) {\n      params['pageSize'] = pageSize.toString();\n    }\n    if (currentPage) {\n      params['currentPage'] = currentPage.toString();\n    }\n    if (sort) {\n      params['sort'] = sort.toString();\n    }\n\n    const url = this.occEndpoints.getUrl(\n      'replenishmentOrderHistory',\n      { userId },\n      params\n    );\n\n    return this.http\n      .get<Occ.ReplenishmentOrderList>(url)\n      .pipe(this.converter.pipeable(REPLENISHMENT_ORDER_HISTORY_NORMALIZER));\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { Converter } from '../../../util/converter.service';\nimport { Title, User, UserSignUp } from '../../../model/misc.model';\n\nexport const USER_NORMALIZER = new InjectionToken<Converter<any, User>>(\n  'UserNormalizer'\n);\n\nexport const USER_SERIALIZER = new InjectionToken<Converter<User, any>>(\n  'UserSerializer'\n);\n\nexport const USER_SIGN_UP_SERIALIZER = new InjectionToken<\n  Converter<UserSignUp, any>\n>('UserSignUpSerializer');\n\nexport const TITLE_NORMALIZER = new InjectionToken<Converter<any, Title>>(\n  'TitleNormalizer'\n);\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Title, User, UserSignUp } from '../../../model/misc.model';\nimport {\n  TITLE_NORMALIZER,\n  USER_NORMALIZER,\n  USER_SERIALIZER,\n  USER_SIGN_UP_SERIALIZER,\n} from '../../../user/connectors/user/converters';\nimport { UserAdapter } from '../../../user/connectors/user/user.adapter';\nimport { ConverterService } from '../../../util/converter.service';\nimport { Occ } from '../../occ-models';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\nimport {\n  InterceptorUtil,\n  USE_CLIENT_TOKEN,\n} from '../../utils/interceptor-util';\n@Injectable()\nexport class OccUserAdapter implements UserAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  load(userId: string): Observable<User> {\n    const url = this.occEndpoints.getUrl('user', { userId });\n    return this.http\n      .get<Occ.User>(url)\n      .pipe(this.converter.pipeable(USER_NORMALIZER));\n  }\n\n  update(userId: string, user: User): Observable<{}> {\n    const url = this.occEndpoints.getUrl('user', { userId });\n    user = this.converter.convert(user, USER_SERIALIZER);\n    return this.http.patch(url, user);\n  }\n\n  register(user: UserSignUp): Observable<User> {\n    const url: string = this.occEndpoints.getUrl('userRegister');\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n    });\n    headers = InterceptorUtil.createHeader(USE_CLIENT_TOKEN, true, headers);\n    user = this.converter.convert(user, USER_SIGN_UP_SERIALIZER);\n\n    return this.http\n      .post<User>(url, user, { headers })\n      .pipe(this.converter.pipeable(USER_NORMALIZER));\n  }\n\n  registerGuest(guid: string, password: string): Observable<User> {\n    const url: string = this.occEndpoints.getUrl('userRegister');\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/x-www-form-urlencoded',\n    });\n    headers = InterceptorUtil.createHeader(USE_CLIENT_TOKEN, true, headers);\n\n    const httpParams: HttpParams = new HttpParams()\n      .set('guid', guid)\n      .set('password', password);\n\n    return this.http\n      .post<User>(url, httpParams, { headers })\n      .pipe(this.converter.pipeable(USER_NORMALIZER));\n  }\n\n  requestForgotPasswordEmail(userEmailAddress: string): Observable<{}> {\n    const url = this.occEndpoints.getUrl('userForgotPassword');\n    const httpParams: HttpParams = new HttpParams().set(\n      'userId',\n      userEmailAddress\n    );\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/x-www-form-urlencoded',\n    });\n    headers = InterceptorUtil.createHeader(USE_CLIENT_TOKEN, true, headers);\n    return this.http.post(url, httpParams, { headers });\n  }\n\n  resetPassword(token: string, newPassword: string): Observable<{}> {\n    const url = this.occEndpoints.getUrl('userResetPassword');\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n    });\n    headers = InterceptorUtil.createHeader(USE_CLIENT_TOKEN, true, headers);\n\n    return this.http.post(url, { token, newPassword }, { headers });\n  }\n\n  updateEmail(\n    userId: string,\n    currentPassword: string,\n    newUserId: string\n  ): Observable<{}> {\n    const url = this.occEndpoints.getUrl('userUpdateLoginId', { userId });\n    const httpParams: HttpParams = new HttpParams()\n      .set('password', currentPassword)\n      .set('newLogin', newUserId);\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/x-www-form-urlencoded',\n    });\n    return this.http.put(url, httpParams, { headers });\n  }\n\n  updatePassword(\n    userId: string,\n    oldPassword: string,\n    newPassword: string\n  ): Observable<{}> {\n    const url = this.occEndpoints.getUrl('userUpdatePassword', { userId });\n    const httpParams: HttpParams = new HttpParams()\n      .set('old', oldPassword)\n      .set('new', newPassword);\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/x-www-form-urlencoded',\n    });\n    return this.http.put(url, httpParams, { headers });\n  }\n\n  remove(userId: string): Observable<{}> {\n    const url = this.occEndpoints.getUrl('user', { userId });\n    return this.http.delete<User>(url);\n  }\n\n  loadTitles(): Observable<Title[]> {\n    const url = this.occEndpoints.getUrl('titles');\n    return this.http.get<Occ.TitleList>(url).pipe(\n      map((titleList) => titleList.titles),\n      this.converter.pipeableMany(TITLE_NORMALIZER)\n    );\n  }\n}\n","import { Observable } from 'rxjs';\nimport { AnonymousConsent, ConsentTemplate } from '../../model/consent.model';\n\nexport abstract class AnonymousConsentTemplatesAdapter {\n  /**\n   * Abstract method used to load anonymous consents.\n   */\n  abstract loadAnonymousConsentTemplates(): Observable<ConsentTemplate[]>;\n\n  /**\n   * Loads anonymous consents in an optimal way.\n   */\n  abstract loadAnonymousConsents(): Observable<AnonymousConsent[]>;\n}\n","import { Observable } from 'rxjs';\nimport { ConsentTemplate } from '../../../model/consent.model';\n\nexport abstract class UserConsentAdapter {\n  abstract loadConsents(userId: string): Observable<ConsentTemplate[]>;\n\n  abstract giveConsent(\n    userId: string,\n    consentTemplateId: string,\n    consentTemplateVersion: number\n  ): Observable<ConsentTemplate>;\n\n  abstract withdrawConsent(userId: string, consentCode: string): Observable<{}>;\n}\n","import { Observable } from 'rxjs';\nimport { CostCenter } from '../../../model/org-unit.model';\nimport { EntitiesModel } from '../../../model/misc.model';\n\nexport abstract class UserCostCenterAdapter {\n  /**\n   * Returns the list of all active cost centers of the login user\n   * @param userId\n   */\n  abstract loadActiveList(\n    userId: string\n  ): Observable<EntitiesModel<CostCenter>>;\n}\n","import { Observable } from 'rxjs';\nimport {\n  CustomerCouponSearchResult,\n  CustomerCouponNotification,\n  CustomerCoupon2Customer,\n} from '../../../model/customer-coupon.model';\n\nexport abstract class CustomerCouponAdapter {\n  abstract getCustomerCoupons(\n    userId: string,\n    pageSize: number,\n    currentPage: number,\n    sort: string\n  ): Observable<CustomerCouponSearchResult>;\n\n  abstract turnOnNotification(\n    userId: string,\n    couponCode: string\n  ): Observable<CustomerCouponNotification>;\n\n  abstract turnOffNotification(\n    userId: string,\n    couponCode: string\n  ): Observable<{}>;\n\n  abstract claimCustomerCoupon(\n    userId: string,\n    couponCode: string\n  ): Observable<CustomerCoupon2Customer>;\n}\n","import { Observable } from 'rxjs';\nimport {\n  ProductInterestSearchResult,\n  ProductInterestEntryRelation,\n  NotificationType,\n} from '../../../model/product-interest.model';\n\nexport abstract class UserInterestsAdapter {\n  /**\n   * Abstract method used to load product interests for an user.\n   *\n   * @param userId The `userId` for given user\n   * @param pageSize\n   * @param currentPage\n   * @param sort Sorting method\n   * @param productCode The product code\n   * @param  notificationType The notification type\n   */\n  abstract getInterests(\n    userId: string,\n    pageSize?: number,\n    currentPage?: number,\n    sort?: string,\n    productCode?: string,\n    notificationType?: NotificationType\n  ): Observable<ProductInterestSearchResult>;\n\n  /**\n   * Abstract method used to remove product interest for an user.\n   *\n   * @param userId The `userId` for given user\n   * @param ProductInterestRelation The product interest to be removed.\n   */\n  abstract removeInterest(\n    userId: string,\n    item: ProductInterestEntryRelation\n  ): Observable<any[]>;\n\n  /**\n   * Abstract method to add a product interest for an user.\n   *\n   * @param userId The `userId` for given user\n   * @param productCode The product code\n   * @param notificationType The notification type\n   */\n  abstract addInterest(\n    userId: string,\n    productCode: string,\n    notificationType: NotificationType\n  ): Observable<any>;\n}\n","import { Observable } from 'rxjs';\nimport { ConsignmentTracking } from '../../../model/consignment-tracking.model';\nimport {\n  CancellationRequestEntryInputList,\n  Order,\n  OrderHistoryList,\n  ReturnRequest,\n  ReturnRequestEntryInputList,\n  ReturnRequestList,\n  ReturnRequestModification,\n} from '../../../model/order.model';\n\nexport abstract class UserOrderAdapter {\n  /**\n   * Abstract method used to load order data.\n   *\n   * @param userId The `userId` for given user\n   * @param orderCode The `orderCode` for given order\n   */\n  abstract load(userId: string, orderCode: string): Observable<Order>;\n\n  /**\n   * Abstract method used to load order history for an user.\n   *\n   * @param userId The `userId` for given user\n   * @param pageSize\n   * @param currentPage\n   * @param sort Sorting method\n   */\n  abstract loadHistory(\n    userId: string,\n    pageSize: number,\n    currentPage: number,\n    sort: string\n  ): Observable<OrderHistoryList>;\n\n  /**\n   * Abstract method used to get consignment tracking details\n   * @param orderCode an order code\n   * @param consignmentCode a consignment code\n   * @param userId user id related to order\n   */\n  abstract getConsignmentTracking(\n    orderCode: string,\n    consignmentCode: string,\n    userId?: string\n  ): Observable<ConsignmentTracking>;\n\n  /**\n   * Abstract method used to create return request\n   * @param userId The `userId` for given user\n   * @param returnRequestInput Return request entry input list\n   */\n  abstract createReturnRequest(\n    userId: string,\n    returnRequestInput: ReturnRequestEntryInputList\n  ): Observable<ReturnRequest>;\n\n  /**\n   * Abstract method used to load order return request details\n   * @param userId\n   * @param returnRequestCode\n   */\n  abstract loadReturnRequestDetail(\n    userId: string,\n    returnRequestCode: string\n  ): Observable<ReturnRequest>;\n\n  /**\n   * Abstract method used to load order return request list for an user.\n   * @param userId\n   * @param pageSize\n   * @param currentPage\n   * @param sort\n   */\n  abstract loadReturnRequestList(\n    userId: string,\n    pageSize: number,\n    currentPage: number,\n    sort: string\n  ): Observable<ReturnRequestList>;\n\n  /**\n   * Abstract method used to cancel order\n   * @param userId\n   * @param orderCode\n   * @param cancelRequestInput Cancel request entry input list\n   */\n  abstract cancel(\n    userId: string,\n    orderCode: string,\n    cancelRequestInput: CancellationRequestEntryInputList\n  ): Observable<{}>;\n\n  /**\n   * Abstract method used to cancel one return request\n   * @param userId\n   * @param returnRequestCode\n   * @param returnRequestModification\n   */\n  abstract cancelReturnRequest(\n    userId: string,\n    returnRequestCode: string,\n    returnRequestModification: ReturnRequestModification\n  ): Observable<{}>;\n}\n","import { Observable } from 'rxjs';\nimport { PaymentDetails } from '../../../model/cart.model';\n\nexport abstract class UserPaymentAdapter {\n  abstract loadAll(userId: string): Observable<PaymentDetails[]>;\n\n  abstract delete(userId: string, paymentMethodID: string): Observable<{}>;\n\n  abstract setDefault(userId: string, paymentMethodID: string): Observable<{}>;\n}\n","import { Observable } from 'rxjs';\nimport {\n  OrderHistoryList,\n  ReplenishmentOrder,\n  ReplenishmentOrderList,\n} from '../../../model/index';\n\nexport abstract class UserReplenishmentOrderAdapter {\n  /**\n   * Abstract method used to load replenishment order details.\n   *\n   * @param userId The `userId` for given user\n   * @param replenishmentOrderCode The `replenishmentOrderCode` for a given scheduled replenishment\n   */\n  abstract load(\n    userId: string,\n    replenishmentOrderCode: string\n  ): Observable<ReplenishmentOrder>;\n\n  /**\n   * Abstract method used to load order history from a replenishment order.\n   *\n   * @param userId The `userId` for given user\n   * @param replenishmentOrderCode The `replenishmentOrderCode` for a given scheduled replenishment\n   * @param pageSize The `pageSize` to display number of data as order history\n   * @param currentPage The `currentPage` of the order history list\n   * @param sort The `sort` for a sorting method\n   */\n  abstract loadReplenishmentDetailsHistory(\n    userId: string,\n    replenishmentOrderCode: string,\n    pageSize?: number,\n    currentPage?: number,\n    sort?: string\n  ): Observable<OrderHistoryList>;\n\n  /**\n   * Abstract method used to cancel a replenishment order.\n   *\n   * @param userId The `userId` for given user\n   * @param replenishmentOrderCode The `replenishmentOrderCode` for a given scheduled replenishment\n   */\n  abstract cancelReplenishmentOrder(\n    userId: string,\n    replenishmentOrderCode: string\n  ): Observable<ReplenishmentOrder>;\n\n  /**\n   * Abstract method used to load replenishment order history for an user.\n   *\n   * @param userId The `userId` for given user\n   * @param pageSize\n   * @param currentPage\n   * @param sort Sorting method\n   */\n  abstract loadHistory(\n    userId: string,\n    pageSize?: number,\n    currentPage?: number,\n    sort?: string\n  ): Observable<ReplenishmentOrderList>;\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {\n  OrderHistoryList,\n  ReplenishmentOrder,\n  ReplenishmentOrderList,\n} from '../../../model/index';\nimport { UserReplenishmentOrderAdapter } from './user-replenishment-order.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserReplenishmentOrderConnector {\n  constructor(protected adapter: UserReplenishmentOrderAdapter) {}\n\n  public load(\n    userId: string,\n    replenishmentOrderCode: string\n  ): Observable<ReplenishmentOrder> {\n    return this.adapter.load(userId, replenishmentOrderCode);\n  }\n\n  public loadReplenishmentDetailsHistory(\n    userId: string,\n    replenishmentOrderCode: string,\n    pageSize?: number,\n    currentPage?: number,\n    sort?: string\n  ): Observable<OrderHistoryList> {\n    return this.adapter.loadReplenishmentDetailsHistory(\n      userId,\n      replenishmentOrderCode,\n      pageSize,\n      currentPage,\n      sort\n    );\n  }\n\n  public cancelReplenishmentOrder(\n    userId: string,\n    replenishmentOrderCode: string\n  ): Observable<ReplenishmentOrder> {\n    return this.adapter.cancelReplenishmentOrder(\n      userId,\n      replenishmentOrderCode\n    );\n  }\n\n  public loadHistory(\n    userId: string,\n    pageSize?: number,\n    currentPage?: number,\n    sort?: string\n  ): Observable<ReplenishmentOrderList> {\n    return this.adapter.loadHistory(userId, pageSize, currentPage, sort);\n  }\n}\n","import { Observable } from 'rxjs';\nimport { Title, User, UserSignUp } from '../../../model/misc.model';\n\nexport abstract class UserAdapter {\n  abstract load(userId: string): Observable<User>;\n\n  abstract update(username: string, user: User): Observable<{}>;\n\n  abstract register(user: UserSignUp): Observable<User>;\n\n  abstract registerGuest(guid: string, password: string): Observable<User>;\n\n  abstract requestForgotPasswordEmail(userEmailAddress: string): Observable<{}>;\n\n  abstract resetPassword(token: string, newPassword: string): Observable<{}>;\n\n  abstract updateEmail(\n    userId: string,\n    currentPassword: string,\n    newUserId: string\n  ): Observable<{}>;\n\n  abstract updatePassword(\n    userId: string,\n    oldPassword: string,\n    newPassword: string\n  ): Observable<{}>;\n\n  abstract remove(userId: string): Observable<{}>;\n\n  abstract loadTitles(): Observable<Title[]>;\n}\n","import { Injectable } from '@angular/core';\nimport { Address } from '../../../../model/address.model';\nimport { EntitiesModel } from '../../../../model/misc.model';\nimport { ADDRESS_NORMALIZER } from '../../../../user/connectors/address/converters';\nimport {\n  Converter,\n  ConverterService,\n} from '../../../../util/converter.service';\nimport { Occ } from '../../../occ-models/occ.models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OccAddressListNormalizer\n  implements Converter<Occ.AddressList, EntitiesModel<Address>> {\n  constructor(private converter: ConverterService) {}\n\n  convert(\n    source: Occ.AddressList,\n    target?: EntitiesModel<Address>\n  ): EntitiesModel<Address> {\n    if (target === undefined) {\n      target = {\n        ...(source as any),\n        values: source.addresses.map((address) => ({\n          ...this.converter.convert(address, ADDRESS_NORMALIZER),\n        })),\n      };\n    }\n    return target;\n  }\n}\n","import { OccConfig } from '../../config/occ-config';\n\nexport const defaultOccUserConfig: OccConfig = {\n  backend: {\n    occ: {\n      endpoints: {\n        // tslint:disable:max-line-length\n        user: 'users/${userId}',\n        userRegister: 'users',\n        userForgotPassword: 'forgottenpasswordtokens',\n        userResetPassword: 'resetpassword',\n        userUpdateLoginId: 'users/${userId}/login',\n        userUpdatePassword: 'users/${userId}/password',\n        titles: 'titles',\n        paymentDetailsAll: 'users/${userId}/paymentdetails',\n        paymentDetail: 'users/${userId}/paymentdetails/${paymentDetailId}',\n        orderHistory: 'users/${userId}/orders',\n        orderDetail: 'users/${userId}/orders/${orderId}?fields=FULL',\n        anonymousConsentTemplates: 'users/anonymous/consenttemplates',\n        consentTemplates: 'users/${userId}/consenttemplates',\n        consents: 'users/${userId}/consents',\n        consentDetail: 'users/${userId}/consents/${consentId}',\n        addresses: 'users/${userId}/addresses',\n        addressDetail: 'users/${userId}/addresses/${addressId}',\n        addressVerification: 'users/${userId}/addresses/verification',\n        consignmentTracking:\n          'users/${userId}/orders/${orderCode}/consignments/${consignmentCode}/tracking',\n        customerCoupons: 'users/${userId}/customercoupons',\n        claimCoupon: 'users/${userId}/customercoupons/${couponCode}/claim',\n        couponNotification:\n          'users/${userId}/customercoupons/${couponCode}/notification',\n        notificationPreference: 'users/${userId}/notificationpreferences',\n        productInterests: 'users/${userId}/productinterests',\n        getProductInterests:\n          'users/${userId}/productinterests?fields=sorts,pagination,results(productInterestEntry,product(code))',\n        cancelOrder: 'users/${userId}/orders/${orderId}/cancellation',\n        returnOrder:\n          'users/${userId}/orderReturns?fields=BASIC,returnEntries(BASIC,refundAmount(formattedValue),orderEntry(basePrice(formattedValue),product(name,code,baseOptions,images(DEFAULT,galleryIndex)))),deliveryCost(formattedValue),totalPrice(formattedValue),subTotal(formattedValue)',\n        orderReturns: 'users/${userId}/orderReturns?fields=BASIC',\n        orderReturnDetail:\n          'users/${userId}/orderReturns/${returnRequestCode}?fields=BASIC,returnEntries(BASIC,refundAmount(formattedValue),orderEntry(basePrice(formattedValue),product(name,code,baseOptions,images(DEFAULT,galleryIndex)))),deliveryCost(formattedValue),totalPrice(formattedValue),subTotal(formattedValue)',\n        cancelReturn: 'users/${userId}/orderReturns/${returnRequestCode}',\n        // tslint:enable\n      },\n    },\n  },\n};\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { COST_CENTERS_NORMALIZER } from '../../../cost-center/connectors/cost-center/converters';\nimport { EntitiesModel } from '../../../model/misc.model';\nimport { CostCenter } from '../../../model/org-unit.model';\nimport { SearchConfig } from '../../../product/model/search-config';\nimport { UserCostCenterAdapter } from '../../../user/connectors/cost-center/user-cost-center.adapter';\nimport { ConverterService } from '../../../util/converter.service';\nimport { Occ } from '../../occ-models/occ.models';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\n\n@Injectable()\nexport class OccUserCostCenterAdapter implements UserCostCenterAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  loadActiveList(userId: string): Observable<EntitiesModel<CostCenter>> {\n    return this.http\n      .get<Occ.CostCentersList>(this.getCostCentersEndpoint(userId))\n      .pipe(this.converter.pipeable(COST_CENTERS_NORMALIZER));\n  }\n\n  protected getCostCentersEndpoint(\n    userId: string,\n    params?: SearchConfig\n  ): string {\n    return this.occEndpoints.getUrl('getActiveCostCenters', { userId }, params);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { AnonymousConsentTemplatesAdapter } from '../../../anonymous-consents/connectors/anonymous-consent-templates.adapter';\nimport { ANONYMOUS_CONSENT_NORMALIZER } from '../../../anonymous-consents/connectors/converters';\nimport { provideDefaultConfig } from '../../../config/config-providers';\nimport { ADDRESS_LIST_NORMALIZER } from '../../../user/connectors/address/converters';\nimport { UserAddressAdapter } from '../../../user/connectors/address/user-address.adapter';\nimport { UserConsentAdapter } from '../../../user/connectors/consent/user-consent.adapter';\nimport { UserCostCenterAdapter } from '../../../user/connectors/cost-center/user-cost-center.adapter';\nimport { CustomerCouponAdapter } from '../../../user/connectors/customer-coupon/customer-coupon.adapter';\nimport { PRODUCT_INTERESTS_NORMALIZER } from '../../../user/connectors/interests/converters';\nimport { UserInterestsAdapter } from '../../../user/connectors/interests/user-interests.adapter';\nimport { UserNotificationPreferenceAdapter } from '../../../user/connectors/notification-preference/user-notification-preference.adapter';\nimport { ORDER_RETURN_REQUEST_NORMALIZER } from '../../../user/connectors/order/converters';\nimport { UserOrderAdapter } from '../../../user/connectors/order/user-order.adapter';\nimport { UserPaymentAdapter } from '../../../user/connectors/payment/user-payment.adapter';\nimport { UserReplenishmentOrderAdapter } from '../../../user/connectors/replenishment-order';\nimport { UserAdapter } from '../../../user/connectors/user/user.adapter';\nimport { OccCustomerCouponAdapter } from '../user/occ-customer-coupon.adapter';\nimport { AnonymousConsentNormalizer } from './converters/anonymous-consents-normalizer';\nimport { OccAddressListNormalizer } from './converters/occ-address-list-normalizer';\nimport { OccReturnRequestNormalizer } from './converters/occ-return-request-normalizer';\nimport { OccUserInterestsNormalizer } from './converters/occ-user-interests-normalizer';\nimport { defaultOccUserConfig } from './default-occ-user-config';\nimport { OccAnonymousConsentTemplatesAdapter } from './occ-anonymous-consent-templates.adapter';\nimport { OccUserAddressAdapter } from './occ-user-address.adapter';\nimport { OccUserConsentAdapter } from './occ-user-consent.adapter';\nimport { OccUserCostCenterAdapter } from './occ-user-cost-centers.adapter';\nimport { OccUserInterestsAdapter } from './occ-user-interests.adapter';\nimport { OccUserNotificationPreferenceAdapter } from './occ-user-notification-preference.adapter';\nimport { OccUserOrderAdapter } from './occ-user-order.adapter';\nimport { OccUserPaymentAdapter } from './occ-user-payment.adapter';\nimport { OccUserReplenishmentOrderAdapter } from './occ-user-replenishment-order.adapter';\nimport { OccUserAdapter } from './occ-user.adapter';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(defaultOccUserConfig),\n    { provide: UserAdapter, useClass: OccUserAdapter },\n    { provide: UserAddressAdapter, useClass: OccUserAddressAdapter },\n    { provide: UserConsentAdapter, useClass: OccUserConsentAdapter },\n    {\n      provide: AnonymousConsentTemplatesAdapter,\n      useClass: OccAnonymousConsentTemplatesAdapter,\n    },\n    {\n      provide: UserPaymentAdapter,\n      useClass: OccUserPaymentAdapter,\n    },\n    { provide: UserOrderAdapter, useClass: OccUserOrderAdapter },\n    { provide: CustomerCouponAdapter, useClass: OccCustomerCouponAdapter },\n    {\n      provide: UserNotificationPreferenceAdapter,\n      useClass: OccUserNotificationPreferenceAdapter,\n    },\n    { provide: UserInterestsAdapter, useClass: OccUserInterestsAdapter },\n    { provide: UserCostCenterAdapter, useClass: OccUserCostCenterAdapter },\n    {\n      provide: PRODUCT_INTERESTS_NORMALIZER,\n      useExisting: OccUserInterestsNormalizer,\n      multi: true,\n    },\n    {\n      provide: ORDER_RETURN_REQUEST_NORMALIZER,\n      useExisting: OccReturnRequestNormalizer,\n      multi: true,\n    },\n    {\n      provide: ANONYMOUS_CONSENT_NORMALIZER,\n      useExisting: AnonymousConsentNormalizer,\n      multi: true,\n    },\n    {\n      provide: ADDRESS_LIST_NORMALIZER,\n      useExisting: OccAddressListNormalizer,\n      multi: true,\n    },\n    {\n      provide: UserReplenishmentOrderAdapter,\n      useClass: OccUserReplenishmentOrderAdapter,\n    },\n  ],\n})\nexport class UserOccModule {}\n","import { Injectable, isDevMode } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class JavaRegExpConverter {\n  /**\n   * Pattern that extracts modifiers from the Java regexp.\n   *\n   * Java regexps MAY start with ONE or MANY modifiers like `(?MODIFIERS)PATTERN`. Examples:\n   * - `(?i)` for Case Insensitive Mode: `(?i)PATTERN`\n   * - `(?u)` for Unicode-Aware Case Folding; `(?u)PATTERN`\n   * - or multiple combined:  `(?iu)PATTERN`\n   * - (more modifiers in the official Java docs https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html)\n   *\n   * This pattern extracts 3 parts from the input string, i.e. for `(?iu)PATTERN`:\n   *    1. original modifiers syntax, i.e. `(?iu)` (or undefined if no modifiers present)\n   *    2. extracted modifiers, i.e. `iu` (or undefined if no modifiers present)\n   *    3. the rest of the regexp, i.e. `PATTERN`\n   */\n  private readonly EXTRACT_JAVA_REGEXP_MODIFIERS: RegExp = /^(\\(\\?([a-z]+)\\))?(.*)/;\n\n  /**\n   * Converts RegExp from Java syntax to Javascript, by recognizing Java regexp modifiers\n   * and converting them to the Javascript ones (i.e. case insensitive mode: `(?i)PATTERN` -> `/pattern/i`)\n   *\n   * **CAUTION!** Not all features and modifiers of Java regexps are valid in Javascript!\n   * If unsupported feature or modifier is used, then `null` will be returned instead of Javascript RegExp.\n   *\n   * See differences between Java and Javascript regexps:\n   * - https://stackoverflow.com/questions/8754444/convert-javascript-regular-expression-to-java-syntax\n   * - https://en.wikipedia.org/wiki/Comparison_of_regular_expression_engines#Language_features\n   */\n  toJsRegExp(javaSyntax: string): RegExp {\n    const parts = javaSyntax.match(this.EXTRACT_JAVA_REGEXP_MODIFIERS);\n    if (!parts) {\n      return null;\n    }\n    const [, , modifiers, jsSyntax] = parts;\n    try {\n      return new RegExp(jsSyntax, modifiers);\n    } catch (error) {\n      if (isDevMode()) {\n        console.warn(\n          `WARNING: Could not convert Java regexp into Javascript. Original regexp: ${javaSyntax} \\nMessage: ${error}`\n        );\n      }\n      return null;\n    }\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\n/**\n * The url of the server request when running SSR\n * */\nexport const SERVER_REQUEST_URL = new InjectionToken<string>(\n  'SERVER_REQUEST_URL'\n);\n\n/**\n * The url of the server request host when running SSR\n * */\nexport const SERVER_REQUEST_ORIGIN = new InjectionToken<string>(\n  'SERVER_REQUEST_ORIGIN'\n);\n","import { Injectable } from '@angular/core';\nimport { I18nConfig } from '../../i18n';\nimport { BaseSite } from '../../model/misc.model';\nimport { SiteContextConfig } from '../../site-context/config/site-context-config';\nimport {\n  BASE_SITE_CONTEXT_ID,\n  CURRENCY_CONTEXT_ID,\n  LANGUAGE_CONTEXT_ID,\n} from '../../site-context/providers/context-ids';\nimport { Occ } from '../occ-models/occ.models';\nimport { JavaRegExpConverter } from './java-reg-exp-converter';\nimport { OccLoadedConfig } from './occ-loaded-config';\n\n@Injectable({ providedIn: 'root' })\nexport class OccLoadedConfigConverter {\n  constructor(private javaRegExpConverter: JavaRegExpConverter) {}\n\n  fromOccBaseSites(baseSites: BaseSite[], currentUrl: string): OccLoadedConfig {\n    const baseSite = baseSites.find((site) =>\n      this.isCurrentBaseSite(site, currentUrl)\n    );\n    if (!baseSite) {\n      throw this.getError(\n        `Current url (${currentUrl}) doesn't match with any of url patterns of any base site.`\n      );\n    }\n\n    // Although `stores` property is an array, typically there is only one store. So we return the first store from the list.\n    const baseStore = baseSite.stores && baseSite.stores[0];\n    if (!baseStore) {\n      throw this.getError(\n        `Current base site (${baseSite.uid}) doesn't have any base store.`\n      );\n    }\n\n    return {\n      baseSite: baseSite.uid,\n      languages: this.getIsoCodes(\n        baseStore.languages,\n        baseSite.defaultLanguage || baseStore.defaultLanguage\n      ),\n      currencies: this.getIsoCodes(\n        baseStore.currencies,\n        baseStore.defaultCurrency\n      ),\n      urlParameters: this.getUrlParams(baseSite.urlEncodingAttributes),\n    };\n  }\n\n  toSiteContextConfig({\n    baseSite,\n    languages,\n    currencies,\n    urlParameters: urlEncodingAttributes,\n  }: OccLoadedConfig): SiteContextConfig {\n    const result = {\n      context: {\n        urlParameters: urlEncodingAttributes,\n        [BASE_SITE_CONTEXT_ID]: [baseSite],\n        [LANGUAGE_CONTEXT_ID]: languages,\n        [CURRENCY_CONTEXT_ID]: currencies,\n      },\n    };\n    return result;\n  }\n\n  toI18nConfig({ languages }: OccLoadedConfig): I18nConfig {\n    return { i18n: { fallbackLang: languages[0] } };\n  }\n\n  private isCurrentBaseSite(site: Occ.BaseSite, currentUrl: string): boolean {\n    const index = (site.urlPatterns || []).findIndex((javaRegexp) => {\n      const jsRegexp = this.javaRegExpConverter.toJsRegExp(javaRegexp);\n      if (jsRegexp) {\n        const result = jsRegexp.test(currentUrl);\n        return result;\n      }\n    });\n\n    return index !== -1;\n  }\n\n  /**\n   * Returns an array of url encoded site context parameters.\n   *\n   * It maps the string \"storefront\" (used in OCC) to the \"baseSite\" (used in Spartacus)\n   */\n  private getUrlParams(params: string[]): string[] {\n    const STOREFRONT_PARAM = 'storefront';\n\n    return (params || []).map((param) =>\n      param === STOREFRONT_PARAM ? BASE_SITE_CONTEXT_ID : param\n    );\n  }\n\n  /**\n   * Returns iso codes in a array, where the first element is the default iso code.\n   */\n  private getIsoCodes(\n    elements: { isocode?: string }[],\n    defaultElement: { isocode?: string }\n  ) {\n    const result = this.moveToFirst(\n      elements,\n      (el) => el.isocode === defaultElement.isocode\n    ).map((el) => el.isocode);\n    return result;\n  }\n\n  /**\n   * Moves to the start of the array the first element that satisfies the given predicate.\n   *\n   * @param array array to modify\n   * @param predicate function called on elements\n   */\n  private moveToFirst(array: any[], predicate: (el: any) => boolean): any[] {\n    array = [...array];\n    const index = array.findIndex(predicate);\n    if (index !== -1) {\n      const [el] = array.splice(index, 1);\n      array.unshift(el);\n    }\n    return array;\n  }\n\n  private getError(message: string): Error {\n    return new Error(`Error: Cannot get base site config! ${message}`);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BaseSite } from '../../model/misc.model';\nimport { OccConfig } from '../config/occ-config';\nimport { Occ } from '../occ-models/occ.models';\n\n@Injectable({ providedIn: 'root' })\nexport class OccSitesConfigLoader {\n  constructor(protected config: OccConfig, protected http: HttpClient) {}\n\n  protected readonly endpoint =\n    'basesites?fields=baseSites(uid,defaultLanguage(isocode),urlEncodingAttributes,urlPatterns,stores(currencies(isocode),defaultCurrency(isocode),languages(isocode),defaultLanguage(isocode)))';\n\n  private get baseEndpoint(): string {\n    return (\n      (this.config.backend.occ.baseUrl || '') + this.config.backend.occ.prefix\n    );\n  }\n\n  private get url(): string {\n    return `${this.baseEndpoint}${this.endpoint}`;\n  }\n\n  load(): Observable<BaseSite[]> {\n    if (!this.config || !this.config.backend || !this.config.backend.occ) {\n      return throwError(new Error(`Missing config for OCC backend!`));\n    }\n\n    return this.http\n      .get<Occ.BaseSites>(this.url)\n      .pipe(map(({ baseSites }) => baseSites));\n  }\n}\n","import { DOCUMENT, isPlatformBrowser, isPlatformServer } from '@angular/common';\nimport {\n  Inject,\n  Injectable,\n  isDevMode,\n  Optional,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {\n  makeStateKey,\n  StateKey,\n  TransferState,\n} from '@angular/platform-browser';\nimport { Observable, of } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { deepMerge } from '../../config/utils/deep-merge';\nimport { I18nConfig } from '../../i18n/config/i18n-config';\nimport { SiteContextConfig } from '../../site-context/config/site-context-config';\nimport { SERVER_REQUEST_URL } from '../../util/ssr.tokens';\nimport { OccLoadedConfig } from './occ-loaded-config';\nimport { OccLoadedConfigConverter } from './occ-loaded-config-converter';\nimport { OccSitesConfigLoader } from './occ-sites-config-loader';\nimport { Config } from '../../config/config-tokens';\n\nexport const EXTERNAL_CONFIG_TRANSFER_ID: StateKey<string> = makeStateKey<\n  string\n>('cx-external-config');\n\n@Injectable({ providedIn: 'root' })\nexport class OccConfigLoaderService {\n  constructor(\n    @Inject(PLATFORM_ID) protected platform: any,\n    @Inject(DOCUMENT) protected document: any,\n    @Inject(Config) protected config: any,\n    protected sitesConfigLoader: OccSitesConfigLoader,\n    protected converter: OccLoadedConfigConverter,\n    @Optional() protected transferState: TransferState,\n\n    @Optional()\n    @Inject(SERVER_REQUEST_URL)\n    protected serverRequestUrl?: string\n  ) {}\n\n  private get currentUrl(): string {\n    if (isPlatformBrowser(this.platform)) {\n      return this.document.location.href;\n    }\n    if (this.serverRequestUrl) {\n      return this.serverRequestUrl;\n    }\n    if (isDevMode()) {\n      console.error(\n        `Please provide token 'SERVER_REQUEST_URL' with the requested URL for SSR`\n      );\n    }\n  }\n\n  /**\n   * Initializes the Spartacus config asynchronously basing on the external config\n   */\n  loadConfig(): Promise<I18nConfig | SiteContextConfig> {\n    return this.get()\n      .pipe(\n        tap((externalConfig) => this.transfer(externalConfig)),\n        map((externalConfig) =>\n          deepMerge({}, ...this.getConfigChunks(externalConfig))\n        )\n      )\n      .toPromise();\n  }\n\n  /**\n   * Returns the external config\n   */\n  protected get(): Observable<OccLoadedConfig> {\n    const rehydratedExternalConfig = this.rehydrate();\n\n    return rehydratedExternalConfig\n      ? of(rehydratedExternalConfig)\n      : this.load();\n  }\n\n  /**\n   * Loads the external config from backend\n   */\n  protected load(): Observable<OccLoadedConfig> {\n    return this.sitesConfigLoader\n      .load()\n      .pipe(\n        map((baseSites) =>\n          this.converter.fromOccBaseSites(baseSites, this.currentUrl)\n        )\n      );\n  }\n\n  /**\n   * Tries to rehydrate external config in the browser from SSR\n   */\n  protected rehydrate(): OccLoadedConfig {\n    if (this.transferState && isPlatformBrowser(this.platform)) {\n      return this.transferState.get(EXTERNAL_CONFIG_TRANSFER_ID, undefined);\n    }\n  }\n\n  /**\n   * Transfers the given external config in SSR to the browser\n   *\n   * @param externalConfig\n   */\n  protected transfer(externalConfig: OccLoadedConfig) {\n    if (\n      this.transferState &&\n      isPlatformServer(this.platform) &&\n      externalConfig\n    ) {\n      this.transferState.set(EXTERNAL_CONFIG_TRANSFER_ID, externalConfig);\n    }\n  }\n\n  protected getConfigChunks(\n    externalConfig: OccLoadedConfig\n  ): (I18nConfig | SiteContextConfig)[] {\n    const chunks: any[] = [this.converter.toSiteContextConfig(externalConfig)];\n\n    if (this.shouldReturnI18nChunk()) {\n      chunks.push(this.converter.toI18nConfig(externalConfig));\n    }\n\n    return chunks;\n  }\n\n  private shouldReturnI18nChunk(): boolean {\n    const fallbackLangExists =\n      typeof (\n        this.config &&\n        this.config.i18n &&\n        this.config.i18n.fallbackLang\n      ) !== 'undefined';\n    if (fallbackLangExists && isDevMode()) {\n      console.warn(\n        `There is an already provided static config for 'i18n.fallbackLang', so the value from OCC loaded config is ignored.`\n      );\n    }\n    return !fallbackLangExists;\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport {\n  ConfigInitializer,\n  CONFIG_INITIALIZER,\n} from '../../config/config-initializer/config-initializer';\nimport { SiteContextConfig } from '../../site-context/config/site-context-config';\nimport { BASE_SITE_CONTEXT_ID } from '../../site-context/providers/context-ids';\nimport { OccConfigLoaderService } from './occ-config-loader.service';\n\n/**\n * Initializes the Spartacus config asynchronously basing on the external config\n */\nexport function initConfig(\n  configLoader: OccConfigLoaderService,\n  config: SiteContextConfig\n): ConfigInitializer {\n  /**\n   * Load config for `context` from backend only when there is no static config for `context.baseSite`\n   */\n  if (!config.context || !config.context[BASE_SITE_CONTEXT_ID]) {\n    return {\n      scopes: ['context', 'i18n.fallbackLang'],\n      configFactory: () => configLoader.loadConfig(),\n    };\n  }\n  return null;\n}\n\n/**\n * Re-provides the external config chunk given before Angular bootstrap\n */\n@NgModule()\nexport class OccConfigLoaderModule {\n  static forRoot(): ModuleWithProviders<OccConfigLoaderModule> {\n    return {\n      ngModule: OccConfigLoaderModule,\n      providers: [\n        {\n          provide: CONFIG_INITIALIZER,\n          useFactory: initConfig,\n          deps: [OccConfigLoaderService, SiteContextConfig],\n          multi: true,\n        },\n      ],\n    };\n  }\n}\n","import { Provider } from '@angular/core';\nimport { Meta } from '@angular/platform-browser';\nimport { OccConfig } from './occ-config';\nimport { provideConfigFactory } from '../../config/config-providers';\n\nexport const OCC_BASE_URL_META_TAG_NAME = 'occ-backend-base-url';\nexport const OCC_BASE_URL_META_TAG_PLACEHOLDER = 'OCC_BACKEND_BASE_URL_VALUE';\nexport const MEDIA_BASE_URL_META_TAG_NAME = 'media-backend-base-url';\nexport const MEDIA_BASE_URL_META_TAG_PLACEHOLDER =\n  'MEDIA_BACKEND_BASE_URL_VALUE';\n\nexport function occServerConfigFromMetaTagFactory(meta: Meta): OccConfig {\n  const baseUrl = getMetaTagContent(OCC_BASE_URL_META_TAG_NAME, meta);\n  return baseUrl && baseUrl !== OCC_BASE_URL_META_TAG_PLACEHOLDER\n    ? { backend: { occ: { baseUrl } } }\n    : {};\n}\n\nexport function mediaServerConfigFromMetaTagFactory(meta: Meta): OccConfig {\n  const baseUrl = getMetaTagContent(MEDIA_BASE_URL_META_TAG_NAME, meta);\n  return baseUrl && baseUrl !== MEDIA_BASE_URL_META_TAG_PLACEHOLDER\n    ? { backend: { media: { baseUrl } } }\n    : {};\n}\n\nfunction getMetaTagContent(name: string, meta: Meta) {\n  const metaTag = meta.getTag(`name=\"${name}\"`);\n  return metaTag && metaTag.content;\n}\n\nexport function provideConfigFromMetaTags(): Provider[] {\n  return [\n    provideConfigFactory(occServerConfigFromMetaTagFactory, [Meta]),\n    provideConfigFactory(mediaServerConfigFromMetaTagFactory, [Meta]),\n  ];\n}\n","import { OccConfig } from './occ-config';\n\nexport const defaultOccConfig: OccConfig = {\n  backend: {\n    occ: {\n      prefix: '/occ/v2/',\n    },\n    media: {},\n  },\n};\n","import { OccConfig } from './occ-config';\n\nexport function occConfigValidator(config: OccConfig) {\n  if (\n    config.backend === undefined ||\n    config.backend.occ === undefined ||\n    config.backend.occ.baseUrl === undefined\n  ) {\n    return 'Please configure backend.occ.baseUrl before using storefront library!';\n  }\n}\n","import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { OccConfig } from '../config/occ-config';\n\n/**\n * Http interceptor to add cookies to all cross-site requests.\n */\n@Injectable({ providedIn: 'root' })\nexport class WithCredentialsInterceptor implements HttpInterceptor {\n  constructor(protected config: OccConfig) {}\n\n  /**\n   * Intercepts each request and adds the `withCredential` flag to it\n   * if it hasn't been added already.\n   */\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    if (this.requiresWithCredentials(request)) {\n      request = request.clone({\n        withCredentials: true,\n      });\n    }\n    return next.handle(request);\n  }\n\n  /**\n   * indicates whether the request should use the WithCredentials flag.\n   */\n  protected requiresWithCredentials(request: HttpRequest<any>): boolean {\n    return (\n      this.occConfig?.useWithCredentials &&\n      request.url.indexOf(this.occConfig?.prefix) > -1\n    );\n  }\n\n  private get occConfig() {\n    return this.config.backend.occ;\n  }\n}\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { provideConfigValidator } from '../config/config-validator/config-validator';\nimport { OccConfigLoaderModule } from './config-loader/occ-config-loader.module';\nimport { defaultOccConfig } from './config/default-occ-config';\nimport { occConfigValidator } from './config/occ-config-validator';\nimport { WithCredentialsInterceptor } from './interceptors/with-credentials.interceptor';\nimport { AsmOccModule } from './adapters/asm/asm-occ.module';\nimport { CmsOccModule } from './adapters/cms/cms-occ.module';\nimport { CartOccModule } from './adapters/cart/cart-occ.module';\nimport { CheckoutOccModule } from './adapters/checkout/checkout-occ.module';\nimport { ProductOccModule } from './adapters/product/product-occ.module';\nimport { SiteContextOccModule } from './adapters/site-context/site-context-occ.module';\nimport { UserOccModule } from './adapters/user/user-occ.module';\nimport { provideDefaultConfig } from '../config/config-providers';\nimport { CostCenterOccModule } from './adapters/cost-center/cost-center-occ.module';\n\n@NgModule({\n  imports: [\n    AsmOccModule,\n    CmsOccModule,\n    CartOccModule,\n    CheckoutOccModule,\n    ProductOccModule,\n    SiteContextOccModule,\n    UserOccModule,\n    OccConfigLoaderModule.forRoot(),\n    CostCenterOccModule,\n  ],\n})\nexport class OccModule {\n  static forRoot(): ModuleWithProviders<OccModule> {\n    return {\n      ngModule: OccModule,\n      providers: [\n        {\n          provide: HTTP_INTERCEPTORS,\n          useExisting: WithCredentialsInterceptor,\n          multi: true,\n        },\n        provideDefaultConfig(defaultOccConfig),\n        provideConfigValidator(occConfigValidator),\n      ],\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { OccConfig } from '../config/occ-config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoadingScopesService {\n  constructor(protected config: OccConfig) {}\n\n  /**\n   * Aims to expand scopes based on loading scopes config.\n   *\n   * I.e. if 'details' scope includes 'list' scope by configuration, it'll return ['details', 'list']\n   *\n   * If scope data overlaps with each other, the data should be merged in the order of scopes provided,\n   * i.e. the last scope is merged last, overwriting parts of the data already provided by preceding scope.\n   * It should apply also to implicit scopes (that are included by configuration).\n   *\n   * @param model\n   * @param scopes\n   */\n  expand(model: string, scopes: string[]): string[] {\n    const scopesConfig =\n      this.config &&\n      this.config.backend &&\n      this.config.backend.loadingScopes &&\n      this.config.backend.loadingScopes[model];\n\n    if (scopesConfig) {\n      const expandedScopes = [...scopes];\n      let i = expandedScopes.length;\n\n      while (i > 0) {\n        i--;\n        const includedScopes =\n          scopesConfig[expandedScopes[i]] &&\n          scopesConfig[expandedScopes[i]].include;\n        if (includedScopes) {\n          for (const includedScope of includedScopes) {\n            if (!expandedScopes.includes(includedScope)) {\n              expandedScopes.splice(i, 0, includedScope);\n              i++;\n            }\n          }\n        }\n      }\n\n      return expandedScopes;\n    }\n\n    return scopes;\n  }\n\n  /**\n   * Return maxAge for product scope in milliseconds\n   *\n   * @param model\n   * @param scope\n   */\n  getMaxAge(model: string, scope: string): number {\n    const scopesConfig =\n      this.config &&\n      this.config.backend &&\n      this.config.backend.loadingScopes &&\n      this.config.backend.loadingScopes[model];\n    return (scopesConfig[scope] && scopesConfig[scope].maxAge) * 1000 || 0;\n  }\n}\n","import { OccConfig } from '../../occ/config/occ-config';\nimport { Injectable } from '@angular/core';\nimport { Config } from '../../config/config-tokens';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class AnonymousConsentsConfig extends OccConfig {\n  anonymousConsents?: {\n    /**\n     * Specify the consent template ID to be show on the registration page.\n     */\n    registerConsent?: string;\n    /**\n     * Show the legal description at the top of the anonymous consents dialog.\n     */\n    showLegalDescriptionInDialog?: boolean;\n    /**\n     * Specify the list of consent template IDs that are required and which can't be toggled off.\n     */\n    requiredConsents?: string[];\n    /**\n     * Consent management page configuration.\n     */\n    consentManagementPage?: {\n      /**\n       * Show all anonymous consents on the consent management page.\n       */\n      showAnonymousConsents?: boolean;\n      /**\n       * A list of consent template IDs that should be hidden on the consent management page.\n       */\n      hideConsents?: string[];\n    };\n  };\n}\n","import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { switchMap, take, tap, withLatestFrom } from 'rxjs/operators';\nimport { AuthService } from '../../auth/index';\nimport {\n  AnonymousConsent,\n  ANONYMOUS_CONSENTS_HEADER,\n  ANONYMOUS_CONSENT_STATUS,\n} from '../../model/index';\nimport { OccEndpointsService } from '../../occ/index';\nimport { AnonymousConsentsConfig } from '../config/anonymous-consents-config';\nimport { AnonymousConsentsService } from '../facade/anonymous-consents.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AnonymousConsentsInterceptor implements HttpInterceptor {\n  constructor(\n    private anonymousConsentsService: AnonymousConsentsService,\n    private authService: AuthService,\n    private occEndpoints: OccEndpointsService,\n    private config: AnonymousConsentsConfig\n  ) {}\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    return this.anonymousConsentsService.getConsents().pipe(\n      take(1),\n      withLatestFrom(this.authService.isUserLoggedIn()),\n      switchMap(([consents, isUserLoggedIn]) => {\n        if (!this.isOccUrl(request.url)) {\n          return next.handle(request);\n        }\n\n        const clonedRequest = this.handleRequest(consents, request);\n        return next.handle(clonedRequest).pipe(\n          tap((event) => {\n            if (\n              event instanceof HttpResponse &&\n              event.url.startsWith(\n                this.occEndpoints.getUrl('anonymousConsentTemplates')\n              )\n            ) {\n              this.handleResponse(\n                isUserLoggedIn,\n                event.headers.get(ANONYMOUS_CONSENTS_HEADER),\n                consents\n              );\n            }\n          })\n        );\n      })\n    );\n  }\n\n  private handleResponse(\n    isUserLoggedIn: boolean,\n    newRawConsents: string,\n    previousConsents: AnonymousConsent[]\n  ): void {\n    if (!isUserLoggedIn && newRawConsents) {\n      let newConsents: AnonymousConsent[] = [];\n      newConsents = this.anonymousConsentsService.decodeAndDeserialize(\n        newRawConsents\n      );\n      newConsents = this.giveRequiredConsents(newConsents);\n\n      if (\n        this.anonymousConsentsService.consentsUpdated(\n          newConsents,\n          previousConsents\n        )\n      ) {\n        this.anonymousConsentsService.setConsents(newConsents);\n      }\n    }\n  }\n\n  private handleRequest(\n    consents: AnonymousConsent[],\n    request: HttpRequest<any>\n  ): HttpRequest<any> {\n    if (!consents) {\n      return request;\n    }\n\n    const rawConsents = this.anonymousConsentsService.serializeAndEncode(\n      consents\n    );\n    return request.clone({\n      setHeaders: {\n        [ANONYMOUS_CONSENTS_HEADER]: rawConsents,\n      },\n    });\n  }\n\n  private isOccUrl(url: string): boolean {\n    return url.includes(this.occEndpoints.getBaseEndpoint());\n  }\n\n  private giveRequiredConsents(\n    consents: AnonymousConsent[]\n  ): AnonymousConsent[] {\n    const givenConsents = [...consents];\n\n    if (\n      Boolean(this.config.anonymousConsents) &&\n      Boolean(this.config.anonymousConsents.requiredConsents)\n    ) {\n      for (const consent of givenConsents) {\n        if (\n          this.config.anonymousConsents.requiredConsents.includes(\n            consent.templateCode\n          )\n        ) {\n          consent.consentState = ANONYMOUS_CONSENT_STATUS.GIVEN;\n        }\n      }\n    }\n    return givenConsents;\n  }\n}\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Provider } from '@angular/core';\nimport { AnonymousConsentsInterceptor } from './anonymous-consents-interceptor';\n\nexport const interceptors: Provider[] = [\n  {\n    provide: HTTP_INTERCEPTORS,\n    useExisting: AnonymousConsentsInterceptor,\n    multi: true,\n  },\n];\n","import { createFeatureSelector, MemoizedSelector } from '@ngrx/store';\nimport { StateWithUser, UserState, USER_FEATURE } from '../user-state';\n\nexport const getUserState: MemoizedSelector<\n  StateWithUser,\n  UserState\n> = createFeatureSelector<UserState>(USER_FEATURE);\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { Country } from '../../../model/address.model';\nimport {\n  BillingCountriesState,\n  BillingCountryEntities,\n  StateWithUser,\n  UserState,\n} from '../user-state';\nimport { getUserState } from './feature.selector';\n\nexport const getBillingCountriesState: MemoizedSelector<\n  StateWithUser,\n  BillingCountriesState\n> = createSelector(getUserState, (state: UserState) => state.billingCountries);\n\nexport const getBillingCountriesEntites: MemoizedSelector<\n  StateWithUser,\n  BillingCountryEntities\n> = createSelector(\n  getBillingCountriesState,\n  (state: BillingCountriesState) => state.entities\n);\n\nexport const getAllBillingCountries: MemoizedSelector<\n  StateWithUser,\n  Country[]\n> = createSelector(getBillingCountriesEntites, (entites) =>\n  Object.keys(entites).map((isocode) => entites[isocode])\n);\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { ConsignmentTracking } from '../../../model/index';\nimport {\n  ConsignmentTrackingState,\n  StateWithUser,\n  UserState,\n} from '../user-state';\nimport { getUserState } from './feature.selector';\n\nexport const getConsignmentTrackingState: MemoizedSelector<\n  StateWithUser,\n  ConsignmentTrackingState\n> = createSelector(\n  getUserState,\n  (state: UserState) => state.consignmentTracking\n);\n\nexport const getConsignmentTracking: MemoizedSelector<\n  StateWithUser,\n  ConsignmentTracking\n> = createSelector(\n  getConsignmentTrackingState,\n  (state: ConsignmentTrackingState) => state.tracking\n);\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\n\nimport { UserState, StateWithUser } from '../user-state';\nimport { LoaderState } from '../../../state/utils/loader/loader-state';\nimport {\n  loaderValueSelector,\n  loaderSuccessSelector,\n  loaderLoadingSelector,\n} from '../../../state/utils/loader/loader.selectors';\n\nimport { getUserState } from './feature.selector';\nimport { CustomerCouponSearchResult } from '../../../model/customer-coupon.model';\n\nexport const getCustomerCouponsState: MemoizedSelector<\n  StateWithUser,\n  LoaderState<CustomerCouponSearchResult>\n> = createSelector(getUserState, (state: UserState) => state.customerCoupons);\n\nexport const getCustomerCouponsLoaded: MemoizedSelector<\n  StateWithUser,\n  boolean\n> = createSelector(\n  getCustomerCouponsState,\n  (state: LoaderState<CustomerCouponSearchResult>) =>\n    loaderSuccessSelector(state)\n);\n\nexport const getCustomerCouponsLoading: MemoizedSelector<\n  StateWithUser,\n  boolean\n> = createSelector(\n  getCustomerCouponsState,\n  (state: LoaderState<CustomerCouponSearchResult>) =>\n    loaderLoadingSelector(state)\n);\n\nexport const getCustomerCoupons: MemoizedSelector<\n  StateWithUser,\n  CustomerCouponSearchResult\n> = createSelector(\n  getCustomerCouponsState,\n  (state: LoaderState<CustomerCouponSearchResult>) => loaderValueSelector(state)\n);\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { Country } from '../../../model/address.model';\nimport {\n  DeliveryCountriesState,\n  DeliveryCountryEntities,\n  StateWithUser,\n  UserState,\n} from '../user-state';\nimport { getUserState } from './feature.selector';\n\nexport const getDeliveryCountriesState: MemoizedSelector<\n  StateWithUser,\n  DeliveryCountriesState\n> = createSelector(getUserState, (state: UserState) => state.countries);\n\nexport const getDeliveryCountriesEntites: MemoizedSelector<\n  StateWithUser,\n  DeliveryCountryEntities\n> = createSelector(\n  getDeliveryCountriesState,\n  (state: DeliveryCountriesState) => state.entities\n);\n\nexport const getAllDeliveryCountries: MemoizedSelector<\n  StateWithUser,\n  Country[]\n> = createSelector(getDeliveryCountriesEntites, (entites) =>\n  Object.keys(entites).map((isocode) => entites[isocode])\n);\n\nexport const countrySelectorFactory = (\n  isocode: string\n): MemoizedSelector<StateWithUser, Country> =>\n  createSelector(getDeliveryCountriesEntites, (entities) =>\n    Object.keys(entities).length !== 0 ? entities[isocode] : null\n  );\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { NotificationPreference } from '../../../model/notification-preference.model';\nimport { LoaderState } from '../../../state/utils/loader/loader-state';\nimport { StateWithUser, UserState } from '../user-state';\nimport { getUserState } from './feature.selector';\nimport {\n  loaderValueSelector,\n  loaderLoadingSelector,\n} from '../../../state/utils/loader/loader.selectors';\n\nexport const getPreferencesLoaderState: MemoizedSelector<\n  StateWithUser,\n  LoaderState<NotificationPreference[]>\n> = createSelector(\n  getUserState,\n  (state: UserState) => state.notificationPreferences\n);\n\nexport const getPreferences: MemoizedSelector<\n  StateWithUser,\n  NotificationPreference[]\n> = createSelector(\n  getPreferencesLoaderState,\n  (state: LoaderState<NotificationPreference[]>) => loaderValueSelector(state)\n);\n\nexport const getEnabledPreferences: MemoizedSelector<\n  StateWithUser,\n  NotificationPreference[]\n> = createSelector(\n  getPreferencesLoaderState,\n  (state: LoaderState<NotificationPreference[]>) =>\n    loaderValueSelector(state).filter((p) => p.enabled)\n);\n\nexport const getPreferencesLoading: MemoizedSelector<\n  StateWithUser,\n  boolean\n> = createSelector(\n  getPreferencesLoaderState,\n  (state: LoaderState<NotificationPreference[]>) => loaderLoadingSelector(state)\n);\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { Order } from '../../../model/order.model';\nimport { StateWithUser, UserState } from '../user-state';\nimport { getUserState } from './feature.selector';\nimport { LoaderState } from '../../../state/utils/loader/loader-state';\nimport { StateUtils } from '../../../state/utils/index';\n\nexport const getOrderState: MemoizedSelector<\n  StateWithUser,\n  LoaderState<Order>\n> = createSelector(getUserState, (state: UserState) => state.order);\n\nexport const getOrderDetails: MemoizedSelector<\n  StateWithUser,\n  Order\n> = createSelector(getOrderState, (state: LoaderState<Order>) =>\n  StateUtils.loaderValueSelector(state)\n);\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { ReturnRequest, ReturnRequestList } from '../../../model/order.model';\nimport { StateWithUser, UserState } from '../user-state';\nimport { getUserState } from './feature.selector';\nimport { LoaderState } from '../../../state/utils/loader/loader-state';\nimport { StateUtils } from '../../../state/utils/index';\n\nexport const getOrderReturnRequestState: MemoizedSelector<\n  StateWithUser,\n  LoaderState<ReturnRequest>\n> = createSelector(getUserState, (state: UserState) => state.orderReturn);\n\nexport const getOrderReturnRequest: MemoizedSelector<\n  StateWithUser,\n  ReturnRequest\n> = createSelector(\n  getOrderReturnRequestState,\n  (state: LoaderState<ReturnRequest>) => StateUtils.loaderValueSelector(state)\n);\n\nexport const getOrderReturnRequestLoading: MemoizedSelector<\n  StateWithUser,\n  boolean\n> = createSelector(\n  getOrderReturnRequestState,\n  (state: LoaderState<ReturnRequest>) => StateUtils.loaderLoadingSelector(state)\n);\n\nexport const getOrderReturnRequestSuccess: MemoizedSelector<\n  StateWithUser,\n  boolean\n> = createSelector(\n  getOrderReturnRequestState,\n  (state: LoaderState<ReturnRequest>) =>\n    StateUtils.loaderSuccessSelector(state) &&\n    !StateUtils.loaderLoadingSelector(state)\n);\n\nexport const getOrderReturnRequestListState: MemoizedSelector<\n  StateWithUser,\n  LoaderState<ReturnRequestList>\n> = createSelector(getUserState, (state: UserState) => state.orderReturnList);\n\nexport const getOrderReturnRequestList: MemoizedSelector<\n  StateWithUser,\n  ReturnRequestList\n> = createSelector(\n  getOrderReturnRequestListState,\n  (state: LoaderState<ReturnRequestList>) =>\n    StateUtils.loaderValueSelector(state)\n);\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { PaymentDetails } from '../../../model/cart.model';\nimport { StateUtils } from '../../../state/utils/index';\nimport { LoaderState } from '../../../state/utils/loader/loader-state';\nimport { StateWithUser, UserState } from '../user-state';\nimport { getUserState } from './feature.selector';\n\nexport const getPaymentMethodsState: MemoizedSelector<\n  StateWithUser,\n  LoaderState<PaymentDetails[]>\n> = createSelector(getUserState, (state: UserState) => state.payments);\n\nexport const getPaymentMethods: MemoizedSelector<\n  StateWithUser,\n  PaymentDetails[]\n> = createSelector(\n  getPaymentMethodsState,\n  (state: LoaderState<PaymentDetails[]>) =>\n    StateUtils.loaderValueSelector(state)\n);\n\nexport const getPaymentMethodsLoading: MemoizedSelector<\n  StateWithUser,\n  boolean\n> = createSelector(\n  getPaymentMethodsState,\n  (state: LoaderState<PaymentDetails[]>) =>\n    StateUtils.loaderLoadingSelector(state)\n);\n\nexport const getPaymentMethodsLoadedSuccess: MemoizedSelector<\n  StateWithUser,\n  boolean\n> = createSelector(\n  getPaymentMethodsState,\n  (state: LoaderState<PaymentDetails[]>) =>\n    StateUtils.loaderSuccessSelector(state) &&\n    !StateUtils.loaderLoadingSelector(state)\n);\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { UserState, StateWithUser } from '../user-state';\nimport { LoaderState } from '../../../state/utils/loader/loader-state';\nimport {\n  loaderValueSelector,\n  loaderLoadingSelector,\n} from '../../../state/utils/loader/loader.selectors';\nimport { getUserState } from './feature.selector';\nimport { ProductInterestSearchResult } from '../../../model/product-interest.model';\n\nexport const getInterestsState: MemoizedSelector<\n  StateWithUser,\n  LoaderState<ProductInterestSearchResult>\n> = createSelector(getUserState, (state: UserState) => state.productInterests);\n\nexport const getInterests: MemoizedSelector<\n  StateWithUser,\n  ProductInterestSearchResult\n> = createSelector(\n  getInterestsState,\n  (state: LoaderState<ProductInterestSearchResult>) =>\n    loaderValueSelector(state)\n);\n\nexport const getInterestsLoading: MemoizedSelector<\n  StateWithUser,\n  boolean\n> = createSelector(\n  getInterestsState,\n  (state: LoaderState<ProductInterestSearchResult>) =>\n    loaderLoadingSelector(state)\n);\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { Region } from '../../../model/address.model';\nimport { StateUtils } from '../../../state/utils/index';\nimport { LoaderState } from '../../../state/utils/loader/loader-state';\nimport { RegionsState, StateWithUser, UserState } from '../user-state';\nimport { getUserState } from './feature.selector';\n\nexport const getRegionsLoaderState: MemoizedSelector<\n  StateWithUser,\n  LoaderState<RegionsState>\n> = createSelector(getUserState, (state: UserState) => state.regions);\n\nexport const getAllRegions: MemoizedSelector<\n  StateWithUser,\n  Region[]\n> = createSelector(\n  getRegionsLoaderState,\n  (state: LoaderState<RegionsState>) => {\n    return StateUtils.loaderValueSelector(state).entities;\n  }\n);\n\nexport const getRegionsDataAndLoading: MemoizedSelector<\n  StateWithUser,\n  {\n    loaded: boolean;\n    loading: boolean;\n    regions: Region[];\n    country: string;\n  }\n> = createSelector(\n  getRegionsLoaderState,\n  (state: LoaderState<RegionsState>) => ({\n    loaded: StateUtils.loaderSuccessSelector(state),\n    loading: StateUtils.loaderLoadingSelector(state),\n    regions: StateUtils.loaderValueSelector(state).entities,\n    country: StateUtils.loaderValueSelector(state).country,\n  })\n);\n\nexport const getRegionsCountry: MemoizedSelector<\n  StateWithUser,\n  string\n> = createSelector(\n  getRegionsLoaderState,\n  (state: LoaderState<RegionsState>) =>\n    StateUtils.loaderValueSelector(state).country\n);\n\nexport const getRegionsLoading: MemoizedSelector<\n  StateWithUser,\n  boolean\n> = createSelector(getRegionsLoaderState, (state: LoaderState<RegionsState>) =>\n  StateUtils.loaderLoadingSelector(state)\n);\n\nexport const getRegionsLoaded: MemoizedSelector<\n  StateWithUser,\n  boolean\n> = createSelector(getRegionsLoaderState, (state: LoaderState<RegionsState>) =>\n  StateUtils.loaderSuccessSelector(state)\n);\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { ReplenishmentOrder } from '../../../model/replenishment-order.model';\nimport { StateUtils } from '../../../state/utils/index';\nimport { LoaderState } from '../../../state/utils/loader/loader-state';\nimport { StateWithUser, UserState } from '../user-state';\nimport { getUserState } from './feature.selector';\n\nexport const getReplenishmentOrderState: MemoizedSelector<\n  StateWithUser,\n  LoaderState<ReplenishmentOrder>\n> = createSelector(\n  getUserState,\n  (state: UserState) => state.replenishmentOrder\n);\n\nexport const getReplenishmentOrderDetailsValue: MemoizedSelector<\n  StateWithUser,\n  ReplenishmentOrder\n> = createSelector(\n  getReplenishmentOrderState,\n  (state: LoaderState<ReplenishmentOrder>) =>\n    StateUtils.loaderValueSelector(state)\n);\n\nexport const getReplenishmentOrderDetailsLoading: MemoizedSelector<\n  StateWithUser,\n  boolean\n> = createSelector(\n  getReplenishmentOrderState,\n  (state: LoaderState<ReplenishmentOrder>) =>\n    StateUtils.loaderLoadingSelector(state)\n);\n\nexport const getReplenishmentOrderDetailsSuccess: MemoizedSelector<\n  StateWithUser,\n  boolean\n> = createSelector(\n  getReplenishmentOrderState,\n  (state: LoaderState<ReplenishmentOrder>) =>\n    StateUtils.loaderSuccessSelector(state)\n);\n\nexport const getReplenishmentOrderDetailsError: MemoizedSelector<\n  StateWithUser,\n  boolean\n> = createSelector(\n  getReplenishmentOrderState,\n  (state: LoaderState<ReplenishmentOrder>) =>\n    StateUtils.loaderErrorSelector(state)\n);\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { StateWithUser, UserState } from '../user-state';\nimport { getUserState } from './feature.selector';\n\nexport const getResetPassword: MemoizedSelector<\n  StateWithUser,\n  boolean\n> = createSelector(getUserState, (state: UserState) => state.resetPassword);\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { Title } from '../../../model/misc.model';\nimport {\n  StateWithUser,\n  TitleEntities,\n  TitlesState,\n  UserState,\n} from '../user-state';\nimport { getUserState } from './feature.selector';\n\nexport const getTitlesState: MemoizedSelector<\n  StateWithUser,\n  TitlesState\n> = createSelector(getUserState, (state: UserState) => state.titles);\n\nexport const getTitlesEntites: MemoizedSelector<\n  StateWithUser,\n  TitleEntities\n> = createSelector(getTitlesState, (state: TitlesState) => state.entities);\n\nexport const getAllTitles: MemoizedSelector<\n  StateWithUser,\n  Title[]\n> = createSelector(getTitlesEntites, (entites) =>\n  Object.keys(entites).map((code) => entites[code])\n);\n\nexport const titleSelectorFactory = (\n  code: string\n): MemoizedSelector<StateWithUser, Title> =>\n  createSelector(getTitlesEntites, (entities) =>\n    Object.keys(entities).length !== 0 ? entities[code] : null\n  );\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { Address } from '../../../model/address.model';\nimport { StateUtils } from '../../../state/utils/index';\nimport { LoaderState } from '../../../state/utils/loader/loader-state';\nimport { StateWithUser, UserState } from '../user-state';\nimport { getUserState } from './feature.selector';\n\nexport const getAddressesLoaderState: MemoizedSelector<\n  StateWithUser,\n  LoaderState<Address[]>\n> = createSelector(getUserState, (state: UserState) => state.addresses);\n\nexport const getAddresses: MemoizedSelector<\n  StateWithUser,\n  Address[]\n> = createSelector(getAddressesLoaderState, (state: LoaderState<Address[]>) =>\n  StateUtils.loaderValueSelector(state)\n);\n\nexport const getAddressesLoading: MemoizedSelector<\n  StateWithUser,\n  boolean\n> = createSelector(getAddressesLoaderState, (state: LoaderState<Address[]>) =>\n  StateUtils.loaderLoadingSelector(state)\n);\n\nexport const getAddressesLoadedSuccess: MemoizedSelector<\n  StateWithUser,\n  boolean\n> = createSelector(\n  getAddressesLoaderState,\n  (state: LoaderState<Address[]>) =>\n    StateUtils.loaderSuccessSelector(state) &&\n    !StateUtils.loaderLoadingSelector(state)\n);\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { ConsentTemplate } from '../../../model/consent.model';\nimport { StateUtils } from '../../../state/utils/index';\nimport { LoaderState } from '../../../state/utils/loader/loader-state';\nimport { StateWithUser, UserState } from '../user-state';\nimport { getUserState } from './feature.selector';\n\nexport const getConsentsState: MemoizedSelector<\n  StateWithUser,\n  LoaderState<ConsentTemplate[]>\n> = createSelector(getUserState, (state: UserState) => state.consents);\n\nexport const getConsentsValue: MemoizedSelector<\n  StateWithUser,\n  ConsentTemplate[]\n> = createSelector(getConsentsState, StateUtils.loaderValueSelector);\n\nexport const getConsentByTemplateId = (\n  templateId: string\n): MemoizedSelector<StateWithUser, ConsentTemplate> =>\n  createSelector(getConsentsValue, (templates) =>\n    templates.find((template) => template.id === templateId)\n  );\n\nexport const getConsentsLoading: MemoizedSelector<\n  StateWithUser,\n  boolean\n> = createSelector(getConsentsState, StateUtils.loaderLoadingSelector);\n\nexport const getConsentsSuccess: MemoizedSelector<\n  StateWithUser,\n  boolean\n> = createSelector(getConsentsState, StateUtils.loaderSuccessSelector);\n\nexport const getConsentsError: MemoizedSelector<\n  StateWithUser,\n  boolean\n> = createSelector(getConsentsState, StateUtils.loaderErrorSelector);\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { CostCenter } from '../../../model/org-unit.model';\nimport { StateUtils } from '../../../state/utils/index';\nimport { LoaderState } from '../../../state/utils/loader/loader-state';\nimport { StateWithUser, UserState } from '../user-state';\nimport { getUserState } from './feature.selector';\n\nexport const getCostCentersState: MemoizedSelector<\n  StateWithUser,\n  LoaderState<CostCenter[]>\n> = createSelector(getUserState, (state: UserState) => state.costCenters);\n\nexport const getCostCenters: MemoizedSelector<\n  StateWithUser,\n  CostCenter[]\n> = createSelector(getCostCentersState, (state: LoaderState<CostCenter[]>) =>\n  StateUtils.loaderValueSelector(state)\n);\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { User } from '../../../model/misc.model';\nimport { StateWithUser, UserDetailsState, UserState } from '../user-state';\nimport { getUserState } from './feature.selector';\n\nexport const getDetailsState: MemoizedSelector<\n  StateWithUser,\n  UserDetailsState\n> = createSelector(getUserState, (state: UserState) => state.account);\n\nexport const getDetails: MemoizedSelector<StateWithUser, User> = createSelector(\n  getDetailsState,\n  (state: UserDetailsState) => state.details\n);\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { OrderHistoryList } from '../../../model/order.model';\nimport { StateUtils } from '../../../state/utils/index';\nimport { LoaderState } from '../../../state/utils/loader/loader-state';\nimport { StateWithUser, UserState } from '../user-state';\nimport { getUserState } from './feature.selector';\n\nexport const getOrdersState: MemoizedSelector<\n  StateWithUser,\n  LoaderState<OrderHistoryList>\n> = createSelector(getUserState, (state: UserState) => state.orders);\n\nexport const getOrdersLoaded: MemoizedSelector<\n  StateWithUser,\n  boolean\n> = createSelector(getOrdersState, (state: LoaderState<OrderHistoryList>) =>\n  StateUtils.loaderSuccessSelector(state)\n);\n\nexport const getOrders: MemoizedSelector<\n  StateWithUser,\n  OrderHistoryList\n> = createSelector(getOrdersState, (state: LoaderState<OrderHistoryList>) =>\n  StateUtils.loaderValueSelector(state)\n);\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { ReplenishmentOrderList } from '../../../model/replenishment-order.model';\nimport { StateUtils } from '../../../state/utils/index';\nimport { StateWithUser, UserState } from '../user-state';\nimport { LoaderState } from '../../../state/utils/loader/loader-state';\nimport { getUserState } from './feature.selector';\n\nexport const getReplenishmentOrdersState: MemoizedSelector<\n  StateWithUser,\n  LoaderState<ReplenishmentOrderList>\n> = createSelector(\n  getUserState,\n  (state: UserState) => state.replenishmentOrders\n);\n\nexport const getReplenishmentOrders: MemoizedSelector<\n  StateWithUser,\n  ReplenishmentOrderList\n> = createSelector(\n  getReplenishmentOrdersState,\n  (state: LoaderState<ReplenishmentOrderList>) =>\n    StateUtils.loaderValueSelector(state)\n);\n\nexport const getReplenishmentOrdersLoading: MemoizedSelector<\n  StateWithUser,\n  boolean\n> = createSelector(\n  getReplenishmentOrdersState,\n  (state: LoaderState<ReplenishmentOrderList>) =>\n    StateUtils.loaderLoadingSelector(state)\n);\n\nexport const getReplenishmentOrdersError: MemoizedSelector<\n  StateWithUser,\n  boolean\n> = createSelector(\n  getReplenishmentOrdersState,\n  (state: LoaderState<ReplenishmentOrderList>) =>\n    StateUtils.loaderErrorSelector(state)\n);\n\nexport const getReplenishmentOrdersSuccess: MemoizedSelector<\n  StateWithUser,\n  boolean\n> = createSelector(\n  getReplenishmentOrdersState,\n  (state: LoaderState<ReplenishmentOrderList>) =>\n    StateUtils.loaderSuccessSelector(state)\n);\n","import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { iif, Observable } from 'rxjs';\nimport { filter, map, switchMap, tap, withLatestFrom } from 'rxjs/operators';\nimport { AuthService } from '../../auth/user-auth/facade/auth.service';\nimport { UserIdService } from '../../auth/user-auth/facade/user-id.service';\nimport { Consent, ConsentTemplate } from '../../model/consent.model';\nimport { StateWithProcess } from '../../process/store/process-state';\nimport {\n  getProcessErrorFactory,\n  getProcessLoadingFactory,\n  getProcessSuccessFactory,\n} from '../../process/store/selectors/process.selectors';\nimport { UserActions } from '../store/actions/index';\nimport { UsersSelectors } from '../store/selectors/index';\nimport {\n  GIVE_CONSENT_PROCESS_ID,\n  StateWithUser,\n  WITHDRAW_CONSENT_PROCESS_ID,\n} from '../store/user-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserConsentService {\n  constructor(\n    protected store: Store<StateWithUser | StateWithProcess<void>>,\n    protected authService: AuthService,\n    protected userIdService: UserIdService\n  ) {}\n\n  /**\n   * Retrieves all consents.\n   */\n  loadConsents(): void {\n    this.userIdService.invokeWithUserId((userId) => {\n      this.store.dispatch(new UserActions.LoadUserConsents(userId));\n    });\n  }\n\n  /**\n   * Returns all consent templates. If `loadIfMissing` parameter is set to `true`, the method triggers the load if consent templates.\n   * @param loadIfMissing is set to `true`, the method will load templates if those are not already present. The default value is `false`.\n   */\n  getConsents(loadIfMissing = false): Observable<ConsentTemplate[]> {\n    return iif(\n      () => loadIfMissing,\n      this.store.pipe(\n        select(UsersSelectors.getConsentsValue),\n        withLatestFrom(\n          this.getConsentsResultLoading(),\n          this.getConsentsResultSuccess()\n        ),\n        filter(([_templates, loading, _success]) => !loading),\n        tap(([templates, _loading, success]) => {\n          if (!templates || templates.length === 0) {\n            // avoid infite loop - if we've already attempted to load templates and we got an empty array as the response\n            if (!success) {\n              this.loadConsents();\n            }\n          }\n        }),\n        filter(([templates, _loading]) => Boolean(templates)),\n        map(([templates, _loading]) => templates)\n      ),\n      this.store.pipe(select(UsersSelectors.getConsentsValue))\n    );\n  }\n\n  /**\n   * Returns the consents loading flag\n   */\n  getConsentsResultLoading(): Observable<boolean> {\n    return this.store.pipe(select(UsersSelectors.getConsentsLoading));\n  }\n\n  /**\n   * Returns the consents success flag\n   */\n  getConsentsResultSuccess(): Observable<boolean> {\n    return this.store.pipe(select(UsersSelectors.getConsentsSuccess));\n  }\n\n  /**\n   * Returns the consents error flag\n   */\n  getConsentsResultError(): Observable<boolean> {\n    return this.store.pipe(select(UsersSelectors.getConsentsError));\n  }\n\n  /**\n   * Resets the processing state for consent retrieval\n   */\n  resetConsentsProcessState(): void {\n    this.store.dispatch(new UserActions.ResetLoadUserConsents());\n  }\n\n  /**\n   * Returns the registered consent for the given template ID.\n   *\n   * As a side-effect, the method will call `getConsents(true)` to load the templates if those are not present.\n   *\n   * @param templateId a template ID by which to filter the registered templates.\n   */\n  getConsent(templateId: string): Observable<Consent> {\n    return this.authService.isUserLoggedIn().pipe(\n      filter(Boolean),\n      tap(() => this.getConsents(true)),\n      switchMap(() =>\n        this.store.pipe(\n          select(UsersSelectors.getConsentByTemplateId(templateId))\n        )\n      ),\n      filter((template) => Boolean(template)),\n      map((template) => template.currentConsent)\n    );\n  }\n\n  /**\n   * Returns `true` if the consent is truthy and if `consentWithdrawnDate` doesn't exist.\n   * Otherwise, `false` is returned.\n   *\n   * @param consent to check\n   */\n  isConsentGiven(consent: Consent): boolean {\n    return (\n      Boolean(consent) &&\n      Boolean(consent.consentGivenDate) &&\n      !Boolean(consent.consentWithdrawnDate)\n    );\n  }\n\n  /**\n   * Returns `true` if the consent is either falsy or if `consentWithdrawnDate` is present.\n   * Otherwise, `false` is returned.\n   *\n   * @param consent to check\n   */\n  isConsentWithdrawn(consent: Consent): boolean {\n    if (Boolean(consent)) {\n      return Boolean(consent.consentWithdrawnDate);\n    }\n    return true;\n  }\n\n  /**\n   * Give consent for specified consent template ID and version.\n   * @param consentTemplateId a template ID for which to give a consent\n   * @param consentTemplateVersion a template version for which to give a consent\n   */\n  giveConsent(consentTemplateId: string, consentTemplateVersion: number): void {\n    this.userIdService.invokeWithUserId((userId) => {\n      this.store.dispatch(\n        new UserActions.GiveUserConsent({\n          userId,\n          consentTemplateId,\n          consentTemplateVersion,\n        })\n      );\n    });\n  }\n\n  /**\n   * Returns the give consent process loading flag\n   */\n  getGiveConsentResultLoading(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessLoadingFactory(GIVE_CONSENT_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns the give consent process success flag\n   */\n  getGiveConsentResultSuccess(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessSuccessFactory(GIVE_CONSENT_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns the give consent process error flag\n   */\n  getGiveConsentResultError(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessErrorFactory(GIVE_CONSENT_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Resents the give consent process flags\n   */\n  resetGiveConsentProcessState(): void {\n    return this.store.dispatch(new UserActions.ResetGiveUserConsentProcess());\n  }\n\n  /**\n   * Withdraw consent for the given `consentCode`\n   * @param consentCode for which to withdraw the consent\n   */\n  withdrawConsent(consentCode: string): void {\n    this.userIdService.invokeWithUserId((userId) => {\n      this.store.dispatch(\n        new UserActions.WithdrawUserConsent({\n          userId,\n          consentCode,\n        })\n      );\n    });\n  }\n\n  /**\n   * Returns the withdraw consent process loading flag\n   */\n  getWithdrawConsentResultLoading(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessLoadingFactory(WITHDRAW_CONSENT_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns the withdraw consent process success flag\n   */\n  getWithdrawConsentResultSuccess(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessSuccessFactory(WITHDRAW_CONSENT_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns the withdraw consent process error flag\n   */\n  getWithdrawConsentResultError(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessErrorFactory(WITHDRAW_CONSENT_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Resets the process flags for withdraw consent\n   */\n  resetWithdrawConsentProcessState(): void {\n    return this.store.dispatch(\n      new UserActions.ResetWithdrawUserConsentProcess()\n    );\n  }\n\n  /**\n   * Filters the provided `templateList`' templates by hiding the template IDs specified in `hideTemplateIds`.\n   * If the `hideTemplateIds` is empty, the provided `templateList` is returned.\n   *\n   * @param templateList a list of consent templates to filter\n   * @param hideTemplateIds template IDs to hide\n   */\n  filterConsentTemplates(\n    templateList: ConsentTemplate[],\n    hideTemplateIds: string[] = []\n  ): ConsentTemplate[] {\n    if (hideTemplateIds.length === 0) {\n      return templateList;\n    }\n\n    const updatedTemplateList: ConsentTemplate[] = [];\n    for (const template of templateList) {\n      const show = !hideTemplateIds.includes(template.id);\n      if (show) {\n        updatedTemplateList.push(template);\n      }\n    }\n\n    return updatedTemplateList;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AnonymousConsent, ConsentTemplate } from '../../model/consent.model';\nimport { AnonymousConsentTemplatesAdapter } from './anonymous-consent-templates.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AnonymousConsentTemplatesConnector {\n  constructor(protected adapter: AnonymousConsentTemplatesAdapter) {}\n\n  loadAnonymousConsentTemplates(): Observable<ConsentTemplate[]> {\n    return this.adapter.loadAnonymousConsentTemplates();\n  }\n\n  loadAnonymousConsents(): Observable<AnonymousConsent[]> {\n    return this.adapter.loadAnonymousConsents();\n  }\n}\n","import { Injectable, isDevMode } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { EMPTY, Observable, of } from 'rxjs';\nimport {\n  catchError,\n  concatMap,\n  filter,\n  map,\n  mergeMap,\n  switchMap,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { AuthActions, AuthService, UserIdService } from '../../../auth/index';\nimport { UserConsentService } from '../../../user/facade/user-consent.service';\nimport { UserActions } from '../../../user/store/actions/index';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { AnonymousConsentsConfig } from '../../config/anonymous-consents-config';\nimport { AnonymousConsentTemplatesConnector } from '../../connectors/anonymous-consent-templates.connector';\nimport { AnonymousConsentsService } from '../../facade/index';\nimport { AnonymousConsentsActions } from '../actions/index';\n\n@Injectable()\nexport class AnonymousConsentsEffects {\n  @Effect()\n  checkConsentVersions$: Observable<\n    | AnonymousConsentsActions.LoadAnonymousConsentTemplates\n    | AnonymousConsentsActions.LoadAnonymousConsentTemplatesFail\n    | Observable<never>\n  > = this.actions$.pipe(\n    ofType(AnonymousConsentsActions.ANONYMOUS_CONSENT_CHECK_UPDATED_VERSIONS),\n    withLatestFrom(this.anonymousConsentService.getConsents()),\n    concatMap(([_, currentConsents]) => {\n      return this.anonymousConsentTemplatesConnector\n        .loadAnonymousConsents()\n        .pipe(\n          map((newConsents) => {\n            if (!newConsents) {\n              if (isDevMode()) {\n                console.warn(\n                  'No consents were loaded. Please check the Spartacus documentation as this could be a back-end configuration issue.'\n                );\n              }\n              return false;\n            }\n\n            const currentConsentVersions = currentConsents.map(\n              (consent) => consent.templateVersion\n            );\n            const newConsentVersions = newConsents.map(\n              (consent) => consent.templateVersion\n            );\n\n            return this.detectUpdatedVersion(\n              currentConsentVersions,\n              newConsentVersions\n            );\n          }),\n          switchMap((updated) =>\n            updated\n              ? of(new AnonymousConsentsActions.LoadAnonymousConsentTemplates())\n              : EMPTY\n          ),\n          catchError((error) =>\n            of(\n              new AnonymousConsentsActions.LoadAnonymousConsentTemplatesFail(\n                normalizeHttpError(error)\n              )\n            )\n          )\n        );\n    })\n  );\n\n  @Effect()\n  loadAnonymousConsentTemplates$: Observable<\n    AnonymousConsentsActions.AnonymousConsentsActions\n  > = this.actions$.pipe(\n    ofType(AnonymousConsentsActions.LOAD_ANONYMOUS_CONSENT_TEMPLATES),\n    withLatestFrom(this.anonymousConsentService.getTemplates()),\n    concatMap(([_, currentConsentTemplates]) =>\n      this.anonymousConsentTemplatesConnector\n        .loadAnonymousConsentTemplates()\n        .pipe(\n          mergeMap((newConsentTemplates) => {\n            let updated = false;\n            if (\n              currentConsentTemplates &&\n              currentConsentTemplates.length !== 0\n            ) {\n              updated = this.anonymousConsentService.detectUpdatedTemplates(\n                currentConsentTemplates,\n                newConsentTemplates\n              );\n            }\n\n            return [\n              new AnonymousConsentsActions.LoadAnonymousConsentTemplatesSuccess(\n                newConsentTemplates\n              ),\n              new AnonymousConsentsActions.ToggleAnonymousConsentTemplatesUpdated(\n                updated\n              ),\n            ];\n          }),\n          catchError((error) =>\n            of(\n              new AnonymousConsentsActions.LoadAnonymousConsentTemplatesFail(\n                normalizeHttpError(error)\n              )\n            )\n          )\n        )\n    )\n  );\n\n  // TODO(#9416): This won't work with flow different than `Resource Owner Password Flow` which involves redirect (maybe in popup in will work)\n  @Effect()\n  transferAnonymousConsentsToUser$: Observable<\n    UserActions.TransferAnonymousConsent | Observable<never>\n  > = this.actions$.pipe(\n    ofType<AuthActions.Login>(AuthActions.LOGIN),\n    filter(() => Boolean(this.anonymousConsentsConfig.anonymousConsents)),\n    withLatestFrom(\n      this.actions$.pipe(\n        ofType<UserActions.RegisterUserSuccess>(\n          UserActions.REGISTER_USER_SUCCESS\n        )\n      )\n    ),\n    filter(([, registerAction]) => Boolean(registerAction)),\n    switchMap(() =>\n      this.anonymousConsentService.getConsents().pipe(\n        withLatestFrom(\n          this.userIdService.getUserId(),\n          this.anonymousConsentService.getTemplates(),\n          this.authService.isUserLoggedIn()\n        ),\n        filter(([, , , loggedIn]) => loggedIn),\n        concatMap(([consents, userId, templates, _loggedIn]) => {\n          const actions: UserActions.TransferAnonymousConsent[] = [];\n          for (const consent of consents) {\n            if (\n              this.anonymousConsentService.isConsentGiven(consent) &&\n              (!this.anonymousConsentsConfig.anonymousConsents\n                .requiredConsents ||\n                !this.anonymousConsentsConfig.anonymousConsents.requiredConsents.includes(\n                  consent.templateCode\n                ))\n            ) {\n              for (const template of templates) {\n                if (template.id === consent.templateCode) {\n                  actions.push(\n                    new UserActions.TransferAnonymousConsent({\n                      userId,\n                      consentTemplateId: template.id,\n                      consentTemplateVersion: template.version,\n                    })\n                  );\n                  break;\n                }\n              }\n            }\n          }\n          if (actions.length > 0) {\n            return actions;\n          }\n          return EMPTY;\n        })\n      )\n    )\n  );\n\n  @Effect()\n  giveRequiredConsentsToUser$: Observable<\n    UserActions.GiveUserConsent | Observable<never>\n  > = this.actions$.pipe(\n    ofType<AuthActions.Login>(AuthActions.LOGIN),\n    filter(\n      (action) =>\n        Boolean(this.anonymousConsentsConfig.anonymousConsents) &&\n        Boolean(\n          this.anonymousConsentsConfig.anonymousConsents.requiredConsents\n        ) &&\n        Boolean(action)\n    ),\n    concatMap(() =>\n      this.userConsentService.getConsentsResultSuccess().pipe(\n        withLatestFrom(\n          this.userIdService.getUserId(),\n          this.userConsentService.getConsents(),\n          this.authService.isUserLoggedIn()\n        ),\n        filter(([, , , loggedIn]) => loggedIn),\n        tap(([loaded, _userId, _templates, _loggedIn]) => {\n          if (!loaded) {\n            this.userConsentService.loadConsents();\n          }\n        }),\n        map(([_loaded, userId, templates, _loggedIn]) => {\n          return { userId, templates };\n        }),\n        concatMap(({ userId, templates }) => {\n          const actions: UserActions.GiveUserConsent[] = [];\n          for (const template of templates) {\n            if (\n              this.userConsentService.isConsentWithdrawn(\n                template.currentConsent\n              ) &&\n              this.anonymousConsentsConfig.anonymousConsents.requiredConsents.includes(\n                template.id\n              )\n            ) {\n              actions.push(\n                new UserActions.GiveUserConsent({\n                  userId,\n                  consentTemplateId: template.id,\n                  consentTemplateVersion: template.version,\n                })\n              );\n            }\n          }\n          if (actions.length > 0) {\n            return actions;\n          }\n          return EMPTY;\n        })\n      )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private anonymousConsentTemplatesConnector: AnonymousConsentTemplatesConnector,\n    private authService: AuthService,\n    private anonymousConsentsConfig: AnonymousConsentsConfig,\n    private anonymousConsentService: AnonymousConsentsService,\n    private userConsentService: UserConsentService,\n    private userIdService: UserIdService\n  ) {}\n\n  /**\n   * Compares the given versions and determines if there's a mismatch,\n   * in which case `true` is returned.\n   *\n   * @param currentVersions versions of the current consents\n   * @param newVersions versions of the new consents\n   */\n  private detectUpdatedVersion(\n    currentVersions: number[],\n    newVersions: number[]\n  ): boolean {\n    if (currentVersions.length !== newVersions.length) {\n      return true;\n    }\n\n    for (let i = 0; i < newVersions.length; i++) {\n      if (currentVersions[i] !== newVersions[i]) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\n","import { AnonymousConsentsEffects } from './anonymous-consents.effect';\n\nexport const effects: any[] = [AnonymousConsentsEffects];\n\nexport * from './anonymous-consents.effect';\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Country, CountryType, Region } from '../../model/address.model';\nimport { BaseSite, Currency, Language } from '../../model/misc.model';\nimport { SiteAdapter } from './site.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SiteConnector {\n  constructor(protected adapter: SiteAdapter) {}\n\n  getLanguages(): Observable<Language[]> {\n    return this.adapter.loadLanguages();\n  }\n\n  getCurrencies(): Observable<Currency[]> {\n    return this.adapter.loadCurrencies();\n  }\n\n  getCountries(type?: CountryType): Observable<Country[]> {\n    return this.adapter.loadCountries(type);\n  }\n\n  getRegions(countryIsoCode: string): Observable<Region[]> {\n    return this.adapter.loadRegions(countryIsoCode);\n  }\n\n  getBaseSite(siteUid?: string): Observable<BaseSite> {\n    return this.adapter.loadBaseSite(siteUid);\n  }\n\n  getBaseSites(): Observable<BaseSite[]> {\n    return this.adapter.loadBaseSites();\n  }\n}\n","import { Provider, Type } from '@angular/core';\nimport { BaseSiteService } from '../facade/base-site.service';\nimport { CurrencyService } from '../facade/currency.service';\nimport { LanguageService } from '../facade/language.service';\nimport { SiteContext } from '../facade/site-context.interface';\nimport {\n  BASE_SITE_CONTEXT_ID,\n  CURRENCY_CONTEXT_ID,\n  LANGUAGE_CONTEXT_ID,\n} from './context-ids';\n\nexport abstract class ContextServiceMap {\n  [context: string]: Type<SiteContext<any>>;\n}\n\nexport function serviceMapFactory() {\n  return {\n    [LANGUAGE_CONTEXT_ID]: LanguageService,\n    [CURRENCY_CONTEXT_ID]: CurrencyService,\n    [BASE_SITE_CONTEXT_ID]: BaseSiteService,\n  };\n}\n\nexport const contextServiceMapProvider: Provider = {\n  provide: ContextServiceMap,\n  useFactory: serviceMapFactory,\n};\n","import { SiteContextConfig } from './site-context-config';\nimport { getContextParameterDefault } from './context-config-utils';\nimport { BASE_SITE_CONTEXT_ID } from '../providers/context-ids';\n\nexport function baseSiteConfigValidator(config: SiteContextConfig) {\n  if (getContextParameterDefault(config, BASE_SITE_CONTEXT_ID) === undefined) {\n    return 'Please configure context.parameters.baseSite before using storefront library!';\n  }\n}\n","import { SiteContextConfig } from './site-context-config';\nimport {\n  CURRENCY_CONTEXT_ID,\n  LANGUAGE_CONTEXT_ID,\n} from '../providers/context-ids';\n\nexport function defaultSiteContextConfigFactory(): SiteContextConfig {\n  return {\n    context: {\n      [LANGUAGE_CONTEXT_ID]: [\n        'en',\n        'de',\n        'ja',\n        'zh',\n        'ru',\n        'fr',\n        'tr',\n        'it',\n        'es',\n        'uk',\n        'pl',\n        'nl',\n        'hi',\n        'ar',\n        'pt',\n        'bn',\n        'pa',\n      ],\n      [CURRENCY_CONTEXT_ID]: [\n        'USD',\n        'EUR',\n        'JPY',\n        'GBP',\n        'AUD',\n        'CAD',\n        'CHF',\n        'CNY',\n        'SEK',\n        'NZD',\n        'MXN',\n        'SGD',\n        'HKD',\n        'NOK',\n        'KRW',\n        'TRY',\n        'RUB',\n        'INR',\n        'BRL',\n        'ZAR',\n      ],\n    },\n  };\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, filter } from 'rxjs/operators';\nimport {\n  getContextParameterDefault,\n  getContextParameterValues,\n} from '../config/context-config-utils';\nimport { SiteContextConfig } from '../config/site-context-config';\nimport { SiteContext } from '../facade/site-context.interface';\nimport { ContextServiceMap } from '../providers/context-service-map';\n\n@Injectable()\nexport class SiteContextParamsService {\n  constructor(\n    private config: SiteContextConfig,\n    private injector: Injector,\n    private serviceMap: ContextServiceMap\n  ) {}\n\n  getContextParameters(): string[] {\n    if (this.config.context) {\n      return Object.keys(this.config.context).filter(\n        (param) => param !== 'urlParameters'\n      );\n    }\n    return [];\n  }\n\n  getUrlEncodingParameters(): string[] {\n    return (this.config.context && this.config.context.urlParameters) || [];\n  }\n\n  getParamValues(param: string): string[] {\n    return getContextParameterValues(this.config, param);\n  }\n\n  getParamDefaultValue(param: string): string {\n    return getContextParameterDefault(this.config, param);\n  }\n\n  getSiteContextService(param: string): SiteContext<any> {\n    if (this.serviceMap[param]) {\n      return this.injector.get<SiteContext<any>>(this.serviceMap[param], null);\n    }\n  }\n\n  getValue(param: string): string {\n    let value: string;\n\n    const service = this.getSiteContextService(param);\n    if (service) {\n      service\n        .getActive()\n        .subscribe((val) => (value = val))\n        .unsubscribe();\n    }\n\n    return value !== undefined ? value : this.getParamDefaultValue(param);\n  }\n\n  setValue(param: string, value: string) {\n    const service = this.getSiteContextService(param);\n    if (service) {\n      service.setActive(value);\n    }\n  }\n\n  /**\n   * Get active values for all provided context parameters\n   *\n   * @param params Context parameters\n   *\n   * @returns Observable emitting array of all passed active context values\n   */\n  getValues(params: string[]): Observable<Array<string>> {\n    if (params.length === 0) {\n      return of([]);\n    }\n\n    return combineLatest(\n      params.map((param) =>\n        this.getSiteContextService(param)\n          .getActive()\n          .pipe(distinctUntilChanged())\n      )\n    ).pipe(filter((value) => value.every((param) => !!param)));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DefaultUrlSerializer, UrlTree } from '@angular/router';\nimport { SiteContextParamsService } from './site-context-params.service';\n\nexport interface ParamValuesMap {\n  [name: string]: string;\n}\n\nexport interface UrlTreeWithSiteContext extends UrlTree {\n  siteContext?: ParamValuesMap;\n}\n\nconst UrlSplit = /(^[^#?]*)(.*)/; // used to split url into path and query/fragment parts\n\n@Injectable()\nexport class SiteContextUrlSerializer extends DefaultUrlSerializer {\n  private get urlEncodingParameters(): string[] {\n    return this.siteContextParams.getUrlEncodingParameters();\n  }\n\n  get hasContextInRoutes() {\n    return this.urlEncodingParameters.length > 0;\n  }\n\n  constructor(private siteContextParams: SiteContextParamsService) {\n    super();\n  }\n\n  parse(url: string): UrlTreeWithSiteContext {\n    if (this.hasContextInRoutes) {\n      const urlWithParams = this.urlExtractContextParameters(url);\n      const parsed = super.parse(urlWithParams.url) as UrlTreeWithSiteContext;\n      this.urlTreeIncludeContextParameters(parsed, urlWithParams.params);\n      return parsed;\n    } else {\n      return super.parse(url);\n    }\n  }\n\n  urlExtractContextParameters(\n    url: string\n  ): { url: string; params: ParamValuesMap } {\n    const [, urlPart, queryPart] = url.match(UrlSplit);\n\n    const segments = urlPart.split('/');\n    if (segments[0] === '') {\n      segments.shift();\n    }\n    const params = {};\n\n    let paramId = 0;\n    let segmentId = 0;\n    while (\n      paramId < this.urlEncodingParameters.length &&\n      segmentId < segments.length\n    ) {\n      const paramName = this.urlEncodingParameters[paramId];\n      const paramValues = this.siteContextParams.getParamValues(paramName);\n\n      if (paramValues.includes(segments[segmentId])) {\n        params[paramName] = segments[segmentId];\n        segmentId++;\n      }\n      paramId++;\n    }\n\n    url = segments.slice(Object.keys(params).length).join('/') + queryPart;\n    return { url, params };\n  }\n\n  private urlTreeIncludeContextParameters(\n    urlTree: UrlTreeWithSiteContext,\n    params: ParamValuesMap\n  ) {\n    urlTree.siteContext = params;\n  }\n\n  serialize(tree: UrlTreeWithSiteContext): string {\n    const params = this.urlTreeExtractContextParameters(tree);\n    const url = super.serialize(tree);\n    const serialized = this.urlIncludeContextParameters(url, params);\n    return serialized;\n  }\n\n  urlTreeExtractContextParameters(\n    urlTree: UrlTreeWithSiteContext\n  ): ParamValuesMap {\n    return urlTree.siteContext ? urlTree.siteContext : {};\n  }\n\n  private urlIncludeContextParameters(url: string, params: ParamValuesMap) {\n    const contextRoutePart = this.urlEncodingParameters\n      .map((param) => {\n        return params[param]\n          ? params[param]\n          : this.siteContextParams.getValue(param);\n      })\n      .join('/');\n\n    return contextRoutePart + url;\n  }\n}\n","import { Location } from '@angular/common';\nimport { Injectable, Injector, OnDestroy } from '@angular/core';\nimport {\n  NavigationCancel,\n  NavigationEnd,\n  NavigationError,\n  NavigationStart,\n  Router,\n  RouterEvent,\n} from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { SiteContextParamsService } from './site-context-params.service';\nimport { SiteContextUrlSerializer } from './site-context-url-serializer';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SiteContextRoutesHandler implements OnDestroy {\n  constructor(\n    private siteContextParams: SiteContextParamsService,\n    private serializer: SiteContextUrlSerializer,\n    private injector: Injector\n  ) {}\n\n  private subscription = new Subscription();\n\n  private contextValues: {\n    [param: string]: string;\n  } = {};\n\n  private router: Router;\n  private location: Location;\n\n  /**\n   * Tells whether there is a pending navigation at the moment, so we can avoid an infinite loop caused by the cyclic dependency:\n   * - `subscribeChanges` method triggers a navigation on update of site context state\n   * - `subscribeRouting` method updates the site context state on navigation\n   */\n  private isNavigating = false;\n\n  /**\n   * Initializes the two-way synchronization between the site context state and the URL.\n   */\n  init() {\n    this.router = this.injector.get<Router>(Router);\n\n    this.location = this.injector.get<Location>(Location);\n    const routingParams = this.siteContextParams.getUrlEncodingParameters();\n\n    if (routingParams.length) {\n      this.setContextParamsFromRoute(this.location.path(true));\n      this.subscribeChanges(routingParams);\n      this.subscribeRouting();\n    }\n  }\n\n  /**\n   * After each change of the site context state, it modifies the current URL in place.\n   * But it happens only for the parameters configured to be persisted in the URL.\n   */\n  private subscribeChanges(params: string[]) {\n    params.forEach((param) => {\n      const service = this.siteContextParams.getSiteContextService(param);\n      if (service) {\n        this.subscription.add(\n          service.getActive().subscribe((value) => {\n            if (\n              !this.isNavigating &&\n              this.contextValues[param] &&\n              this.contextValues[param] !== value\n            ) {\n              const parsed = this.router.parseUrl(this.router.url);\n              const serialized = this.router.serializeUrl(parsed);\n              this.location.replaceState(serialized);\n            }\n            this.contextValues[param] = value;\n          })\n        );\n      }\n    });\n  }\n\n  /**\n   * After each Angular NavigationStart event it updates the site context state based on\n   * site context params encoded in the anticipated URL.\n   */\n  private subscribeRouting() {\n    this.subscription.add(\n      this.router.events\n        .pipe(\n          filter(\n            (event) =>\n              event instanceof NavigationStart ||\n              event instanceof NavigationEnd ||\n              event instanceof NavigationError ||\n              event instanceof NavigationCancel\n          )\n        )\n        .subscribe((event: RouterEvent) => {\n          this.isNavigating = event instanceof NavigationStart;\n          if (this.isNavigating) {\n            this.setContextParamsFromRoute(event.url);\n          }\n        })\n    );\n  }\n\n  /**\n   * Updates the site context state based on the context params encoded in the given URL\n   *\n   * @param url URL with encoded context params\n   */\n  private setContextParamsFromRoute(url: string) {\n    const { params } = this.serializer.urlExtractContextParameters(url);\n    Object.keys(params).forEach((param) =>\n      this.siteContextParams.setValue(param, params[param])\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import { APP_INITIALIZER, Provider } from '@angular/core';\nimport { ConfigInitializerService } from '../../config/config-initializer/config-initializer.service';\nimport { BaseSiteService } from '../facade/base-site.service';\nimport { CurrencyService } from '../facade/currency.service';\nimport { LanguageService } from '../facade/language.service';\nimport { SiteContextRoutesHandler } from '../services/site-context-routes-handler';\n\nexport function initializeContext(\n  baseSiteService: BaseSiteService,\n  langService: LanguageService,\n  currService: CurrencyService,\n  configInit: ConfigInitializerService,\n  siteContextRoutesHandler: SiteContextRoutesHandler\n) {\n  return async () => {\n    await configInit.getStableConfig('context');\n    siteContextRoutesHandler.init();\n    baseSiteService.initialize();\n    langService.initialize();\n    currService.initialize();\n  };\n}\n\nexport const contextServiceProviders: Provider[] = [\n  BaseSiteService,\n  LanguageService,\n  CurrencyService,\n  {\n    provide: APP_INITIALIZER,\n    useFactory: initializeContext,\n    deps: [\n      BaseSiteService,\n      LanguageService,\n      CurrencyService,\n      ConfigInitializerService,\n      SiteContextRoutesHandler,\n    ],\n    multi: true,\n  },\n];\n","import { Provider } from '@angular/core';\nimport { UrlSerializer } from '@angular/router';\nimport { SiteContextParamsService } from '../services/site-context-params.service';\nimport { SiteContextUrlSerializer } from '../services/site-context-url-serializer';\n\n// functions below should not be exposed in public API:\n\nexport const siteContextParamsProviders: Provider[] = [\n  SiteContextParamsService,\n  SiteContextUrlSerializer,\n  { provide: UrlSerializer, useExisting: SiteContextUrlSerializer },\n];\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, exhaustMap, map } from 'rxjs/operators';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { SiteConnector } from '../../connectors/site.connector';\nimport { SiteContextActions } from '../actions/index';\n\n@Injectable()\nexport class BaseSiteEffects {\n  @Effect()\n  loadBaseSite$: Observable<\n    SiteContextActions.LoadBaseSiteSuccess | SiteContextActions.LoadBaseSiteFail\n  > = this.actions$.pipe(\n    ofType(SiteContextActions.LOAD_BASE_SITE),\n    exhaustMap(() => {\n      return this.siteConnector.getBaseSite().pipe(\n        map((baseSite) => new SiteContextActions.LoadBaseSiteSuccess(baseSite)),\n        catchError((error) =>\n          of(new SiteContextActions.LoadBaseSiteFail(normalizeHttpError(error)))\n        )\n      );\n    })\n  );\n\n  @Effect()\n  loadBaseSites$: Observable<\n    | SiteContextActions.LoadBaseSitesSuccess\n    | SiteContextActions.LoadBaseSitesFail\n  > = this.actions$.pipe(\n    ofType(SiteContextActions.LOAD_BASE_SITES),\n    exhaustMap(() => {\n      return this.siteConnector.getBaseSites().pipe(\n        map(\n          (baseSites) => new SiteContextActions.LoadBaseSitesSuccess(baseSites)\n        ),\n        catchError((error) =>\n          of(\n            new SiteContextActions.LoadBaseSitesFail(normalizeHttpError(error))\n          )\n        )\n      );\n    })\n  );\n\n  constructor(\n    private actions$: Actions,\n    private siteConnector: SiteConnector\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { NEVER, Observable, of } from 'rxjs';\nimport {\n  bufferCount,\n  catchError,\n  exhaustMap,\n  filter,\n  map,\n  switchMapTo,\n  tap,\n} from 'rxjs/operators';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { WindowRef } from '../../../window/window-ref';\nimport { SiteConnector } from '../../connectors/site.connector';\nimport { SiteContextActions } from '../actions/index';\nimport { getActiveCurrency } from '../selectors/currencies.selectors';\nimport { StateWithSiteContext } from '../state';\n\n@Injectable()\nexport class CurrenciesEffects {\n  @Effect()\n  loadCurrencies$: Observable<\n    | SiteContextActions.LoadCurrenciesSuccess\n    | SiteContextActions.LoadCurrenciesFail\n  > = this.actions$.pipe(\n    ofType(SiteContextActions.LOAD_CURRENCIES),\n    exhaustMap(() => {\n      return this.siteConnector.getCurrencies().pipe(\n        map(\n          (currencies) =>\n            new SiteContextActions.LoadCurrenciesSuccess(currencies)\n        ),\n        catchError((error) =>\n          of(\n            new SiteContextActions.LoadCurrenciesFail(normalizeHttpError(error))\n          )\n        )\n      );\n    })\n  );\n\n  @Effect()\n  persist$: Observable<void> = this.actions$.pipe(\n    ofType(SiteContextActions.SET_ACTIVE_CURRENCY),\n    tap((action: SiteContextActions.SetActiveCurrency) => {\n      if (this.winRef.sessionStorage) {\n        this.winRef.sessionStorage.setItem('currency', action.payload);\n      }\n    }),\n    switchMapTo(NEVER)\n  );\n\n  @Effect()\n  activateCurrency$: Observable<\n    SiteContextActions.CurrencyChange\n  > = this.state.select(getActiveCurrency).pipe(\n    bufferCount(2, 1),\n\n    // avoid dispatching `change` action when we're just setting the initial value:\n    filter(([previous]) => !!previous),\n    map(\n      ([previous, current]) =>\n        new SiteContextActions.CurrencyChange({ previous, current })\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private siteConnector: SiteConnector,\n    private winRef: WindowRef,\n    private state: Store<StateWithSiteContext>\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { NEVER, Observable, of } from 'rxjs';\nimport {\n  bufferCount,\n  catchError,\n  exhaustMap,\n  filter,\n  map,\n  switchMapTo,\n  tap,\n} from 'rxjs/operators';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { WindowRef } from '../../../window/window-ref';\nimport { SiteConnector } from '../../connectors/site.connector';\nimport { SiteContextActions } from '../actions/index';\nimport { getActiveLanguage } from '../selectors/languages.selectors';\nimport { StateWithSiteContext } from '../state';\n\n@Injectable()\nexport class LanguagesEffects {\n  @Effect()\n  loadLanguages$: Observable<\n    | SiteContextActions.LoadLanguagesSuccess\n    | SiteContextActions.LoadLanguagesFail\n  > = this.actions$.pipe(\n    ofType(SiteContextActions.LOAD_LANGUAGES),\n    exhaustMap(() => {\n      return this.siteConnector.getLanguages().pipe(\n        map(\n          (languages) => new SiteContextActions.LoadLanguagesSuccess(languages)\n        ),\n        catchError((error) =>\n          of(\n            new SiteContextActions.LoadLanguagesFail(normalizeHttpError(error))\n          )\n        )\n      );\n    })\n  );\n\n  @Effect()\n  persist$: Observable<void> = this.actions$.pipe(\n    ofType(SiteContextActions.SET_ACTIVE_LANGUAGE),\n    tap((action: SiteContextActions.SetActiveLanguage) => {\n      if (this.winRef.sessionStorage) {\n        this.winRef.sessionStorage.setItem('language', action.payload);\n      }\n    }),\n    switchMapTo(NEVER)\n  );\n\n  @Effect()\n  activateLanguage$: Observable<\n    SiteContextActions.LanguageChange\n  > = this.state.select(getActiveLanguage).pipe(\n    bufferCount(2, 1),\n\n    // avoid dispatching `change` action when we're just setting the initial value:\n    filter(([previous]) => !!previous),\n    map(\n      ([previous, current]) =>\n        new SiteContextActions.LanguageChange({ previous, current })\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private siteConnector: SiteConnector,\n    private winRef: WindowRef,\n    private state: Store<StateWithSiteContext>\n  ) {}\n}\n","import { BaseSiteEffects } from './base-site.effect';\nimport { CurrenciesEffects } from './currencies.effect';\nimport { LanguagesEffects } from './languages.effect';\n\nexport const effects: any[] = [\n  LanguagesEffects,\n  CurrenciesEffects,\n  BaseSiteEffects,\n];\n\nexport * from './base-site.effect';\nexport * from './currencies.effect';\nexport * from './languages.effect';\n","import { BaseSite } from '../../../model/misc.model';\nimport { SiteContextActions } from '../actions/index';\nimport { BaseSiteState } from '../state';\n\nexport const initialState: BaseSiteState = {\n  entities: null,\n  details: {},\n  activeSite: '',\n};\n\nexport function reducer(\n  state = initialState,\n  action: SiteContextActions.BaseSiteAction\n): BaseSiteState {\n  switch (action.type) {\n    case SiteContextActions.LOAD_BASE_SITE_SUCCESS: {\n      return {\n        ...state,\n        details: action.payload,\n      };\n    }\n\n    case SiteContextActions.SET_ACTIVE_BASE_SITE: {\n      // if active base site is updated,\n      // the active base site details data should also be updated\n      let details = {};\n      if (state.entities) {\n        details = state.entities[action.payload];\n      }\n      return {\n        ...state,\n        details,\n        activeSite: action.payload,\n      };\n    }\n\n    case SiteContextActions.LOAD_BASE_SITES_SUCCESS: {\n      const sites: BaseSite[] = action.payload;\n      const entities = sites.reduce(\n        (siteEntities: { [uid: string]: BaseSite }, site: BaseSite) => {\n          return {\n            ...siteEntities,\n            [site.uid]: site,\n          };\n        },\n        {\n          ...state.entities,\n        }\n      );\n      // after base sites entities are populated,\n      // the active base site details data is also populated\n      const details = entities[state.activeSite];\n\n      return {\n        ...state,\n        details,\n        entities,\n      };\n    }\n  }\n\n  return state;\n}\n","import { Currency } from '../../../model/misc.model';\nimport { SiteContextActions } from '../actions/index';\nimport { CurrenciesState } from '../state';\n\nexport const initialState: CurrenciesState = {\n  entities: null,\n  activeCurrency: null,\n};\n\nexport function reducer(\n  state = initialState,\n  action: SiteContextActions.CurrenciesAction\n): CurrenciesState {\n  switch (action.type) {\n    case SiteContextActions.LOAD_CURRENCIES_SUCCESS: {\n      const currencies: Currency[] = action.payload;\n      const entities = currencies.reduce(\n        (currEntities: { [isocode: string]: Currency }, currency: Currency) => {\n          return {\n            ...currEntities,\n            [currency.isocode]: currency,\n          };\n        },\n        {\n          ...state.entities,\n        }\n      );\n\n      return {\n        ...state,\n        entities,\n      };\n    }\n\n    case SiteContextActions.SET_ACTIVE_CURRENCY: {\n      const isocode: string = action.payload;\n\n      return {\n        ...state,\n        activeCurrency: isocode,\n      };\n    }\n  }\n\n  return state;\n}\n","import { Language } from '../../../model/misc.model';\nimport { SiteContextActions } from '../actions/index';\nimport { LanguagesState } from '../state';\n\nexport const initialState: LanguagesState = {\n  entities: null,\n  activeLanguage: null,\n};\n\nexport function reducer(\n  state = initialState,\n  action: SiteContextActions.LanguagesAction\n): LanguagesState {\n  switch (action.type) {\n    case SiteContextActions.LOAD_LANGUAGES_SUCCESS: {\n      const languages: Language[] = action.payload;\n      const entities = languages.reduce(\n        (langEntities: { [isocode: string]: Language }, language: Language) => {\n          return {\n            ...langEntities,\n            [language.isocode]: language,\n          };\n        },\n        {\n          ...state.entities,\n        }\n      );\n\n      return {\n        ...state,\n        entities,\n      };\n    }\n\n    case SiteContextActions.SET_ACTIVE_LANGUAGE: {\n      const isocode = action.payload;\n\n      return {\n        ...state,\n        activeLanguage: isocode,\n      };\n    }\n  }\n  return state;\n}\n","import { InjectionToken, Provider } from '@angular/core';\nimport { ActionReducerMap } from '@ngrx/store';\nimport { SiteContextState } from '../state';\nimport * as fromBaseSite from './base-site.reducer';\nimport * as fromCurrencies from './currencies.reducer';\nimport * as fromLanguages from './languages.reducer';\n\nexport function getReducers(): ActionReducerMap<SiteContextState> {\n  return {\n    languages: fromLanguages.reducer,\n    currencies: fromCurrencies.reducer,\n    baseSite: fromBaseSite.reducer,\n  };\n}\n\nexport const reducerToken: InjectionToken<ActionReducerMap<\n  SiteContextState\n>> = new InjectionToken<ActionReducerMap<SiteContextState>>(\n  'SiteContextReducers'\n);\n\nexport const reducerProvider: Provider = {\n  provide: reducerToken,\n  useFactory: getReducers,\n};\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport {\n  StateConfig,\n  StateTransferType,\n} from '../../state/config/state-config';\nimport { effects } from './effects/index';\nimport { reducerProvider, reducerToken } from './reducers/index';\nimport { SITE_CONTEXT_FEATURE } from './state';\nimport { provideDefaultConfigFactory } from '../../config/config-providers';\n\nexport function siteContextStoreConfigFactory(): StateConfig {\n  // if we want to reuse SITE_CONTEXT_FEATURE const in config, we have to use factory instead of plain object\n  const config: StateConfig = {\n    state: {\n      ssrTransfer: {\n        keys: { [SITE_CONTEXT_FEATURE]: StateTransferType.TRANSFER_STATE },\n      },\n    },\n  };\n  return config;\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forFeature(SITE_CONTEXT_FEATURE, reducerToken),\n    EffectsModule.forFeature(effects),\n  ],\n  providers: [\n    provideDefaultConfigFactory(siteContextStoreConfigFactory),\n    reducerProvider,\n  ],\n})\nexport class SiteContextStoreModule {}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { provideConfigValidator } from '../config/config-validator/config-validator';\nimport { StateModule } from '../state/index';\nimport { baseSiteConfigValidator } from './config/base-site-config-validator';\nimport { defaultSiteContextConfigFactory } from './config/default-site-context-config';\nimport { contextServiceMapProvider } from './providers/context-service-map';\nimport { contextServiceProviders } from './providers/context-service-providers';\nimport { siteContextParamsProviders } from './providers/site-context-params-providers';\nimport { SiteContextStoreModule } from './store/site-context-store.module';\nimport { provideDefaultConfigFactory } from '../config/config-providers';\n\n// @dynamic\n@NgModule({\n  imports: [StateModule, SiteContextStoreModule],\n})\nexport class SiteContextModule {\n  static forRoot(): ModuleWithProviders<SiteContextModule> {\n    return {\n      ngModule: SiteContextModule,\n      providers: [\n        provideDefaultConfigFactory(defaultSiteContextConfigFactory),\n        contextServiceMapProvider,\n        ...contextServiceProviders,\n        ...siteContextParamsProviders,\n        provideConfigValidator(baseSiteConfigValidator),\n      ],\n    };\n  }\n}\n","import { AnonymousConsentsActions } from '../actions/index';\n\nexport const initialState = false;\n\nexport function reducer(\n  state = initialState,\n  action: AnonymousConsentsActions.ToggleAnonymousConsentsBannerDissmissed\n): boolean {\n  switch (action.type) {\n    case AnonymousConsentsActions.TOGGLE_ANONYMOUS_CONSENTS_BANNER_DISMISSED: {\n      return action.dismissed;\n    }\n  }\n\n  return state;\n}\n","import { AnonymousConsentsActions } from '../actions/index';\n\nexport const initialState = false;\n\nexport function reducer(\n  state = initialState,\n  action: AnonymousConsentsActions.ToggleAnonymousConsentTemplatesUpdated\n): boolean {\n  switch (action.type) {\n    case AnonymousConsentsActions.TOGGLE_ANONYMOUS_CONSENT_TEMPLATES_UPDATED: {\n      return action.updated;\n    }\n  }\n\n  return state;\n}\n","import {\n  AnonymousConsent,\n  ANONYMOUS_CONSENT_STATUS,\n} from '../../../model/consent.model';\nimport { AnonymousConsentsActions } from '../actions/index';\n\nexport const initialState: AnonymousConsent[] = [];\n\nexport function toggleConsentStatus(\n  consents: AnonymousConsent[],\n  templateCode: string,\n  status: ANONYMOUS_CONSENT_STATUS\n): AnonymousConsent[] {\n  if (!consents) {\n    return [];\n  }\n\n  return consents.map((consent) => {\n    if (consent.templateCode === templateCode) {\n      consent = {\n        ...consent,\n        consentState: status,\n      };\n    }\n    return consent;\n  });\n}\n\nexport function reducer(\n  state = initialState,\n  action: AnonymousConsentsActions.AnonymousConsentsActions\n): AnonymousConsent[] {\n  switch (action.type) {\n    case AnonymousConsentsActions.GIVE_ANONYMOUS_CONSENT: {\n      return toggleConsentStatus(\n        state,\n        action.templateCode,\n        ANONYMOUS_CONSENT_STATUS.GIVEN\n      );\n    }\n\n    case AnonymousConsentsActions.WITHDRAW_ANONYMOUS_CONSENT: {\n      return toggleConsentStatus(\n        state,\n        action.templateCode,\n        ANONYMOUS_CONSENT_STATUS.WITHDRAWN\n      );\n    }\n\n    case AnonymousConsentsActions.SET_ANONYMOUS_CONSENTS: {\n      return action.payload;\n    }\n  }\n\n  return state;\n}\n","import { InjectionToken, Provider } from '@angular/core';\nimport {\n  Action,\n  ActionReducer,\n  ActionReducerMap,\n  combineReducers,\n  MetaReducer,\n} from '@ngrx/store';\nimport { AuthActions } from '../../../auth/index';\nimport { ConsentTemplate } from '../../../model/consent.model';\nimport { SiteContextActions } from '../../../site-context/index';\nimport { loaderReducer } from '../../../state/utils/loader/loader.reducer';\nimport {\n  AnonymousConsentsState,\n  ANONYMOUS_CONSENTS,\n} from '../anonymous-consents-state';\nimport * as fromAnonymousConsentsBanner from './anonymous-consents-banner.reducer';\nimport * as fromAnonymousConsentsUpdate from './anonymous-consents-update.reducer';\nimport * as fromAnonymousConsents from './anonymous-consents.reducer';\n\nexport function getReducers(): ActionReducerMap<AnonymousConsentsState> {\n  return {\n    templates: loaderReducer<ConsentTemplate[]>(ANONYMOUS_CONSENTS),\n    consents: fromAnonymousConsents.reducer,\n    ui: combineReducers({\n      bannerDismissed: fromAnonymousConsentsBanner.reducer,\n      updated: fromAnonymousConsentsUpdate.reducer,\n    }),\n  };\n}\n\nexport const reducerToken: InjectionToken<ActionReducerMap<\n  AnonymousConsentsState\n>> = new InjectionToken<ActionReducerMap<AnonymousConsentsState>>(\n  'AnonymousConsentsReducers'\n);\n\nexport const reducerProvider: Provider = {\n  provide: reducerToken,\n  useFactory: getReducers,\n};\n\nexport function clearAnonymousConsentTemplates(\n  reducer: ActionReducer<AnonymousConsentsState, Action>\n): ActionReducer<AnonymousConsentsState, Action> {\n  return function (state, action) {\n    if (\n      action.type === AuthActions.LOGOUT ||\n      action.type === SiteContextActions.LANGUAGE_CHANGE\n    ) {\n      state = {\n        ...state,\n        templates: undefined,\n      };\n    }\n    return reducer(state, action);\n  };\n}\n\nexport const metaReducers: MetaReducer<any>[] = [\n  clearAnonymousConsentTemplates,\n];\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable, Subscription } from 'rxjs';\nimport { StatePersistenceService } from '../../state/index';\nimport { AnonymousConsentsService } from '../facade/index';\nimport { LoadAnonymousConsentTemplatesSuccess } from '../store/actions/anonymous-consents-group';\nimport {\n  AnonymousConsentsState,\n  StateWithAnonymousConsents,\n} from '../store/index';\nimport { getAnonymousConsentState } from '../store/selectors/feature.selector';\n\n/**\n * Anonymous consents state synced to browser storage.\n */\nexport type SyncedAnonymousConsentsState = Partial<AnonymousConsentsState>;\n\n/**\n * Responsible for saving the anonymous consents data in browser storage.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AnonymousConsentsStatePersistenceService implements OnDestroy {\n  protected subscription = new Subscription();\n\n  constructor(\n    protected statePersistenceService: StatePersistenceService,\n    protected store: Store<StateWithAnonymousConsents>,\n    protected anonymousConsentsService: AnonymousConsentsService\n  ) {}\n\n  /**\n   * Identifier used for storage key.\n   */\n  protected key = 'anonymous-consents';\n\n  /**\n   * Initializes the synchronization between state and browser storage.\n   */\n  public initSync() {\n    this.subscription.add(\n      this.statePersistenceService.syncWithStorage({\n        key: this.key,\n        state$: this.getAuthState(),\n        onRead: (state) => this.onRead(state),\n      })\n    );\n  }\n\n  /**\n   * Gets and transforms state from different sources into the form that should\n   * be saved in storage.\n   */\n  protected getAuthState(): Observable<SyncedAnonymousConsentsState> {\n    return this.store.select(getAnonymousConsentState);\n  }\n\n  /**\n   * Function called on each browser storage read.\n   * Used to update state from browser -> state.\n   */\n  protected onRead(state: SyncedAnonymousConsentsState) {\n    const templates = state?.templates;\n    const consents = state?.consents;\n    const ui = state?.ui;\n\n    // templates\n    if (templates?.success) {\n      this.store.dispatch(\n        new LoadAnonymousConsentTemplatesSuccess(templates.value)\n      );\n    }\n\n    // consents\n    if (consents) {\n      this.anonymousConsentsService.setConsents(consents);\n    }\n\n    // ui\n    if (ui) {\n      this.anonymousConsentsService.toggleBannerDismissed(ui?.bannerDismissed);\n      this.anonymousConsentsService.toggleTemplatesUpdated(ui?.updated);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { StateModule } from '../../state/state.module';\nimport { ANONYMOUS_CONSENTS_STORE_FEATURE } from './anonymous-consents-state';\nimport { effects } from './effects/index';\nimport { metaReducers, reducerProvider, reducerToken } from './reducers/index';\nimport { AnonymousConsentsStatePersistenceService } from '../services/anonymous-consents-state-persistence.service';\n\nexport function anonymousConsentsStatePersistenceFactory(\n  anonymousConsentsStatePersistenceService: AnonymousConsentsStatePersistenceService\n): () => void {\n  const result = () => anonymousConsentsStatePersistenceService.initSync();\n  return result;\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StateModule,\n    StoreModule.forFeature(ANONYMOUS_CONSENTS_STORE_FEATURE, reducerToken, {\n      metaReducers,\n    }),\n    EffectsModule.forFeature(effects),\n  ],\n  providers: [\n    reducerProvider,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: anonymousConsentsStatePersistenceFactory,\n      deps: [AnonymousConsentsStatePersistenceService],\n      multi: true,\n    },\n  ],\n})\nexport class AnonymousConsentsStoreModule {}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { provideDefaultConfig } from '../config/config-providers';\nimport { defaultAnonymousConsentsConfig } from './config/default-anonymous-consents-config';\nimport { AnonymousConsentsService } from './facade/anonymous-consents.service';\nimport { interceptors } from './http-interceptors/index';\nimport { AnonymousConsentsStoreModule } from './store/anonymous-consents-store.module';\n\n@NgModule({\n  imports: [AnonymousConsentsStoreModule],\n})\nexport class AnonymousConsentsModule {\n  static forRoot(): ModuleWithProviders<AnonymousConsentsModule> {\n    return {\n      ngModule: AnonymousConsentsModule,\n      providers: [\n        ...interceptors,\n        AnonymousConsentsService,\n        provideDefaultConfig(defaultAnonymousConsentsConfig),\n      ],\n    };\n  }\n}\n","import { AsmConfig } from './asm-config';\n\nexport const defaultAsmConfig: AsmConfig = {\n  asm: {\n    agentSessionTimer: {\n      startingDelayInSeconds: 600,\n    },\n    customerSearch: {\n      maxResults: 20,\n    },\n  },\n};\n","import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { UserIdService } from '../../auth/user-auth/facade/user-id.service';\nimport { Title, User, UserSignUp } from '../../model/misc.model';\nimport { OCC_USER_ID_ANONYMOUS } from '../../occ/index';\nimport { StateWithProcess } from '../../process/store/process-state';\nimport {\n  getProcessErrorFactory,\n  getProcessLoadingFactory,\n  getProcessSuccessFactory,\n} from '../../process/store/selectors/process.selectors';\nimport { UserActions } from '../store/actions/index';\nimport { UsersSelectors } from '../store/selectors/index';\nimport {\n  REGISTER_USER_PROCESS_ID,\n  REMOVE_USER_PROCESS_ID,\n  StateWithUser,\n  UPDATE_EMAIL_PROCESS_ID,\n  UPDATE_PASSWORD_PROCESS_ID,\n  UPDATE_USER_DETAILS_PROCESS_ID,\n} from '../store/user-state';\n\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n  constructor(\n    protected store: Store<StateWithUser | StateWithProcess<void>>,\n    protected userIdService: UserIdService\n  ) {}\n\n  /**\n   * Returns a user\n   */\n  get(): Observable<User> {\n    return this.store.pipe(\n      select(UsersSelectors.getDetails),\n      tap((details) => {\n        if (Object.keys(details).length === 0) {\n          this.load();\n        }\n      })\n    );\n  }\n\n  /**\n   * Loads the user's details\n   */\n  load(): void {\n    this.userIdService.invokeWithUserId((userId) => {\n      if (userId !== OCC_USER_ID_ANONYMOUS) {\n        this.store.dispatch(new UserActions.LoadUserDetails(userId));\n      }\n    });\n  }\n\n  /**\n   * Register a new user\n   *\n   * @param submitFormData as UserRegisterFormData\n   */\n  register(userRegisterFormData: UserSignUp): void {\n    this.store.dispatch(new UserActions.RegisterUser(userRegisterFormData));\n  }\n\n  /**\n   * Register a new user from guest\n   *\n   * @param guid\n   * @param password\n   */\n  registerGuest(guid: string, password: string): void {\n    this.store.dispatch(new UserActions.RegisterGuest({ guid, password }));\n  }\n\n  /**\n   * Returns the register user process loading flag\n   */\n  getRegisterUserResultLoading(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessLoadingFactory(REGISTER_USER_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns the register user process success flag\n   */\n  getRegisterUserResultSuccess(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessSuccessFactory(REGISTER_USER_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns the register user process error flag\n   */\n  getRegisterUserResultError(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessErrorFactory(REGISTER_USER_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Resets the register user process flags\n   */\n  resetRegisterUserProcessState(): void {\n    return this.store.dispatch(new UserActions.ResetRegisterUserProcess());\n  }\n\n  /**\n   * Remove user account, that's also called close user's account\n   */\n  remove(): void {\n    this.userIdService.invokeWithUserId((userId) => {\n      this.store.dispatch(new UserActions.RemoveUser(userId));\n    });\n  }\n\n  /**\n   * Returns the remove user loading flag\n   */\n  getRemoveUserResultLoading(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessLoadingFactory(REMOVE_USER_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns the remove user failure outcome.\n   */\n  getRemoveUserResultError(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessErrorFactory(REMOVE_USER_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns the remove user process success outcome.\n   */\n  getRemoveUserResultSuccess(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessSuccessFactory(REMOVE_USER_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Resets the remove user process state. The state needs to be reset after the process\n   * concludes, regardless if it's a success or an error\n   */\n  resetRemoveUserProcessState(): void {\n    this.store.dispatch(new UserActions.RemoveUserReset());\n  }\n\n  /**\n   * Returns titles.\n   */\n  getTitles(): Observable<Title[]> {\n    return this.store.pipe(\n      select(UsersSelectors.getAllTitles),\n      tap((titles: Title[]) => {\n        if (Object.keys(titles).length === 0) {\n          this.loadTitles();\n        }\n      })\n    );\n  }\n\n  /**\n   * Retrieves titles\n   */\n  loadTitles(): void {\n    this.store.dispatch(new UserActions.LoadTitles());\n  }\n\n  /**\n   * Return whether user's password is successfully reset\n   */\n  isPasswordReset(): Observable<boolean> {\n    return this.store.pipe(select(UsersSelectors.getResetPassword));\n  }\n\n  /**\n   * Updates the user's details\n   * @param userDetails to be updated\n   */\n  updatePersonalDetails(userDetails: User): void {\n    this.userIdService.invokeWithUserId((userId) => {\n      this.store.dispatch(\n        new UserActions.UpdateUserDetails({\n          username: userId,\n          userDetails,\n        })\n      );\n    });\n  }\n\n  /**\n   * Returns the update user's personal details loading flag\n   */\n  getUpdatePersonalDetailsResultLoading(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessLoadingFactory(UPDATE_USER_DETAILS_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns the update user's personal details error flag\n   */\n  getUpdatePersonalDetailsResultError(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessErrorFactory(UPDATE_USER_DETAILS_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns the update user's personal details success flag\n   */\n  getUpdatePersonalDetailsResultSuccess(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessSuccessFactory(UPDATE_USER_DETAILS_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Resets the update user details processing state\n   */\n  resetUpdatePersonalDetailsProcessingState(): void {\n    this.store.dispatch(new UserActions.ResetUpdateUserDetails());\n  }\n\n  /**\n   * Reset new password.  Part of the forgot password flow.\n   * @param token\n   * @param password\n   */\n  resetPassword(token: string, password: string): void {\n    this.store.dispatch(new UserActions.ResetPassword({ token, password }));\n  }\n\n  /*\n   * Request an email to reset a forgotten password.\n   */\n  requestForgotPasswordEmail(userEmailAddress: string): void {\n    this.store.dispatch(\n      new UserActions.ForgotPasswordEmailRequest(userEmailAddress)\n    );\n  }\n\n  /**\n   * Updates the user's email\n   */\n  updateEmail(password: string, newUid: string): void {\n    this.userIdService.invokeWithUserId((userId) => {\n      this.store.dispatch(\n        new UserActions.UpdateEmailAction({\n          uid: userId,\n          password,\n          newUid,\n        })\n      );\n    });\n  }\n\n  /**\n   * Returns the update user's email success flag\n   */\n  getUpdateEmailResultSuccess(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessSuccessFactory(UPDATE_EMAIL_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns the update user's email error flag\n   */\n  getUpdateEmailResultError(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessErrorFactory(UPDATE_EMAIL_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns the update user's email loading flag\n   */\n  getUpdateEmailResultLoading(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessLoadingFactory(UPDATE_EMAIL_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Resets the update user's email processing state\n   */\n  resetUpdateEmailResultState(): void {\n    this.store.dispatch(new UserActions.ResetUpdateEmailAction());\n  }\n\n  /**\n   * Updates the password for the user\n   * @param oldPassword the current password that will be changed\n   * @param newPassword the new password\n   */\n  updatePassword(oldPassword: string, newPassword: string): void {\n    this.userIdService.invokeWithUserId((userId) => {\n      this.store.dispatch(\n        new UserActions.UpdatePassword({\n          userId,\n          oldPassword,\n          newPassword,\n        })\n      );\n    });\n  }\n\n  /**\n   * Returns the update password loading flag\n   */\n  getUpdatePasswordResultLoading(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessLoadingFactory(UPDATE_PASSWORD_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns the update password failure outcome.\n   */\n  getUpdatePasswordResultError(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessErrorFactory(UPDATE_PASSWORD_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns the update password process success outcome.\n   */\n  getUpdatePasswordResultSuccess(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessSuccessFactory(UPDATE_PASSWORD_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Resets the update password process state. The state needs to be reset after the process\n   * concludes, regardless if it's a success or an error\n   */\n  resetUpdatePasswordProcessState(): void {\n    this.store.dispatch(new UserActions.UpdatePasswordReset());\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { AuthToken } from '../../auth/user-auth/models/auth-token.model';\nimport { AuthStorageService } from '../../auth/user-auth/services/auth-storage.service';\n\n/**\n * Indicates if auth token is for regular user or CS Agent.\n */\nexport enum TokenTarget {\n  CSAgent = 'CSAgent',\n  User = 'User',\n}\n\n/**\n * With AsmAuthStorageService apart from storing the token we also need to store\n * information for which user is the token (regular user or CS Agent).\n *\n * Overrides `AuthStorageService`.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AsmAuthStorageService extends AuthStorageService {\n  protected _tokenTarget$: Observable<TokenTarget> = new BehaviorSubject<\n    TokenTarget\n  >(TokenTarget.User);\n\n  /**\n   * When CS Agent logs in during regular user session we store the regular\n   * user token to restore the session after CS Agent logout.\n   *\n   * This supports in-store use case when CS Agent want's to quickly help\n   * customer and then give an option to customer to continue the process.\n   */\n  protected emulatedUserToken: AuthToken;\n\n  /**\n   * Get target user for current auth token.\n   *\n   * @return observable with TokenTarget\n   */\n  getTokenTarget(): Observable<TokenTarget> {\n    return this._tokenTarget$;\n  }\n\n  /**\n   * Set new token target.\n   *\n   * @param tokenTarget\n   */\n  setTokenTarget(tokenTarget: TokenTarget): void {\n    (this._tokenTarget$ as BehaviorSubject<TokenTarget>).next(tokenTarget);\n  }\n\n  /**\n   * Get token for previously user session, when it was interrupted by CS agent login.\n   *\n   * @return previously logged in user token.\n   */\n  getEmulatedUserToken(): AuthToken {\n    return this.emulatedUserToken;\n  }\n\n  /**\n   * Save user token on CS agent login.\n   *\n   * @param token\n   */\n  setEmulatedUserToken(token: AuthToken): void {\n    this.emulatedUserToken = token;\n  }\n\n  /**\n   * Change token target to CS Agent.\n   */\n  switchTokenTargetToCSAgent(): void {\n    (this._tokenTarget$ as BehaviorSubject<TokenTarget>).next(\n      TokenTarget.CSAgent\n    );\n  }\n\n  /**\n   * Change token target to user.\n   */\n  switchTokenTargetToUser(): void {\n    (this._tokenTarget$ as BehaviorSubject<TokenTarget>).next(TokenTarget.User);\n  }\n\n  /**\n   * When we start emulation from the UI (not by ASM login) we can't restore user session on cs agent logout.\n   * Only available solution is to drop session we could restore, to avoid account hijack.\n   */\n  clearEmulatedUserToken(): void {\n    this.emulatedUserToken = undefined;\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { AsmUi } from '../../models/asm.models';\n\nexport const ASM_UI_UPDATE = '[Asm] UI Update';\n\nexport class AsmUiUpdate implements Action {\n  readonly type = ASM_UI_UPDATE;\n  constructor(public payload: AsmUi) {}\n}\n// action types\nexport type AsmUiAction = AsmUiUpdate;\n","import { LoaderState } from '../../state/utils/loader/loader-state';\nimport { AsmUi, CustomerSearchPage } from '../models/asm.models';\n\nexport const ASM_FEATURE = 'asm';\nexport const CUSTOMER_SEARCH_DATA = '[asm] Customer search data';\n\nexport interface StateWithAsm {\n  [ASM_FEATURE]: AsmState;\n}\n\nexport interface AsmState {\n  customerSearchResult: LoaderState<CustomerSearchPage>;\n  asmUi: AsmUi;\n}\n","import { StateUtils } from '../../../state/utils/index';\nimport {\n  CustomerSearchOptions,\n  CustomerSearchPage,\n} from '../../models/asm.models';\nimport { CUSTOMER_SEARCH_DATA } from '../asm-state';\n\nexport const CUSTOMER_SEARCH = '[Asm] Customer Search';\nexport const CUSTOMER_SEARCH_FAIL = '[Asm] Customer Search Fail';\nexport const CUSTOMER_SEARCH_SUCCESS = '[Asm] Customer Search Success';\nexport const CUSTOMER_SEARCH_RESET = '[Asm] Customer Search Reset';\n\nexport class CustomerSearch extends StateUtils.LoaderLoadAction {\n  readonly type = CUSTOMER_SEARCH;\n  constructor(public payload: CustomerSearchOptions) {\n    super(CUSTOMER_SEARCH_DATA);\n  }\n}\n\nexport class CustomerSearchFail extends StateUtils.LoaderFailAction {\n  readonly type = CUSTOMER_SEARCH_FAIL;\n  constructor(public payload: any) {\n    super(CUSTOMER_SEARCH_DATA);\n  }\n}\n\nexport class CustomerSearchSuccess extends StateUtils.LoaderSuccessAction {\n  readonly type = CUSTOMER_SEARCH_SUCCESS;\n  constructor(public payload: CustomerSearchPage) {\n    super(CUSTOMER_SEARCH_DATA);\n  }\n}\n\nexport class CustomerSearchReset extends StateUtils.LoaderResetAction {\n  readonly type = CUSTOMER_SEARCH_RESET;\n  constructor() {\n    super(CUSTOMER_SEARCH_DATA);\n  }\n}\n\n// action types\nexport type CustomerAction =\n  | CustomerSearch\n  | CustomerSearchFail\n  | CustomerSearchSuccess\n  | CustomerSearchReset;\n","import { Action } from '@ngrx/store';\n\nexport const LOGOUT_CUSTOMER_SUPPORT_AGENT =\n  '[Auth] Logout Customer Support Agent';\n\n/**\n * Action dispatched after customer support agent logout. Used to clear store data (ui, search results)\n */\nexport class LogoutCustomerSupportAgent implements Action {\n  readonly type = LOGOUT_CUSTOMER_SUPPORT_AGENT;\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AuthService } from '../../auth/user-auth/facade/auth.service';\nimport { UserIdService } from '../../auth/user-auth/facade/user-id.service';\nimport { OAuthLibWrapperService } from '../../auth/user-auth/services/oauth-lib-wrapper.service';\nimport { AuthActions } from '../../auth/user-auth/store/actions';\nimport {\n  OCC_USER_ID_ANONYMOUS,\n  OCC_USER_ID_CURRENT,\n} from '../../occ/utils/occ-constants';\nimport { UserService } from '../../user/facade/user.service';\nimport {\n  AsmAuthStorageService,\n  TokenTarget,\n} from '../services/asm-auth-storage.service';\nimport { AsmActions } from '../store/actions';\nimport { StateWithAsm } from '../store/asm-state';\n\n/**\n * Auth service for CS agent. Useful to login/logout agent, start emulation\n * or get information about the status of emulation.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CsAgentAuthService {\n  constructor(\n    protected authService: AuthService,\n    protected authStorageService: AsmAuthStorageService,\n    protected userIdService: UserIdService,\n    protected oAuthLibWrapperService: OAuthLibWrapperService,\n    protected store: Store<StateWithAsm>,\n    protected userService: UserService\n  ) {}\n\n  /**\n   * Loads access token for a customer support agent.\n   * @param userId\n   * @param password\n   */\n  async authorizeCustomerSupportAgent(\n    userId: string,\n    password: string\n  ): Promise<void> {\n    let userToken;\n    this.authStorageService\n      .getToken()\n      .subscribe((token) => (userToken = token))\n      .unsubscribe();\n\n    this.authStorageService.switchTokenTargetToCSAgent();\n    try {\n      await this.oAuthLibWrapperService.authorizeWithPasswordFlow(\n        userId,\n        password\n      );\n      // Start emulation for currently logged in user\n      let customerId: string;\n      this.userService\n        .get()\n        .subscribe((user) => (customerId = user?.customerId))\n        .unsubscribe();\n      this.store.dispatch(new AuthActions.Logout());\n\n      if (Boolean(customerId)) {\n        // OCC specific user id handling. Customize when implementing different backend\n        this.userIdService.setUserId(customerId);\n        this.authStorageService.setEmulatedUserToken(userToken);\n        this.store.dispatch(new AuthActions.Login());\n      } else {\n        // When we can't get the customerId just end all current sessions\n        this.userIdService.setUserId(OCC_USER_ID_ANONYMOUS);\n        this.authStorageService.clearEmulatedUserToken();\n      }\n    } catch {\n      this.authStorageService.switchTokenTargetToUser();\n    }\n  }\n\n  /**\n   * Starts an ASM customer emulation session.\n   * A customer emulation session is stopped by calling logout().\n   * @param customerId\n   */\n  public startCustomerEmulationSession(customerId: string): void {\n    this.authStorageService.clearEmulatedUserToken();\n\n    // OCC specific user id handling. Customize when implementing different backend\n    this.store.dispatch(new AuthActions.Logout());\n    this.userIdService.setUserId(customerId);\n    this.store.dispatch(new AuthActions.Login());\n  }\n\n  /**\n   * Check if CS agent is currently logged in.\n   *\n   * @returns observable emitting true when CS agent is logged in or false when not.\n   */\n  public isCustomerSupportAgentLoggedIn(): Observable<boolean> {\n    return combineLatest([\n      this.authStorageService.getToken(),\n      this.authStorageService.getTokenTarget(),\n    ]).pipe(\n      map(([token, tokenTarget]) =>\n        Boolean(token?.access_token && tokenTarget === TokenTarget.CSAgent)\n      )\n    );\n  }\n\n  /**\n   * Utility function to determine if customer is emulated.\n   *\n   * @returns observable emitting true when there is active emulation session or false when not.\n   */\n  public isCustomerEmulated(): Observable<boolean> {\n    return this.userIdService.isEmulated();\n  }\n\n  /**\n   * Returns the customer support agent's token loading status\n   */\n  public getCustomerSupportAgentTokenLoading(): Observable<boolean> {\n    // TODO(#8248): Create new loading state outside of store\n    return of(false);\n  }\n\n  /**\n   * Logout a customer support agent.\n   */\n  async logoutCustomerSupportAgent(): Promise<void> {\n    const emulatedToken = this.authStorageService.getEmulatedUserToken();\n\n    let isCustomerEmulated;\n    this.userIdService\n      .isEmulated()\n      .subscribe((emulated) => (isCustomerEmulated = emulated))\n      .unsubscribe();\n\n    await this.oAuthLibWrapperService.revokeAndLogout();\n\n    this.store.dispatch(new AsmActions.LogoutCustomerSupportAgent());\n    this.authStorageService.setTokenTarget(TokenTarget.User);\n\n    if (isCustomerEmulated && emulatedToken) {\n      this.store.dispatch(new AuthActions.Logout());\n      this.authStorageService.setToken(emulatedToken);\n      this.userIdService.setUserId(OCC_USER_ID_CURRENT);\n      this.authStorageService.clearEmulatedUserToken();\n      this.store.dispatch(new AuthActions.Login());\n    } else {\n      this.authService.logout();\n    }\n  }\n}\n","import { HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { AuthService } from '../../auth/user-auth/facade/auth.service';\nimport { AuthHttpHeaderService } from '../../auth/user-auth/services/auth-http-header.service';\nimport { AuthStorageService } from '../../auth/user-auth/services/auth-storage.service';\nimport { OAuthLibWrapperService } from '../../auth/user-auth/services/oauth-lib-wrapper.service';\nimport { GlobalMessageService } from '../../global-message/facade/global-message.service';\nimport { GlobalMessageType } from '../../global-message/models/global-message.model';\nimport { OccEndpointsService } from '../../occ/services/occ-endpoints.service';\nimport {\n  InterceptorUtil,\n  USE_CUSTOMER_SUPPORT_AGENT_TOKEN,\n} from '../../occ/utils/interceptor-util';\nimport { RoutingService } from '../../routing/facade/routing.service';\nimport { CsAgentAuthService } from '../facade/csagent-auth.service';\n\n/**\n * Overrides `AuthHttpHeaderService` to handle asm calls as well (not only OCC)\n * in cases of normal user session and on customer emulation.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AsmAuthHttpHeaderService extends AuthHttpHeaderService {\n  constructor(\n    protected authService: AuthService,\n    protected authStorageService: AuthStorageService,\n    protected csAgentAuthService: CsAgentAuthService,\n    protected oAuthLibWrapperService: OAuthLibWrapperService,\n    protected routingService: RoutingService,\n    protected globalMessageService: GlobalMessageService,\n    protected occEndpointsService: OccEndpointsService\n  ) {\n    super(\n      authService,\n      authStorageService,\n      oAuthLibWrapperService,\n      routingService,\n      occEndpointsService,\n      globalMessageService\n    );\n  }\n\n  /**\n   * @override\n   *\n   * Checks if particular request should be handled by this service.\n   */\n  public shouldCatchError(request: HttpRequest<any>): boolean {\n    return (\n      super.shouldCatchError(request) || this.isCSAgentTokenRequest(request)\n    );\n  }\n\n  /**\n   * @override\n   *\n   * Adds `Authorization` header to occ and CS agent requests.\n   * For CS agent requests also removes the `cx-use-csagent-token` header (to avoid problems with CORS).\n   */\n  public alterRequest(request: HttpRequest<any>): HttpRequest<any> {\n    const hasAuthorizationHeader = !!this.getAuthorizationHeader(request);\n    const isCSAgentRequest = this.isCSAgentTokenRequest(request);\n\n    let req = super.alterRequest(request);\n\n    if (!hasAuthorizationHeader && isCSAgentRequest) {\n      req = request.clone({\n        setHeaders: {\n          ...this.createAuthorizationHeader(),\n        },\n      });\n      return InterceptorUtil.removeHeader(\n        USE_CUSTOMER_SUPPORT_AGENT_TOKEN,\n        req\n      );\n    }\n    return req;\n  }\n\n  protected isCSAgentTokenRequest(request: HttpRequest<any>): boolean {\n    const isRequestWithCSAgentToken = InterceptorUtil.getInterceptorParam(\n      USE_CUSTOMER_SUPPORT_AGENT_TOKEN,\n      request.headers\n    );\n    return Boolean(isRequestWithCSAgentToken);\n  }\n\n  /**\n   * @override\n   *\n   * On backend errors indicating expired `refresh_token` we need to logout\n   * currently logged in user and CS agent.\n   */\n  public handleExpiredRefreshToken(): void {\n    this.csAgentAuthService\n      .isCustomerSupportAgentLoggedIn()\n      .pipe(take(1))\n      .subscribe((csAgentLoggedIn) => {\n        if (csAgentLoggedIn) {\n          this.csAgentAuthService.logoutCustomerSupportAgent();\n          this.globalMessageService.add(\n            {\n              key: 'asm.csagentTokenExpired',\n            },\n            GlobalMessageType.MSG_TYPE_ERROR\n          );\n        } else {\n          super.handleExpiredRefreshToken();\n        }\n      });\n  }\n}\n","import { GlobalMessageType } from '../models/global-message.model';\nimport { Injectable } from '@angular/core';\nimport { Config } from '../../config/config-tokens';\n\nexport type GlobalMessageTypeConfig = {\n  timeout?: number;\n};\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class GlobalMessageConfig {\n  globalMessages: {\n    [GlobalMessageType.MSG_TYPE_CONFIRMATION]?: GlobalMessageTypeConfig;\n    [GlobalMessageType.MSG_TYPE_INFO]?: GlobalMessageTypeConfig;\n    [GlobalMessageType.MSG_TYPE_ERROR]?: GlobalMessageTypeConfig;\n    [GlobalMessageType.MSG_TYPE_WARNING]?: GlobalMessageTypeConfig;\n  };\n}\n","export enum HttpResponseStatus {\n  UNKNOWN = -1,\n  BAD_REQUEST = 400,\n  UNAUTHORIZED = 401,\n  FORBIDDEN = 403,\n  NOT_FOUND = 404,\n  CONFLICT = 409,\n  BAD_GATEWAY = 502,\n  GATEWAY_TIMEOUT = 504,\n  INTERNAL_SERVER_ERROR = 500,\n}\n","import { HttpErrorResponse, HttpRequest } from '@angular/common/http';\nimport { GlobalMessageService } from '../../facade/global-message.service';\nimport { Injectable } from '@angular/core';\nimport { Applicable, Priority } from '../../../util/applicable';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class HttpErrorHandler implements Applicable {\n  constructor(protected globalMessageService: GlobalMessageService) {}\n\n  /**\n   * The http response status number which is handled by this handler.\n   * Implementations can set the response status number, i.e. 404, so that\n   * the handler can be found by the error interceptor.\n   */\n  responseStatus?: number;\n\n  /**\n   * Handles the error response for the respose status that is register for the handler\n   * @param { HttpRequest<any> } request : http request\n   * @param { HttpErrorResponse } errorResponse : Http error response\n   */\n  abstract handleError(\n    request: HttpRequest<any>,\n    errorResponse: HttpErrorResponse\n  ): void;\n\n  /**\n   * Error handlers are matched by the error `responseStatus` (i.e. 404). On top of the matching status\n   * a priority can be added to distinguish multiple handles for the same response status.\n   */\n  hasMatch(errorResponse: HttpErrorResponse): boolean {\n    return errorResponse.status === this.responseStatus;\n  }\n\n  abstract getPriority?(): Priority;\n}\n","import { Injectable } from '@angular/core';\nimport { GlobalMessageType } from '../../../models/global-message.model';\nimport { HttpResponseStatus } from '../../../models/response-status.model';\nimport { HttpErrorHandler } from '../http-error.handler';\nimport { Priority } from '../../../../util/applicable';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BadGatewayHandler extends HttpErrorHandler {\n  responseStatus = HttpResponseStatus.BAD_GATEWAY;\n\n  handleError() {\n    this.globalMessageService.add(\n      { key: 'httpHandlers.badGateway' },\n      GlobalMessageType.MSG_TYPE_ERROR\n    );\n  }\n\n  getPriority(): Priority {\n    return Priority.LOW;\n  }\n}\n","import { HttpErrorResponse, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { isCartNotFoundError } from '../../../../cart/utils/utils';\nimport { ErrorModel } from '../../../../model/misc.model';\nimport { Priority } from '../../../../util/applicable';\nimport { GlobalMessageType } from '../../../models/global-message.model';\nimport { HttpResponseStatus } from '../../../models/response-status.model';\nimport { HttpErrorHandler } from '../http-error.handler';\n\nconst OAUTH_ENDPOINT = '/authorizationserver/oauth/token';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BadRequestHandler extends HttpErrorHandler {\n  responseStatus = HttpResponseStatus.BAD_REQUEST;\n\n  handleError(request: HttpRequest<any>, response: HttpErrorResponse): void {\n    this.handleBadPassword(request, response);\n    this.handleBadLoginResponse(request, response);\n    this.handleBadCartRequest(request, response);\n    this.handleValidationError(request, response);\n    this.handleVoucherOperationError(request, response);\n  }\n\n  protected handleBadPassword(\n    request: HttpRequest<any>,\n    response: HttpErrorResponse\n  ): void {\n    if (\n      response.url?.includes(OAUTH_ENDPOINT) &&\n      response.error?.error === 'invalid_grant' &&\n      request.body?.get('grant_type') === 'password'\n    ) {\n      this.globalMessageService.add(\n        {\n          key: 'httpHandlers.badRequestPleaseLoginAgain',\n          params: {\n            errorMessage:\n              response.error.error_description || response.message || '',\n          },\n        },\n        GlobalMessageType.MSG_TYPE_ERROR\n      );\n      this.globalMessageService.remove(GlobalMessageType.MSG_TYPE_CONFIRMATION);\n    }\n  }\n\n  protected handleBadLoginResponse(\n    _request: HttpRequest<any>,\n    response: HttpErrorResponse\n  ) {\n    this.getErrors(response)\n      .filter((error) => error.type === 'PasswordMismatchError')\n      .forEach(() => {\n        this.globalMessageService.add(\n          { key: 'httpHandlers.badRequestOldPasswordIncorrect' },\n          GlobalMessageType.MSG_TYPE_ERROR\n        );\n      });\n  }\n\n  protected handleValidationError(\n    _request: HttpRequest<any>,\n    response: HttpErrorResponse\n  ): void {\n    this.getErrors(response)\n      .filter((e) => e.type === 'ValidationError')\n      .forEach((error) => {\n        this.globalMessageService.add(\n          {\n            key: `httpHandlers.validationErrors.${error.reason}.${error.subject}`,\n          },\n          GlobalMessageType.MSG_TYPE_ERROR\n        );\n      });\n  }\n\n  protected handleBadCartRequest(\n    _request: HttpRequest<any>,\n    response: HttpErrorResponse\n  ): void {\n    this.getErrors(response)\n      .filter((e) => isCartNotFoundError(e))\n      .forEach(() => {\n        this.globalMessageService.add(\n          { key: 'httpHandlers.cartNotFound' },\n          GlobalMessageType.MSG_TYPE_ERROR\n        );\n      });\n  }\n\n  protected handleVoucherOperationError(\n    _request: HttpRequest<any>,\n    response: HttpErrorResponse\n  ): void {\n    this.getErrors(response)\n      .filter(\n        (e) =>\n          e.message === 'coupon.invalid.code.provided' &&\n          e.type === 'VoucherOperationError'\n      )\n      .forEach(() => {\n        this.globalMessageService.add(\n          { key: 'httpHandlers.invalidCodeProvided' },\n          GlobalMessageType.MSG_TYPE_ERROR\n        );\n      });\n  }\n\n  protected getErrors(response: HttpErrorResponse): ErrorModel[] {\n    return (response.error?.errors || []).filter(\n      (error) => error.type !== 'JaloObjectNoLongerValidError'\n    );\n  }\n\n  getPriority(): Priority {\n    return Priority.LOW;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { GlobalMessageType } from '../../../models/global-message.model';\nimport { HttpResponseStatus } from '../../../models/response-status.model';\nimport { HttpErrorHandler } from '../http-error.handler';\nimport { Priority } from '../../../../util/applicable';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConflictHandler extends HttpErrorHandler {\n  responseStatus = HttpResponseStatus.CONFLICT;\n\n  handleError() {\n    this.globalMessageService.add(\n      { key: 'httpHandlers.conflict' },\n      GlobalMessageType.MSG_TYPE_ERROR\n    );\n  }\n\n  getPriority(): Priority {\n    return Priority.LOW;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AuthService } from '../../../../auth/user-auth/facade/auth.service';\nimport { OccEndpointsService } from '../../../../occ/services/occ-endpoints.service';\nimport { Priority } from '../../../../util/applicable';\nimport { GlobalMessageService } from '../../../facade/global-message.service';\nimport { GlobalMessageType } from '../../../models/global-message.model';\nimport { HttpResponseStatus } from '../../../models/response-status.model';\nimport { HttpErrorHandler } from '../http-error.handler';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ForbiddenHandler extends HttpErrorHandler {\n  responseStatus = HttpResponseStatus.FORBIDDEN;\n\n  handleError(request) {\n    if (\n      request.url.endsWith(\n        this.occEndpoints.getUrl('user', { userId: 'current' })\n      )\n    ) {\n      this.authService.logout();\n    }\n    this.globalMessageService.add(\n      { key: 'httpHandlers.forbidden' },\n      GlobalMessageType.MSG_TYPE_ERROR\n    );\n  }\n\n  getPriority(): Priority {\n    return Priority.LOW;\n  }\n\n  constructor(\n    protected globalMessageService: GlobalMessageService,\n    protected authService: AuthService,\n    protected occEndpoints: OccEndpointsService\n  ) {\n    super(globalMessageService);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { GlobalMessageType } from '../../../models/global-message.model';\nimport { HttpResponseStatus } from '../../../models/response-status.model';\nimport { HttpErrorHandler } from '../http-error.handler';\nimport { Priority } from '../../../../util/applicable';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GatewayTimeoutHandler extends HttpErrorHandler {\n  responseStatus = HttpResponseStatus.GATEWAY_TIMEOUT;\n\n  handleError() {\n    this.globalMessageService.add(\n      { key: 'httpHandlers.gatewayTimeout' },\n      GlobalMessageType.MSG_TYPE_ERROR\n    );\n  }\n\n  getPriority(): Priority {\n    return Priority.LOW;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { GlobalMessageType } from '../../../models/global-message.model';\nimport { HttpResponseStatus } from '../../../models/response-status.model';\nimport { HttpErrorHandler } from '../http-error.handler';\nimport { Priority } from '../../../../util/applicable';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class InternalServerErrorHandler extends HttpErrorHandler {\n  responseStatus = HttpResponseStatus.INTERNAL_SERVER_ERROR;\n\n  handleError() {\n    this.globalMessageService.add(\n      { key: 'httpHandlers.internalServerError' },\n      GlobalMessageType.MSG_TYPE_ERROR\n    );\n  }\n\n  getPriority(): Priority {\n    return Priority.LOW;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpResponseStatus } from '../../../models/response-status.model';\nimport { HttpErrorHandler } from '../http-error.handler';\nimport { Priority } from '../../../../util/applicable';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotFoundHandler extends HttpErrorHandler {\n  responseStatus = HttpResponseStatus.NOT_FOUND;\n\n  // empty error handler to avoid we fallabck to the unknown error handler\n  handleError(): void {}\n\n  getPriority() {\n    return Priority.LOW;\n  }\n}\n","import { Injectable, isDevMode } from '@angular/core';\nimport { HttpResponseStatus } from '../../../models/response-status.model';\nimport { HttpErrorHandler } from '../http-error.handler';\nimport { Priority } from '../../../../util/applicable';\n\n/**\n * Unknown Error Handler works as an fallback, to handle errors that were\n * not handled by any other error handlers\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnknownErrorHandler extends HttpErrorHandler {\n  responseStatus = HttpResponseStatus.UNKNOWN;\n\n  /**\n   * hasMatch always returns true, to mach all errors\n   */\n  hasMatch(_errorResponse): boolean {\n    return true;\n  }\n\n  handleError() {\n    if (isDevMode()) {\n      console.warn(`Unknown http response error: ${this.responseStatus}`);\n    }\n  }\n\n  /**\n   * Fallback priority assures that the handler is used as a last resort\n   */\n  getPriority() {\n    return Priority.FALLBACK;\n  }\n}\n","export const enum Priority {\n  /**\n   * Used as fallback, when there is no other matches\n   */\n  FALLBACK = -50,\n  /**\n   * Used mainly in libraries, easy overridable\n   */\n  LOW = -10,\n  /**\n   * Default priority\n   */\n  NORMAL = 0,\n  /**\n   * High priority for matches that should take precedence\n   */\n  HIGH = 10,\n}\n\n/**\n * Base interface for implementing applicables in a consistent way\n *\n * Applicables are mainly used to find best matching one from multi provided\n * classes, like handlers, resolvers, etc.\n */\nexport interface Applicable {\n  /**\n   * Returns true if applicable can be used to handle specified condition\n   */\n  hasMatch?(...params): boolean;\n\n  /**\n   * Returns priority or score for specified applicable.\n   *\n   * If multiple applicables can be applied to specified condition, the one\n   * with highest priority or score wins.\n   */\n  getPriority?(...params): Priority | number;\n}\n\n/**\n * Helper logic to resolve best matching Applicable\n *\n * Finding best match is a two step process:\n * 1. Find all matching applicables\n *    - all applicables for which hasMatch(...matchParams) will return true\n *    - all applicables without hasMatch method (implicit always match)\n * 2. Find the applicable with highest priority\n *    - applicable with highest getPriority(...priorityParams) will win\n *    - applicable without getPriority method is treated as Priority.NORMAL or 0\n *    - applicables with the same priority are sorted by order of providers, the applicable that was provided later wins\n *\n * @param applicables - array or applicable-like instances\n * @param matchParams - array of parameters passed for hasMatch calls\n * @param priorityParams - array of parameters passed for getPriority calls\n */\nexport function resolveApplicable<T extends Applicable>(\n  applicables: T[],\n  matchParams: any[] = [],\n  priorityParams: any[] = []\n): T | undefined {\n  const matchedApplicables = (applicables ?? []).filter(\n    (applicable) => !applicable.hasMatch || applicable.hasMatch(...matchParams)\n  );\n\n  if (matchedApplicables.length < 2) {\n    return matchedApplicables[0];\n  }\n\n  let lastPriority = -Infinity;\n  return matchedApplicables.reduce((acc, curr) => {\n    const currPriority = curr.getPriority\n      ? curr.getPriority(...priorityParams)\n      : Priority.NORMAL;\n    if (lastPriority > currPriority) {\n      return acc;\n    }\n    lastPriority = currPriority;\n    return curr;\n  }, undefined);\n}\n","import {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { HttpErrorHandler } from './handlers/http-error.handler';\nimport { resolveApplicable } from '../../util/applicable';\n\n@Injectable({ providedIn: 'root' })\nexport class HttpErrorInterceptor implements HttpInterceptor {\n  constructor(\n    @Inject(HttpErrorHandler) protected handlers: HttpErrorHandler[]\n  ) {}\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(\n      catchError((response: any) => {\n        if (response instanceof HttpErrorResponse) {\n          this.handleErrorResponse(request, response);\n          return throwError(response);\n        }\n      })\n    );\n  }\n\n  protected handleErrorResponse(\n    request: HttpRequest<any>,\n    response: HttpErrorResponse\n  ): void {\n    const handler = this.getResponseHandler(response);\n    if (handler) {\n      handler.handleError(request, response);\n    }\n  }\n\n  /**\n   * return the error handler that matches the `HttpResponseStatus` code.\n   * If no handler is available, the UNKNOWN handler is returned.\n   */\n  protected getResponseHandler(response: HttpErrorResponse): HttpErrorHandler {\n    return resolveApplicable(this.handlers, [response]);\n  }\n}\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Provider } from '@angular/core';\nimport {\n  BadGatewayHandler,\n  BadRequestHandler,\n  ConflictHandler,\n  ForbiddenHandler,\n  GatewayTimeoutHandler,\n  HttpErrorHandler,\n  InternalServerErrorHandler,\n  NotFoundHandler,\n  UnknownErrorHandler,\n} from './handlers/index';\nimport { HttpErrorInterceptor } from './http-error.interceptor';\n\nexport const errorHandlers: Provider[] = [\n  {\n    provide: HttpErrorHandler,\n    useExisting: UnknownErrorHandler,\n    multi: true,\n  },\n  {\n    provide: HttpErrorHandler,\n    useExisting: BadGatewayHandler,\n    multi: true,\n  },\n  {\n    provide: HttpErrorHandler,\n    useExisting: BadRequestHandler,\n    multi: true,\n  },\n  {\n    provide: HttpErrorHandler,\n    useExisting: ConflictHandler,\n    multi: true,\n  },\n  {\n    provide: HttpErrorHandler,\n    useExisting: ForbiddenHandler,\n    multi: true,\n  },\n  {\n    provide: HttpErrorHandler,\n    useExisting: GatewayTimeoutHandler,\n    multi: true,\n  },\n  {\n    provide: HttpErrorHandler,\n    useExisting: InternalServerErrorHandler,\n    multi: true,\n  },\n  {\n    provide: HttpErrorHandler,\n    useExisting: NotFoundHandler,\n    multi: true,\n  },\n];\n\nexport const httpErrorInterceptors: Provider[] = [\n  {\n    provide: HTTP_INTERCEPTORS,\n    useExisting: HttpErrorInterceptor,\n    multi: true,\n  },\n];\n","import { Translatable } from '../../../i18n/translatable';\nimport {\n  GlobalMessage,\n  GlobalMessageType,\n} from '../../models/global-message.model';\nimport { GlobalMessageActions } from '../actions/index';\nimport { GlobalMessageState } from '../global-message-state';\n\nexport const initialState: GlobalMessageState = {\n  entities: {},\n};\n\nexport function reducer(\n  state = initialState,\n  action: GlobalMessageActions.GlobalMessageAction\n): GlobalMessageState {\n  switch (action.type) {\n    case GlobalMessageActions.ADD_MESSAGE: {\n      const message: GlobalMessage = action.payload;\n\n      if (state.entities[message.type] === undefined) {\n        return {\n          ...state,\n          entities: {\n            ...state.entities,\n            [message.type]: [message.text],\n          },\n        };\n      } else {\n        const currentMessages: Translatable[] = state.entities[message.type];\n        return {\n          ...state,\n          entities: {\n            ...state.entities,\n            [message.type]: [...currentMessages, message.text],\n          },\n        };\n      }\n    }\n\n    case GlobalMessageActions.REMOVE_MESSAGE: {\n      const msgType: GlobalMessageType = action.payload.type;\n      const msgIndex: number = action.payload.index;\n      if (\n        Object.keys(state.entities).length === 0 ||\n        !state.entities[msgType]\n      ) {\n        return state;\n      }\n\n      const messages = [...state.entities[msgType]];\n      messages.splice(msgIndex, 1);\n\n      return {\n        ...state,\n        entities: {\n          ...state.entities,\n          [msgType]: messages,\n        },\n      };\n    }\n\n    case GlobalMessageActions.REMOVE_MESSAGES_BY_TYPE: {\n      const entities = {\n        ...state.entities,\n        [action.payload]: [],\n      };\n      return {\n        ...state,\n        entities,\n      };\n    }\n  }\n\n  return state;\n}\n","import { InjectionToken, Provider } from '@angular/core';\nimport * as fromGlobalMessage from './global-message.reducer';\nimport { GlobalMessageState } from '../global-message-state';\nimport { ActionReducer } from '@ngrx/store';\n\nexport function getReducers(): ActionReducer<GlobalMessageState> {\n  return fromGlobalMessage.reducer;\n}\n\nexport const reducerToken: InjectionToken<ActionReducer<\n  GlobalMessageState\n>> = new InjectionToken<ActionReducer<GlobalMessageState>>(\n  'GlobalMessageReducers'\n);\n\nexport const reducerProvider: Provider = {\n  provide: reducerToken,\n  useFactory: getReducers,\n};\n","import { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\n\nimport { reducerToken, reducerProvider } from './reducers/index';\nimport { GLOBAL_MESSAGE_FEATURE } from './global-message-state';\nimport { StateModule } from '../../state/state.module';\n\n@NgModule({\n  imports: [\n    StateModule,\n    StoreModule.forFeature(GLOBAL_MESSAGE_FEATURE, reducerToken),\n  ],\n  providers: [reducerProvider],\n})\nexport class GlobalMessageStoreModule {}\n","export function shallowEqualObjects(objA: object, objB: object): boolean {\n  if (objA === objB) {\n    return true;\n  }\n  if (!objA || !objB) {\n    return false;\n  }\n  const aKeys = Object.keys(objA);\n  const bKeys = Object.keys(objB);\n  const aKeysLen = aKeys.length;\n  const bKeysLen = bKeys.length;\n\n  if (aKeysLen !== bKeysLen) {\n    return false;\n  }\n  for (let i = 0; i < aKeysLen; i++) {\n    const key = aKeys[i];\n    if (objA[key] !== objB[key]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function deepEqualObjects(objA: object, objB: object): boolean {\n  if (objA === objB) {\n    return true; // if both objA and objB are null or undefined and exactly the same\n  } else if (!(objA instanceof Object) || !(objB instanceof Object)) {\n    return false; // if they are not strictly equal, they both need to be Objects\n  } else if (objA.constructor !== objB.constructor) {\n    // they must have the exact same prototype chain, the closest we can do is\n    // test their constructor.\n    return false;\n  } else {\n    for (const key in objA) {\n      if (!objA.hasOwnProperty(key)) {\n        continue; // other properties were tested using objA.constructor === y.constructor\n      }\n      if (!objB.hasOwnProperty(key)) {\n        return false; // allows to compare objA[ key ] and objB[ key ] when set to undefined\n      }\n      if (objA[key] === objB[key]) {\n        continue; // if they have the same strict value or identity then they are equal\n      }\n      if (typeof objA[key] !== 'object') {\n        return false; // Numbers, Strings, Functions, Booleans must be strictly equal\n      }\n      if (!deepEqualObjects(objA[key], objB[key])) {\n        return false;\n      }\n    }\n    for (const key in objB) {\n      if (objB.hasOwnProperty(key) && !objA.hasOwnProperty(key)) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nexport function countOfDeepEqualObjects(obj: any, arr: Array<any>): number {\n  return arr.reduce((acc, curr) => {\n    if (deepEqualObjects(obj, curr)) {\n      acc++;\n    }\n    return acc;\n  }, 0);\n}\n\nexport function indexOfFirstOccurrence(\n  obj: any,\n  arr: Array<any>\n): number | undefined {\n  for (let index = 0; index < arr.length; index++) {\n    if (deepEqualObjects(arr[index], obj)) {\n      return index;\n    }\n  }\n}\n","import { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { select, Store } from '@ngrx/store';\nimport { EMPTY, Observable, of } from 'rxjs';\nimport {\n  concatMap,\n  delay,\n  filter,\n  map,\n  pluck,\n  switchMap,\n  take,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { Translatable } from '../../../i18n/translatable';\nimport {\n  countOfDeepEqualObjects,\n  indexOfFirstOccurrence,\n} from '../../../util/compare-equal-objects';\nimport { GlobalMessageConfig } from '../../config/global-message-config';\nimport { GlobalMessage } from '../../models/global-message.model';\nimport { GlobalMessageActions } from '../actions/index';\nimport { StateWithGlobalMessage } from '../global-message-state';\nimport { GlobalMessageSelectors } from '../selectors/index';\n\n@Injectable()\nexport class GlobalMessageEffect {\n  @Effect()\n  removeDuplicated$: Observable<\n    GlobalMessageActions.RemoveMessage\n  > = this.actions$.pipe(\n    ofType(GlobalMessageActions.ADD_MESSAGE),\n    pluck('payload'),\n    switchMap((message: GlobalMessage) =>\n      of(message.text).pipe(\n        withLatestFrom(\n          this.store.pipe(\n            select(\n              GlobalMessageSelectors.getGlobalMessageEntitiesByType(\n                message.type\n              )\n            )\n          )\n        ),\n        filter(\n          ([text, messages]: [Translatable, Translatable[]]) =>\n            countOfDeepEqualObjects(text, messages) > 1\n        ),\n        map(\n          ([text, messages]: [Translatable, Translatable[]]) =>\n            new GlobalMessageActions.RemoveMessage({\n              type: message.type,\n              index: indexOfFirstOccurrence(text, messages),\n            })\n        )\n      )\n    )\n  );\n\n  @Effect()\n  hideAfterDelay$: Observable<\n    GlobalMessageActions.RemoveMessage\n  > = isPlatformBrowser(this.platformId) // we don't want to run this logic when doing SSR\n    ? this.actions$.pipe(\n        ofType(GlobalMessageActions.ADD_MESSAGE),\n        pluck('payload'),\n        concatMap((message: GlobalMessage) => {\n          const config = this.config.globalMessages[message.type];\n          return this.store.pipe(\n            select(\n              GlobalMessageSelectors.getGlobalMessageCountByType(message.type)\n            ),\n            take(1),\n            filter(\n              (count: number) =>\n                ((config && config.timeout !== undefined) || message.timeout) &&\n                count &&\n                count > 0\n            ),\n            delay(message.timeout || config.timeout),\n            switchMap(() =>\n              of(\n                new GlobalMessageActions.RemoveMessage({\n                  type: message.type,\n                  index: 0,\n                })\n              )\n            )\n          );\n        })\n      )\n    : EMPTY;\n\n  constructor(\n    private actions$: Actions,\n    private store: Store<StateWithGlobalMessage>,\n    private config: GlobalMessageConfig,\n    @Inject(PLATFORM_ID) private platformId: any\n  ) {}\n}\n","import { GlobalMessageType } from '../models/global-message.model';\nimport { GlobalMessageConfig } from './global-message-config';\n\nexport function defaultGlobalMessageConfigFactory(): GlobalMessageConfig {\n  return {\n    globalMessages: {\n      [GlobalMessageType.MSG_TYPE_CONFIRMATION]: {\n        timeout: 3000,\n      },\n      [GlobalMessageType.MSG_TYPE_INFO]: {\n        timeout: 3000,\n      },\n      [GlobalMessageType.MSG_TYPE_ERROR]: {\n        timeout: 7000,\n      },\n      [GlobalMessageType.MSG_TYPE_WARNING]: {\n        timeout: 7000,\n      },\n    },\n  };\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport {\n  errorHandlers,\n  httpErrorInterceptors,\n} from './http-interceptors/index';\nimport { GlobalMessageStoreModule } from './store/global-message-store.module';\nimport { GlobalMessageEffect } from './store/effects/global-message.effect';\n\nimport { defaultGlobalMessageConfigFactory } from './config/default-global-message-config';\nimport { provideDefaultConfigFactory } from '../config/config-providers';\n\n@NgModule({\n  imports: [\n    GlobalMessageStoreModule,\n    EffectsModule.forFeature([GlobalMessageEffect]),\n  ],\n  providers: [provideDefaultConfigFactory(defaultGlobalMessageConfigFactory)],\n})\nexport class GlobalMessageModule {\n  static forRoot(): ModuleWithProviders<GlobalMessageModule> {\n    return {\n      ngModule: GlobalMessageModule,\n      providers: [...errorHandlers, ...httpErrorInterceptors],\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { combineLatest, from, Observable, of } from 'rxjs';\nimport { map, switchMap, take } from 'rxjs/operators';\nimport { StateWithClientAuth } from '../../auth/client-auth/store/client-auth-state';\nimport { AuthService } from '../../auth/user-auth/facade/auth.service';\nimport { UserIdService } from '../../auth/user-auth/facade/user-id.service';\nimport { AuthToken } from '../../auth/user-auth/models/auth-token.model';\nimport { AuthRedirectService } from '../../auth/user-auth/services/auth-redirect.service';\nimport { OAuthLibWrapperService } from '../../auth/user-auth/services/oauth-lib-wrapper.service';\nimport { AuthActions } from '../../auth/user-auth/store/actions/index';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n} from '../../global-message/index';\nimport { RoutingService } from '../../routing/facade/routing.service';\nimport { AsmAuthStorageService, TokenTarget } from './asm-auth-storage.service';\n\n/**\n * Version of AuthService that is working for both user na CS agent.\n * Overrides AuthService when ASM module is enabled.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AsmAuthService extends AuthService {\n  constructor(\n    protected store: Store<StateWithClientAuth>,\n    protected userIdService: UserIdService,\n    protected oAuthLibWrapperService: OAuthLibWrapperService,\n    protected authStorageService: AsmAuthStorageService,\n    protected authRedirectService: AuthRedirectService,\n    protected globalMessageService: GlobalMessageService,\n    protected routingService: RoutingService\n  ) {\n    super(\n      store,\n      userIdService,\n      oAuthLibWrapperService,\n      authStorageService,\n      authRedirectService,\n      routingService\n    );\n  }\n\n  protected canUserLogin(): boolean {\n    let tokenTarget: TokenTarget;\n    let token: AuthToken;\n\n    this.authStorageService\n      .getToken()\n      .subscribe((tok) => (token = tok))\n      .unsubscribe();\n    this.authStorageService\n      .getTokenTarget()\n      .subscribe((tokTarget) => (tokenTarget = tokTarget))\n      .unsubscribe();\n    return !(\n      Boolean(token?.access_token) && tokenTarget === TokenTarget.CSAgent\n    );\n  }\n\n  protected warnAboutLoggedCSAgent(): void {\n    this.globalMessageService.add(\n      {\n        key: 'asm.auth.agentLoggedInError',\n      },\n      GlobalMessageType.MSG_TYPE_ERROR\n    );\n  }\n\n  /**\n   * Loads a new user token with Resource Owner Password Flow when CS agent is not logged in.\n   * @param userId\n   * @param password\n   */\n  async loginWithCredentials(userId: string, password: string): Promise<void> {\n    if (this.canUserLogin()) {\n      await super.loginWithCredentials(userId, password);\n    } else {\n      this.warnAboutLoggedCSAgent();\n    }\n  }\n\n  /**\n   * Initialize Implicit/Authorization Code flow by redirecting to OAuth server when CS agent is not logged in.\n   */\n  loginWithRedirect(): boolean {\n    if (this.canUserLogin()) {\n      super.loginWithRedirect();\n      return true;\n    } else {\n      this.warnAboutLoggedCSAgent();\n      return false;\n    }\n  }\n\n  /**\n   * Revokes tokens and clears state for logged user (tokens, userId).\n   * To perform logout it is best to use `logout` method. Use this method with caution.\n   */\n  coreLogout(): Promise<any> {\n    return this.userIdService\n      .isEmulated()\n      .pipe(\n        take(1),\n        switchMap((isEmulated) => {\n          if (isEmulated) {\n            this.authStorageService.clearEmulatedUserToken();\n            this.userIdService.clearUserId();\n            this.store.dispatch(new AuthActions.Logout());\n            return of(true);\n          } else {\n            return from(super.coreLogout());\n          }\n        })\n      )\n      .toPromise();\n  }\n\n  /**\n   * Returns `true` if user is logged in or being emulated.\n   */\n  isUserLoggedIn(): Observable<boolean> {\n    return combineLatest([\n      this.authStorageService.getToken(),\n      this.userIdService.isEmulated(),\n      this.authStorageService.getTokenTarget(),\n    ]).pipe(\n      map(\n        ([token, isEmulated, tokenTarget]) =>\n          Boolean(token?.access_token) &&\n          (tokenTarget === TokenTarget.User ||\n            (tokenTarget === TokenTarget.CSAgent && isEmulated))\n      )\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {\n  CustomerSearchOptions,\n  CustomerSearchPage,\n} from '../models/asm.models';\nimport { AsmAdapter } from './asm.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AsmConnector {\n  constructor(protected asmAdapter: AsmAdapter) {}\n\n  customerSearch(\n    options: CustomerSearchOptions\n  ): Observable<CustomerSearchPage> {\n    return this.asmAdapter.customerSearch(options);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { AsmConnector } from '../../connectors/asm.connector';\nimport { CustomerSearchPage } from '../../models/asm.models';\nimport { AsmActions } from '../actions/index';\n\n@Injectable()\nexport class CustomerEffects {\n  @Effect()\n  customerSearch$: Observable<AsmActions.CustomerAction> = this.actions$.pipe(\n    ofType(AsmActions.CUSTOMER_SEARCH),\n    map((action: AsmActions.CustomerSearch) => action.payload),\n    switchMap((options) =>\n      this.asmConnector.customerSearch(options).pipe(\n        map((customerSearchResults: CustomerSearchPage) => {\n          return new AsmActions.CustomerSearchSuccess(customerSearchResults);\n        }),\n        catchError((error) =>\n          of(new AsmActions.CustomerSearchFail(normalizeHttpError(error)))\n        )\n      )\n    )\n  );\n\n  constructor(private actions$: Actions, private asmConnector: AsmConnector) {}\n}\n","import { CustomerEffects } from './customer.effect';\n\nexport const effects: any[] = [CustomerEffects];\n\nexport * from './customer.effect';\n","import { AsmUi } from '../../models/asm.models';\nimport { AsmActions } from '../actions/index';\n\nexport const initialState: AsmUi = <AsmUi>{ collapsed: false };\n\nexport function reducer(\n  state = initialState,\n  action: AsmActions.AsmUiAction\n): AsmUi {\n  switch (action.type) {\n    case AsmActions.ASM_UI_UPDATE: {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { InjectionToken, Provider } from '@angular/core';\nimport {\n  Action,\n  ActionReducer,\n  ActionReducerMap,\n  MetaReducer,\n} from '@ngrx/store';\nimport { loaderReducer } from '../../../state/utils/loader/loader.reducer';\nimport { CustomerSearchPage } from '../../models/asm.models';\nimport { AsmActions } from '../actions';\nimport { AsmState, CUSTOMER_SEARCH_DATA } from '../asm-state';\nimport * as fromAsmUiReducer from './asm-ui.reducer';\n\nexport function getReducers(): ActionReducerMap<AsmState> {\n  return {\n    customerSearchResult: loaderReducer<CustomerSearchPage>(\n      CUSTOMER_SEARCH_DATA\n    ),\n    asmUi: fromAsmUiReducer.reducer,\n  };\n}\n\nexport const reducerToken: InjectionToken<ActionReducerMap<\n  AsmState\n>> = new InjectionToken<ActionReducerMap<AsmState>>('AsmReducers');\n\nexport const reducerProvider: Provider = {\n  provide: reducerToken,\n  useFactory: getReducers,\n};\n\nexport function clearCustomerSupportAgentAsmState(\n  reducer: ActionReducer<AsmState, Action>\n): ActionReducer<AsmState, Action> {\n  return function (state, action) {\n    if (action.type === AsmActions.LOGOUT_CUSTOMER_SUPPORT_AGENT) {\n      state = {\n        ...state,\n        customerSearchResult: undefined,\n      };\n    }\n    return reducer(state, action);\n  };\n}\n\nexport const metaReducers: MetaReducer<any>[] = [\n  clearCustomerSupportAgentAsmState,\n];\n","import { createFeatureSelector, MemoizedSelector } from '@ngrx/store';\nimport { AsmState, ASM_FEATURE, StateWithAsm } from '../asm-state';\n\nexport const getAsmState: MemoizedSelector<\n  StateWithAsm,\n  AsmState\n> = createFeatureSelector<AsmState>(ASM_FEATURE);\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { AsmUi } from '../../models/asm.models';\nimport { AsmState, StateWithAsm } from '../asm-state';\nimport { getAsmState } from './feature.selector';\n\nexport const getAsmUi: MemoizedSelector<StateWithAsm, AsmUi> = createSelector(\n  getAsmState,\n  (state: AsmState) => state.asmUi\n);\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { StateUtils } from '../../../state/utils/index';\nimport { CustomerSearchPage } from '../../models/asm.models';\nimport { AsmState, StateWithAsm } from '../asm-state';\nimport { getAsmState } from './feature.selector';\n\nexport const getCustomerSearchResultsLoaderState: MemoizedSelector<\n  StateWithAsm,\n  StateUtils.LoaderState<CustomerSearchPage>\n> = createSelector(\n  getAsmState,\n  (state: AsmState) => state.customerSearchResult\n);\n\nexport const getCustomerSearchResults: MemoizedSelector<\n  StateWithAsm,\n  CustomerSearchPage\n> = createSelector(getCustomerSearchResultsLoaderState, (state) =>\n  StateUtils.loaderValueSelector(state)\n);\n\nexport const getCustomerSearchResultsLoading: MemoizedSelector<\n  StateWithAsm,\n  boolean\n> = createSelector(getCustomerSearchResultsLoaderState, (state) =>\n  StateUtils.loaderLoadingSelector(state)\n);\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { combineLatest, Observable, of, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AuthToken } from '../../auth/user-auth/models/auth-token.model';\nimport { StatePersistenceService } from '../../state/services/state-persistence.service';\nimport { AsmUi } from '../models/asm.models';\nimport { AsmActions, AsmSelectors, StateWithAsm } from '../store';\nimport { AsmAuthStorageService, TokenTarget } from './asm-auth-storage.service';\n\n/**\n * ASM state synced to browser storage.\n */\nexport interface SyncedAsmState {\n  ui?: AsmUi;\n  emulatedUserToken?: AuthToken;\n  tokenTarget?: TokenTarget;\n}\n\n/**\n * Responsible for storing ASM state in the browser storage.\n * Uses `StatePersistenceService` mechanism.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AsmStatePersistenceService implements OnDestroy {\n  protected subscription = new Subscription();\n\n  constructor(\n    protected statePersistenceService: StatePersistenceService,\n    protected store: Store<StateWithAsm>,\n    protected authStorageService: AsmAuthStorageService\n  ) {}\n\n  /**\n   * Identifier used for storage key.\n   */\n  protected key = 'asm';\n\n  /**\n   * Initializes the synchronization between state and browser storage.\n   */\n  public initSync() {\n    this.subscription.add(\n      this.statePersistenceService.syncWithStorage({\n        key: this.key,\n        state$: this.getAsmState(),\n        onRead: (state) => this.onRead(state),\n      })\n    );\n  }\n\n  /**\n   * Gets and transforms state from different sources into the form that should\n   * be saved in storage.\n   */\n  protected getAsmState(): Observable<SyncedAsmState> {\n    return combineLatest([\n      this.store.pipe(select(AsmSelectors.getAsmUi)),\n      of(this.authStorageService.getEmulatedUserToken()),\n      this.authStorageService.getTokenTarget(),\n    ]).pipe(\n      map(([ui, emulatedUserToken, tokenTarget]) => {\n        let emulatedToken = emulatedUserToken;\n        if (emulatedToken) {\n          emulatedToken = { ...emulatedUserToken };\n          // To minimize risk of user account hijacking we don't persist emulated user refresh_token\n          delete emulatedToken.refresh_token;\n        }\n        return {\n          ui,\n          emulatedUserToken: emulatedToken,\n          tokenTarget,\n        };\n      })\n    );\n  }\n\n  /**\n   * Function called on each browser storage read.\n   * Used to update state from browser -> state.\n   */\n  protected onRead(state: SyncedAsmState) {\n    if (state) {\n      if (state.ui) {\n        this.store.dispatch(new AsmActions.AsmUiUpdate(state.ui));\n      }\n      if (state.emulatedUserToken) {\n        this.authStorageService.setEmulatedUserToken(state.emulatedUserToken);\n      }\n      if (state.tokenTarget) {\n        this.authStorageService.setTokenTarget(state.tokenTarget);\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { StateModule } from '../../state/state.module';\nimport { ASM_FEATURE } from './asm-state';\nimport { effects } from './effects/index';\nimport { metaReducers, reducerProvider, reducerToken } from './reducers/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StateModule,\n    StoreModule.forFeature(ASM_FEATURE, reducerToken, { metaReducers }),\n    EffectsModule.forFeature(effects),\n  ],\n  providers: [reducerProvider],\n})\nexport class AsmStoreModule {}\n","import { CommonModule } from '@angular/common';\nimport { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';\nimport { AuthService } from '../auth/user-auth/facade/auth.service';\nimport { AuthHttpHeaderService } from '../auth/user-auth/services/auth-http-header.service';\nimport { AuthStorageService } from '../auth/user-auth/services/auth-storage.service';\nimport { provideDefaultConfig } from '../config/config-providers';\nimport { defaultAsmConfig } from './config/default-asm-config';\nimport { AsmAuthHttpHeaderService } from './services/asm-auth-http-header.service';\nimport { AsmAuthStorageService } from './services/asm-auth-storage.service';\nimport { AsmAuthService } from './services/asm-auth.service';\nimport { AsmStatePersistenceService } from './services/asm-state-persistence.service';\nimport { AsmStoreModule } from './store/asm-store.module';\n\nexport function asmStatePersistenceFactory(\n  asmStatePersistenceService: AsmStatePersistenceService\n) {\n  const result = () => asmStatePersistenceService.initSync();\n  return result;\n}\n\n@NgModule({\n  imports: [CommonModule, AsmStoreModule],\n})\nexport class AsmModule {\n  static forRoot(): ModuleWithProviders<AsmModule> {\n    return {\n      ngModule: AsmModule,\n      providers: [\n        provideDefaultConfig(defaultAsmConfig),\n        {\n          provide: AuthStorageService,\n          useExisting: AsmAuthStorageService,\n        },\n        {\n          provide: AuthService,\n          useExisting: AsmAuthService,\n        },\n        {\n          provide: AuthHttpHeaderService,\n          useExisting: AsmAuthHttpHeaderService,\n        },\n        {\n          provide: APP_INITIALIZER,\n          useFactory: asmStatePersistenceFactory,\n          deps: [AsmStatePersistenceService],\n          multi: true,\n        },\n      ],\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport {\n  AsmUi,\n  CustomerSearchOptions,\n  CustomerSearchPage,\n} from '../models/asm.models';\nimport { AsmActions } from '../store/actions/index';\nimport { StateWithAsm } from '../store/asm-state';\nimport { AsmSelectors } from '../store/index';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AsmService {\n  constructor(protected store: Store<StateWithAsm>) {}\n\n  /**\n   * Search for customers\n   * @param options\n   */\n  customerSearch(options: CustomerSearchOptions): void {\n    this.store.dispatch(new AsmActions.CustomerSearch(options));\n  }\n\n  /**\n   * Reset the customer search result data to the initial state.\n   */\n  customerSearchReset(): void {\n    this.store.dispatch(new AsmActions.CustomerSearchReset());\n  }\n\n  /**\n   * Returns the customer search result data.\n   */\n  getCustomerSearchResults(): Observable<CustomerSearchPage> {\n    return this.store.pipe(select(AsmSelectors.getCustomerSearchResults));\n  }\n\n  /**\n   * Returns the customer search result loading status.\n   */\n  getCustomerSearchResultsLoading(): Observable<boolean> {\n    return this.store.pipe(\n      select(AsmSelectors.getCustomerSearchResultsLoading)\n    );\n  }\n\n  /**\n   * Updates the state of the ASM UI\n   */\n  updateAsmUiState(asmUi: AsmUi): void {\n    this.store.dispatch(new AsmActions.AsmUiUpdate(asmUi));\n  }\n\n  /**\n   * Get the state of the ASM UI\n   */\n  getAsmUiState(): Observable<AsmUi> {\n    return this.store.pipe(select(AsmSelectors.getAsmUi));\n  }\n}\n","import { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { CartEntryAdapter } from './cart-entry.adapter';\nimport { CartModification } from '../../../model/cart.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartEntryConnector {\n  constructor(protected adapter: CartEntryAdapter) {}\n\n  public add(\n    userId: string,\n    cartId: string,\n    productCode: string,\n    quantity?: number\n  ): Observable<CartModification> {\n    return this.adapter.add(userId, cartId, productCode, quantity);\n  }\n\n  public update(\n    userId: string,\n    cartId: string,\n    entryNumber: string,\n    qty: number,\n    pickupStore?: string\n  ): Observable<CartModification> {\n    return this.adapter.update(userId, cartId, entryNumber, qty, pickupStore);\n  }\n\n  public remove(\n    userId: string,\n    cartId: string,\n    entryNumber: string\n  ): Observable<any> {\n    return this.adapter.remove(userId, cartId, entryNumber);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { from, Observable } from 'rxjs';\nimport { catchError, concatMap, map } from 'rxjs/operators';\nimport { CartModification } from '../../../model/cart.model';\nimport { SiteContextActions } from '../../../site-context/store/actions/index';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { withdrawOn } from '../../../util/rxjs/withdraw-on';\nimport { CartEntryConnector } from '../../connectors/entry/cart-entry.connector';\nimport { CartActions } from '../actions/index';\n\n@Injectable()\nexport class CartEntryEffects {\n  private contextChange$ = this.actions$.pipe(\n    ofType(\n      SiteContextActions.CURRENCY_CHANGE,\n      SiteContextActions.LANGUAGE_CHANGE\n    )\n  );\n\n  @Effect()\n  addEntry$: Observable<\n    | CartActions.CartAddEntrySuccess\n    | CartActions.CartAddEntryFail\n    | CartActions.LoadCart\n  > = this.actions$.pipe(\n    ofType(CartActions.CART_ADD_ENTRY),\n    map((action: CartActions.CartAddEntry) => action.payload),\n    concatMap((payload) => {\n      return this.cartEntryConnector\n        .add(\n          payload.userId,\n          payload.cartId,\n          payload.productCode,\n          payload.quantity\n        )\n        .pipe(\n          map(\n            (cartModification: CartModification) =>\n              new CartActions.CartAddEntrySuccess({\n                ...payload,\n                ...(cartModification as Required<CartModification>),\n              })\n          ),\n          catchError((error) =>\n            from([\n              new CartActions.CartAddEntryFail({\n                ...payload,\n                error: normalizeHttpError(error),\n              }),\n              new CartActions.LoadCart({\n                cartId: payload.cartId,\n                userId: payload.userId,\n              }),\n            ])\n          )\n        );\n    }),\n    withdrawOn(this.contextChange$)\n  );\n\n  @Effect()\n  removeEntry$: Observable<\n    | CartActions.CartRemoveEntrySuccess\n    | CartActions.CartRemoveEntryFail\n    | CartActions.LoadCart\n  > = this.actions$.pipe(\n    ofType(CartActions.CART_REMOVE_ENTRY),\n    map((action: CartActions.CartRemoveEntry) => action.payload),\n    concatMap((payload) =>\n      this.cartEntryConnector\n        .remove(payload.userId, payload.cartId, payload.entryNumber)\n        .pipe(\n          map(() => {\n            return new CartActions.CartRemoveEntrySuccess({\n              ...payload,\n            });\n          }),\n          catchError((error) =>\n            from([\n              new CartActions.CartRemoveEntryFail({\n                ...payload,\n                error: normalizeHttpError(error),\n              }),\n              new CartActions.LoadCart({\n                cartId: payload.cartId,\n                userId: payload.userId,\n              }),\n            ])\n          )\n        )\n    ),\n    withdrawOn(this.contextChange$)\n  );\n\n  @Effect()\n  updateEntry$: Observable<\n    | CartActions.CartUpdateEntrySuccess\n    | CartActions.CartUpdateEntryFail\n    | CartActions.LoadCart\n  > = this.actions$.pipe(\n    ofType(CartActions.CART_UPDATE_ENTRY),\n    map((action: CartActions.CartUpdateEntry) => action.payload),\n    concatMap((payload) =>\n      this.cartEntryConnector\n        .update(\n          payload.userId,\n          payload.cartId,\n          payload.entryNumber,\n          payload.quantity\n        )\n        .pipe(\n          map(() => {\n            return new CartActions.CartUpdateEntrySuccess({\n              ...payload,\n            });\n          }),\n          catchError((error) =>\n            from([\n              new CartActions.CartUpdateEntryFail({\n                ...payload,\n                error: normalizeHttpError(error),\n              }),\n              new CartActions.LoadCart({\n                cartId: payload.cartId,\n                userId: payload.userId,\n              }),\n            ])\n          )\n        )\n    ),\n    withdrawOn(this.contextChange$)\n  );\n\n  constructor(\n    private actions$: Actions,\n    private cartEntryConnector: CartEntryConnector\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CartVoucherAdapter } from './cart-voucher.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartVoucherConnector {\n  constructor(protected adapter: CartVoucherAdapter) {}\n\n  public add(\n    userId: string,\n    cartId: string,\n    voucherId: string\n  ): Observable<{}> {\n    return this.adapter.add(userId, cartId, voucherId);\n  }\n\n  public remove(\n    userId: string,\n    cartId: string,\n    voucherId: string\n  ): Observable<{}> {\n    return this.adapter.remove(userId, cartId, voucherId);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { from, Observable } from 'rxjs';\nimport { catchError, map, mergeMap } from 'rxjs/operators';\nimport { GlobalMessageService } from '../../../global-message/facade/global-message.service';\nimport { GlobalMessageType } from '../../../global-message/models/global-message.model';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { CartVoucherConnector } from '../../connectors/voucher/cart-voucher.connector';\nimport { CartActions } from '../actions/index';\n\n@Injectable()\nexport class CartVoucherEffects {\n  constructor(\n    private actions$: Actions,\n    private cartVoucherConnector: CartVoucherConnector,\n    private messageService: GlobalMessageService\n  ) {}\n\n  @Effect()\n  addCartVoucher$: Observable<\n    | CartActions.CartVoucherAction\n    | CartActions.LoadCart\n    | CartActions.CartProcessesDecrement\n  > = this.actions$.pipe(\n    ofType(CartActions.CART_ADD_VOUCHER),\n    map((action: CartActions.CartAddVoucher) => action.payload),\n    mergeMap((payload) => {\n      return this.cartVoucherConnector\n        .add(payload.userId, payload.cartId, payload.voucherId)\n        .pipe(\n          map(() => {\n            this.showGlobalMessage(\n              'voucher.applyVoucherSuccess',\n              payload.voucherId,\n              GlobalMessageType.MSG_TYPE_CONFIRMATION\n            );\n            return new CartActions.CartAddVoucherSuccess({\n              ...payload,\n            });\n          }),\n          catchError((error) =>\n            from([\n              new CartActions.CartAddVoucherFail({\n                ...payload,\n                error: normalizeHttpError(error),\n              }),\n              new CartActions.CartProcessesDecrement(payload.cartId),\n              new CartActions.LoadCart({\n                userId: payload.userId,\n                cartId: payload.cartId,\n              }),\n            ])\n          )\n        );\n    })\n  );\n\n  @Effect()\n  removeCartVoucher$: Observable<\n    CartActions.CartVoucherAction | CartActions.LoadCart\n  > = this.actions$.pipe(\n    ofType(CartActions.CART_REMOVE_VOUCHER),\n    map((action: CartActions.CartRemoveVoucher) => action.payload),\n    mergeMap((payload) => {\n      return this.cartVoucherConnector\n        .remove(payload.userId, payload.cartId, payload.voucherId)\n        .pipe(\n          map(() => {\n            this.showGlobalMessage(\n              'voucher.removeVoucherSuccess',\n              payload.voucherId,\n              GlobalMessageType.MSG_TYPE_INFO\n            );\n            return new CartActions.CartRemoveVoucherSuccess({\n              userId: payload.userId,\n              cartId: payload.cartId,\n              voucherId: payload.voucherId,\n            });\n          }),\n          catchError((error) =>\n            from([\n              new CartActions.CartRemoveVoucherFail({\n                error: normalizeHttpError(error),\n                cartId: payload.cartId,\n                userId: payload.userId,\n                voucherId: payload.voucherId,\n              }),\n              new CartActions.LoadCart({\n                userId: payload.userId,\n                cartId: payload.cartId,\n              }),\n            ])\n          )\n        );\n    })\n  );\n\n  private showGlobalMessage(\n    text: string,\n    param: string,\n    messageType: GlobalMessageType\n  ) {\n    this.messageService.add(\n      { key: text, params: { voucherCode: param } },\n      messageType\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Cart } from '../../../model/cart.model';\nimport { CartAdapter } from './cart.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartConnector {\n  constructor(protected adapter: CartAdapter) {}\n\n  public loadAll(userId: string): Observable<Cart[]> {\n    return this.adapter.loadAll(userId);\n  }\n\n  public load(userId: string, cartId: string): Observable<Cart> {\n    return this.adapter.load(userId, cartId);\n  }\n\n  public create(\n    userId: string,\n    oldCartId?: string,\n    toMergeCartGuid?: string\n  ): Observable<Cart> {\n    return this.adapter.create(userId, oldCartId, toMergeCartGuid);\n  }\n\n  public delete(userId: string, cartId: string): Observable<{}> {\n    return this.adapter.delete(userId, cartId);\n  }\n\n  public addEmail(\n    userId: string,\n    cartId: string,\n    email: string\n  ): Observable<{}> {\n    return this.adapter.addEmail(userId, cartId, email);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { select, Store } from '@ngrx/store';\nimport { from, Observable, of } from 'rxjs';\nimport {\n  catchError,\n  concatMap,\n  filter,\n  groupBy,\n  map,\n  mergeMap,\n  switchMap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { CheckoutActions } from '../../../checkout/store/actions';\nimport { Cart } from '../../../model/cart.model';\nimport { OCC_CART_ID_CURRENT } from '../../../occ/utils/occ-constants';\nimport { SiteContextActions } from '../../../site-context/store/actions/index';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { withdrawOn } from '../../../util/rxjs/withdraw-on';\nimport { CartConnector } from '../../connectors/cart/cart.connector';\nimport { getCartIdByUserId, isCartNotFoundError } from '../../utils/utils';\nimport { CartActions } from '../actions/index';\nimport { StateWithMultiCart } from '../multi-cart-state';\nimport { getCartHasPendingProcessesSelectorFactory } from '../selectors/multi-cart.selector';\n\n@Injectable()\nexport class CartEffects {\n  private contextChange$ = this.actions$.pipe(\n    ofType(\n      SiteContextActions.CURRENCY_CHANGE,\n      SiteContextActions.LANGUAGE_CHANGE\n    )\n  );\n\n  @Effect()\n  loadCart$: Observable<\n    | CartActions.LoadCartFail\n    | CartActions.LoadCartSuccess\n    | CartActions.RemoveCart\n  > = this.actions$.pipe(\n    ofType(CartActions.LOAD_CART),\n    map((action: CartActions.LoadCart) => action.payload),\n    groupBy((payload) => payload.cartId),\n    mergeMap((group$) =>\n      group$.pipe(\n        switchMap((payload) => {\n          return of(payload).pipe(\n            withLatestFrom(\n              this.store.pipe(\n                select(\n                  getCartHasPendingProcessesSelectorFactory(payload.cartId)\n                )\n              )\n            )\n          );\n        }),\n        filter(([_, hasPendingProcesses]) => !hasPendingProcesses),\n        map(([payload]) => payload),\n        switchMap((payload) => {\n          return this.cartConnector.load(payload.userId, payload.cartId).pipe(\n            mergeMap((cart: Cart) => {\n              let actions = [];\n              if (cart) {\n                actions.push(\n                  new CartActions.LoadCartSuccess({\n                    ...payload,\n                    cart,\n                    cartId: getCartIdByUserId(cart, payload.userId),\n                  })\n                );\n\n                if (payload.cartId === OCC_CART_ID_CURRENT) {\n                  // Removing cart from entity object under `current` key as it is no longer needed.\n                  // Current cart is loaded under it's code entity.\n                  actions.push(\n                    new CartActions.RemoveCart({ cartId: OCC_CART_ID_CURRENT })\n                  );\n                }\n              } else {\n                actions = [\n                  new CartActions.LoadCartFail({\n                    ...payload,\n                    error: {},\n                  }),\n                ];\n              }\n              return actions;\n            }),\n            catchError((error) => {\n              if (error?.error?.errors) {\n                const couponExpiredErrors = error.error.errors.filter(\n                  (err) => err.reason === 'invalid'\n                );\n                if (couponExpiredErrors.length > 0) {\n                  // Reload in case of expired coupon.\n                  return of(new CartActions.LoadCart({ ...payload }));\n                }\n\n                const cartNotFoundErrors = error.error.errors.filter(\n                  (err) =>\n                    isCartNotFoundError(err) ||\n                    err.reason === 'UnknownResourceError'\n                );\n                if (cartNotFoundErrors.length > 0) {\n                  // Remove cart as it doesn't exist on backend (selective cart always exists).\n                  return of(\n                    new CartActions.RemoveCart({ cartId: payload.cartId })\n                  );\n                }\n              }\n              return of(\n                new CartActions.LoadCartFail({\n                  ...payload,\n                  error: normalizeHttpError(error),\n                })\n              );\n            })\n          );\n        })\n      )\n    ),\n    withdrawOn(this.contextChange$)\n  );\n\n  @Effect()\n  createCart$: Observable<\n    | CartActions.MergeCartSuccess\n    | CartActions.CreateCartSuccess\n    | CartActions.CreateCartFail\n    | CartActions.SetTempCart\n  > = this.actions$.pipe(\n    ofType(CartActions.CREATE_CART),\n    map((action: CartActions.CreateCart) => action.payload),\n    mergeMap((payload) => {\n      return this.cartConnector\n        .create(payload.userId, payload.oldCartId, payload.toMergeCartGuid)\n        .pipe(\n          switchMap((cart: Cart) => {\n            const conditionalActions = [];\n            if (payload.oldCartId) {\n              conditionalActions.push(\n                new CartActions.MergeCartSuccess({\n                  extraData: payload.extraData,\n                  userId: payload.userId,\n                  tempCartId: payload.tempCartId,\n                  cartId: getCartIdByUserId(cart, payload.userId),\n                  oldCartId: payload.oldCartId,\n                })\n              );\n            }\n            return [\n              new CartActions.CreateCartSuccess({\n                ...payload,\n                cart,\n                cartId: getCartIdByUserId(cart, payload.userId),\n              }),\n              new CartActions.SetTempCart({\n                cart,\n                tempCartId: payload.tempCartId,\n              }),\n              ...conditionalActions,\n            ];\n          }),\n          catchError((error) =>\n            of(\n              new CartActions.CreateCartFail({\n                ...payload,\n                error: normalizeHttpError(error),\n              })\n            )\n          )\n        );\n    }),\n    withdrawOn(this.contextChange$)\n  );\n\n  @Effect()\n  mergeCart$: Observable<CartActions.CreateCart> = this.actions$.pipe(\n    ofType(CartActions.MERGE_CART),\n    map((action: CartActions.MergeCart) => action.payload),\n    mergeMap((payload) => {\n      return this.cartConnector.load(payload.userId, OCC_CART_ID_CURRENT).pipe(\n        mergeMap((currentCart) => {\n          return [\n            new CartActions.CreateCart({\n              userId: payload.userId,\n              oldCartId: payload.cartId,\n              toMergeCartGuid: currentCart ? currentCart.guid : undefined,\n              extraData: payload.extraData,\n              tempCartId: payload.tempCartId,\n            }),\n          ];\n        })\n      );\n    }),\n    withdrawOn(this.contextChange$)\n  );\n\n  // TODO(#7241): Remove when AddVoucherSuccess actions will extend processes actions\n  @Effect()\n  refresh$: Observable<\n    CartActions.LoadCart | CartActions.CartProcessesDecrement\n  > = this.actions$.pipe(\n    ofType(CartActions.CART_ADD_VOUCHER_SUCCESS),\n    map((action: CartActions.CartAddVoucherSuccess) => action.payload),\n    concatMap((payload) =>\n      from([\n        new CartActions.CartProcessesDecrement(payload.cartId),\n        new CartActions.LoadCart({\n          userId: payload.userId,\n          cartId: payload.cartId,\n        }),\n      ])\n    )\n  );\n\n  // TODO: Switch to automatic cart reload on processes count reaching 0 for cart entity\n  @Effect()\n  refreshWithoutProcesses$: Observable<\n    CartActions.LoadCart\n  > = this.actions$.pipe(\n    ofType(\n      CartActions.CART_ADD_ENTRY_SUCCESS,\n      CartActions.CART_REMOVE_ENTRY_SUCCESS,\n      CartActions.CART_UPDATE_ENTRY_SUCCESS,\n      CartActions.CART_REMOVE_VOUCHER_SUCCESS,\n      CheckoutActions.CLEAR_CHECKOUT_DELIVERY_MODE_SUCCESS\n    ),\n    map(\n      (\n        action:\n          | CartActions.CartAddEntrySuccess\n          | CartActions.CartUpdateEntrySuccess\n          | CartActions.CartRemoveEntrySuccess\n          | CartActions.CartRemoveVoucherSuccess\n          | CheckoutActions.ClearCheckoutDeliveryModeSuccess\n      ) => action.payload\n    ),\n    map(\n      (payload) =>\n        new CartActions.LoadCart({\n          userId: payload.userId,\n          cartId: payload.cartId,\n        })\n    )\n  );\n\n  @Effect()\n  resetCartDetailsOnSiteContextChange$: Observable<\n    CartActions.ResetCartDetails\n  > = this.actions$.pipe(\n    ofType(\n      SiteContextActions.LANGUAGE_CHANGE,\n      SiteContextActions.CURRENCY_CHANGE\n    ),\n    mergeMap(() => {\n      return [new CartActions.ResetCartDetails()];\n    })\n  );\n\n  @Effect()\n  addEmail$: Observable<\n    | CartActions.AddEmailToCartSuccess\n    | CartActions.AddEmailToCartFail\n    | CartActions.LoadCart\n  > = this.actions$.pipe(\n    ofType(CartActions.ADD_EMAIL_TO_CART),\n    map((action: CartActions.AddEmailToCart) => action.payload),\n    mergeMap((payload) =>\n      this.cartConnector\n        .addEmail(payload.userId, payload.cartId, payload.email)\n        .pipe(\n          mergeMap(() => {\n            return [\n              new CartActions.AddEmailToCartSuccess({\n                ...payload,\n              }),\n              new CartActions.LoadCart({\n                userId: payload.userId,\n                cartId: payload.cartId,\n              }),\n            ];\n          }),\n          catchError((error) =>\n            from([\n              new CartActions.AddEmailToCartFail({\n                ...payload,\n                error: normalizeHttpError(error),\n              }),\n              new CartActions.LoadCart({\n                userId: payload.userId,\n                cartId: payload.cartId,\n              }),\n            ])\n          )\n        )\n    ),\n    withdrawOn(this.contextChange$)\n  );\n\n  @Effect()\n  deleteCart$: Observable<\n    | CartActions.DeleteCartSuccess\n    | CartActions.DeleteCartFail\n    | CartActions.LoadCart\n  > = this.actions$.pipe(\n    ofType(CartActions.DELETE_CART),\n    map((action: CartActions.DeleteCart) => action.payload),\n    mergeMap((payload) =>\n      this.cartConnector.delete(payload.userId, payload.cartId).pipe(\n        map(() => {\n          return new CartActions.DeleteCartSuccess({ ...payload });\n        }),\n        catchError((error) =>\n          from([\n            new CartActions.DeleteCartFail({\n              ...payload,\n              error: normalizeHttpError(error),\n            }),\n            // Error might happen in higher backend layer and cart could still be removed.\n            // When load fail with NotFound error then RemoveCart action will kick in and clear that cart in our state.\n            new CartActions.LoadCart({\n              ...payload,\n            }),\n          ])\n        )\n      )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private cartConnector: CartConnector,\n    private store: Store<StateWithMultiCart>\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SaveCartResult } from '../../../model/cart.model';\nimport { SaveCartAdapter } from './save-cart.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SaveCartConnector {\n  constructor(protected adapter: SaveCartAdapter) {}\n\n  public saveCart(\n    userId: string,\n    cartId: string,\n    saveCartName?: string,\n    saveCartDescription?: string\n  ): Observable<SaveCartResult> {\n    return this.adapter.saveCart(\n      userId,\n      cartId,\n      saveCartName,\n      saveCartDescription\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { select, Store } from '@ngrx/store';\nimport { EMPTY, from, Observable } from 'rxjs';\nimport {\n  catchError,\n  concatMap,\n  map,\n  switchMap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { UserIdService } from '../../../auth/user-auth/facade/user-id.service';\nimport { SiteContextActions } from '../../../site-context/store/actions/index';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { CartConnector } from '../../connectors/cart/cart.connector';\nimport { SaveCartConnector } from '../../connectors/save-cart/save-cart.connecter';\nimport { getCartIdByUserId, getWishlistName } from '../../utils/utils';\nimport { CartActions } from '../actions';\nimport { StateWithMultiCart } from '../multi-cart-state';\nimport { MultiCartSelectors } from '../selectors';\n\n@Injectable()\nexport class WishListEffects {\n  @Effect()\n  createWishList$: Observable<\n    CartActions.CreateWishListSuccess | CartActions.CreateWishListFail\n  > = this.actions$.pipe(\n    ofType(CartActions.CREATE_WISH_LIST),\n    map((action: CartActions.CreateWishList) => action.payload),\n    switchMap((payload) => {\n      return this.cartConnector.create(payload.userId).pipe(\n        switchMap((cart) => {\n          return this.saveCartConnector\n            .saveCart(\n              payload.userId,\n              cart.code,\n              payload.name,\n              payload.description\n            )\n            .pipe(\n              switchMap((saveCartResult) => [\n                new CartActions.CreateWishListSuccess({\n                  cart: saveCartResult.savedCartData,\n                  userId: payload.userId,\n                }),\n              ]),\n              catchError((error) =>\n                from([\n                  new CartActions.CreateWishListFail({\n                    cartId: cart.code,\n                    error: normalizeHttpError(error),\n                  }),\n                ])\n              )\n            );\n        })\n      );\n    })\n  );\n\n  @Effect()\n  loadWishList$: Observable<\n    | CartActions.LoadWishListSuccess\n    | CartActions.RemoveCart\n    | CartActions.CreateWishList\n    | CartActions.LoadWishListFail\n  > = this.actions$.pipe(\n    ofType(CartActions.LOAD_WISH_LIST),\n    map((action: CartActions.LoadWishList) => action.payload),\n    concatMap((payload) => {\n      const { userId, customerId, tempCartId } = payload;\n      return this.cartConnector.loadAll(userId).pipe(\n        switchMap((carts) => {\n          if (carts) {\n            const wishList = carts.find(\n              (cart) => cart.name === getWishlistName(customerId)\n            );\n            if (Boolean(wishList)) {\n              return [\n                new CartActions.LoadWishListSuccess({\n                  cart: wishList,\n                  userId,\n                  tempCartId,\n                  customerId,\n                  cartId: getCartIdByUserId(wishList, userId),\n                }),\n                new CartActions.RemoveCart({ cartId: tempCartId }),\n              ];\n            } else {\n              return [\n                new CartActions.CreateWishList({\n                  userId,\n                  name: getWishlistName(customerId),\n                }),\n              ];\n            }\n          }\n        }),\n        catchError((error) =>\n          from([\n            new CartActions.LoadWishListFail({\n              userId,\n              cartId: tempCartId,\n              customerId,\n              error: normalizeHttpError(error),\n            }),\n          ])\n        )\n      );\n    })\n  );\n\n  @Effect()\n  resetWishList$: Observable<\n    CartActions.LoadWishListSuccess | CartActions.LoadWishListFail\n  > = this.actions$.pipe(\n    ofType(\n      SiteContextActions.LANGUAGE_CHANGE,\n      SiteContextActions.CURRENCY_CHANGE\n    ),\n    withLatestFrom(\n      this.userIdService.getUserId(),\n      this.store.pipe(select(MultiCartSelectors.getWishListId))\n    ),\n    switchMap(([, userId, wishListId]) => {\n      if (Boolean(wishListId)) {\n        return this.cartConnector.load(userId, wishListId).pipe(\n          switchMap((wishList) => [\n            new CartActions.LoadWishListSuccess({\n              cart: wishList,\n              userId,\n              cartId: getCartIdByUserId(wishList, userId),\n            }),\n          ]),\n          catchError((error) =>\n            from([\n              new CartActions.LoadWishListFail({\n                userId,\n                cartId: wishListId,\n                error: normalizeHttpError(error),\n              }),\n            ])\n          )\n        );\n      }\n      return EMPTY;\n    })\n  );\n\n  constructor(\n    private actions$: Actions,\n    private cartConnector: CartConnector,\n    private saveCartConnector: SaveCartConnector,\n    private userIdService: UserIdService,\n    private store: Store<StateWithMultiCart>\n  ) {}\n}\n","import { InjectionToken, Provider } from '@angular/core';\nimport { ActionReducer, ActionReducerMap, MetaReducer } from '@ngrx/store';\nimport { AuthActions } from '../../../auth/user-auth/store/actions/index';\nimport { Cart } from '../../../model/cart.model';\nimport { entityProcessesLoaderReducer } from '../../../state/utils/entity-processes-loader/entity-processes-loader.reducer';\nimport { MultiCartState, MULTI_CART_DATA } from '../multi-cart-state';\nimport {\n  activeCartReducer,\n  cartEntitiesReducer,\n  wishListReducer,\n} from './multi-cart.reducer';\n\nexport function clearMultiCartState(\n  reducer: ActionReducer<any>\n): ActionReducer<any> {\n  return function (state, action) {\n    if (action.type === AuthActions.LOGOUT) {\n      state = undefined;\n    }\n    return reducer(state, action);\n  };\n}\n\nexport const multiCartMetaReducers: MetaReducer<any>[] = [clearMultiCartState];\n\nexport const multiCartReducerToken: InjectionToken<ActionReducerMap<\n  MultiCartState\n>> = new InjectionToken<ActionReducerMap<MultiCartState>>('MultiCartReducers');\n\nexport function getMultiCartReducers(): ActionReducerMap<MultiCartState> {\n  return {\n    carts: entityProcessesLoaderReducer<Cart>(\n      MULTI_CART_DATA,\n      cartEntitiesReducer\n    ),\n    active: activeCartReducer,\n    wishList: wishListReducer,\n  };\n}\n\nexport const multiCartReducerProvider: Provider = {\n  provide: multiCartReducerToken,\n  useFactory: getMultiCartReducers,\n};\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable, Subscription } from 'rxjs';\nimport { distinctUntilKeyChanged, filter, map } from 'rxjs/operators';\nimport { BASE_SITE_CONTEXT_ID } from '../../site-context';\nimport { SiteContextParamsService } from '../../site-context/services/site-context-params.service';\nimport { StatePersistenceService } from '../../state/services/state-persistence.service';\nimport { CartActions, MultiCartSelectors } from '../store';\nimport { StateWithMultiCart } from '../store/multi-cart-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MultiCartStatePersistenceService implements OnDestroy {\n  protected subscription = new Subscription();\n\n  constructor(\n    protected statePersistenceService: StatePersistenceService,\n    protected store: Store<StateWithMultiCart>,\n    protected siteContextParamsService: SiteContextParamsService\n  ) {}\n\n  public initSync() {\n    this.subscription.add(\n      this.statePersistenceService.syncWithStorage({\n        key: 'cart',\n        state$: this.getCartState(),\n        context$: this.siteContextParamsService.getValues([\n          BASE_SITE_CONTEXT_ID,\n        ]),\n        onRead: (state) => this.onRead(state),\n      })\n    );\n  }\n\n  protected getCartState(): Observable<{ active: string }> {\n    return this.store.pipe(\n      select(MultiCartSelectors.getMultiCartState),\n      filter((state) => !!state),\n      distinctUntilKeyChanged('active'),\n      map((state) => {\n        return {\n          active: state.active,\n        };\n      })\n    );\n  }\n\n  protected onRead(state: { active: string }) {\n    this.store.dispatch(new CartActions.ClearCartState());\n    if (state) {\n      this.store.dispatch(new CartActions.SetActiveCartId(state.active));\n    } else {\n      this.store.dispatch(new CartActions.SetActiveCartId(''));\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';\nimport { ActionReducer, MetaReducer, META_REDUCERS } from '@ngrx/store';\nimport { ConfigInitializerService } from '../config/config-initializer/config-initializer.service';\nimport { MultiCartStatePersistenceService } from './services/multi-cart-state-persistence.service';\nimport { activeCartInitialState } from './store/reducers/multi-cart.reducer';\n\nexport function cartStatePersistenceFactory(\n  cartStatePersistenceService: MultiCartStatePersistenceService,\n  configInit: ConfigInitializerService\n) {\n  const result = () =>\n    configInit.getStableConfig('context').then(() => {\n      cartStatePersistenceService.initSync();\n    });\n  return result;\n}\n\n/**\n * Before `MultiCartStatePersistenceService` restores the active cart id `ActiveCartService`\n * will use `current` cart instead of the one saved in browser. This meta reducer\n * sets the value on store initialization to null cart which holds active cart loading\n * until the data from storage is restored.\n */\nexport function uninitializeActiveCartMetaReducerFactory(): MetaReducer<any> {\n  const metaReducer = (reducer: ActionReducer<any>) => (state, action) => {\n    const newState = { ...state };\n    if (action.type === '@ngrx/store/init') {\n      newState.cart = {\n        ...newState.cart,\n        ...{ active: activeCartInitialState },\n      };\n    }\n    return reducer(newState, action);\n  };\n  return metaReducer;\n}\n\n/**\n * Complimentary module for cart to store cart id in browser storage.\n * This makes it possible to work on the same anonymous cart even after page refresh.\n */\n@NgModule()\nexport class CartPersistenceModule {\n  static forRoot(): ModuleWithProviders<CartPersistenceModule> {\n    return {\n      ngModule: CartPersistenceModule,\n      providers: [\n        {\n          provide: APP_INITIALIZER,\n          useFactory: cartStatePersistenceFactory,\n          deps: [MultiCartStatePersistenceService, ConfigInitializerService],\n          multi: true,\n        },\n        {\n          provide: META_REDUCERS,\n          useFactory: uninitializeActiveCartMetaReducerFactory,\n          multi: true,\n        },\n      ],\n    };\n  }\n}\n","import { OrderEntry } from '../../model/order.model';\n\n/**\n * Base cart event. Most cart events should have `cartId` and `userId`.\n */\nexport interface CartEvent {\n  cartId: string;\n  cartCode: string;\n  userId: string;\n}\n\n// =====================================================================\n\nexport class CartAddEntryEvent implements CartEvent {\n  cartId: string;\n  cartCode: string;\n  userId: string;\n  productCode: string;\n  quantity: number;\n}\n\nexport class CartAddEntrySuccessEvent implements CartEvent {\n  cartId: string;\n  cartCode: string;\n  userId: string;\n  productCode: string;\n  quantity: number;\n  entry: OrderEntry;\n  quantityAdded: number;\n  deliveryModeChanged: boolean;\n}\n\nexport class CartAddEntryFailEvent implements CartEvent {\n  cartId: string;\n  cartCode: string;\n  userId: string;\n  productCode: string;\n  quantity: number;\n}\n\nexport class CartRemoveEntrySuccessEvent implements CartEvent {\n  cartId: string;\n  cartCode: string;\n  userId: string;\n  entry: OrderEntry;\n}\n\nexport class CartUpdateEntrySuccessEvent implements CartEvent {\n  cartId: string;\n  cartCode: string;\n  userId: string;\n  quantity: number;\n  entry: OrderEntry;\n}\n","import { Injectable } from '@angular/core';\nimport { ofType } from '@ngrx/effects';\nimport { ActionsSubject } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { filter, map, switchMap, withLatestFrom } from 'rxjs/operators';\nimport { EventService } from '../../event/event.service';\nimport { ActionToEventMapping } from '../../state/event/action-to-event-mapping';\nimport { createFrom } from '../../util/create-from';\nimport { ActiveCartService } from '../facade/active-cart.service';\nimport { CartActions } from '../store/index';\nimport {\n  CartAddEntryEvent,\n  CartAddEntryFailEvent,\n  CartAddEntrySuccessEvent,\n  CartRemoveEntrySuccessEvent,\n  CartUpdateEntrySuccessEvent,\n} from './cart.events';\n\n/**\n * Registers events for the active cart\n */\n@Injectable({ providedIn: 'root' })\nexport class CartEventBuilder {\n  constructor(\n    protected actionsSubject: ActionsSubject,\n    protected event: EventService,\n    protected activeCartService: ActiveCartService\n  ) {\n    this.register();\n  }\n\n  /**\n   * Registers events for the active cart\n   */\n  protected register() {\n    this.registerAddEntry();\n    this.registerRemoveEntry();\n    this.registerUpdateEntry();\n  }\n\n  /**\n   * Register events for adding entry to the active cart\n   */\n  protected registerAddEntry(): void {\n    this.registerMapped({\n      action: CartActions.CART_ADD_ENTRY,\n      event: CartAddEntryEvent,\n    });\n    this.registerMapped({\n      action: CartActions.CART_ADD_ENTRY_SUCCESS,\n      event: CartAddEntrySuccessEvent,\n    });\n    this.registerMapped({\n      action: CartActions.CART_ADD_ENTRY_FAIL,\n      event: CartAddEntryFailEvent,\n    });\n  }\n\n  protected registerRemoveEntry(): void {\n    this.registerMapped({\n      action: CartActions.CART_REMOVE_ENTRY_SUCCESS,\n      event: CartRemoveEntrySuccessEvent,\n    });\n  }\n\n  protected registerUpdateEntry(): void {\n    this.registerMapped({\n      action: CartActions.CART_UPDATE_ENTRY_SUCCESS,\n      event: CartUpdateEntrySuccessEvent,\n    });\n  }\n\n  /**\n   * Registers a stream of target events mapped from the source actions that contain the cart id equal to the active cart id.\n   *\n   * @param mapping mapping declaration - from `action` string type to `event` class type\n   *   (an with optional `factory` function - by default `action.payload` will be assigned to the properties of the event instance).\n   */\n  protected registerMapped<T>(mapping: ActionToEventMapping<T>): () => void {\n    const eventStream$ = this.getAction(mapping.action).pipe(\n      switchMap((action) => {\n        // SwitchMap was used instead of withLatestFrom, because we only want to subscribe to cart stream when action is dispatched.\n        // Using withLatestFrom would trigger subscription to cart observables on event subscription and that causes side effects,\n        // such as loading cart when we don't yet need it.\n        return of(action).pipe(\n          withLatestFrom(\n            this.activeCartService.getActive(),\n            this.activeCartService.getActiveCartId()\n          )\n        );\n      }),\n      filter(\n        ([action, _activeCart, activeCartId]) =>\n          action.payload['cartId'] === activeCartId\n      ),\n      map(([action, activeCart]) =>\n        createFrom(mapping.event, {\n          ...action.payload,\n          cartCode: activeCart.code,\n          entry: action.payload.entry\n            ? action.payload.entry\n            : activeCart.entries[Number(action.payload.entryNumber)],\n        })\n      )\n    );\n    return this.event.register(mapping.event, eventStream$);\n  }\n\n  /**\n   * Returns a stream of actions only of a given type(s)\n   *\n   * @param actionType type(s) of actions\n   */\n  protected getAction(\n    actionType: string | string[]\n  ): Observable<{ type: string; payload?: any }> {\n    return this.actionsSubject.pipe(ofType(...[].concat(actionType)));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CartEventBuilder } from './cart-event.builder';\n\n@NgModule({})\nexport class CartEventModule {\n  constructor(_CartEventBuilder: CartEventBuilder) {}\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { CmsService } from '../../cms/facade/cms.service';\nimport { Page, PageRobotsMeta } from '../../cms/model/page.model';\nimport { BasePageMetaResolver } from '../../cms/page/base-page-meta.resolver';\nimport { PageMetaResolver } from '../../cms/page/page-meta.resolver';\nimport {\n  PageRobotsResolver,\n  PageTitleResolver,\n} from '../../cms/page/page.resolvers';\nimport { PageType } from '../../model/cms.model';\n\n/**\n * Resolves the page metadata for the Cart page (Using the `PageType.CONTENT_PAGE`\n * and the `CartPageTemplate`). If the cart page matches this template, the more\n * generic `ContentPageMetaResolver` is overridden by this resolver.\n *\n * The page title and robots are resolved in this implementation only.\n *\n * @deprecated since 3.1, in future versions we'll drop this service as the logic\n * is no longer specific since we introduce backend driven robots.\n */\n// TODO(#10467): Remove implementation\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartPageMetaResolver\n  extends PageMetaResolver\n  implements PageTitleResolver, PageRobotsResolver {\n  /**\n   * @deprecated since 3.1, we'll use the BasePageMetaResolver in future versions and\n   * drop the CmsService from the constructor as it will no longer be used.\n   */\n  // TODO(#10467): Remove deprecated constructors\n  constructor(cms: CmsService);\n  // tslint:disable-next-line: unified-signatures\n  constructor(cms: CmsService, basePageMetaResolver?: BasePageMetaResolver);\n  constructor(\n    protected cms: CmsService,\n    @Optional() protected basePageMetaResolver?: BasePageMetaResolver\n  ) {\n    super();\n    this.pageType = PageType.CONTENT_PAGE;\n    this.pageTemplate = 'CartPageTemplate';\n  }\n\n  // TODO(#10467): remove the cms property as it's no longer needed when we use the `BasePageMetaResolver`\n  /**\n   * @deprecated since 3.1, we'll use the BasePageMetaResolver to resolve the page title\n   */\n  protected cms$: Observable<Page> = this.cms\n    .getCurrentPage()\n    .pipe(filter((page) => !!page));\n\n  resolveTitle(): Observable<string> {\n    // TODO(#10467): resolve the title from the `BasePageMetaResolver.resolveTitle()` only\n    return this.basePageMetaResolver\n      ? this.basePageMetaResolver.resolveTitle()\n      : this.cms$.pipe(map((p) => p.title));\n  }\n\n  /**\n   * @Override Returns robots for the cart pages, which default to NOINDEX/NOFOLLOW.\n   */\n  // TODO(#10467): resolve robots from `BasePageMetaResolver` instead\n  resolveRobots(): Observable<PageRobotsMeta[]> {\n    return of([PageRobotsMeta.NOFOLLOW, PageRobotsMeta.NOINDEX]);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CartActions } from '../actions/index';\n\n@Injectable()\nexport class MultiCartEffects {\n  @Effect()\n  setTempCart$ = this.actions$.pipe(\n    ofType(CartActions.SET_TEMP_CART),\n    map((action: CartActions.SetTempCart) => {\n      return new CartActions.RemoveCart({ cartId: action.payload.tempCartId });\n    })\n  );\n\n  // TODO(#7241): Remove when we drop ADD_VOUCHER process and we sort out checkout and cart dependencies\n  @Effect()\n  processesIncrement$: Observable<\n    CartActions.CartProcessesIncrement\n  > = this.actions$.pipe(\n    ofType(CartActions.CART_ADD_VOUCHER),\n    map((action: CartActions.CartAddVoucher) => action.payload),\n    map((payload) => new CartActions.CartProcessesIncrement(payload.cartId))\n  );\n\n  constructor(private actions$: Actions) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { StateModule } from '../../state/state.module';\nimport { CartEntryEffects } from './effects/cart-entry.effect';\nimport { CartVoucherEffects } from './effects/cart-voucher.effect';\nimport { CartEffects } from './effects/cart.effect';\nimport { MultiCartEffects } from './effects/multi-cart.effect';\nimport { WishListEffects } from './effects/wish-list.effect';\nimport { MULTI_CART_FEATURE } from './multi-cart-state';\nimport {\n  multiCartMetaReducers,\n  multiCartReducerProvider,\n  multiCartReducerToken,\n} from './reducers/index';\n\nconst effects: any[] = [\n  CartEffects,\n  CartEntryEffects,\n  CartVoucherEffects,\n  WishListEffects,\n  MultiCartEffects,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StateModule,\n    StoreModule.forFeature(MULTI_CART_FEATURE, multiCartReducerToken, {\n      metaReducers: multiCartMetaReducers,\n    }),\n    EffectsModule.forFeature(effects),\n  ],\n  providers: [multiCartReducerProvider],\n})\nexport class MultiCartStoreModule {}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { PageMetaResolver } from '../cms/page/page-meta.resolver';\nimport { CartPersistenceModule } from './cart-persistence.module';\nimport { CartEventModule } from './event/cart-event.module';\nimport { CartPageMetaResolver } from './services/cart-page-meta.resolver';\nimport { MultiCartStoreModule } from './store/multi-cart-store.module';\n\n@NgModule({\n  imports: [\n    MultiCartStoreModule,\n    CartEventModule,\n    CartPersistenceModule.forRoot(),\n  ],\n})\nexport class CartModule {\n  static forRoot(): ModuleWithProviders<CartModule> {\n    return {\n      ngModule: CartModule,\n      providers: [\n        {\n          provide: PageMetaResolver,\n          useExisting: CartPageMetaResolver,\n          multi: true,\n        },\n      ],\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Config } from '../../config/config-tokens';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class CartConfig {\n  cart?: {\n    selectiveCart?: {\n      enabled?: boolean;\n    };\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { UserIdService } from '../../auth/index';\nimport * as fromProcessStore from '../../process/store/process-state';\nimport {\n  getProcessErrorFactory,\n  getProcessLoadingFactory,\n  getProcessSuccessFactory,\n} from '../../process/store/selectors/process.selectors';\nimport { CartActions } from '../store/actions/index';\nimport { ADD_VOUCHER_PROCESS_ID } from '../store/multi-cart-state';\nimport { ActiveCartService } from './active-cart.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartVoucherService {\n  constructor(\n    protected store: Store<fromProcessStore.StateWithProcess<void>>,\n    protected activeCartService: ActiveCartService,\n    protected userIdService: UserIdService\n  ) {}\n\n  addVoucher(voucherId: string, cartId?: string): void {\n    this.combineUserAndCartId(cartId).subscribe(([occUserId, cartIdentifier]) =>\n      this.store.dispatch(\n        new CartActions.CartAddVoucher({\n          userId: occUserId,\n          cartId: cartIdentifier,\n          voucherId: voucherId,\n        })\n      )\n    );\n  }\n\n  removeVoucher(voucherId: string, cartId?: string): void {\n    this.combineUserAndCartId(cartId).subscribe(([occUserId, cartIdentifier]) =>\n      this.store.dispatch(\n        new CartActions.CartRemoveVoucher({\n          userId: occUserId,\n          cartId: cartIdentifier,\n          voucherId: voucherId,\n        })\n      )\n    );\n  }\n\n  // TODO(#7241): Remove when switching to event system for add voucher\n  /**\n   * Get add voucher process error flag\n   * @deprecated since 2.0\n   */\n  getAddVoucherResultError(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessErrorFactory(ADD_VOUCHER_PROCESS_ID))\n    );\n  }\n\n  // TODO(#7241): Remove when switching to event system for add voucher\n  /**\n   * Get add voucher process success flag\n   * @deprecated since 2.0\n   */\n  getAddVoucherResultSuccess(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessSuccessFactory(ADD_VOUCHER_PROCESS_ID))\n    );\n  }\n\n  // TODO(#7241): Remove when switching to event system for add voucher\n  /**\n   * Get add voucher process loading flag\n   * @deprecated since 2.0\n   */\n  getAddVoucherResultLoading(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessLoadingFactory(ADD_VOUCHER_PROCESS_ID))\n    );\n  }\n\n  // TODO(#7241): Remove when switching to event system for add voucher\n  /**\n   * Reset add voucher process\n   * @deprecated since 2.0\n   */\n  resetAddVoucherProcessingState(): void {\n    this.store.dispatch(new CartActions.CartResetAddVoucher());\n  }\n\n  private combineUserAndCartId(cartId: string): Observable<[string, string]> {\n    if (cartId) {\n      return this.userIdService.getUserId().pipe(\n        take(1),\n        map((userId) => [userId, cartId])\n      );\n    } else {\n      return combineLatest([\n        this.userIdService.getUserId(),\n        this.activeCartService.getActiveCartId(),\n      ]).pipe(take(1));\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CartConfig } from '../config/cart-config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartConfigService {\n  constructor(protected config: CartConfig) {}\n\n  isSelectiveCartEnabled(): boolean {\n    return Boolean(this.config?.cart?.selectiveCart?.enabled);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport { filter, map, shareReplay, switchMap, take, tap } from 'rxjs/operators';\nimport { UserIdService } from '../../auth/user-auth/facade/user-id.service';\nimport { Cart } from '../../model/cart.model';\nimport { OrderEntry } from '../../model/order.model';\nimport { OCC_USER_ID_ANONYMOUS } from '../../occ/utils/occ-constants';\nimport { BaseSiteService } from '../../site-context/facade/base-site.service';\nimport { LoaderState } from '../../state/utils/loader/loader-state';\nimport { UserService } from '../../user/facade/user.service';\nimport { CartConfigService } from '../services/cart-config.service';\nimport { StateWithMultiCart } from '../store/multi-cart-state';\nimport { MultiCartService } from './multi-cart.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SelectiveCartService {\n  private customerId: string;\n  private userId: string;\n  private cartId: string;\n  private selectiveCart$: Observable<Cart>;\n  private cartId$: BehaviorSubject<string> = new BehaviorSubject<string>(\n    undefined\n  );\n\n  private readonly PREVIOUS_USER_ID_INITIAL_VALUE =\n    'PREVIOUS_USER_ID_INITIAL_VALUE';\n  private previousUserId = this.PREVIOUS_USER_ID_INITIAL_VALUE;\n\n  private cartSelector$ = this.cartId$.pipe(\n    switchMap((cartId) => {\n      this.cartId = cartId;\n      return this.multiCartService.getCartEntity(cartId);\n    })\n  );\n\n  constructor(\n    protected store: Store<StateWithMultiCart>,\n    protected userService: UserService,\n    protected multiCartService: MultiCartService,\n    protected baseSiteService: BaseSiteService,\n    protected cartConfigService: CartConfigService,\n    protected userIdService: UserIdService\n  ) {\n    combineLatest([\n      this.userService.get(),\n      this.baseSiteService.getActive(),\n    ]).subscribe(([user, activeBaseSite]) => {\n      if (user && user.customerId && activeBaseSite) {\n        this.customerId = user.customerId;\n        this.cartId$.next(`selectivecart${activeBaseSite}${this.customerId}`);\n      } else if (user && !user.customerId) {\n        this.cartId$.next(undefined);\n      }\n    });\n\n    this.userIdService.getUserId().subscribe((userId) => {\n      this.userId = userId;\n\n      if (this.isJustLoggedIn(userId)) {\n        this.load();\n      }\n\n      this.previousUserId = userId;\n    });\n\n    this.selectiveCart$ = this.cartSelector$.pipe(\n      map((cartEntity: LoaderState<Cart>): {\n        cart: Cart;\n        loading: boolean;\n        loaded: boolean;\n      } => {\n        return {\n          cart: cartEntity.value,\n          loading: cartEntity.loading,\n          loaded:\n            (cartEntity.error || cartEntity.success) && !cartEntity.loading,\n        };\n      }),\n      filter(({ loading }) => !loading),\n      tap(({ cart, loaded }) => {\n        if (this.cartId && this.isEmpty(cart) && !loaded) {\n          this.load();\n        }\n      }),\n      map(({ cart }) => (cart ? cart : {})),\n      shareReplay({ bufferSize: 1, refCount: true })\n    );\n  }\n\n  getCart(): Observable<Cart> {\n    return this.selectiveCart$;\n  }\n\n  getEntries(): Observable<OrderEntry[]> {\n    return this.multiCartService.getEntries(this.cartId);\n  }\n\n  getLoaded(): Observable<boolean> {\n    return this.cartSelector$.pipe(\n      map((cart) => (cart.success || cart.error) && !cart.loading)\n    );\n  }\n\n  /**\n   * Returns true when selective cart is stable (not loading and not pending processes on cart)\n   */\n  isStable(): Observable<boolean> {\n    return this.cartId$.pipe(\n      switchMap((cartId) => this.multiCartService.isStable(cartId))\n    );\n  }\n\n  private load() {\n    if (this.isLoggedIn(this.userId) && this.cartId) {\n      this.multiCartService.loadCart({\n        userId: this.userId,\n        cartId: this.cartId,\n      });\n    }\n  }\n\n  addEntry(productCode: string, quantity: number): void {\n    let loadAttempted = false;\n    this.cartSelector$\n      .pipe(\n        filter(() => !loadAttempted),\n        switchMap((cartState) => {\n          if (this.isEmpty(cartState.value) && !cartState.loading) {\n            loadAttempted = true;\n            this.load();\n          }\n          return of(cartState);\n        }),\n        filter((cartState) => !this.isEmpty(cartState.value)),\n        take(1)\n      )\n      .subscribe(() => {\n        this.multiCartService.addEntry(\n          this.userId,\n          this.cartId,\n          productCode,\n          quantity\n        );\n      });\n  }\n\n  removeEntry(entry: OrderEntry): void {\n    this.multiCartService.removeEntry(\n      this.userId,\n      this.cartId,\n      entry.entryNumber\n    );\n  }\n\n  updateEntry(entryNumber: number, quantity: number): void {\n    this.multiCartService.updateEntry(\n      this.userId,\n      this.cartId,\n      entryNumber,\n      quantity\n    );\n  }\n\n  getEntry(productCode: string): Observable<OrderEntry> {\n    return this.multiCartService.getEntry(this.cartId, productCode);\n  }\n\n  /**\n   * Indicates if selectiveCart feature is enabled based on cart configuration.\n   */\n  isEnabled(): boolean {\n    return this.cartConfigService.isSelectiveCartEnabled();\n  }\n\n  private isEmpty(cart: Cart): boolean {\n    return (\n      !cart || (typeof cart === 'object' && Object.keys(cart).length === 0)\n    );\n  }\n\n  private isJustLoggedIn(userId: string): boolean {\n    return (\n      this.isLoggedIn(userId) &&\n      this.previousUserId !== userId && // *just* logged in\n      this.previousUserId !== this.PREVIOUS_USER_ID_INITIAL_VALUE // not app initialization\n    );\n  }\n\n  private isLoggedIn(userId: string): boolean {\n    return typeof userId !== 'undefined' && userId !== OCC_USER_ID_ANONYMOUS;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { combineLatest, Observable } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  switchMap,\n  take,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { UserIdService } from '../../auth/user-auth/facade/user-id.service';\nimport { Cart, OrderEntry } from '../../model/index';\nimport { OCC_USER_ID_ANONYMOUS } from '../../occ/utils/occ-constants';\nimport { UserService } from '../../user/facade/user.service';\nimport { CartActions } from '../store/actions/index';\nimport { StateWithMultiCart } from '../store/multi-cart-state';\nimport { MultiCartSelectors } from '../store/selectors/index';\nimport { getWishlistName } from '../utils/utils';\nimport { MultiCartService } from './multi-cart.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WishListService {\n  constructor(\n    protected store: Store<StateWithMultiCart>,\n    protected userService: UserService,\n    protected multiCartService: MultiCartService,\n    protected userIdService: UserIdService\n  ) {}\n\n  createWishList(userId: string, name?: string, description?: string): void {\n    this.store.dispatch(\n      new CartActions.CreateWishList({ userId, name, description })\n    );\n  }\n\n  getWishList(): Observable<Cart> {\n    return combineLatest([\n      this.getWishListId(),\n      this.userService.get(),\n      this.userIdService.getUserId(),\n    ]).pipe(\n      distinctUntilChanged(),\n      tap(([wishListId, user, userId]) => {\n        if (\n          !Boolean(wishListId) &&\n          userId !== OCC_USER_ID_ANONYMOUS &&\n          Boolean(user) &&\n          Boolean(user.customerId)\n        ) {\n          this.loadWishList(userId, user.customerId);\n        }\n      }),\n      filter(([wishListId]) => Boolean(wishListId)),\n      switchMap(([wishListId]) => this.multiCartService.getCart(wishListId))\n    );\n  }\n\n  loadWishList(userId: string, customerId: string): void {\n    this.store.dispatch(\n      new CartActions.LoadWishList({\n        userId,\n        customerId,\n        tempCartId: getWishlistName(customerId),\n      })\n    );\n  }\n\n  addEntry(productCode: string): void {\n    this.getWishListId()\n      .pipe(\n        distinctUntilChanged(),\n        withLatestFrom(this.userIdService.getUserId(), this.userService.get()),\n        tap(([wishListId, userId, user]) => {\n          if (\n            !Boolean(wishListId) &&\n            Boolean(user) &&\n            Boolean(user.customerId)\n          ) {\n            this.loadWishList(userId, user.customerId);\n          }\n        }),\n        filter(([wishListId]) => Boolean(wishListId)),\n        take(1)\n      )\n      .subscribe(([wishListId, userId]) =>\n        this.multiCartService.addEntry(userId, wishListId, productCode, 1)\n      );\n  }\n\n  removeEntry(entry: OrderEntry): void {\n    this.getWishListId()\n      .pipe(\n        distinctUntilChanged(),\n        withLatestFrom(this.userIdService.getUserId(), this.userService.get()),\n        tap(([wishListId, userId, user]) => {\n          if (\n            !Boolean(wishListId) &&\n            Boolean(user) &&\n            Boolean(user.customerId)\n          ) {\n            this.loadWishList(userId, user.customerId);\n          }\n        }),\n        filter(([wishListId]) => Boolean(wishListId)),\n        take(1)\n      )\n      .subscribe(([wishListId, userId]) =>\n        this.multiCartService.removeEntry(userId, wishListId, entry.entryNumber)\n      );\n  }\n\n  getWishListLoading(): Observable<boolean> {\n    return this.getWishListId().pipe(\n      switchMap((wishListId) =>\n        this.multiCartService\n          .isStable(wishListId)\n          .pipe(map((stable) => !stable))\n      )\n    );\n  }\n\n  protected getWishListId(): Observable<string> {\n    return this.store.pipe(select(MultiCartSelectors.getWishListId));\n  }\n}\n","import { CmsConfig } from './cms-config';\n\nexport const defaultCmsModuleConfig: CmsConfig = {\n  backend: {\n    occ: {\n      endpoints: {\n        component: 'cms/components/${id}',\n        components: 'cms/components',\n        pages: 'cms/pages',\n        page: 'cms/pages/${id}',\n      },\n    },\n  },\n  cmsComponents: {},\n};\n","import { Injectable, Optional } from '@angular/core';\nimport { combineLatest, defer, Observable } from 'rxjs';\nimport { filter, map, shareReplay } from 'rxjs/operators';\nimport { TranslationService } from '../../i18n/translation.service';\nimport { PageType } from '../../model/cms.model';\nimport { CmsService } from '../facade/cms.service';\nimport { BreadcrumbMeta, Page, PageRobotsMeta } from '../model/page.model';\nimport { BasePageMetaResolver } from './base-page-meta.resolver';\nimport { PageMetaResolver } from './page-meta.resolver';\nimport {\n  PageBreadcrumbResolver,\n  PageRobotsResolver,\n  PageTitleResolver,\n} from './page.resolvers';\nimport { RoutingPageMetaResolver } from './routing/routing-page-meta.resolver';\n\n/**\n * Resolves the page data for all Content Pages based on the `PageType.CONTENT_PAGE`.\n * More specific resolvers for content pages can be implemented by making them more\n * specific, for example by using the page template (see `CartPageMetaResolver`).\n *\n * The page title, and breadcrumbs are resolved in this implementation only.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ContentPageMetaResolver\n  extends PageMetaResolver\n  implements PageTitleResolver, PageBreadcrumbResolver, PageRobotsResolver {\n  /**\n   * @deprecated since 3.1, we'll use the BasePageMetaResolver in future versions.\n   */\n  constructor(\n    protected cmsService: CmsService,\n    protected translation: TranslationService,\n    protected routingPageMetaResolver: RoutingPageMetaResolver,\n    @Optional() protected basePageMetaResolver?: BasePageMetaResolver\n  ) {\n    super();\n    this.pageType = PageType.CONTENT_PAGE;\n  }\n\n  /**\n   * Breadcrumb for the home page.\n   *\n   * @deprecated since 3.1, as we resolve the homeBreadcrumb$ from the `BasePageMetaResolver`\n   */\n  // TODO(#10467): drop the homeBreadcrumb$ property\n  protected homeBreadcrumb$: Observable<\n    BreadcrumbMeta[]\n  > = this.translation\n    .translate('common.home')\n    .pipe(map((label) => [{ label: label, link: '/' }] as BreadcrumbMeta[]));\n\n  /**\n   * All the resolved breadcrumbs (including those from Angular child routes).\n   *\n   * @deprecated since 3.1, as we resolve the breadcrumbs$ from the `BasePageMetaResolver`\n   */\n  // TODO(#10467): drop the breadcrumbs$ property\n  protected breadcrumbs$: Observable<BreadcrumbMeta[]> = combineLatest([\n    this.homeBreadcrumb$,\n    defer(() => this.routingPageMetaResolver.resolveBreadcrumbs()),\n  ]).pipe(\n    map((breadcrumbs) => breadcrumbs.flat()),\n    shareReplay({ bufferSize: 1, refCount: true })\n  );\n\n  /**\n   * Helper to provide access to the current CMS page\n   *\n   * @deprecated since 3.1, as we resolve the cms page data from the `BasePageMetaResolver`\n   */\n  // TODO(#10467): drop the cms$ property\n  protected cms$: Observable<Page> = defer(() =>\n    this.cmsService.getCurrentPage().pipe(filter((p) => Boolean(p)))\n  );\n\n  /**\n   * @deprecated since 3.1, we'll start using the `BasePageMetaResolver` to resolve\n   * the page title\n   */\n  // TODO(#10467): drop the title$ property\n  protected title$: Observable<string> = this.cms$.pipe(map((p) => p.title));\n\n  // TODO(#10467): resolve the title from the `BasePageMetaResolver.resolveTitle()` only\n  resolveTitle(): Observable<string> {\n    return this.basePageMetaResolver\n      ? this.basePageMetaResolver.resolveTitle()\n      : this.title$;\n  }\n\n  /**\n   * @override\n   * Resolves a single breadcrumb item to the home page for each `ContentPage`.\n   * The home page label is resolved from the translation service.\n   */\n  resolveBreadcrumbs(): Observable<BreadcrumbMeta[]> {\n    return this.basePageMetaResolver\n      ? this.basePageMetaResolver.resolveBreadcrumbs()\n      : this.breadcrumbs$;\n  }\n\n  /**\n   * @override\n   * This is added in 3.1 and will be ignored if the `BasePageMetaResolver` is not\n   * available.\n   */\n  // TODO(#10467) drop the 3.1 note.\n  resolveRobots(): Observable<PageRobotsMeta[]> {\n    return this.basePageMetaResolver?.resolveRobots();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PageMetaResolver } from './page-meta.resolver';\nimport { ContentPageMetaResolver } from './content-page-meta.resolver';\n\n@NgModule({\n  providers: [\n    {\n      provide: PageMetaResolver,\n      useExisting: ContentPageMetaResolver,\n      multi: true,\n    },\n  ],\n})\nexport class CmsPageTitleModule {}\n","import { Observable, OperatorFunction, SchedulerLike } from 'rxjs';\nimport { debounceTime, map, tap } from 'rxjs/operators';\n\nexport function bufferDebounceTime<T>(\n  time: number = 0,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, T[]> {\n  return (source: Observable<T>) => {\n    let bufferedValues: T[] = [];\n\n    return source.pipe(\n      tap((value) => bufferedValues.push(value)),\n      debounceTime(time, scheduler),\n      map(() => bufferedValues),\n      tap(() => (bufferedValues = []))\n    );\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { ContentSlotComponentData } from '../model/content-slot-component-data.model';\nimport { CmsConfig } from './cms-config';\nimport { Config } from '../../config/config-tokens';\n\n/**\n * The `CmsPageConfig` is used to build pages by configuration.\n * The interfaces are designed to have a clean configuration for\n * static CMS structure. Ordinary attributes that are not\n * required for configurable pages have been left out and\n * will not be serialized in the adapter logic.\n */\nexport interface CmsPageConfig {\n  /**\n   * When the `ignoreBackend` is set to true, the CMS backend\n   * will not be consumed. This saves network latency and is\n   * useful for commodity commerce pages.\n   * */\n  ignoreBackend?: boolean;\n\n  pageId?: string;\n\n  type?: string;\n\n  /**\n   * The page title is typically used to display the page heading\n   * as well as for the page title tag. The latter is used for browser\n   * navigation as well as SEO and social share platforms.\n   */\n  title?: string;\n\n  /**\n   * the template is used to bind to the layout\n   * configuration and css layout class\n   */\n  template?: string;\n\n  /**\n   * The page slots represent various sections on the page that\n   * can contain components.\n   */\n  slots: { [key: string]: CmsPageSlotConfig };\n}\n\n/**\n * The `CmsPageSlotsConfig` (plural) holds `CmsPageSlotConfig` objects.\n */\nexport interface CmsPageSlotsConfig {\n  [key: string]: CmsPageSlotConfig;\n}\n\n/**\n * The `CmsPageSlotConfig` is a simplified configuration model\n * that can be used to configure slots in static configuration,\n * rather than loading from a backend.\n */\nexport interface CmsPageSlotConfig {\n  componentIds?: string[];\n  properties?: any;\n}\n\n/**\n * The `CmsStructureConfig` is used to build pages in Spartacus by configuration\n * instead of using a backend CMS system. The configuration can be used to build\n * complete pages or parts of a page. The `CmsStructureConfig` is optimized to\n * only require the necessary properties. Adapter logic is applied to serialize\n * the `CmsStructureConfig` into the required UI model.\n */\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class CmsStructureConfig extends CmsConfig {\n  cmsStructure: {\n    components?: { [key: string]: ContentSlotComponentData | any };\n    pages?: CmsPageConfig[];\n    slots?: CmsPageSlotsConfig;\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport {\n  CmsPageConfig,\n  CmsPageSlotsConfig,\n  CmsStructureConfig,\n} from '../config/cms-structure.config';\nimport { ContentSlotComponentData } from '../model/content-slot-component-data.model';\nimport { CmsStructureModel } from '../model/page.model';\n\n/**\n * Service that provides access to CMS structure from a static\n * configuration or configuration file. This class uses static\n * configuration is designed in async fashion so that configurations\n * can be loaded from a file or stream.\n *\n * The intent of the `CmsStructureConfigService` however is to provide\n * fast loading pages and default cms structure for commodity commerce.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class CmsStructureConfigService {\n  constructor(protected cmsDataConfig: CmsStructureConfig) {}\n\n  /**\n   * Merge the cms structure to the pageStructure. The page structure\n   * can either hold complete page structures or global structures that\n   * might apply to all pages (such has header coponents).\n   */\n  mergePageStructure(\n    pageId: string,\n    pageStructure: CmsStructureModel\n  ): Observable<CmsStructureModel> {\n    return this.mergePage(pageId, pageStructure).pipe(\n      switchMap((page) => this.mergeSlots(page))\n    );\n  }\n\n  /**\n   *\n   * Returns boolean observable to indicate whether the page should not be\n   * loaded from the backend. This is useful for pages which are comoditized\n   * and follow best practice.\n   *\n   * By default, configurable pages are driven by static configuration,\n   * in order to allow for fast loading pages (preventing network delays).\n   */\n  shouldIgnoreBackend(pageId: string): Observable<boolean> {\n    return this.getPageFromConfig(pageId).pipe(\n      map((page) => !!page && !!page.ignoreBackend)\n    );\n  }\n\n  /**\n   * returns an Observable component data from the static configuration.\n   */\n  getComponentFromConfig(\n    componentId: string\n  ): Observable<ContentSlotComponentData | any> {\n    return of(this.getComponentById(componentId));\n  }\n\n  /**\n   * returns an Observable components data from the static configuration.\n   */\n  getComponentsFromConfig(\n    ids: string[]\n  ): Observable<ContentSlotComponentData[]> {\n    return of(ids.map((id) => this.getComponentById(id)));\n  }\n\n  /**\n   * returns an observable with the `PageConfig`.\n   */\n  protected getPageFromConfig(pageId: string): Observable<CmsPageConfig> {\n    return of(\n      this.cmsDataConfig.cmsStructure && this.cmsDataConfig.cmsStructure.pages\n        ? this.cmsDataConfig.cmsStructure.pages.find((p) => p.pageId === pageId)\n        : null\n    );\n  }\n\n  /**\n   * Merge page data from the configuration into the given structure, if any.\n   * If the given page structure is empty, a page is created and the page slots are\n   * are merged into the page.\n   */\n  protected mergePage(\n    pageId: string,\n    pageStructure: CmsStructureModel\n  ): Observable<CmsStructureModel> {\n    return this.getPageFromConfig(pageId).pipe(\n      switchMap((page) => {\n        if (page) {\n          // serialize page data\n          if (!pageStructure.page) {\n            pageStructure.page = {\n              ...page,\n            };\n            pageStructure.page.slots = {};\n          }\n          if (!pageStructure.page.slots) {\n            pageStructure.page.slots = {};\n          }\n          return this.mergeSlots(pageStructure, page.slots);\n        } else {\n          return of(pageStructure);\n        }\n      })\n    );\n  }\n\n  /**\n   * Adds any pre-configured slots for pages that do not use them.\n   * If pages have a slot for the given position, the configiuration\n   * is ingored. Even if the slot does not have inner structure (such as\n   * components), so that the cms structure is able to override the (static)\n   * configuration.\n   */\n  protected mergeSlots(\n    pageStructure: CmsStructureModel,\n    slots?: CmsPageSlotsConfig\n  ): Observable<CmsStructureModel> {\n    // if no slots have been given, we use the global configured slots\n    if (\n      !slots &&\n      this.cmsDataConfig.cmsStructure &&\n      this.cmsDataConfig.cmsStructure.slots\n    ) {\n      slots = this.cmsDataConfig.cmsStructure.slots;\n    }\n\n    if (!slots) {\n      return of(pageStructure);\n    }\n\n    for (const position of Object.keys(slots)) {\n      if (!Object.keys(pageStructure.page.slots).includes(position)) {\n        // the global slot isn't yet part of the page structure\n        pageStructure.page.slots[position] = {};\n\n        for (const component of this.getComponentsByPosition(slots, position)) {\n          if (!pageStructure.page.slots[position].components) {\n            pageStructure.page.slots[position].components = [];\n          }\n          pageStructure.page.slots[position].components.push({\n            uid: component.uid,\n            flexType: component.flexType,\n            typeCode: component.typeCode,\n          });\n          if (!pageStructure.components) {\n            pageStructure.components = [];\n          }\n\n          pageStructure.components.push(component);\n        }\n      }\n    }\n\n    return of(pageStructure);\n  }\n\n  protected getComponentsByPosition(\n    slots: CmsPageSlotsConfig,\n    position: string\n  ): ContentSlotComponentData[] {\n    const components = [];\n    if (slots[position] && slots[position].componentIds) {\n      for (const componentId of slots[position].componentIds) {\n        if (\n          this.cmsDataConfig.cmsStructure &&\n          this.cmsDataConfig.cmsStructure.components\n        ) {\n          const component = this.cmsDataConfig.cmsStructure.components[\n            componentId\n          ];\n          if (component) {\n            components.push({ uid: componentId, ...component });\n          }\n        }\n      }\n    }\n    return components;\n  }\n\n  protected getComponentById(componentId: string): ContentSlotComponentData {\n    return this.cmsDataConfig.cmsStructure &&\n      this.cmsDataConfig.cmsStructure.components\n      ? this.cmsDataConfig.cmsStructure.components[componentId]\n      : undefined;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { CmsComponent } from '../../../model/cms.model';\nimport { OccConfig } from '../../../occ/config/occ-config';\nimport { PageContext } from '../../../routing/models/page-context.model';\nimport { CmsStructureConfigService } from '../../services/cms-structure-config.service';\nimport { CmsComponentAdapter } from './cms-component.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsComponentConnector {\n  constructor(\n    protected cmsStructureConfigService: CmsStructureConfigService,\n    protected cmsComponentAdapter: CmsComponentAdapter,\n    protected config: OccConfig\n  ) {}\n\n  get<T extends CmsComponent>(\n    id: string,\n    pageContext: PageContext\n  ): Observable<T> {\n    return this.cmsStructureConfigService\n      .getComponentFromConfig(id)\n      .pipe(\n        switchMap((configuredComponent) =>\n          configuredComponent\n            ? of(configuredComponent)\n            : this.cmsComponentAdapter.load(id, pageContext)\n        )\n      );\n  }\n\n  getList(ids: string[], pageContext: PageContext): Observable<CmsComponent[]> {\n    return this.cmsStructureConfigService.getComponentsFromConfig(ids).pipe(\n      switchMap((configuredComponents) => {\n        // check if we have some components that are not loaded from configuration\n        const missingIds = configuredComponents.reduce(\n          (acc, component, index) => {\n            if (component === undefined) {\n              acc.push(ids[index]);\n            }\n            return acc;\n          },\n          []\n        );\n\n        if (missingIds.length > 0) {\n          return this.cmsComponentAdapter\n            .findComponentsByIds(missingIds, pageContext)\n            .pipe(\n              map((loadedComponents) => [\n                ...configuredComponents.filter(Boolean),\n                ...loadedComponents,\n              ])\n            );\n        } else {\n          return of(configuredComponents);\n        }\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport { from, Observable } from 'rxjs';\nimport { catchError, groupBy, mergeMap, switchMap } from 'rxjs/operators';\nimport { AuthActions } from '../../../auth/user-auth/store/actions/index';\nimport { CmsComponent } from '../../../model/cms.model';\nimport { PageContext } from '../../../routing/index';\nimport { SiteContextActions } from '../../../site-context/store/actions/index';\nimport { bufferDebounceTime } from '../../../util/rxjs/buffer-debounce-time';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { withdrawOn } from '../../../util/rxjs/withdraw-on';\nimport { CmsComponentConnector } from '../../connectors/component/cms-component.connector';\nimport { serializePageContext } from '../../utils/cms-utils';\nimport { CmsActions } from '../actions/index';\n\n@Injectable()\nexport class ComponentsEffects {\n  constructor(\n    private actions$: Actions,\n    private cmsComponentConnector: CmsComponentConnector\n  ) {}\n\n  private contextChange$: Observable<Action> = this.actions$.pipe(\n    ofType(\n      SiteContextActions.LANGUAGE_CHANGE,\n      AuthActions.LOGOUT,\n      AuthActions.LOGIN\n    )\n  );\n\n  loadComponent$ = createEffect(\n    () => ({ scheduler, debounce = 0 } = {}): Observable<\n      | CmsActions.LoadCmsComponentSuccess<CmsComponent>\n      | CmsActions.LoadCmsComponentFail\n    > =>\n      this.actions$.pipe(\n        ofType<CmsActions.LoadCmsComponent>(CmsActions.LOAD_CMS_COMPONENT),\n        groupBy((actions) => serializePageContext(actions.payload.pageContext)),\n        mergeMap((actionGroup) =>\n          actionGroup.pipe(\n            bufferDebounceTime(debounce, scheduler),\n            mergeMap((actions) =>\n              this.loadComponentsEffect(\n                actions.map((action) => action.payload.uid),\n                actions[0].payload.pageContext\n              )\n            )\n          )\n        ),\n        withdrawOn(this.contextChange$)\n      )\n  );\n\n  private loadComponentsEffect(\n    componentUids: string[],\n    pageContext: PageContext\n  ): Observable<\n    | CmsActions.LoadCmsComponentSuccess<CmsComponent>\n    | CmsActions.LoadCmsComponentFail\n  > {\n    return this.cmsComponentConnector.getList(componentUids, pageContext).pipe(\n      switchMap((components) => {\n        const actions: (\n          | CmsActions.LoadCmsComponentSuccess<CmsComponent>\n          | CmsActions.LoadCmsComponentFail\n        )[] = [];\n        const uidsLeft = new Set<string>(componentUids);\n        for (const component of components) {\n          actions.push(\n            new CmsActions.LoadCmsComponentSuccess({\n              component,\n              uid: component.uid,\n              pageContext,\n            })\n          );\n          uidsLeft.delete(component.uid);\n        }\n        // we have to emit LoadCmsComponentFail for all component's uids that\n        // are missing from the response\n        uidsLeft.forEach((uid) => {\n          actions.push(\n            new CmsActions.LoadCmsComponentFail({\n              uid,\n              pageContext,\n            })\n          );\n        });\n        return from(actions);\n      }),\n      catchError((error) =>\n        from(\n          componentUids.map(\n            (uid) =>\n              new CmsActions.LoadCmsComponentFail({\n                uid,\n                error: normalizeHttpError(error),\n                pageContext,\n              })\n          )\n        )\n      )\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, filter, map, mergeMap, take } from 'rxjs/operators';\nimport { RoutingService } from '../../../routing/index';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { CmsComponentConnector } from '../../connectors/component/cms-component.connector';\nimport { CmsActions } from '../actions/index';\n\n@Injectable()\nexport class NavigationEntryItemEffects {\n  @Effect()\n  loadNavigationItems$: Observable<\n    | CmsActions.LoadCmsNavigationItemsSuccess\n    | CmsActions.LoadCmsNavigationItemsFail\n  > = this.actions$.pipe(\n    ofType(CmsActions.LOAD_CMS_NAVIGATION_ITEMS),\n    map((action: CmsActions.LoadCmsNavigationItems) => action.payload),\n    map((payload) => {\n      return {\n        ids: this.getIdListByItemType(payload.items),\n        nodeId: payload.nodeId,\n      };\n    }),\n    mergeMap((data) => {\n      if (data.ids.componentIds.length > 0) {\n        return this.routingService.getRouterState().pipe(\n          filter((routerState) => routerState !== undefined),\n          map((routerState) => routerState.state.context),\n          take(1),\n          mergeMap((pageContext) =>\n            // download all items in one request\n            this.cmsComponentConnector\n              .getList(data.ids.componentIds, pageContext)\n              .pipe(\n                map(\n                  (components) =>\n                    new CmsActions.LoadCmsNavigationItemsSuccess({\n                      nodeId: data.nodeId,\n                      components: components,\n                    })\n                ),\n                catchError((error) =>\n                  of(\n                    new CmsActions.LoadCmsNavigationItemsFail(\n                      data.nodeId,\n                      normalizeHttpError(error)\n                    )\n                  )\n                )\n              )\n          )\n        );\n      } else if (data.ids.pageIds.length > 0) {\n        // TODO: future work\n        // dispatch action to load cms page one by one\n      } else if (data.ids.mediaIds.length > 0) {\n        // TODO: future work\n        // send request to get list of media\n      } else {\n        return of(\n          new CmsActions.LoadCmsNavigationItemsFail(\n            data.nodeId,\n            'navigation nodes are empty'\n          )\n        );\n      }\n    })\n  );\n\n  // We only consider 3 item types: cms page, cms component, and media.\n  getIdListByItemType(\n    itemList: any[]\n  ): { pageIds: string[]; componentIds: string[]; mediaIds: string[] } {\n    const pageIds: string[] = [];\n    const componentIds: string[] = [];\n    const mediaIds: string[] = [];\n\n    itemList.forEach((item) => {\n      if (item.superType === 'AbstractCMSComponent') {\n        componentIds.push(item.id);\n      } else if (item.superType === 'AbstractPage') {\n        pageIds.push(item.id);\n      } else if (item.superType === 'AbstractMedia') {\n        mediaIds.push(item.id);\n      }\n    });\n    return { pageIds: pageIds, componentIds: componentIds, mediaIds: mediaIds };\n  }\n\n  constructor(\n    private actions$: Actions,\n    private cmsComponentConnector: CmsComponentConnector,\n    private routingService: RoutingService\n  ) {}\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\nimport { PageContext } from '../../../routing/models/page-context.model';\nimport { CmsStructureModel } from '../../model/page.model';\nimport { CmsStructureConfigService } from '../../services/cms-structure-config.service';\nimport { CmsPageAdapter } from './cms-page.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsPageConnector {\n  constructor(\n    protected cmsPageAdapter: CmsPageAdapter,\n    protected cmsStructureConfigService: CmsStructureConfigService\n  ) {}\n\n  /**\n   * Returns an observable with the page structure. The page structure is\n   * typically loaded from a backend, but can also be returned from static\n   * configuration (see `CmsStructureConfigService`).\n   */\n  get(pageContext: PageContext): Observable<CmsStructureModel> {\n    return this.cmsStructureConfigService\n      .shouldIgnoreBackend(pageContext.id)\n      .pipe(\n        switchMap((loadFromConfig) => {\n          if (!loadFromConfig) {\n            return this.cmsPageAdapter.load(pageContext).pipe(\n              catchError((error) => {\n                if (\n                  error instanceof HttpErrorResponse &&\n                  error.status === 400\n                ) {\n                  return of({});\n                } else {\n                  return throwError(error);\n                }\n              })\n            );\n          } else {\n            return of({});\n          }\n        }),\n        switchMap((page) => this.mergeDefaultPageStructure(pageContext, page))\n      );\n  }\n\n  /**\n   *\n   * Merge default page structure to the given `CmsStructureModel`.\n   * This is beneficial for a fast setup of the UI without necessary\n   * fine-grained CMS setup.\n   */\n  private mergeDefaultPageStructure(\n    pageContext: PageContext,\n    pageStructure: CmsStructureModel\n  ): Observable<CmsStructureModel> {\n    return this.cmsStructureConfigService.mergePageStructure(\n      pageContext.id,\n      pageStructure\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport {\n  catchError,\n  filter,\n  groupBy,\n  map,\n  mergeMap,\n  switchMap,\n  take,\n} from 'rxjs/operators';\nimport { AuthActions } from '../../../auth/user-auth/store/actions/index';\nimport { RoutingService } from '../../../routing/index';\nimport { SiteContextActions } from '../../../site-context/store/actions/index';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { CmsPageConnector } from '../../connectors/page/cms-page.connector';\nimport { CmsStructureModel } from '../../model/page.model';\nimport { serializePageContext } from '../../utils/cms-utils';\nimport { CmsActions } from '../actions/index';\n\n@Injectable()\nexport class PageEffects {\n  @Effect()\n  refreshPage$: Observable<Action> = this.actions$.pipe(\n    ofType(\n      SiteContextActions.LANGUAGE_CHANGE,\n      AuthActions.LOGOUT,\n      AuthActions.LOGIN\n    ),\n    switchMap(() =>\n      this.routingService.getRouterState().pipe(\n        filter(\n          (routerState) =>\n            routerState &&\n            routerState.state &&\n            routerState.state.cmsRequired &&\n            !routerState.nextState\n        ),\n        take(1),\n        map((routerState) => routerState.state.context),\n        mergeMap((context) => of(new CmsActions.LoadCmsPageData(context)))\n      )\n    )\n  );\n\n  @Effect()\n  loadPageData$: Observable<Action> = this.actions$.pipe(\n    ofType(CmsActions.LOAD_CMS_PAGE_DATA),\n    map((action: CmsActions.LoadCmsPageData) => action.payload),\n    groupBy((pageContext) => serializePageContext(pageContext)),\n    mergeMap((group) =>\n      group.pipe(\n        switchMap((pageContext) =>\n          this.cmsPageConnector.get(pageContext).pipe(\n            mergeMap((cmsStructure: CmsStructureModel) => {\n              const actions: Action[] = [\n                new CmsActions.CmsGetComponentFromPage(\n                  cmsStructure.components.map((component) => ({\n                    component,\n                    pageContext,\n                  }))\n                ),\n                new CmsActions.LoadCmsPageDataSuccess(\n                  pageContext,\n                  cmsStructure.page\n                ),\n              ];\n\n              const pageLabel = cmsStructure.page.label;\n              // For content pages the page label returned from backend can be different than page ID initially assumed from route.\n              // In such a case let's save the success response not only for initially assumed page ID, but also for correct page label.\n              if (pageLabel && pageLabel !== pageContext.id) {\n                actions.unshift(\n                  new CmsActions.CmsSetPageSuccessIndex(\n                    { id: pageLabel, type: pageContext.type },\n                    cmsStructure.page\n                  )\n                );\n              }\n\n              return actions;\n            }),\n            catchError((error) =>\n              of(\n                new CmsActions.LoadCmsPageDataFail(\n                  pageContext,\n                  normalizeHttpError(error)\n                )\n              )\n            )\n          )\n        )\n      )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private cmsPageConnector: CmsPageConnector,\n    private routingService: RoutingService\n  ) {}\n}\n","import { ComponentsEffects } from './components.effect';\nimport { NavigationEntryItemEffects } from './navigation-entry-item.effect';\nimport { PageEffects } from './page.effect';\n\nexport const effects: any[] = [\n  PageEffects,\n  ComponentsEffects,\n  NavigationEntryItemEffects,\n];\n\nexport * from './components.effect';\nexport * from './navigation-entry-item.effect';\nexport * from './page.effect';\n","import { loaderReducer } from '../../../state/utils/loader/loader.reducer';\nimport { serializePageContext } from '../../utils/cms-utils';\nimport { CmsActions } from '../actions/index';\nimport { ComponentsContext } from '../cms-state';\n\nexport const initialState: ComponentsContext = {\n  component: undefined,\n  pageContext: {},\n};\n\nfunction componentExistsReducer<T>(\n  state: boolean | undefined,\n  action: CmsActions.CmsComponentAction<T>\n): boolean {\n  switch (action.type) {\n    case CmsActions.LOAD_CMS_COMPONENT_FAIL:\n      return false;\n\n    case CmsActions.CMS_GET_COMPONENT_FROM_PAGE:\n    case CmsActions.LOAD_CMS_COMPONENT_SUCCESS:\n      return true;\n  }\n  return state;\n}\n\nexport function reducer<T>(\n  state = initialState,\n  action: CmsActions.CmsComponentAction<T>\n): ComponentsContext {\n  switch (action.type) {\n    case CmsActions.LOAD_CMS_COMPONENT: {\n      const pageContextReducer = loaderReducer<boolean>(\n        action.meta.entityType,\n        componentExistsReducer\n      );\n      const context = serializePageContext(action.payload.pageContext, true);\n      return {\n        ...state,\n        pageContext: {\n          ...state.pageContext,\n          [context]: pageContextReducer(state.pageContext[context], action),\n        },\n      };\n    }\n    case CmsActions.LOAD_CMS_COMPONENT_FAIL: {\n      const pageContextReducer = loaderReducer<boolean>(\n        action.meta.entityType,\n        componentExistsReducer\n      );\n      const context = serializePageContext(action.payload.pageContext, true);\n      return {\n        ...state,\n        pageContext: {\n          ...state.pageContext,\n          [context]: pageContextReducer(state.pageContext[context], action),\n        },\n      };\n    }\n    case CmsActions.LOAD_CMS_COMPONENT_SUCCESS: {\n      const pageContextReducer = loaderReducer<boolean>(\n        action.meta.entityType,\n        componentExistsReducer\n      );\n      const context = serializePageContext(action.payload.pageContext, true);\n      return {\n        ...state,\n        component: action.payload.component as T,\n        pageContext: {\n          ...state.pageContext,\n          [context]: pageContextReducer(state.pageContext[context], action),\n        },\n      };\n    }\n    case CmsActions.CMS_GET_COMPONENT_FROM_PAGE: {\n      const pageContextReducer = loaderReducer<boolean>(\n        action.meta.entityType,\n        componentExistsReducer\n      );\n      if (!Array.isArray(action.payload)) {\n        const context = serializePageContext(action.payload.pageContext, true);\n        return {\n          ...state,\n          component: action.payload.component as T,\n          pageContext: {\n            ...state.pageContext,\n            [context]: pageContextReducer(state.pageContext[context], action),\n          },\n        };\n      }\n    }\n  }\n  return state;\n}\n","import { NodeItem } from '../../model/node-item.model';\nimport { CmsActions } from '../actions/index';\n\nexport const initialState: NodeItem = undefined;\n\nexport function reducer(\n  state = initialState,\n  action: CmsActions.CmsNavigationEntryItemAction\n): NodeItem {\n  switch (action.type) {\n    case CmsActions.LOAD_CMS_NAVIGATION_ITEMS_SUCCESS: {\n      if (action.payload.components) {\n        const components = action.payload.components;\n        const newItem: NodeItem = components.reduce(\n          (compItems: { [uid_type: string]: any }, component: any) => {\n            return {\n              ...compItems,\n              [`${component.uid}_AbstractCMSComponent`]: component,\n            };\n          },\n          {\n            ...{},\n          }\n        );\n\n        return {\n          ...state,\n          ...newItem,\n        };\n      }\n    }\n  }\n\n  return state;\n}\n","import { EntityState } from '../../../state/utils/entity/entity-state';\nimport { Page } from '../../model/page.model';\nimport { CmsActions } from '../actions/index';\n\nexport const initialState: EntityState<Page> = { entities: {} };\n\nexport function reducer(\n  state = initialState,\n  action: CmsActions.LoadCmsPageDataSuccess\n): EntityState<Page> {\n  switch (action.type) {\n    case CmsActions.LOAD_CMS_PAGE_DATA_SUCCESS: {\n      const page: Page = action.payload;\n      return { ...state, entities: { ...state.entities, [page.pageId]: page } };\n    }\n  }\n  return state;\n}\n","import { CmsActions } from '../actions/index';\n\nexport const initialState = undefined;\n\nexport function reducer(\n  entityType: string\n): (\n  state: string,\n  action:\n    | CmsActions.LoadCmsPageDataSuccess\n    | CmsActions.LoadCmsPageDataFail\n    | CmsActions.CmsSetPageFailIndex\n) => string {\n  return (\n    state = initialState,\n    action:\n      | CmsActions.LoadCmsPageDataSuccess\n      | CmsActions.LoadCmsPageDataFail\n      | CmsActions.CmsSetPageSuccessIndex\n      | CmsActions.CmsSetPageFailIndex\n  ): string => {\n    if (action.meta && action.meta.entityType === entityType) {\n      switch (action.type) {\n        case CmsActions.LOAD_CMS_PAGE_DATA_SUCCESS: {\n          return action.payload.pageId;\n        }\n\n        case CmsActions.LOAD_CMS_PAGE_DATA_FAIL: {\n          return initialState;\n        }\n\n        case CmsActions.CMS_SET_PAGE_FAIL_INDEX: {\n          return action.payload;\n        }\n\n        case CmsActions.CMS_SET_PAGE_SUCCESS_INDEX: {\n          return action.payload.pageId;\n        }\n      }\n    }\n    return state;\n  };\n}\n","import { InjectionToken, Provider } from '@angular/core';\nimport {\n  Action,\n  ActionReducer,\n  ActionReducerMap,\n  combineReducers,\n  MetaReducer,\n} from '@ngrx/store';\nimport { AuthActions } from '../../../auth/user-auth/store/actions/index';\nimport { PageType } from '../../../model/cms.model';\nimport { SiteContextActions } from '../../../site-context/store/actions/index';\nimport { entityLoaderReducer } from '../../../state/utils/entity-loader/entity-loader.reducer';\nimport { entityReducer } from '../../../state/utils/entity/entity.reducer';\nimport { NodeItem } from '../../model/node-item.model';\nimport {\n  CmsState,\n  COMPONENT_ENTITY,\n  NAVIGATION_DETAIL_ENTITY,\n  StateWithCms,\n} from '../cms-state';\nimport * as fromComponentsReducer from './components.reducer';\nimport * as fromNavigation from './navigation-entry-item.reducer';\nimport * as fromPageReducer from './page-data.reducer';\nimport * as fromPageIndexReducer from './page-index.reducer';\n\nexport function getReducers(): ActionReducerMap<CmsState> {\n  return {\n    page: combineReducers({\n      pageData: fromPageReducer.reducer,\n      index: combineReducers({\n        content: entityLoaderReducer<string>(\n          PageType.CONTENT_PAGE,\n          fromPageIndexReducer.reducer(PageType.CONTENT_PAGE)\n        ),\n        product: entityLoaderReducer<string>(\n          PageType.PRODUCT_PAGE,\n          fromPageIndexReducer.reducer(PageType.PRODUCT_PAGE)\n        ),\n        category: entityLoaderReducer<string>(\n          PageType.CATEGORY_PAGE,\n          fromPageIndexReducer.reducer(PageType.CATEGORY_PAGE)\n        ),\n        catalog: entityLoaderReducer<string>(\n          PageType.CATALOG_PAGE,\n          fromPageIndexReducer.reducer(PageType.CATALOG_PAGE)\n        ),\n      }),\n    }),\n    components: entityReducer(COMPONENT_ENTITY, fromComponentsReducer.reducer),\n    navigation: entityLoaderReducer<NodeItem>(\n      NAVIGATION_DETAIL_ENTITY,\n      fromNavigation.reducer\n    ),\n  };\n}\n\nexport const reducerToken: InjectionToken<ActionReducerMap<\n  CmsState\n>> = new InjectionToken<ActionReducerMap<CmsState>>('CmsReducers');\n\nexport const reducerProvider: Provider = {\n  provide: reducerToken,\n  useFactory: getReducers,\n};\n\nexport function clearCmsState(\n  reducer: ActionReducer<StateWithCms, Action>\n): ActionReducer<StateWithCms, Action> {\n  return function (state, action) {\n    if (\n      action.type === SiteContextActions.LANGUAGE_CHANGE ||\n      action.type === AuthActions.LOGOUT ||\n      action.type === AuthActions.LOGIN\n    ) {\n      state = undefined;\n    }\n    return reducer(state, action);\n  };\n}\n\nexport const metaReducers: MetaReducer<StateWithCms>[] = [clearCmsState];\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport {\n  StateConfig,\n  StateTransferType,\n} from '../../state/config/state-config';\nimport { StateModule } from '../../state/state.module';\nimport { CMS_FEATURE } from './cms-state';\nimport { effects } from './effects/index';\nimport { metaReducers, reducerProvider, reducerToken } from './reducers/index';\nimport { provideDefaultConfigFactory } from '../../config/config-providers';\n\nexport function cmsStoreConfigFactory(): StateConfig {\n  // if we want to reuse CMS_FEATURE const in config, we have to use factory instead of plain object\n  const config: StateConfig = {\n    state: {\n      ssrTransfer: {\n        keys: { [CMS_FEATURE]: StateTransferType.TRANSFER_STATE },\n      },\n    },\n  };\n  return config;\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StateModule,\n    StoreModule.forFeature(CMS_FEATURE, reducerToken, { metaReducers }),\n    EffectsModule.forFeature(effects),\n  ],\n  providers: [\n    provideDefaultConfigFactory(cmsStoreConfigFactory),\n    reducerProvider,\n  ],\n})\nexport class CmsStoreModule {}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { defaultCmsModuleConfig } from './config/default-cms-config';\nimport { CmsService } from './facade/cms.service';\nimport { CmsPageTitleModule } from './page/page.module';\nimport { CmsStoreModule } from './store/cms-store.module';\nimport { provideDefaultConfig } from '../config/config-providers';\n\n@NgModule({\n  imports: [CmsStoreModule, CmsPageTitleModule],\n})\nexport class CmsModule {\n  static forRoot(): ModuleWithProviders<CmsModule> {\n    return {\n      ngModule: CmsModule,\n      providers: [CmsService, provideDefaultConfig(defaultCmsModuleConfig)],\n    };\n  }\n}\n","import { asapScheduler, combineLatest, defer, Observable } from 'rxjs';\nimport { audit } from 'rxjs/operators';\n\ntype ReturnTypes<T extends Observable<any>[]> = {\n  [P in keyof T]: T[P] extends Observable<infer R> ? R : never;\n};\ntype Observables = [Observable<any>] | Observable<any>[];\n\n/**\n * uniteLatest is an alternative to combineLatest. The first emission is\n * emitted synchronously (just like combineLatest) and all following emissions\n * are audited and emitted using asapScheduler.\n *\n * It effectively smooths out emissions when multiple sources will emit at the\n * same time: uniteLatest will have only one emission, where combine latest will\n * have more than one (one per source changed).\n *\n * @param sources\n */\nexport function uniteLatest<R extends Observables>(\n  sources: R\n): Observable<ReturnTypes<R>> {\n  return defer(() => {\n    let subNo = 0;\n    const trigger = new Observable((subscriber) => {\n      const action = () => {\n        subscriber.next();\n        subscriber.complete();\n      };\n\n      if (subNo) {\n        asapScheduler.schedule(action);\n      } else {\n        action();\n      }\n      subNo++;\n    });\n\n    return combineLatest(sources).pipe(audit(() => trigger));\n  }) as any;\n}\n","import { Injectable } from '@angular/core';\nimport { defer, Observable, of } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\nimport { UnifiedInjector } from '../../lazy-loading/unified-injector';\nimport { resolveApplicable } from '../../util/applicable';\nimport { uniteLatest } from '../../util/rxjs/unite-latest';\nimport { Page, PageMeta } from '../model/page.model';\nimport { PageMetaResolver } from '../page/page-meta.resolver';\nimport { CmsService } from './cms.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PageMetaService {\n  private resolvers$: Observable<\n    PageMetaResolver[]\n  > = this.unifiedInjector\n    .getMulti(PageMetaResolver)\n    .pipe(shareReplay({ bufferSize: 1, refCount: true })) as Observable<\n    PageMetaResolver[]\n  >;\n\n  constructor(\n    protected cms: CmsService,\n    protected unifiedInjector?: UnifiedInjector\n  ) {}\n  /**\n   * The list of resolver interfaces will be evaluated for the pageResolvers.\n   *\n   * TODO: optimize browser vs SSR resolvers; image, robots and description\n   *       aren't needed during browsing.\n   */\n  protected resolverMethods: { [key: string]: string } = {\n    title: 'resolveTitle',\n    heading: 'resolveHeading',\n    description: 'resolveDescription',\n    breadcrumbs: 'resolveBreadcrumbs',\n    image: 'resolveImage',\n    robots: 'resolveRobots',\n  };\n\n  protected meta$: Observable<PageMeta | null> = defer(() =>\n    this.cms.getCurrentPage()\n  ).pipe(\n    filter(Boolean),\n    switchMap((page: Page) => this.getMetaResolver(page)),\n    switchMap((metaResolver: PageMetaResolver) =>\n      metaResolver ? this.resolve(metaResolver) : of(null)\n    ),\n    shareReplay({ bufferSize: 1, refCount: true })\n  );\n\n  getMeta(): Observable<PageMeta | null> {\n    return this.meta$;\n  }\n\n  /**\n   * If a `PageResolver` has implemented a resolver interface, the resolved data\n   * is merged into the `PageMeta` object.\n   * @param metaResolver\n   */\n  protected resolve(metaResolver: PageMetaResolver): Observable<PageMeta> {\n    const resolveMethods: Observable<PageMeta>[] = Object.keys(\n      this.resolverMethods\n    )\n      .filter((key) => metaResolver[this.resolverMethods[key]])\n      .map((key) =>\n        metaResolver[this.resolverMethods[key]]().pipe(\n          map((data) => ({\n            [key]: data,\n          }))\n        )\n      );\n\n    return uniteLatest(resolveMethods).pipe(\n      map((data) => Object.assign({}, ...data))\n    );\n  }\n\n  /**\n   * Return the resolver with the best match, based on a score\n   * generated by the resolver.\n   *\n   * Resolvers match by default on `PageType` and `page.template`.\n   */\n  protected getMetaResolver(page: Page): Observable<PageMetaResolver> {\n    return this.resolvers$.pipe(\n      map((resolvers) => resolveApplicable(resolvers, [page], [page]))\n    );\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { filter, take, takeWhile } from 'rxjs/operators';\nimport { CmsService } from '../../cms/facade/cms.service';\nimport { Page } from '../../cms/model/page.model';\nimport { BaseSite } from '../../model';\nimport { PageType } from '../../model/cms.model';\nimport { RoutingService } from '../../routing/facade/routing.service';\nimport { BaseSiteService } from '../../site-context/facade/base-site.service';\nimport { WindowRef } from '../../window/window-ref';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SmartEditService {\n  private _cmsTicketId: string;\n  private isPreviewPage = false;\n  private _currentPageId: string;\n  private _launchedInSmartEdit = false;\n\n  private defaultPreviewProductCode: string;\n  private defaultPreviewCategoryCode: string;\n\n  constructor(\n    protected cmsService: CmsService,\n    protected routingService: RoutingService,\n    protected baseSiteService: BaseSiteService,\n    protected zone: NgZone,\n    protected winRef: WindowRef\n  ) {\n    this.getCmsTicket();\n\n    if (winRef.nativeWindow) {\n      const window = winRef.nativeWindow as any;\n      // rerender components and slots after editing\n      window.smartedit = window.smartedit || {};\n      window.smartedit.renderComponent = (\n        componentId,\n        componentType,\n        parentId\n      ) => {\n        return this.renderComponent(componentId, componentType, parentId);\n      };\n\n      // reprocess page\n      window.smartedit.reprocessPage = this.reprocessPage;\n    }\n  }\n\n  get cmsTicketId(): string {\n    return this._cmsTicketId;\n  }\n\n  protected getCmsTicket() {\n    combineLatest([\n      this.cmsService.getCurrentPage(),\n      this.routingService.getRouterState(),\n    ])\n      .pipe(\n        takeWhile(([cmsPage]) => cmsPage === undefined),\n        filter(([, routerState]) => {\n          if (routerState.nextState && !this._cmsTicketId) {\n            this._cmsTicketId =\n              routerState.nextState.queryParams['cmsTicketId'];\n            if (this._cmsTicketId) {\n              return true;\n            }\n          }\n          return false;\n        }),\n        take(1)\n      )\n      .subscribe(() => {\n        this._launchedInSmartEdit = true;\n        this.getDefaultPreviewCode();\n      });\n  }\n\n  protected getDefaultPreviewCode() {\n    this.baseSiteService\n      .get()\n      .pipe(filter(Boolean), take(1))\n      .subscribe((site: BaseSite) => {\n        this.defaultPreviewCategoryCode = site.defaultPreviewCategoryCode;\n        this.defaultPreviewProductCode = site.defaultPreviewProductCode;\n\n        this.addPageContract();\n      });\n  }\n\n  protected addPageContract() {\n    this.cmsService.getCurrentPage().subscribe((cmsPage) => {\n      if (cmsPage && this._cmsTicketId) {\n        this._currentPageId = cmsPage.pageId;\n\n        // before adding contract to page, we need redirect to that page\n        this.goToPreviewPage(cmsPage);\n\n        // remove old page contract\n        const previousContract = [];\n        Array.from(this.winRef.document.body.classList).forEach((attr) =>\n          previousContract.push(attr)\n        );\n        previousContract.forEach((attr) =>\n          this.winRef.document.body.classList.remove(attr)\n        );\n\n        // add new page contract\n        if (cmsPage.properties && cmsPage.properties.smartedit) {\n          const seClasses = cmsPage.properties.smartedit.classes.split(' ');\n          seClasses.forEach((classItem) => {\n            this.winRef.document.body.classList.add(classItem);\n          });\n        }\n      }\n    });\n  }\n\n  protected goToPreviewPage(cmsPage: Page) {\n    // only the first page is the smartedit preview page\n    if (!this.isPreviewPage) {\n      this.isPreviewPage = true;\n      if (\n        cmsPage.type === PageType.PRODUCT_PAGE &&\n        this.defaultPreviewProductCode\n      ) {\n        this.routingService.go({\n          cxRoute: 'product',\n          params: { code: this.defaultPreviewProductCode, name: '' },\n        });\n      } else if (\n        cmsPage.type === PageType.CATEGORY_PAGE &&\n        this.defaultPreviewCategoryCode\n      ) {\n        this.routingService.go({\n          cxRoute: 'category',\n          params: { code: this.defaultPreviewCategoryCode },\n        });\n      }\n    }\n  }\n\n  protected renderComponent(\n    componentId: string,\n    componentType?: string,\n    parentId?: string\n  ): boolean {\n    if (componentId) {\n      this.zone.run(() => {\n        // without parentId, it is slot\n        if (!parentId) {\n          if (this._currentPageId) {\n            this.cmsService.refreshPageById(this._currentPageId);\n          } else {\n            this.cmsService.refreshLatestPage();\n          }\n        } else if (componentType) {\n          this.cmsService.refreshComponent(componentId);\n        }\n      });\n    }\n\n    return true;\n  }\n\n  protected reprocessPage() {\n    // TODO: reprocess page API\n  }\n\n  /**\n   * Whether the app launched in smart edit\n   */\n  isLaunchedInSmartEdit(): boolean {\n    return this._launchedInSmartEdit;\n  }\n}\n","import { Injectable, Renderer2 } from '@angular/core';\nimport { SmartEditService } from '../../smart-edit/services/smart-edit.service';\nimport { ContentSlotComponentData } from '../model/content-slot-component-data.model';\nimport { ContentSlotData } from '../model/content-slot-data.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DynamicAttributeService {\n  constructor(protected smartEditService: SmartEditService) {}\n\n  /**\n   * Add dynamic attributes to DOM. These attributes are extracted from the properties of cms items received from backend.\n   * There can by many different groups of properties, one of them is smartedit. But EC allows addons to create different groups.\n   * For example, personalization may add 'script' group etc.\n   * @param element: slot or cms component element\n   * @param renderer\n   * @param cmsRenderingContext: an object containing properties in each cms item response data\n   */\n  addDynamicAttributes(\n    element: Element,\n    renderer: Renderer2,\n    cmsRenderingContext: {\n      componentData?: ContentSlotComponentData;\n      slotData?: ContentSlotData;\n    }\n  ): void {\n    const properties =\n      cmsRenderingContext.componentData?.properties ||\n      cmsRenderingContext.slotData?.properties;\n\n    if (properties && this.smartEditService.isLaunchedInSmartEdit()) {\n      // check each group of properties, e.g. smartedit\n      Object.keys(properties).forEach((group) => {\n        const name = 'data-' + group + '-';\n        const groupProps = properties[group];\n\n        // check each property in the group\n        Object.keys(groupProps).forEach((propName) => {\n          const propValue = groupProps[propName];\n          if (propName === 'classes') {\n            const classes = propValue.split(' ');\n            classes.forEach((classItem) => {\n              element.classList.add(classItem);\n            });\n          } else {\n            renderer.setAttribute(\n              element,\n              name +\n                propName\n                  .split(/(?=[A-Z])/)\n                  .join('-')\n                  .toLowerCase(),\n              propValue\n            );\n          }\n        });\n      });\n    }\n  }\n}\n","import {\n  APP_INITIALIZER,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n} from '@angular/core';\nimport { ConfigInitializerService } from './config-initializer.service';\nimport {\n  CONFIG_INITIALIZER,\n  CONFIG_INITIALIZER_FORROOT_GUARD,\n  ConfigInitializer,\n} from './config-initializer';\nimport { LOCATION_INITIALIZED } from '@angular/common';\n\nexport function configInitializerFactory(\n  configInitializer: ConfigInitializerService,\n  initializers: ConfigInitializer[]\n) {\n  const isReady = () => configInitializer.initialize(initializers);\n  return isReady;\n}\n\nexport function locationInitializedFactory(\n  configInitializer: ConfigInitializerService\n) {\n  return configInitializer.getStableConfig();\n}\n\n@NgModule({})\nexport class ConfigInitializerModule {\n  static forRoot(): ModuleWithProviders<ConfigInitializerModule> {\n    return {\n      ngModule: ConfigInitializerModule,\n      providers: [\n        {\n          provide: CONFIG_INITIALIZER_FORROOT_GUARD,\n          useValue: true,\n        },\n        {\n          provide: APP_INITIALIZER,\n          multi: true,\n          useFactory: configInitializerFactory,\n          deps: [\n            ConfigInitializerService,\n            [new Optional(), CONFIG_INITIALIZER],\n          ],\n        },\n        {\n          // Hold on the initial navigation until the Spartacus configuration is stable\n          provide: LOCATION_INITIALIZED,\n          useFactory: locationInitializedFactory,\n          deps: [ConfigInitializerService],\n        },\n      ],\n    };\n  }\n}\n","import {\n  APP_INITIALIZER,\n  isDevMode,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n} from '@angular/core';\nimport { ConfigInitializerService } from '../config-initializer/config-initializer.service';\nimport {\n  ConfigValidator,\n  ConfigValidatorToken,\n  validateConfig,\n} from './config-validator';\n\nexport function configValidatorFactory(\n  configInitializer: ConfigInitializerService,\n  validators: ConfigValidator[]\n) {\n  const validate = () => {\n    if (isDevMode()) {\n      configInitializer\n        .getStableConfig()\n        .then((config) => validateConfig(config, validators || []));\n    }\n  };\n  return validate;\n}\n\n/**\n * Should stay private in 1.x\n * as forRoot() is used internally by ConfigInitializerModule\n *\n * issue: #5279\n */\n@NgModule()\nexport class ConfigValidatorModule {\n  static forRoot(): ModuleWithProviders<ConfigValidatorModule> {\n    return {\n      ngModule: ConfigValidatorModule,\n      providers: [\n        {\n          provide: APP_INITIALIZER,\n          multi: true,\n          useFactory: configValidatorFactory,\n          deps: [\n            ConfigInitializerService,\n            [new Optional(), ConfigValidatorToken],\n          ],\n        },\n      ],\n    };\n  }\n}\n","export function getCookie(cookie: string, name: string) {\n  const regExp = new RegExp('(?:^|;\\\\s*)' + name + '=([^;]*)', 'g');\n  const result: RegExpExecArray = regExp.exec(cookie);\n\n  return (result && decodeURIComponent(result[1])) || '';\n}\n","import { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport {\n  InjectionToken,\n  ModuleWithProviders,\n  NgModule,\n  PLATFORM_ID,\n} from '@angular/core';\nimport { getCookie } from './utils/get-cookie';\nimport { provideConfigFactory } from './config-providers';\n\nexport const TEST_CONFIG_COOKIE_NAME = new InjectionToken<string>(\n  'TEST_CONFIG_COOKIE_NAME'\n);\n\nexport function parseConfigJSON(config: string) {\n  try {\n    return JSON.parse(decodeURIComponent(config));\n  } catch (_) {\n    return {};\n  }\n}\n\nexport function configFromCookieFactory(\n  cookieName: string,\n  platform: any,\n  document: Document\n) {\n  if (isPlatformBrowser(platform) && cookieName) {\n    const config = getCookie(document.cookie, cookieName);\n    return parseConfigJSON(config);\n  }\n  return {};\n}\n\nexport interface TestConfigModuleOptions {\n  cookie: string;\n}\n\n/**\n * Designed/intended to provide dynamic configuration for testing scenarios ONLY (e.g. e2e tests).\n *\n * CAUTION: DON'T USE IT IN PRODUCTION! IT HASN'T BEEN REVIEWED FOR SECURITY ISSUES.\n */\n@NgModule({})\nexport class TestConfigModule {\n  /**\n   * Injects JSON config from the cookie of the given name.\n   *\n   * Be aware of the cookie limitations (4096 bytes).\n   *\n   * CAUTION: DON'T USE IT IN PRODUCTION! IT HASN'T BEEN REVIEWED FOR SECURITY ISSUES.\n   */\n  static forRoot(\n    options: TestConfigModuleOptions\n  ): ModuleWithProviders<TestConfigModule> {\n    return {\n      ngModule: TestConfigModule,\n      providers: [\n        {\n          provide: TEST_CONFIG_COOKIE_NAME,\n          useValue: options && options.cookie,\n        },\n        provideConfigFactory(configFromCookieFactory, [\n          TEST_CONFIG_COOKIE_NAME,\n          PLATFORM_ID,\n          DOCUMENT,\n        ]),\n      ],\n    };\n  }\n}\n","import { DatePipe, getLocaleId } from '@angular/common';\nimport { isDevMode, Pipe, PipeTransform } from '@angular/core';\nimport { LanguageService } from '../site-context/facade/language.service';\n\n// type CxDatePipe, not DatePipe, due to conflict with Angular's DatePipe - problem occurs for the backward compatibility compiler of Ivy\n@Pipe({ name: 'cxDate' })\nexport class CxDatePipe extends DatePipe implements PipeTransform {\n  constructor(protected language: LanguageService) {\n    super(null);\n  }\n\n  // TODO: Replace `any` to match strict types from angular in 4.0\n  // Overload to support stricter type check from angular 11 onwards\n  transform(value: any, format?: string, timezone?: string): string | null;\n  transform(value: null | undefined, format?: string, timezone?: string): null;\n  transform(value: any, format?: string, timezone?: string): string | null {\n    return super.transform(value, format, timezone, this.getLang());\n  }\n\n  private getLang() {\n    const lang = this.getActiveLang();\n    try {\n      getLocaleId(lang);\n      return lang;\n    } catch {\n      this.reportMissingLocaleData(lang);\n      return 'en';\n    }\n  }\n\n  private getActiveLang(): string {\n    let result;\n    this.language\n      .getActive()\n      .subscribe((lang) => (result = lang))\n      .unsubscribe();\n    return result;\n  }\n\n  private reportMissingLocaleData(lang: string) {\n    if (isDevMode()) {\n      console.warn(\n        `cxDate pipe: No locale data registered for '${lang}' (see https://angular.io/api/common/registerLocaleData).`\n      );\n    }\n  }\n}\n","import {\n  ChangeDetectorRef,\n  isDevMode,\n  OnDestroy,\n  Pipe,\n  PipeTransform,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { shallowEqualObjects } from '../util/compare-equal-objects';\nimport { Translatable, TranslatableParams } from './translatable';\nimport { TranslationService } from './translation.service';\n\n@Pipe({ name: 'cxTranslate', pure: false })\nexport class TranslatePipe implements PipeTransform, OnDestroy {\n  private lastKey: string;\n  private lastOptions: object;\n  private translatedValue: string;\n  private sub: Subscription;\n\n  constructor(\n    protected service: TranslationService,\n    protected cd: ChangeDetectorRef\n  ) {}\n\n  transform(\n    input: Translatable | string,\n    options: TranslatableParams = {}\n  ): string {\n    if (!input) {\n      if (isDevMode()) {\n        console.error(\n          `The given input for the cxTranslate pipe (${input}) is invalid and cannot be translated`\n        );\n      }\n      return;\n    }\n\n    if ((input as Translatable).raw) {\n      return (input as Translatable).raw;\n    }\n\n    const key = typeof input === 'string' ? input : input.key;\n    if (typeof input !== 'string') {\n      options = { ...options, ...input.params };\n    }\n\n    this.translate(key, options);\n    return this.translatedValue;\n  }\n\n  private translate(key: any, options: object) {\n    if (\n      key !== this.lastKey ||\n      !shallowEqualObjects(options, this.lastOptions)\n    ) {\n      this.lastKey = key;\n      this.lastOptions = options;\n\n      if (this.sub) {\n        this.sub.unsubscribe();\n      }\n      this.sub = this.service\n        .translate(key, options, true)\n        .subscribe((val) => this.markForCheck(val));\n    }\n  }\n\n  private markForCheck(value: string) {\n    this.translatedValue = value;\n    this.cd.markForCheck();\n  }\n\n  ngOnDestroy(): void {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n}\n","import { TranslationResources } from '../translation-resources';\nimport { Injectable } from '@angular/core';\nimport { Config } from '../../config/config-tokens';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class I18nConfig {\n  i18n?: {\n    /**\n     * When there are missing translation resources for the active language, the fallback language will be used.\n     */\n    fallbackLang?: string | false;\n\n    /**\n     * Configuration for lazy loading of translation files.\n     * For eager loading of translations please use config option `i18n.resources`\n     */\n\n    backend?: {\n      /**\n       * The path to JSON translations. It should contain placeholders:\n       * - `{{lng}}` for language\n       * - `{{ns}}` for the name of chunk.\n       *\n       * Example:\n       * `assets/i18n-assets/{{lng}}/{{ns}}.json`\n       */\n\n      loadPath?: string;\n    };\n\n    /**\n     * Reference to translation resources that are eagerly bundled with JS app.\n     * For lazy loading of translations please use config option `i18n.backend` instead.\n     */\n    resources?: TranslationResources;\n\n    /**\n     * Logs i18n events (like loading translation resources) to the console. Don't use in production!\n     */\n    debug?: boolean;\n\n    /**\n     * Mapping that assigns keys' namespaces to specific chunks. The main purpose of chunks is to lazy load them.\n     */\n    chunks?: {\n      [chunk: string]: string[];\n    };\n  };\n}\n","import { Injectable, isDevMode } from '@angular/core';\nimport { I18nConfig } from './config/i18n-config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TranslationChunkService {\n  protected duplicates: { [key: string]: string[] } = {};\n  protected chunks: { [key: string]: string } = {};\n  constructor(protected config: I18nConfig) {\n    const chunks = (config.i18n && config.i18n.chunks) || {};\n    Object.keys(chunks).forEach((chunk) => {\n      chunks[chunk].forEach((key) => {\n        if (this.chunks.hasOwnProperty(key)) {\n          if (!this.duplicates[key]) {\n            this.duplicates[key] = [this.chunks[key]];\n          }\n          this.duplicates[key].push(chunk);\n        } else {\n          this.chunks[key] = chunk;\n        }\n      });\n    });\n    if (Object.keys(this.duplicates).length > 0 && isDevMode()) {\n      this.warnDuplicates(this.duplicates);\n    }\n  }\n\n  protected readonly KEY_SEPARATOR = '.';\n\n  getChunkNameForKey(key: string): string {\n    const mainKey = (key || '').split(this.KEY_SEPARATOR)[0];\n    const chunk = this.chunks && this.chunks[mainKey];\n\n    if (!chunk) {\n      return mainKey; // fallback to main key as a chunk\n    }\n    return chunk;\n  }\n\n  private warnDuplicates(items: { [key: string]: string[] }): void {\n    const dupes: string[] = [];\n    Object.keys(items).forEach((key) => {\n      dupes.push(\n        `* '${key}' found in chunks: ${items[key].join(', ')}. Used '${\n          this.chunks[key]\n        }.${key}'.`\n      );\n    });\n    console.warn(\n      `Duplicated keys has been found in the config of i18n chunks:\\n${dupes.join(\n        '\\n'\n      )}`\n    );\n  }\n}\n","import { I18nConfig } from './i18n-config';\n\nexport const defaultI18nConfig: I18nConfig = {\n  i18n: {\n    fallbackLang: false,\n    debug: false,\n  },\n};\n","import { HttpClient } from '@angular/common/http';\nimport i18next, { InitOptions } from 'i18next';\nimport i18nextXhrBackend from 'i18next-xhr-backend';\nimport { ConfigInitializerService } from '../../config/config-initializer/config-initializer.service';\nimport { LanguageService } from '../../site-context/facade/language.service';\nimport { TranslationResources } from '../translation-resources';\n\nexport function i18nextInit(\n  configInit: ConfigInitializerService,\n  languageService: LanguageService,\n  httpClient: HttpClient,\n  serverRequestOrigin: string\n): () => Promise<any> {\n  return () =>\n    configInit.getStableConfig('i18n').then((config) => {\n      let i18nextConfig: InitOptions = {\n        ns: [], // don't preload any namespaces\n        fallbackLng: config.i18n.fallbackLang,\n        debug: config.i18n.debug,\n        interpolation: {\n          escapeValue: false,\n        },\n      };\n      if (config.i18n.backend) {\n        i18next.use(i18nextXhrBackend);\n        const loadPath = getLoadPath(\n          config.i18n.backend.loadPath,\n          serverRequestOrigin\n        );\n        const backend = {\n          loadPath,\n          ajax: i18nextGetHttpClient(httpClient),\n        };\n        i18nextConfig = { ...i18nextConfig, backend };\n      }\n\n      return i18next.init(i18nextConfig, () => {\n        // Don't use i18next's 'resources' config key for adding static translations,\n        // because it will disable loading chunks from backend. We add resources here, in the init's callback.\n        i18nextAddTranslations(config.i18n.resources);\n        syncI18nextWithSiteContext(languageService);\n      });\n    });\n}\n\nexport function i18nextAddTranslations(resources: TranslationResources = {}) {\n  Object.keys(resources).forEach((lang) => {\n    Object.keys(resources[lang]).forEach((chunkName) => {\n      i18next.addResourceBundle(\n        lang,\n        chunkName,\n        resources[lang][chunkName],\n        true,\n        true\n      );\n    });\n  });\n}\n\nexport function syncI18nextWithSiteContext(language: LanguageService) {\n  // always update language of i18next on site context (language) change\n  language.getActive().subscribe((lang) => i18next.changeLanguage(lang));\n}\n\n/**\n * Returns a function appropriate for i18next to make http calls for JSON files.\n * See docs for `i18next-xhr-backend`: https://github.com/i18next/i18next-xhr-backend#backend-options\n *\n * It uses Angular HttpClient under the hood, so it works in SSR.\n * @param httpClient Angular http client\n */\nexport function i18nextGetHttpClient(\n  httpClient: HttpClient\n): (url: string, options: object, callback: Function, data: object) => void {\n  return (url: string, _options: object, callback: Function, _data: object) => {\n    httpClient.get(url, { responseType: 'text' }).subscribe(\n      (data) => callback(data, { status: 200 }),\n      (error) => callback(null, { status: error.status })\n    );\n  };\n}\n\n/**\n * Resolves the relative path to the absolute one in SSR, using the server request's origin.\n * It's needed, because Angular Universal doesn't support relative URLs in HttpClient. See Angular issues:\n * - https://github.com/angular/angular/issues/19224\n * - https://github.com/angular/universal/issues/858\n */\nexport function getLoadPath(path: string, serverRequestOrigin: string): string {\n  if (!path) {\n    return undefined;\n  }\n  if (serverRequestOrigin && !path.match(/^http(s)?:\\/\\//)) {\n    if (path.startsWith('/')) {\n      path = path.slice(1);\n    }\n    if (path.startsWith('./')) {\n      path = path.slice(2);\n    }\n    const result = `${serverRequestOrigin}/${path}`;\n    return result;\n  }\n  return path;\n}\n","import { HttpClient } from '@angular/common/http';\nimport { APP_INITIALIZER, Optional, Provider } from '@angular/core';\nimport { ConfigInitializerService } from '../../config/config-initializer/config-initializer.service';\nimport { LanguageService } from '../../site-context/facade/language.service';\nimport { SERVER_REQUEST_ORIGIN } from '../../util/ssr.tokens';\nimport { i18nextInit } from './i18next-init';\n\nexport const i18nextProviders: Provider[] = [\n  {\n    provide: APP_INITIALIZER,\n    useFactory: i18nextInit,\n    deps: [\n      ConfigInitializerService,\n      LanguageService,\n      HttpClient,\n      [new Optional(), SERVER_REQUEST_ORIGIN],\n    ],\n    multi: true,\n  },\n];\n","import { Injectable, isDevMode } from '@angular/core';\nimport i18next from 'i18next';\nimport { Observable } from 'rxjs';\nimport { I18nConfig } from '../config/i18n-config';\nimport { TranslationChunkService } from '../translation-chunk.service';\nimport { TranslationService } from '../translation.service';\n\n@Injectable({ providedIn: 'root' })\nexport class I18nextTranslationService implements TranslationService {\n  private readonly NON_BREAKING_SPACE = String.fromCharCode(160);\n  protected readonly NAMESPACE_SEPARATOR = ':';\n\n  constructor(\n    protected config: I18nConfig,\n    protected translationChunk: TranslationChunkService\n  ) {}\n\n  translate(\n    key: string,\n    options: any = {},\n    whitespaceUntilLoaded: boolean = false\n  ): Observable<string> {\n    // If we've already loaded the chunk (or failed to load), we should immediately emit the value\n    // (or the fallback value in case the key is missing).\n\n    // Moreover, we SHOULD emit a value (or a fallback value) synchronously (not in a promise/setTimeout).\n    // Otherwise, we the will trigger additional deferred change detection in a view that consumes the returned observable,\n    // which together with `switchMap` operator may lead to an infinite loop.\n\n    const chunkName = this.translationChunk.getChunkNameForKey(key);\n    const namespacedKey = this.getNamespacedKey(key, chunkName);\n\n    return new Observable<string>((subscriber) => {\n      const translate = () => {\n        if (!i18next.isInitialized) {\n          return;\n        }\n        if (i18next.exists(namespacedKey, options)) {\n          subscriber.next(i18next.t(namespacedKey, options));\n        } else {\n          if (whitespaceUntilLoaded) {\n            subscriber.next(this.NON_BREAKING_SPACE);\n          }\n          i18next.loadNamespaces(chunkName, () => {\n            if (!i18next.exists(namespacedKey, options)) {\n              this.reportMissingKey(key, chunkName);\n              subscriber.next(this.getFallbackValue(namespacedKey));\n            } else {\n              subscriber.next(i18next.t(namespacedKey, options));\n            }\n          });\n        }\n      };\n\n      translate();\n      i18next.on('languageChanged', translate);\n      return () => i18next.off('languageChanged', translate);\n    });\n  }\n\n  loadChunks(chunkNames: string | string[]): Promise<any> {\n    return i18next.loadNamespaces(chunkNames);\n  }\n\n  /**\n   * Returns a fallback value in case when the given key is missing\n   * @param key\n   */\n  protected getFallbackValue(key: string): string {\n    return isDevMode() ? `[${key}]` : this.NON_BREAKING_SPACE;\n  }\n\n  private reportMissingKey(key: string, chunkName: string) {\n    if (isDevMode()) {\n      console.warn(\n        `Translation key missing '${key}' in the chunk '${chunkName}'`\n      );\n    }\n  }\n\n  private getNamespacedKey(key: string, chunk: string): string {\n    return chunk + this.NAMESPACE_SEPARATOR + key;\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { defaultI18nConfig } from './config/default-i18n-config';\nimport { CxDatePipe } from './date.pipe';\nimport { i18nextProviders } from './i18next/i18next-providers';\nimport { I18nextTranslationService } from './i18next/i18next-translation.service';\nimport { TranslatePipe } from './translate.pipe';\nimport { TranslationService } from './translation.service';\nimport { provideDefaultConfig } from '../config/config-providers';\n\n@NgModule({\n  declarations: [TranslatePipe, CxDatePipe],\n  exports: [TranslatePipe, CxDatePipe],\n})\nexport class I18nModule {\n  static forRoot(): ModuleWithProviders<I18nModule> {\n    return {\n      ngModule: I18nModule,\n      providers: [\n        provideDefaultConfig(defaultI18nConfig),\n        { provide: TranslationService, useExisting: I18nextTranslationService },\n        ...i18nextProviders,\n      ],\n    };\n  }\n}\n","export function mockTranslate(key: string, options: any = {}) {\n  const optionsString = Object.keys(options)\n    .sort()\n    .map((optionName) => `${optionName}:${options[optionName]}`)\n    .join(' ');\n  return optionsString ? `${key} ${optionsString}` : key;\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { mockTranslate } from './mock-translate';\nimport { Translatable } from '../translatable';\n\n@Pipe({ name: 'cxTranslate' })\nexport class MockTranslatePipe implements PipeTransform {\n  transform(input: Translatable | string, options: object = {}): string {\n    if ((input as Translatable).raw) {\n      return (input as Translatable).raw;\n    }\n\n    const key = typeof input === 'string' ? input : input.key;\n    if (typeof input !== 'string') {\n      options = { ...options, ...input.params };\n    }\n    return mockTranslate(key, options);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TranslationService } from '../translation.service';\nimport { mockTranslate } from './mock-translate';\n\n@Injectable()\nexport class MockTranslationService implements TranslationService {\n  translate(\n    key: string,\n    options: any = {},\n    _whitespaceUntilLoaded: boolean = false\n  ): Observable<string> {\n    return new Observable<string>((subscriber) => {\n      const value = mockTranslate(key, options);\n      subscriber.next(value);\n      subscriber.complete();\n    });\n  }\n\n  loadChunks(_chunks: string | string[]): Promise<any> {\n    return Promise.resolve();\n  }\n}\n","import { DatePipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'cxDate' })\nexport class MockDatePipe extends DatePipe implements PipeTransform {\n  // Overload to support stricter type check from angular 11 onwards\n  transform(value: null | undefined, args?: string): null;\n  transform(value: any, format?: string, timezone?: string): string | null {\n    return super.transform(value, format, timezone, 'en');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MockTranslatePipe } from './mock-translate.pipe';\nimport { TranslationService } from '../translation.service';\nimport { MockTranslationService } from './mock-translation.service';\nimport { MockDatePipe } from './mock-date.pipe';\n\n@NgModule({\n  declarations: [MockTranslatePipe, MockDatePipe],\n  exports: [MockTranslatePipe, MockDatePipe],\n  providers: [\n    { provide: TranslationService, useClass: MockTranslationService },\n  ],\n})\nexport class I18nTestingModule {}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\n@NgModule({})\nexport class CostCenterModule {\n  static forRoot(): ModuleWithProviders<CostCenterModule> {\n    return {\n      ngModule: CostCenterModule,\n      providers: [],\n    };\n  }\n}\n","import { PersonalizationConfig } from './personalization-config';\n\nexport const defaultPersonalizationConfig: PersonalizationConfig = {\n  personalization: {\n    enabled: false,\n    httpHeaderName: {\n      id: 'Occ-Personalization-Id',\n      timestamp: 'Occ-Personalization-Time',\n    },\n    context: {\n      slotPosition: 'PlaceholderContentSlot',\n      componentId: 'PersonalizationScriptComponent',\n    },\n  },\n};\n","import { Injectable } from '@angular/core';\nimport { Config } from '../../config/config-tokens';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class PersonalizationConfig {\n  personalization: {\n    enabled?: boolean;\n    httpHeaderName?: {\n      id: string;\n      timestamp: string;\n    };\n    context?: {\n      slotPosition?: string;\n      componentId?: string;\n    };\n  };\n}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { OccEndpointsService } from '../../occ/services/occ-endpoints.service';\nimport { PersonalizationConfig } from '../config/personalization-config';\nimport { WindowRef } from '../../window/window-ref';\nimport { isPlatformBrowser } from '@angular/common';\n\nconst PERSONALIZATION_ID_KEY = 'personalization-id';\n\n@Injectable({ providedIn: 'root' })\nexport class OccPersonalizationIdInterceptor implements HttpInterceptor {\n  private personalizationId: string;\n  private requestHeader: string;\n  private enabled = false;\n\n  constructor(\n    private config: PersonalizationConfig,\n    private occEndpoints: OccEndpointsService,\n    private winRef: WindowRef,\n    @Inject(PLATFORM_ID) private platform: any\n  ) {\n    if (isPlatformBrowser(this.platform)) {\n      this.enabled =\n        (this.winRef.localStorage && this.config.personalization.enabled) ||\n        false;\n\n      if (this.enabled) {\n        this.requestHeader = this.config.personalization.httpHeaderName.id.toLowerCase();\n        this.personalizationId = this.winRef.localStorage.getItem(\n          PERSONALIZATION_ID_KEY\n        );\n      } else if (this.winRef.localStorage.getItem(PERSONALIZATION_ID_KEY)) {\n        this.winRef.localStorage.removeItem(PERSONALIZATION_ID_KEY);\n      }\n    }\n  }\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    if (!this.enabled) {\n      return next.handle(request);\n    }\n\n    if (\n      this.personalizationId &&\n      request.url.includes(this.occEndpoints.getBaseEndpoint())\n    ) {\n      request = request.clone({\n        setHeaders: {\n          [this.requestHeader]: this.personalizationId,\n        },\n      });\n    }\n\n    return next.handle(request).pipe(\n      tap((event) => {\n        if (event instanceof HttpResponse) {\n          if (event.headers.keys().includes(this.requestHeader)) {\n            const receivedId = event.headers.get(this.requestHeader);\n            if (this.personalizationId !== receivedId) {\n              this.personalizationId = receivedId;\n              this.winRef.localStorage.setItem(\n                PERSONALIZATION_ID_KEY,\n                this.personalizationId\n              );\n            }\n          }\n        }\n      })\n    );\n  }\n}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { OccEndpointsService } from '../../occ/services/occ-endpoints.service';\nimport { PersonalizationConfig } from '../config/personalization-config';\nimport { WindowRef } from '../../window/window-ref';\nimport { isPlatformBrowser } from '@angular/common';\n\nconst PERSONALIZATION_TIME_KEY = 'personalization-time';\n\n@Injectable({ providedIn: 'root' })\nexport class OccPersonalizationTimeInterceptor implements HttpInterceptor {\n  private timestamp: string;\n  private requestHeader: string;\n  private enabled = false;\n\n  constructor(\n    private config: PersonalizationConfig,\n    private occEndpoints: OccEndpointsService,\n    private winRef: WindowRef,\n    @Inject(PLATFORM_ID) private platform: any\n  ) {\n    if (isPlatformBrowser(this.platform)) {\n      this.enabled =\n        (this.winRef.localStorage && this.config.personalization.enabled) ||\n        false;\n\n      if (this.enabled) {\n        this.requestHeader = this.config.personalization.httpHeaderName.timestamp.toLowerCase();\n        this.timestamp = this.winRef.localStorage.getItem(\n          PERSONALIZATION_TIME_KEY\n        );\n      } else if (this.winRef.localStorage.getItem(PERSONALIZATION_TIME_KEY)) {\n        this.winRef.localStorage.removeItem(PERSONALIZATION_TIME_KEY);\n      }\n    }\n  }\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    if (!this.enabled) {\n      return next.handle(request);\n    }\n\n    if (\n      this.timestamp &&\n      request.url.includes(this.occEndpoints.getBaseEndpoint())\n    ) {\n      request = request.clone({\n        setHeaders: {\n          [this.requestHeader]: this.timestamp,\n        },\n      });\n    }\n\n    return next.handle(request).pipe(\n      tap((event) => {\n        if (event instanceof HttpResponse) {\n          if (event.headers.keys().includes(this.requestHeader)) {\n            const receivedTimestamp = event.headers.get(this.requestHeader);\n            if (this.timestamp !== receivedTimestamp) {\n              this.timestamp = receivedTimestamp;\n              this.winRef.localStorage.setItem(\n                PERSONALIZATION_TIME_KEY,\n                this.timestamp\n              );\n            }\n          }\n        }\n      })\n    );\n  }\n}\n","import { Provider } from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { OccPersonalizationIdInterceptor } from './occ-personalization-id.interceptor';\nimport { OccPersonalizationTimeInterceptor } from './occ-personalization-time.interceptor';\n\nexport const interceptors: Provider[] = [\n  {\n    provide: HTTP_INTERCEPTORS,\n    useExisting: OccPersonalizationIdInterceptor,\n    multi: true,\n  },\n  {\n    provide: HTTP_INTERCEPTORS,\n    useExisting: OccPersonalizationTimeInterceptor,\n    multi: true,\n  },\n];\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { defaultPersonalizationConfig } from './config/default-personalization-config';\n\nimport { interceptors } from './http-interceptors/index';\nimport { provideDefaultConfig } from '../config/config-providers';\n\n@NgModule({})\nexport class PersonalizationModule {\n  static forRoot(): ModuleWithProviders<PersonalizationModule> {\n    return {\n      ngModule: PersonalizationModule,\n      providers: [\n        provideDefaultConfig(defaultPersonalizationConfig),\n        ...interceptors,\n      ],\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { CmsService } from '../../cms/facade/cms.service';\nimport { ContentSlotComponentData } from '../../cms/model/content-slot-component-data.model';\nimport { ContentSlotData } from '../../cms/model/content-slot-data.model';\nimport { Page } from '../../cms/model/page.model';\nimport { PersonalizationConfig } from '../config/personalization-config';\nimport { PersonalizationContext } from '../model/personalization-context.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PersonalizationContextService {\n  constructor(\n    protected config: PersonalizationConfig,\n    protected cmsService: CmsService\n  ) {}\n\n  getPersonalizationContext(): Observable<PersonalizationContext> {\n    return this.cmsService.getCurrentPage().pipe(\n      filter(Boolean),\n      map(\n        (page: Page) =>\n          page.slots[this.config.personalization.context.slotPosition]\n      ),\n      filter(Boolean),\n      map((slot: ContentSlotData) =>\n        slot.components.find(\n          (i) => i.uid === this.config.personalization.context.componentId\n        )\n      ),\n      filter(Boolean),\n      map((component: ContentSlotComponentData) =>\n        this.buildPersonalizationContext(component.properties.script.data)\n      )\n    );\n  }\n\n  private buildPersonalizationContext(data: string): PersonalizationContext {\n    const context = JSON.parse(atob(data));\n    context.actions.forEach((action) => {\n      Object.keys(action).forEach((key) => {\n        action[key] = atob(action[key]);\n      });\n    });\n    for (let i = 0; i < context.segments.length; i++) {\n      context.segments[i] = atob(context.segments[i]);\n    }\n    return context;\n  }\n}\n","import { InjectionToken, Provider } from '@angular/core';\nimport { ActionReducer, ActionReducerMap } from '@ngrx/store';\nimport { EntityLoaderState } from '../../../state/utils/entity-loader/entity-loader-state';\nimport { entityLoaderReducer } from '../../../state/utils/entity-loader/entity-loader.reducer';\nimport { PROCESS_FEATURE } from '../process-state';\n\nexport function getReducers<T>(): ActionReducer<EntityLoaderState<T>> {\n  return entityLoaderReducer(PROCESS_FEATURE);\n}\n\nexport const reducerToken: InjectionToken<ActionReducerMap<\n  EntityLoaderState<any>\n>> = new InjectionToken<ActionReducerMap<EntityLoaderState<any>>>(\n  'ProcessReducers'\n);\n\nexport const reducerProvider: Provider = {\n  provide: reducerToken,\n  useFactory: getReducers,\n};\n","import { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { StateModule } from '../../state/state.module';\nimport { PROCESS_FEATURE } from './process-state';\nimport { reducerProvider, reducerToken } from './reducers/index';\n\n@NgModule({\n  imports: [StateModule, StoreModule.forFeature(PROCESS_FEATURE, reducerToken)],\n  providers: [reducerProvider],\n})\nexport class ProcessStoreModule {}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ProcessStoreModule } from './store/process-store.module';\n\n@NgModule({\n  imports: [ProcessStoreModule],\n})\nexport class ProcessModule {\n  static forRoot(): ModuleWithProviders<ProcessModule> {\n    return {\n      ngModule: ProcessModule,\n      providers: [],\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Product } from '../../../model/product.model';\nimport { ProductAdapter } from './product.adapter';\nimport { ScopedProductData } from './scoped-product-data';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductConnector {\n  constructor(protected adapter: ProductAdapter) {}\n\n  get(productCode: string, scope = ''): Observable<Product> {\n    return this.adapter.load(productCode, scope);\n  }\n\n  getMany(products: ScopedProductData[]): ScopedProductData[] {\n    if (!this.adapter.loadMany) {\n      return products.map((product) => ({\n        ...product,\n        data$: this.adapter.load(product.code, product.scope),\n      }));\n    }\n\n    return this.adapter.loadMany(products);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ProductReference } from '../../../model/product.model';\nimport { ProductReferencesAdapter } from './product-references.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductReferencesConnector {\n  constructor(protected adapter: ProductReferencesAdapter) {}\n\n  get(\n    productCode: string,\n    referenceType?: string,\n    pageSize?: number\n  ): Observable<ProductReference[]> {\n    return this.adapter.load(productCode, referenceType, pageSize);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ProductReviewsAdapter } from './product-reviews.adapter';\nimport { Review } from '../../../model/product.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductReviewsConnector {\n  constructor(protected adapter: ProductReviewsAdapter) {}\n\n  get(productCode: string, maxCount?: number): Observable<Review[]> {\n    return this.adapter.load(productCode, maxCount);\n  }\n\n  add(productCode: string, review: any): Observable<Review> {\n    return this.adapter.post(productCode, review);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ProductSearchAdapter } from './product-search.adapter';\nimport { SearchConfig } from '../../model/search-config';\nimport { Observable } from 'rxjs';\nimport {\n  Suggestion,\n  ProductSearchPage,\n} from '../../../model/product-search.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductSearchConnector {\n  constructor(protected adapter: ProductSearchAdapter) {}\n\n  search(\n    query: string,\n    searchConfig?: SearchConfig\n  ): Observable<ProductSearchPage> {\n    return this.adapter.search(query, searchConfig);\n  }\n\n  getSuggestions(term: string, pageSize?: number): Observable<Suggestion[]> {\n    return this.adapter.loadSuggestions(term, pageSize);\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { ErrorModel } from '../../../model/misc.model';\nimport { ProductReference } from '../../../model/product.model';\n\nexport const LOAD_PRODUCT_REFERENCES = '[Product] Load Product References Data';\nexport const LOAD_PRODUCT_REFERENCES_FAIL =\n  '[Product] Load Product References Data Fail';\nexport const LOAD_PRODUCT_REFERENCES_SUCCESS =\n  '[Product] Load Product References Data Success';\nexport const CLEAN_PRODUCT_REFERENCES = '[Product] Clean Product References';\n\nexport class LoadProductReferences implements Action {\n  readonly type = LOAD_PRODUCT_REFERENCES;\n  constructor(\n    public payload: {\n      productCode: string;\n      referenceType?: string;\n      pageSize?: number;\n    }\n  ) {}\n}\n\nexport class LoadProductReferencesFail implements Action {\n  readonly type = LOAD_PRODUCT_REFERENCES_FAIL;\n  constructor(public payload: ErrorModel) {}\n}\n\nexport class LoadProductReferencesSuccess implements Action {\n  readonly type = LOAD_PRODUCT_REFERENCES_SUCCESS;\n  constructor(\n    public payload: {\n      productCode: string;\n      list: ProductReference[];\n    }\n  ) {}\n}\n\nexport class CleanProductReferences implements Action {\n  readonly type = CLEAN_PRODUCT_REFERENCES;\n}\n\n// action types\nexport type ProductReferencesAction =\n  | LoadProductReferences\n  | LoadProductReferencesFail\n  | LoadProductReferencesSuccess\n  | CleanProductReferences;\n","import { Action } from '@ngrx/store';\nimport { ErrorModel } from '../../../model/misc.model';\nimport { Review } from '../../../model/product.model';\n\nexport const LOAD_PRODUCT_REVIEWS = '[Product] Load Product Reviews Data';\nexport const LOAD_PRODUCT_REVIEWS_FAIL =\n  '[Product] Load Product Reviews Data Fail';\nexport const LOAD_PRODUCT_REVIEWS_SUCCESS =\n  '[Product] Load Product Reviews Data Success';\nexport const POST_PRODUCT_REVIEW = '[Product] Post Product Review';\nexport const POST_PRODUCT_REVIEW_FAIL = '[Product] Post Product Review Fail';\nexport const POST_PRODUCT_REVIEW_SUCCESS =\n  '[Product] Post Product Review Success';\n\nexport class LoadProductReviews implements Action {\n  readonly type = LOAD_PRODUCT_REVIEWS;\n  constructor(public payload: string) {}\n}\n\nexport class LoadProductReviewsFail implements Action {\n  readonly type = LOAD_PRODUCT_REVIEWS_FAIL;\n  constructor(public payload: ErrorModel) {}\n}\n\nexport class LoadProductReviewsSuccess implements Action {\n  readonly type = LOAD_PRODUCT_REVIEWS_SUCCESS;\n  constructor(public payload: { productCode: string; list: Review[] }) {}\n}\n\nexport class PostProductReview implements Action {\n  readonly type = POST_PRODUCT_REVIEW;\n  constructor(public payload: { productCode: string; review: Review }) {}\n}\n\nexport class PostProductReviewFail implements Action {\n  readonly type = POST_PRODUCT_REVIEW_FAIL;\n  constructor(public payload: string) {}\n}\n\nexport class PostProductReviewSuccess implements Action {\n  readonly type = POST_PRODUCT_REVIEW_SUCCESS;\n  constructor(public payload: Review) {}\n}\n\n// action types\nexport type ProductReviewsAction =\n  | LoadProductReviews\n  | LoadProductReviewsFail\n  | LoadProductReviewsSuccess\n  | PostProductReview\n  | PostProductReviewFail\n  | PostProductReviewSuccess;\n","import { Action } from '@ngrx/store';\nimport { ErrorModel } from '../../../model/misc.model';\nimport {\n  ClearSearch,\n  ProductSearchPage,\n  Suggestion,\n} from '../../../model/product-search.model';\nimport { SearchConfig } from '../../model/search-config';\n\nexport const SEARCH_PRODUCTS = '[Product] Search Products';\nexport const SEARCH_PRODUCTS_FAIL = '[Product] Search Products Fail';\nexport const SEARCH_PRODUCTS_SUCCESS = '[Product] Search Products Success';\nexport const GET_PRODUCT_SUGGESTIONS = '[Product] Get Product Suggestions';\nexport const GET_PRODUCT_SUGGESTIONS_SUCCESS =\n  '[Product] Get Product Suggestions Success';\nexport const GET_PRODUCT_SUGGESTIONS_FAIL =\n  '[Product] Get Product Suggestions Fail';\nexport const CLEAR_PRODUCT_SEARCH_RESULT =\n  '[Product] Clear Product Search Result';\n\nexport class SearchProducts implements Action {\n  readonly type = SEARCH_PRODUCTS;\n  constructor(\n    public payload: { queryText: string; searchConfig: SearchConfig },\n    public auxiliary?: boolean\n  ) {}\n}\n\nexport class SearchProductsFail implements Action {\n  readonly type = SEARCH_PRODUCTS_FAIL;\n  constructor(public payload: ErrorModel, public auxiliary?: boolean) {}\n}\n\nexport class SearchProductsSuccess implements Action {\n  readonly type = SEARCH_PRODUCTS_SUCCESS;\n  constructor(public payload: ProductSearchPage, public auxiliary?: boolean) {}\n}\n\nexport class GetProductSuggestions implements Action {\n  readonly type = GET_PRODUCT_SUGGESTIONS;\n  constructor(public payload: { term: string; searchConfig: SearchConfig }) {}\n}\n\nexport class GetProductSuggestionsSuccess implements Action {\n  readonly type = GET_PRODUCT_SUGGESTIONS_SUCCESS;\n  constructor(public payload: Suggestion[]) {}\n}\n\nexport class GetProductSuggestionsFail implements Action {\n  readonly type = GET_PRODUCT_SUGGESTIONS_FAIL;\n  constructor(public payload: ErrorModel) {}\n}\n\nexport class ClearProductSearchResult implements Action {\n  readonly type = CLEAR_PRODUCT_SEARCH_RESULT;\n  constructor(\n    public payload: ClearSearch = {\n      clearPageResults: false,\n      clearSearchboxResults: false,\n    }\n  ) {}\n}\n\n// action types\nexport type ProductSearchAction =\n  | SearchProducts\n  | SearchProductsFail\n  | SearchProductsSuccess\n  | GetProductSuggestions\n  | GetProductSuggestionsSuccess\n  | GetProductSuggestionsFail\n  | ClearProductSearchResult;\n","import {\n  ProductSearchPage,\n  Suggestion,\n} from '../../model/product-search.model';\nimport { Product, ProductReference, Review } from '../../model/product.model';\nimport { EntityScopedLoaderState } from '../../state/utils/scoped-loader/scoped-loader.state';\n\nexport const PRODUCT_FEATURE = 'product';\nexport const PRODUCT_DETAIL_ENTITY = '[Product] Detail Entity';\n\nexport interface StateWithProduct {\n  [PRODUCT_FEATURE]: ProductsState;\n}\n\nexport interface ProductsState {\n  details: EntityScopedLoaderState<Product>;\n  search: ProductsSearchState;\n  reviews: ProductReviewsState;\n  references: ProductReferencesState;\n}\n\nexport interface ProductsSearchState {\n  results: ProductSearchPage;\n  suggestions: Suggestion[];\n  auxResults: ProductSearchPage;\n}\n\nexport interface ProductReviewsState {\n  productCode: string;\n  list: Review[];\n}\n\nexport interface ProductReferencesState {\n  productCode: string;\n  list: ProductReference[];\n}\n","import {\n  ENTITY_FAIL_ACTION,\n  ENTITY_LOAD_ACTION,\n  ENTITY_RESET_ACTION,\n  ENTITY_SUCCESS_ACTION,\n  entityFailMeta,\n  EntityLoaderMeta,\n  entityLoadMeta,\n  entityResetMeta,\n  entitySuccessMeta,\n} from '../entity-loader/entity-loader.action';\nimport { Action } from '@ngrx/store';\n\nexport namespace EntityScopedLoaderActions {\n  export interface EntityScopedLoaderMeta extends EntityLoaderMeta {\n    scope?: string;\n  }\n\n  export interface EntityScopedLoaderAction extends Action {\n    readonly payload?: any;\n    readonly meta?: EntityScopedLoaderMeta;\n  }\n\n  export function entityScopedLoadMeta(\n    entityType: string,\n    id: string | string[],\n    scope?: string\n  ): EntityScopedLoaderMeta {\n    return {\n      ...entityLoadMeta(entityType, id),\n      scope,\n    };\n  }\n\n  export function entityScopedFailMeta(\n    entityType: string,\n    id: string | string[],\n    scope?: string,\n    error?: any\n  ): EntityScopedLoaderMeta {\n    return {\n      ...entityFailMeta(entityType, id, error),\n      scope,\n    };\n  }\n\n  export function entityScopedSuccessMeta(\n    entityType: string,\n    id: string | string[],\n    scope?: string\n  ): EntityScopedLoaderMeta {\n    return {\n      ...entitySuccessMeta(entityType, id),\n      scope,\n    };\n  }\n\n  export function entityScopedResetMeta(\n    entityType: string,\n    id: string | string[],\n    scope?: string\n  ): EntityScopedLoaderMeta {\n    return {\n      ...entityResetMeta(entityType, id),\n      scope,\n    };\n  }\n\n  export class EntityScopedLoadAction implements EntityScopedLoaderAction {\n    type = ENTITY_LOAD_ACTION;\n    readonly meta: EntityScopedLoaderMeta;\n    constructor(entityType: string, id: string | string[], scope?: string) {\n      this.meta = entityScopedLoadMeta(entityType, id, scope);\n    }\n  }\n\n  export class EntityScopedFailAction implements EntityScopedLoaderAction {\n    type = ENTITY_FAIL_ACTION;\n    readonly meta: EntityScopedLoaderMeta;\n    constructor(\n      entityType: string,\n      id: string | string[],\n      scope?: string,\n      error?: any\n    ) {\n      this.meta = entityScopedFailMeta(entityType, id, scope, error);\n    }\n  }\n\n  export class EntityScopedSuccessAction implements EntityScopedLoaderAction {\n    type = ENTITY_SUCCESS_ACTION;\n    readonly meta: EntityScopedLoaderMeta;\n    constructor(\n      entityType: string,\n      id: string | string[],\n      scope?: string,\n      public payload?: any\n    ) {\n      this.meta = entityScopedSuccessMeta(entityType, id, scope);\n    }\n  }\n\n  export class EntityScopedResetAction implements EntityScopedLoaderAction {\n    type = ENTITY_RESET_ACTION;\n    readonly meta: EntityScopedLoaderMeta;\n    constructor(entityType: string, id: string | string[], scope?: string) {\n      this.meta = entityScopedResetMeta(entityType, id, scope);\n    }\n  }\n}\n","import { Product } from '../../../model/product.model';\nimport { PRODUCT_DETAIL_ENTITY } from '../product-state';\nimport { EntityLoaderMeta } from '../../../state/utils/entity-loader/entity-loader.action';\nimport { Action } from '@ngrx/store';\nimport { EntityScopedLoaderActions } from '../../../state/utils/scoped-loader/entity-scoped-loader.actions';\n\nexport const LOAD_PRODUCT = '[Product] Load Product Data';\nexport const LOAD_PRODUCT_FAIL = '[Product] Load Product Data Fail';\nexport const LOAD_PRODUCT_SUCCESS = '[Product] Load Product Data Success';\n\nexport interface ProductMeta extends EntityLoaderMeta {\n  scope?: string;\n}\n\nexport interface EntityScopedLoaderAction extends Action {\n  readonly payload?: any;\n  readonly meta?: ProductMeta;\n}\n\nexport class LoadProduct extends EntityScopedLoaderActions.EntityScopedLoadAction {\n  readonly type = LOAD_PRODUCT;\n  constructor(public payload: string, scope = '') {\n    super(PRODUCT_DETAIL_ENTITY, payload, scope);\n  }\n}\n\nexport class LoadProductFail extends EntityScopedLoaderActions.EntityScopedFailAction {\n  readonly type = LOAD_PRODUCT_FAIL;\n  constructor(productCode: string, public payload: any, scope = '') {\n    super(PRODUCT_DETAIL_ENTITY, productCode, scope, payload);\n  }\n}\n\nexport class LoadProductSuccess extends EntityScopedLoaderActions.EntityScopedSuccessAction {\n  readonly type = LOAD_PRODUCT_SUCCESS;\n  constructor(public payload: Product, scope = '') {\n    super(PRODUCT_DETAIL_ENTITY, payload.code, scope);\n  }\n}\n\n// action types\nexport type ProductAction = LoadProduct | LoadProductFail | LoadProductSuccess;\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, mergeMap } from 'rxjs/operators';\nimport { ErrorModel } from '../../../model/misc.model';\nimport { ProductReferencesConnector } from '../../connectors/references/product-references.connector';\nimport { ProductActions } from '../actions/index';\n\n@Injectable()\nexport class ProductReferencesEffects {\n  @Effect()\n  loadProductReferences$: Observable<\n    | ProductActions.LoadProductReferencesSuccess\n    | ProductActions.LoadProductReferencesFail\n  > = this.actions$.pipe(\n    ofType(ProductActions.LOAD_PRODUCT_REFERENCES),\n    map((action: ProductActions.LoadProductReferences) => action.payload),\n    mergeMap((payload) => {\n      return this.productReferencesConnector\n        .get(payload.productCode, payload.referenceType, payload.pageSize)\n        .pipe(\n          map((data) => {\n            return new ProductActions.LoadProductReferencesSuccess({\n              productCode: payload.productCode,\n              list: data,\n            });\n          }),\n          catchError((_error) =>\n            of(\n              new ProductActions.LoadProductReferencesFail({\n                message: payload.productCode,\n              } as ErrorModel)\n            )\n          )\n        );\n    })\n  );\n\n  constructor(\n    private actions$: Actions,\n    private productReferencesConnector: ProductReferencesConnector\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, mergeMap, tap } from 'rxjs/operators';\nimport { ErrorModel } from '../../../model/misc.model';\nimport { ProductReviewsConnector } from '../../connectors/reviews/product-reviews.connector';\nimport { ProductActions } from '../actions/index';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n} from '../../../global-message/index';\n\n@Injectable()\nexport class ProductReviewsEffects {\n  @Effect()\n  loadProductReviews$: Observable<\n    | ProductActions.LoadProductReviewsSuccess\n    | ProductActions.LoadProductReviewsFail\n  > = this.actions$.pipe(\n    ofType(ProductActions.LOAD_PRODUCT_REVIEWS),\n    map((action: ProductActions.LoadProductReviews) => action.payload),\n    mergeMap((productCode) => {\n      return this.productReviewsConnector.get(productCode).pipe(\n        map((data) => {\n          return new ProductActions.LoadProductReviewsSuccess({\n            productCode,\n            list: data,\n          });\n        }),\n        catchError((_error) =>\n          of(\n            new ProductActions.LoadProductReviewsFail({\n              message: productCode,\n            } as ErrorModel)\n          )\n        )\n      );\n    })\n  );\n\n  @Effect()\n  postProductReview: Observable<\n    | ProductActions.PostProductReviewSuccess\n    | ProductActions.PostProductReviewFail\n  > = this.actions$.pipe(\n    ofType(ProductActions.POST_PRODUCT_REVIEW),\n    map((action: ProductActions.PostProductReview) => action.payload),\n    mergeMap((payload) => {\n      return this.productReviewsConnector\n        .add(payload.productCode, payload.review)\n        .pipe(\n          map((reviewResponse) => {\n            return new ProductActions.PostProductReviewSuccess(reviewResponse);\n          }),\n          catchError((_error) =>\n            of(new ProductActions.PostProductReviewFail(payload.productCode))\n          )\n        );\n    })\n  );\n\n  @Effect({ dispatch: false })\n  showGlobalMessageOnPostProductReviewSuccess$ = this.actions$.pipe(\n    ofType(ProductActions.POST_PRODUCT_REVIEW_SUCCESS),\n    tap(() => {\n      this.globalMessageService.add(\n        { key: 'productReview.thankYouForReview' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n    })\n  );\n\n  constructor(\n    private actions$: Actions,\n    private productReviewsConnector: ProductReviewsConnector,\n    private globalMessageService: GlobalMessageService\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, groupBy, map, mergeMap, switchMap } from 'rxjs/operators';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { ProductSearchConnector } from '../../connectors/search/product-search.connector';\nimport { ProductActions } from '../actions/index';\n\n@Injectable()\nexport class ProductsSearchEffects {\n  @Effect()\n  searchProducts$: Observable<\n    ProductActions.SearchProductsSuccess | ProductActions.SearchProductsFail\n  > = this.actions$.pipe(\n    ofType(ProductActions.SEARCH_PRODUCTS),\n    groupBy((action: ProductActions.SearchProducts) => action.auxiliary),\n    mergeMap((group) =>\n      group.pipe(\n        switchMap((action: ProductActions.SearchProducts) => {\n          return this.productSearchConnector\n            .search(action.payload.queryText, action.payload.searchConfig)\n            .pipe(\n              map((data) => {\n                return new ProductActions.SearchProductsSuccess(\n                  data,\n                  action.auxiliary\n                );\n              }),\n              catchError((error) =>\n                of(\n                  new ProductActions.SearchProductsFail(\n                    normalizeHttpError(error),\n                    action.auxiliary\n                  )\n                )\n              )\n            );\n        })\n      )\n    )\n  );\n\n  @Effect()\n  getProductSuggestions$: Observable<\n    | ProductActions.GetProductSuggestionsSuccess\n    | ProductActions.GetProductSuggestionsFail\n  > = this.actions$.pipe(\n    ofType(ProductActions.GET_PRODUCT_SUGGESTIONS),\n    map((action: ProductActions.GetProductSuggestions) => action.payload),\n    switchMap((payload) => {\n      return this.productSearchConnector\n        .getSuggestions(payload.term, payload.searchConfig.pageSize)\n        .pipe(\n          map((suggestions) => {\n            if (suggestions === undefined) {\n              return new ProductActions.GetProductSuggestionsSuccess([]);\n            }\n            return new ProductActions.GetProductSuggestionsSuccess(suggestions);\n          }),\n          catchError((error) =>\n            of(\n              new ProductActions.GetProductSuggestionsFail(\n                normalizeHttpError(error)\n              )\n            )\n          )\n        );\n    })\n  );\n\n  constructor(\n    private actions$: Actions,\n    private productSearchConnector: ProductSearchConnector\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { merge, Observable, of } from 'rxjs';\nimport { catchError, map, mergeMap } from 'rxjs/operators';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { ProductConnector } from '../../connectors/product/product.connector';\nimport { ProductActions } from '../actions/index';\nimport { ScopedProductData } from '../../connectors/product/scoped-product-data';\nimport { SiteContextActions } from '../../../site-context/store/actions/index';\nimport { bufferDebounceTime } from '../../../util/rxjs/buffer-debounce-time';\nimport { Action } from '@ngrx/store';\nimport { withdrawOn } from '../../../util/rxjs/withdraw-on';\n\n@Injectable()\nexport class ProductEffects {\n  // we want to cancel all ongoing requests when currency or language changes,\n  private contextChange$: Observable<Action> = this.actions$.pipe(\n    ofType(\n      SiteContextActions.CURRENCY_CHANGE,\n      SiteContextActions.LANGUAGE_CHANGE\n    )\n  );\n\n  loadProduct$ = createEffect(\n    () => ({ scheduler, debounce = 0 } = {}): Observable<\n      ProductActions.LoadProductSuccess | ProductActions.LoadProductFail\n    > =>\n      this.actions$.pipe(\n        ofType(ProductActions.LOAD_PRODUCT),\n        map((action: ProductActions.LoadProduct) => ({\n          code: action.payload,\n          scope: action.meta.scope,\n        })),\n        // we are grouping all load actions that happens at the same time\n        // to optimize loading and pass them all to productConnector.getMany\n        bufferDebounceTime(debounce, scheduler),\n        mergeMap((products) =>\n          merge(\n            ...this.productConnector\n              .getMany(products)\n              .map(this.productLoadEffect)\n          )\n        ),\n        withdrawOn(this.contextChange$)\n      )\n  );\n\n  private productLoadEffect(\n    productLoad: ScopedProductData\n  ): Observable<\n    ProductActions.LoadProductSuccess | ProductActions.LoadProductFail\n  > {\n    return productLoad.data$.pipe(\n      map(\n        (data) =>\n          new ProductActions.LoadProductSuccess(\n            { code: productLoad.code, ...data },\n            productLoad.scope\n          )\n      ),\n      catchError((error) => {\n        return of(\n          new ProductActions.LoadProductFail(\n            productLoad.code,\n            normalizeHttpError(error),\n            productLoad.scope\n          )\n        );\n      })\n    );\n  }\n\n  constructor(\n    private actions$: Actions,\n    private productConnector: ProductConnector\n  ) {}\n}\n","import { ProductReferencesEffects } from './product-references.effect';\nimport { ProductReviewsEffects } from './product-reviews.effect';\nimport { ProductsSearchEffects } from './product-search.effect';\nimport { ProductEffects } from './product.effect';\n\nexport const effects: any[] = [\n  ProductsSearchEffects,\n  ProductEffects,\n  ProductReviewsEffects,\n  ProductReferencesEffects,\n];\n\nexport * from './product-references.effect';\nexport * from './product-reviews.effect';\nexport * from './product-search.effect';\nexport * from './product.effect';\n","import { ProductReference } from '../../../model/product.model';\nimport { ProductActions } from '../actions/index';\nimport { ProductReferencesState } from '../product-state';\n\nexport const initialState: ProductReferencesState = {\n  productCode: '',\n  list: [],\n};\n\nexport function reducer(\n  state = initialState,\n  action: ProductActions.ProductReferencesAction\n): ProductReferencesState {\n  switch (action.type) {\n    case ProductActions.LOAD_PRODUCT_REFERENCES_SUCCESS: {\n      const productCode = action.payload.productCode;\n      const list = action.payload.list;\n\n      return {\n        ...state,\n        list: [...state.list, ...(list ? list : [])].reduce(\n          (\n            productReferences: ProductReference[],\n            productReference: ProductReference\n          ) => {\n            if (\n              !productReferences.some(\n                (obj) =>\n                  obj.referenceType === productReference.referenceType &&\n                  obj.target.code === productReference.target.code\n              )\n            ) {\n              productReferences.push(productReference);\n            }\n            return productReferences;\n          },\n          []\n        ),\n        productCode,\n      };\n    }\n\n    case ProductActions.CLEAN_PRODUCT_REFERENCES: {\n      return initialState;\n    }\n  }\n\n  return state;\n}\n\nexport const getProductReferenceList = (\n  state: ProductReferencesState\n): ProductReference[] => state.list;\nexport const getProductReferenceProductCode = (\n  state: ProductReferencesState\n): string => state.productCode;\n","import { Review } from '../../../model/product.model';\nimport { ProductActions } from '../actions/index';\nimport { ProductReviewsState } from '../product-state';\n\nexport const initialState: ProductReviewsState = {\n  productCode: '',\n  list: [],\n};\n\nexport function reducer(\n  state = initialState,\n  action: ProductActions.ProductReviewsAction\n): ProductReviewsState {\n  switch (action.type) {\n    case ProductActions.LOAD_PRODUCT_REVIEWS_SUCCESS: {\n      const productCode = action.payload.productCode;\n      const list = action.payload.list;\n\n      return {\n        ...state,\n        productCode,\n        list,\n      };\n    }\n  }\n\n  return state;\n}\n\nexport const getReviewList = (state: ProductReviewsState): Review[] =>\n  state.list;\nexport const getReviewProductCode = (state: ProductReviewsState): string =>\n  state.productCode;\n","import {\n  ProductSearchPage,\n  Suggestion,\n} from '../../../model/product-search.model';\nimport { ProductActions } from '../actions/index';\nimport { ProductsSearchState } from '../product-state';\n\nexport const initialState: ProductsSearchState = {\n  results: {},\n  suggestions: [],\n  auxResults: {},\n};\n\nexport function reducer(\n  state = initialState,\n  action: ProductActions.ProductSearchAction\n): ProductsSearchState {\n  switch (action.type) {\n    case ProductActions.SEARCH_PRODUCTS_SUCCESS: {\n      const results = action.payload;\n      const res = action.auxiliary ? { auxResults: results } : { results };\n      return {\n        ...state,\n        ...res,\n      };\n    }\n\n    case ProductActions.GET_PRODUCT_SUGGESTIONS_SUCCESS: {\n      const suggestions: Suggestion[] = action.payload;\n\n      return {\n        ...state,\n        suggestions,\n      };\n    }\n\n    case ProductActions.CLEAR_PRODUCT_SEARCH_RESULT: {\n      return {\n        ...state,\n        results: action.payload.clearPageResults ? {} : state.results,\n        suggestions: action.payload.clearSearchboxResults\n          ? []\n          : state.suggestions,\n        auxResults: action.payload.clearSearchboxResults\n          ? {}\n          : state.auxResults,\n      };\n    }\n  }\n  return state;\n}\n\nexport const getSearchResults = (\n  state: ProductsSearchState\n): ProductSearchPage => state.results;\nexport const getAuxSearchResults = (\n  state: ProductsSearchState\n): ProductSearchPage => state.auxResults;\nexport const getProductSuggestions = (\n  state: ProductsSearchState\n): Suggestion[] => state.suggestions;\n","import { loaderReducer } from '../loader/loader.reducer';\nimport { EntityScopedLoaderAction } from '../../../product/store/actions/product.action';\nimport { ScopedLoaderState } from './scoped-loader.state';\nimport { Action } from '@ngrx/store';\n\nexport const initialScopedLoaderState: ScopedLoaderState<any> = {};\n\n/**\n * Higher order reducer designed to add scope support for loader reducer\n *\n * @param entityType\n * @param reducer\n */\nexport function scopedLoaderReducer<T>(\n  entityType: string,\n  reducer?: (state: T, action: Action) => T\n): (\n  state: ScopedLoaderState<T>,\n  action: EntityScopedLoaderAction\n) => ScopedLoaderState<T> {\n  const loader = loaderReducer<T>(entityType, reducer);\n\n  return (\n    state: ScopedLoaderState<T> = initialScopedLoaderState,\n    action: EntityScopedLoaderAction\n  ): ScopedLoaderState<T> => {\n    if (action && action.meta && action.meta.entityType === entityType) {\n      return {\n        ...state,\n        [action.meta.scope ?? '']: loader(state[action.meta.scope], action),\n      };\n    }\n    return state;\n  };\n}\n","import {\n  EntityScopedLoaderState,\n  ScopedLoaderState,\n} from './scoped-loader.state';\nimport { scopedLoaderReducer } from './scoped-loader.reducer';\n\nimport { entityReducer } from '../entity/entity.reducer';\nimport { LoaderAction } from '../loader/loader.action';\nimport { EntityScopedLoaderActions } from './entity-scoped-loader.actions';\n\n/**\n * Higher order reducer that wraps scopedLoaderReducer and EntityReducer enhancing\n * single state reducer to support multiple entities with generic loading flags and scopes\n */\nexport function entityScopedLoaderReducer<T>(\n  entityType: string,\n  reducer?: (state: T, action: LoaderAction) => T\n): (\n  state: EntityScopedLoaderState<T>,\n  action: EntityScopedLoaderActions.EntityScopedLoaderAction\n) => EntityScopedLoaderState<T> {\n  return entityReducer<ScopedLoaderState<T>>(\n    entityType,\n    scopedLoaderReducer<T>(entityType, reducer)\n  );\n}\n","import { InjectionToken, Provider } from '@angular/core';\nimport { ActionReducer, ActionReducerMap, MetaReducer } from '@ngrx/store';\nimport { Product } from '../../../model/product.model';\nimport { SiteContextActions } from '../../../site-context/store/actions/index';\nimport { PRODUCT_DETAIL_ENTITY, ProductsState } from '../product-state';\nimport * as fromProductReferences from './product-references.reducer';\nimport * as fromProductReviews from './product-reviews.reducer';\nimport * as fromProductsSearch from './product-search.reducer';\nimport { entityScopedLoaderReducer } from '../../../state/utils/scoped-loader/entity-scoped-loader.reducer';\n\nexport function getReducers(): ActionReducerMap<ProductsState> {\n  return {\n    search: fromProductsSearch.reducer,\n    details: entityScopedLoaderReducer<Product>(PRODUCT_DETAIL_ENTITY),\n    reviews: fromProductReviews.reducer,\n    references: fromProductReferences.reducer,\n  };\n}\n\nexport const reducerToken: InjectionToken<ActionReducerMap<\n  ProductsState\n>> = new InjectionToken<ActionReducerMap<ProductsState>>('ProductReducers');\n\nexport const reducerProvider: Provider = {\n  provide: reducerToken,\n  useFactory: getReducers,\n};\n\nexport function clearProductsState(\n  reducer: ActionReducer<any>\n): ActionReducer<any> {\n  return function (state, action) {\n    if (\n      action.type === SiteContextActions.CURRENCY_CHANGE ||\n      action.type === SiteContextActions.LANGUAGE_CHANGE\n    ) {\n      state = undefined;\n    }\n    return reducer(state, action);\n  };\n}\n\nexport const metaReducers: MetaReducer<any>[] = [clearProductsState];\n","import { createFeatureSelector, MemoizedSelector } from '@ngrx/store';\nimport {\n  ProductsState,\n  PRODUCT_FEATURE,\n  StateWithProduct,\n} from '../product-state';\n\nexport const getProductsState: MemoizedSelector<\n  StateWithProduct,\n  ProductsState\n> = createFeatureSelector<ProductsState>(PRODUCT_FEATURE);\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { ProductReference } from '../../../model/product.model';\nimport {\n  ProductReferencesState,\n  ProductsState,\n  StateWithProduct,\n} from '../product-state';\nimport { getProductsState } from './feature.selector';\n\nexport const getProductReferencesState: MemoizedSelector<\n  StateWithProduct,\n  ProductReferencesState\n> = createSelector(\n  getProductsState,\n  (state: ProductsState) => state.references\n);\n\nexport const getSelectedProductReferencesFactory = (\n  productCode: string,\n  referenceType: string\n): MemoizedSelector<StateWithProduct, ProductReference[]> => {\n  return createSelector(getProductReferencesState, (referenceTypeData) => {\n    if (referenceTypeData.productCode === productCode) {\n      if (!!referenceTypeData.list) {\n        if (referenceType) {\n          return referenceTypeData.list.filter(\n            (item) => item.referenceType === referenceType\n          );\n        }\n\n        return referenceTypeData.list;\n      } else {\n        return [];\n      }\n    }\n  });\n};\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { Review } from '../../../model/product.model';\nimport {\n  ProductReviewsState,\n  ProductsState,\n  StateWithProduct,\n} from '../product-state';\nimport { getProductsState } from './feature.selector';\n\nexport const getProductReviewsState: MemoizedSelector<\n  StateWithProduct,\n  ProductReviewsState\n> = createSelector(getProductsState, (state: ProductsState) => state.reviews);\n\nexport const getSelectedProductReviewsFactory = (\n  productCode\n): MemoizedSelector<StateWithProduct, Review[]> => {\n  return createSelector(getProductReviewsState, (reviewData) => {\n    if (reviewData.productCode === productCode) {\n      return reviewData.list;\n    }\n  });\n};\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport {\n  ProductSearchPage,\n  Suggestion,\n} from '../../../model/product-search.model';\nimport {\n  ProductsSearchState,\n  ProductsState,\n  StateWithProduct,\n} from '../product-state';\nimport * as fromProductSearch from '../reducers/product-search.reducer';\nimport { getProductsState } from './feature.selector';\n\nexport const getProductsSearchState: MemoizedSelector<\n  StateWithProduct,\n  ProductsSearchState\n> = createSelector(getProductsState, (state: ProductsState) => state.search);\n\nexport const getSearchResults: MemoizedSelector<\n  StateWithProduct,\n  ProductSearchPage\n> = createSelector(getProductsSearchState, fromProductSearch.getSearchResults);\n\nexport const getAuxSearchResults: MemoizedSelector<\n  StateWithProduct,\n  ProductSearchPage\n> = createSelector(\n  getProductsSearchState,\n  fromProductSearch.getAuxSearchResults\n);\n\nexport const getProductSuggestions: MemoizedSelector<\n  StateWithProduct,\n  Suggestion[]\n> = createSelector(\n  getProductsSearchState,\n  fromProductSearch.getProductSuggestions\n);\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { Product } from '../../../model/product.model';\nimport { StateUtils } from '../../../state/utils/index';\nimport { ProductsState, StateWithProduct } from '../product-state';\nimport { getProductsState } from './feature.selector';\n\nexport const getProductState: MemoizedSelector<\n  StateWithProduct,\n  StateUtils.EntityLoaderState<Product>\n> = createSelector(getProductsState, (state: ProductsState) => state.details);\n\nexport const getSelectedProductStateFactory = (\n  code: string,\n  scope = ''\n): MemoizedSelector<StateWithProduct, StateUtils.LoaderState<Product>> => {\n  return createSelector(\n    getProductState,\n    (details) =>\n      StateUtils.entityLoaderStateSelector(details, code)[scope] ||\n      StateUtils.initialLoaderState\n  );\n};\n\nexport const getSelectedProductFactory = (\n  code: string,\n  scope = ''\n): MemoizedSelector<StateWithProduct, Product> => {\n  return createSelector(\n    getSelectedProductStateFactory(code, scope),\n    (productState) => StateUtils.loaderValueSelector(productState)\n  );\n};\n\nexport const getSelectedProductLoadingFactory = (\n  code: string,\n  scope = ''\n): MemoizedSelector<StateWithProduct, boolean> => {\n  return createSelector(\n    getSelectedProductStateFactory(code, scope),\n    (productState) => StateUtils.loaderLoadingSelector(productState)\n  );\n};\n\nexport const getSelectedProductSuccessFactory = (\n  code: string,\n  scope = ''\n): MemoizedSelector<StateWithProduct, boolean> => {\n  return createSelector(\n    getSelectedProductStateFactory(code, scope),\n    (productState) => StateUtils.loaderSuccessSelector(productState)\n  );\n};\n\nexport const getSelectedProductErrorFactory = (\n  code: string,\n  scope = ''\n): MemoizedSelector<StateWithProduct, boolean> => {\n  return createSelector(\n    getSelectedProductStateFactory(code, scope),\n    (productState) => StateUtils.loaderErrorSelector(productState)\n  );\n};\n\nexport const getAllProductCodes: MemoizedSelector<\n  StateWithProduct,\n  string[]\n> = createSelector(getProductState, (details) => {\n  return Object.keys(details.entities);\n});\n","import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { ProductReference } from '../../model/product.model';\nimport { ProductSelectors } from '../store';\nimport { ProductActions } from '../store/actions/index';\nimport { StateWithProduct } from '../store/product-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductReferenceService {\n  constructor(protected store: Store<StateWithProduct>) {}\n\n  loadProductReferences(\n    productCode: string,\n    referenceType?: string,\n    pageSize?: number\n  ): void {\n    this.store.dispatch(\n      new ProductActions.LoadProductReferences({\n        productCode,\n        referenceType,\n        pageSize,\n      })\n    );\n  }\n\n  getProductReferences(\n    productCode: string,\n    referenceType: string\n  ): Observable<ProductReference[]> {\n    return this.store.pipe(\n      select(\n        ProductSelectors.getSelectedProductReferencesFactory(\n          productCode,\n          referenceType\n        )\n      )\n    );\n  }\n\n  cleanReferences(): void {\n    this.store.dispatch(new ProductActions.CleanProductReferences());\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Review } from '../../model/product.model';\nimport { ProductActions } from '../store/actions/index';\nimport { StateWithProduct } from '../store/product-state';\nimport { ProductSelectors } from '../store/selectors/index';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductReviewService {\n  constructor(protected store: Store<StateWithProduct>) {}\n\n  getByProductCode(productCode: string): Observable<Review[]> {\n    return this.store.pipe(\n      select(ProductSelectors.getSelectedProductReviewsFactory(productCode)),\n      tap((reviews) => {\n        if (reviews === undefined && productCode !== undefined) {\n          this.store.dispatch(\n            new ProductActions.LoadProductReviews(productCode)\n          );\n        }\n      })\n    );\n  }\n\n  add(productCode: string, review: Review): void {\n    this.store.dispatch(\n      new ProductActions.PostProductReview({\n        productCode: productCode,\n        review,\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { ProductSearchPage } from '../../model/product-search.model';\nimport { SearchConfig } from '../model/search-config';\nimport { ProductActions } from '../store/actions/index';\nimport { StateWithProduct } from '../store/product-state';\nimport { ProductSelectors } from '../store/selectors/index';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductSearchService {\n  constructor(protected store: Store<StateWithProduct>) {}\n\n  search(query: string, searchConfig?: SearchConfig): void {\n    this.store.dispatch(\n      new ProductActions.SearchProducts({\n        queryText: query,\n        searchConfig: searchConfig,\n      })\n    );\n  }\n\n  getResults(): Observable<ProductSearchPage> {\n    return this.store.pipe(select(ProductSelectors.getSearchResults));\n  }\n\n  clearResults(): void {\n    this.store.dispatch(\n      new ProductActions.ClearProductSearchResult({\n        clearPageResults: true,\n      })\n    );\n  }\n}\n","import { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { Actions, ofType } from '@ngrx/effects';\nimport { select, Store } from '@ngrx/store';\nimport { defer, merge, Observable, of, SchedulerLike, using } from 'rxjs';\nimport {\n  debounceTime,\n  delay,\n  distinctUntilChanged,\n  filter,\n  map,\n  mapTo,\n  shareReplay,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { deepMerge } from '../../config/utils/deep-merge';\nimport { Product } from '../../model/product.model';\nimport { LoadingScopesService } from '../../occ/services/loading-scopes.service';\nimport { withdrawOn } from '../../util/rxjs/withdraw-on';\nimport { ProductActions } from '../store/actions/index';\nimport { StateWithProduct } from '../store/product-state';\nimport { ProductSelectors } from '../store/selectors/index';\nimport { uniteLatest } from '../../util/rxjs/unite-latest';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductLoadingService {\n  protected products: {\n    [code: string]: { [scope: string]: Observable<Product> };\n  } = {};\n\n  constructor(\n    protected store: Store<StateWithProduct>,\n    protected loadingScopes: LoadingScopesService,\n    protected actions$: Actions,\n    @Inject(PLATFORM_ID) protected platformId: any\n  ) {}\n\n  get(productCode: string, scopes: string[]): Observable<Product> {\n    scopes = this.loadingScopes.expand('product', scopes);\n\n    this.initProductScopes(productCode, scopes);\n    return this.products[productCode][this.getScopesIndex(scopes)];\n  }\n\n  protected initProductScopes(productCode: string, scopes: string[]): void {\n    if (!this.products[productCode]) {\n      this.products[productCode] = {};\n    }\n\n    for (const scope of scopes) {\n      if (!this.products[productCode][scope]) {\n        this.products[productCode][scope] = this.getProductForScope(\n          productCode,\n          scope\n        );\n      }\n    }\n\n    if (scopes.length > 1) {\n      this.products[productCode][this.getScopesIndex(scopes)] = uniteLatest(\n        scopes.map((scope) => this.products[productCode][scope])\n      ).pipe(\n        map((productParts) =>\n          productParts.every(Boolean)\n            ? deepMerge({}, ...productParts)\n            : undefined\n        ),\n        distinctUntilChanged()\n      );\n    }\n  }\n\n  protected getScopesIndex(scopes: string[]): string {\n    return scopes.join('ɵ');\n  }\n\n  /**\n   * Creates observable for providing specified product data for the scope\n   *\n   * @param productCode\n   * @param scope\n   */\n  protected getProductForScope(\n    productCode: string,\n    scope: string\n  ): Observable<Product> {\n    const shouldLoad$ = this.store.pipe(\n      select(\n        ProductSelectors.getSelectedProductStateFactory(productCode, scope)\n      ),\n      map(\n        (productState) =>\n          !productState.loading && !productState.success && !productState.error\n      ),\n      distinctUntilChanged(),\n      filter((x) => x)\n    );\n\n    const isLoading$ = this.store.pipe(\n      select(\n        ProductSelectors.getSelectedProductLoadingFactory(productCode, scope)\n      )\n    );\n\n    const productLoadLogic$ = merge(\n      shouldLoad$,\n      ...this.getProductReloadTriggers(productCode, scope)\n    ).pipe(\n      debounceTime(0),\n      withLatestFrom(isLoading$),\n      tap(([, isLoading]) => {\n        if (!isLoading) {\n          this.store.dispatch(\n            new ProductActions.LoadProduct(productCode, scope)\n          );\n        }\n      })\n    );\n\n    const productData$ = this.store.pipe(\n      select(ProductSelectors.getSelectedProductFactory(productCode, scope))\n    );\n\n    return using(\n      () => productLoadLogic$.subscribe(),\n      () => productData$\n    ).pipe(shareReplay({ bufferSize: 1, refCount: true }));\n  }\n\n  /**\n   * Returns reload triggers for product per scope\n   *\n   * @param productCode\n   * @param scope\n   */\n  protected getProductReloadTriggers(\n    productCode: string,\n    scope: string\n  ): Observable<boolean>[] {\n    const triggers = [];\n\n    // max age trigger add\n    const maxAge = this.loadingScopes.getMaxAge('product', scope);\n    if (maxAge && isPlatformBrowser(this.platformId)) {\n      // we want to grab load product success and load product fail for this product and scope\n      const loadFinish$ = this.actions$.pipe(\n        filter(\n          (\n            action:\n              | ProductActions.LoadProductSuccess\n              | ProductActions.LoadProductFail\n          ) =>\n            (action.type === ProductActions.LOAD_PRODUCT_SUCCESS ||\n              action.type === ProductActions.LOAD_PRODUCT_FAIL) &&\n            action.meta.entityId === productCode &&\n            action.meta.scope === scope\n        )\n      );\n\n      const loadStart$ = this.actions$.pipe(\n        ofType(ProductActions.LOAD_PRODUCT),\n        filter(\n          (action: ProductActions.LoadProduct) =>\n            action.payload === productCode && action.meta.scope === scope\n        )\n      );\n\n      triggers.push(this.getMaxAgeTrigger(loadStart$, loadFinish$, maxAge));\n    }\n\n    return triggers;\n  }\n\n  /**\n   * Generic method that returns stream triggering reload by maxAge\n   *\n   * Could be refactored to separate service in future to use in other\n   * max age reload implementations\n   *\n   * @param loadStart$ Stream that emits on load start\n   * @param loadFinish$ Stream that emits on load finish\n   * @param maxAge max age\n   */\n  private getMaxAgeTrigger(\n    loadStart$: Observable<any>,\n    loadFinish$: Observable<any>,\n    maxAge: number,\n    scheduler?: SchedulerLike\n  ): Observable<boolean> {\n    let timestamp = 0;\n\n    const now = () => (scheduler ? scheduler.now() : Date.now());\n\n    const timestamp$ = loadFinish$.pipe(tap(() => (timestamp = now())));\n\n    const shouldReload$: Observable<boolean> = defer(() => {\n      const age = now() - timestamp;\n\n      const timestampRefresh$ = timestamp$.pipe(\n        delay(maxAge, scheduler),\n        mapTo(true),\n        withdrawOn(loadStart$)\n      );\n\n      if (age > maxAge) {\n        // we should emit first value immediately\n        return merge(of(true), timestampRefresh$);\n      } else if (age === 0) {\n        // edge case, we should emit max age timeout after next load success\n        // could happen with artificial schedulers\n        return timestampRefresh$;\n      } else {\n        // we should emit first value when age will expire\n        return merge(\n          of(true).pipe(delay(maxAge - age, scheduler)),\n          timestampRefresh$\n        );\n      }\n    });\n\n    return shouldReload$;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { Product } from '../../model/product.model';\nimport { DEFAULT_SCOPE } from '../../occ/occ-models/occ-endpoints.model';\nimport { ProductScope } from '../model/product-scope';\nimport { ProductLoadingService } from '../services/product-loading.service';\nimport { ProductActions } from '../store/actions/index';\nimport { StateWithProduct } from '../store/product-state';\nimport { ProductSelectors } from '../store/selectors/index';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductService {\n  constructor(\n    protected store: Store<StateWithProduct>,\n    protected productLoading: ProductLoadingService\n  ) {}\n\n  /**\n   * Returns the product observable. The product will be loaded\n   * whenever there's no value observed.\n   *\n   * The underlying product loader ensures that the product is\n   * only loaded once, even in case of parallel observers.\n   *\n   * You should provide product data scope you are interested in to not load all\n   * the data if not needed. You can provide more than one scope.\n   *\n   * @param productCode Product code to load\n   * @param scopes Scope or scopes of the product data\n   */\n  get(\n    productCode: string,\n    scopes: (ProductScope | string)[] | ProductScope | string = DEFAULT_SCOPE\n  ): Observable<Product> {\n    return productCode\n      ? this.productLoading.get(productCode, [].concat(scopes))\n      : of(undefined);\n  }\n\n  /**\n   * Returns boolean observable for product's loading state\n   */\n  isLoading(\n    productCode: string,\n    scope: ProductScope | string = ''\n  ): Observable<boolean> {\n    return this.store.pipe(\n      select(\n        ProductSelectors.getSelectedProductLoadingFactory(productCode, scope)\n      )\n    );\n  }\n\n  /**\n   * Returns boolean observable for product's load success state\n   */\n  isSuccess(\n    productCode: string,\n    scope: ProductScope | string = ''\n  ): Observable<boolean> {\n    return this.store.pipe(\n      select(\n        ProductSelectors.getSelectedProductSuccessFactory(productCode, scope)\n      )\n    );\n  }\n\n  /**\n   * Returns boolean observable for product's load error state\n   */\n  hasError(\n    productCode: string,\n    scope: ProductScope | string = ''\n  ): Observable<boolean> {\n    return this.store.pipe(\n      select(\n        ProductSelectors.getSelectedProductErrorFactory(productCode, scope)\n      )\n    );\n  }\n\n  /**\n   * Reloads the product. The product is loaded implicetly\n   * whenever selected by the `get`, but in some cases an\n   * explicit reload might be needed.\n   */\n  reload(productCode: string, scope: ProductScope | string = ''): void {\n    this.store.dispatch(new ProductActions.LoadProduct(productCode, scope));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { ProductSearchPage, Suggestion } from '../../model/index';\nimport { SearchConfig } from '../model/index';\nimport { ProductActions } from '../store/actions/index';\nimport { ProductSelectors } from '../store/selectors/index';\nimport { ProductSearchService } from './product-search.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SearchboxService extends ProductSearchService {\n  /**\n   * dispatch the search for the search box\n   */\n  search(query: string, searchConfig?: SearchConfig): void {\n    this.store.dispatch(\n      new ProductActions.SearchProducts(\n        {\n          queryText: query,\n          searchConfig: searchConfig,\n        },\n        true\n      )\n    );\n  }\n\n  getResults(): Observable<ProductSearchPage> {\n    return this.store.pipe(select(ProductSelectors.getAuxSearchResults));\n  }\n\n  /**\n   * clears the products and suggestions\n   */\n  clearResults(): void {\n    this.store.dispatch(\n      new ProductActions.ClearProductSearchResult({\n        clearSearchboxResults: true,\n      })\n    );\n  }\n\n  getSuggestionResults(): Observable<Suggestion[]> {\n    return this.store.pipe(select(ProductSelectors.getProductSuggestions));\n  }\n\n  searchSuggestions(query: string, searchConfig?: SearchConfig): void {\n    this.store.dispatch(\n      new ProductActions.GetProductSuggestions({\n        term: query,\n        searchConfig: searchConfig,\n      })\n    );\n  }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { filter, map, switchMap } from 'rxjs/operators';\nimport { CmsService } from '../../cms/facade/cms.service';\nimport {\n  BreadcrumbMeta,\n  Page,\n  PageRobotsMeta,\n} from '../../cms/model/page.model';\nimport { BasePageMetaResolver } from '../../cms/page/base-page-meta.resolver';\nimport { PageMetaResolver } from '../../cms/page/page-meta.resolver';\nimport {\n  PageBreadcrumbResolver,\n  PageRobotsResolver,\n  PageTitleResolver,\n} from '../../cms/page/page.resolvers';\nimport { TranslationService } from '../../i18n/translation.service';\nimport { PageType } from '../../model/cms.model';\nimport { ProductSearchPage } from '../../model/product-search.model';\nimport { ProductSearchService } from '../facade/product-search.service';\n\n/**\n * Resolves the page data for the Product Listing Page.\n *\n * The page title, and breadcrumbs are resolved in this implementation only.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoryPageMetaResolver\n  extends PageMetaResolver\n  implements PageTitleResolver, PageBreadcrumbResolver, PageRobotsResolver {\n  // reusable observable for search page data\n  protected searchPage$: Observable<\n    ProductSearchPage | Page\n  > = this.cms.getCurrentPage().pipe(\n    filter(Boolean),\n    switchMap((page: Page) =>\n      // only the existence of a plp component tells us if products\n      // are rendered or if this is an ordinary content page\n      this.hasProductListComponent(page)\n        ? this.productSearchService.getResults().pipe(filter(Boolean))\n        : of(page)\n    )\n  );\n\n  /**\n   * @deprecated since 3.1, we'll use the BasePageMetaResolver in future versions\n   */\n  // TODO(#10467): Remove deprecated constructors\n  constructor(\n    productSearchService: ProductSearchService,\n    cmsService: CmsService,\n    translation: TranslationService\n  );\n  constructor(\n    productSearchService: ProductSearchService,\n    cmsService: CmsService,\n    translation: TranslationService,\n    // tslint:disable-next-line: unified-signatures\n    basePageMetaResolver?: BasePageMetaResolver\n  );\n  constructor(\n    protected productSearchService: ProductSearchService,\n    protected cms: CmsService,\n    protected translation: TranslationService,\n    @Optional() protected basePageMetaResolver?: BasePageMetaResolver\n  ) {\n    super();\n    this.pageType = PageType.CATEGORY_PAGE;\n  }\n\n  resolveTitle(): Observable<string> {\n    return this.searchPage$.pipe(\n      filter((page: ProductSearchPage) => !!page.pagination),\n      switchMap((p: ProductSearchPage) =>\n        this.translation.translate('pageMetaResolver.category.title', {\n          count: p.pagination.totalResults,\n          query: p.breadcrumbs?.length\n            ? p.breadcrumbs[0].facetValueName\n            : undefined,\n        })\n      )\n    );\n  }\n\n  resolveBreadcrumbs(): Observable<BreadcrumbMeta[]> {\n    return combineLatest([\n      this.searchPage$.pipe(),\n      this.translation.translate('common.home'),\n    ]).pipe(\n      map(([p, label]: [ProductSearchPage, string]) =>\n        p.breadcrumbs\n          ? this.resolveBreadcrumbData(<ProductSearchPage>p, label)\n          : null\n      )\n    );\n  }\n\n  protected resolveBreadcrumbData(\n    page: ProductSearchPage,\n    label: string\n  ): BreadcrumbMeta[] {\n    const breadcrumbs: BreadcrumbMeta[] = [];\n    breadcrumbs.push({ label: label, link: '/' });\n\n    for (const br of page.breadcrumbs) {\n      if (br.facetCode === 'category' || br.facetCode === 'allCategories') {\n        breadcrumbs.push({\n          label: br.facetValueName,\n          link: `/c/${br.facetValueCode}`,\n        });\n      }\n      if (br.facetCode === 'brand') {\n        breadcrumbs.push({\n          label: br.facetValueName,\n          link: `/Brands/${br.facetValueName}/c/${br.facetValueCode}`,\n        });\n      }\n    }\n    return breadcrumbs;\n  }\n\n  protected hasProductListComponent(page: Page): boolean {\n    return !!Object.keys(page.slots).find(\n      (key) =>\n        !!page.slots[key].components?.find(\n          (comp) =>\n            comp.typeCode === 'CMSProductListComponent' ||\n            comp.typeCode === 'ProductGridComponent'\n        )\n    );\n  }\n\n  /**\n   * @override\n   * This is added in 3.1 and will be ignored if the `BasePageMetaResolver` is not\n   * available.\n   */\n  // TODO(#10467) drop the 3.1 note.\n  resolveRobots(): Observable<PageRobotsMeta[]> {\n    return this.basePageMetaResolver?.resolveRobots() ?? of([]);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map, switchMap } from 'rxjs/operators';\nimport { AuthService } from '../../auth/user-auth/facade/auth.service';\nimport { BreadcrumbMeta, Page } from '../../cms/model/page.model';\nimport {\n  PageBreadcrumbResolver,\n  PageMetaResolver,\n  PageTitleResolver,\n} from '../../cms/page';\nimport { TranslationService } from '../../i18n/translation.service';\nimport { PageType } from '../../model/cms.model';\nimport { ProductSearchService } from '../../product/facade/product-search.service';\nimport { SemanticPathService } from '../../routing/configurable-routes/url-translation/semantic-path.service';\n\n/**\n * Resolves page meta data for the search result page, in case it's used\n * to query coupons. This is done by adding a `couponcode` query parameter\n * to the search page route.\n *\n * The page resolves an alternative page title and breadcrumb.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CouponSearchPageResolver\n  extends PageMetaResolver\n  implements PageTitleResolver, PageBreadcrumbResolver {\n  protected total$: Observable<\n    number\n  > = this.productSearchService.getResults().pipe(\n    filter((data) => !!data?.pagination),\n    map((results) => results.pagination.totalResults)\n  );\n\n  constructor(\n    protected productSearchService: ProductSearchService,\n    protected translation: TranslationService,\n    protected authService: AuthService,\n    protected route: ActivatedRoute,\n    protected semanticPathService: SemanticPathService\n  ) {\n    super();\n    this.pageType = PageType.CONTENT_PAGE;\n    this.pageTemplate = 'SearchResultsListPageTemplate';\n  }\n\n  resolveBreadcrumbs(): Observable<BreadcrumbMeta[]> {\n    return combineLatest([\n      this.translation.translate('common.home'),\n      this.translation.translate('myCoupons.myCoupons'),\n      this.authService.isUserLoggedIn(),\n    ]).pipe(\n      map(([homeLabel, couponLabel, isLoggedIn]: [string, string, boolean]) => {\n        const breadcrumbs = [];\n        breadcrumbs.push({ label: homeLabel, link: '/' });\n        if (isLoggedIn) {\n          breadcrumbs.push({\n            label: couponLabel,\n            link: this.semanticPathService.transform({\n              cxRoute: 'coupons',\n            }),\n          });\n        }\n        return breadcrumbs;\n      })\n    );\n  }\n\n  resolveTitle(): Observable<string> {\n    return this.total$.pipe(\n      switchMap((total: number) =>\n        this.translation.translate('pageMetaResolver.search.findProductTitle', {\n          count: total,\n          coupon: this.couponCode,\n        })\n      )\n    );\n  }\n\n  getScore(page: Page): number {\n    return super.getScore(page) + (this.couponCode ? 1 : -1);\n  }\n\n  protected get couponCode(): string {\n    return this.route.snapshot?.queryParams?.couponcode;\n  }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { filter, map, switchMap } from 'rxjs/operators';\nimport { BreadcrumbMeta, PageRobotsMeta } from '../../cms/model/page.model';\nimport { BasePageMetaResolver } from '../../cms/page/base-page-meta.resolver';\nimport { PageMetaResolver } from '../../cms/page/page-meta.resolver';\nimport {\n  PageBreadcrumbResolver,\n  PageDescriptionResolver,\n  PageHeadingResolver,\n  PageImageResolver,\n  PageRobotsResolver,\n  PageTitleResolver,\n} from '../../cms/page/page.resolvers';\nimport { TranslationService } from '../../i18n/translation.service';\nimport { PageType } from '../../model/cms.model';\nimport { Product } from '../../model/product.model';\nimport { RoutingService } from '../../routing/facade/routing.service';\nimport { ProductService } from '../facade/product.service';\nimport { ProductScope } from '../model/product-scope';\n\n/**\n * Resolves the page data for the Product Detail Page\n * based on the `PageType.PRODUCT_PAGE`.\n *\n * The page title, heading, description, breadcrumbs and\n * first GALLERY image are resolved if available in the data.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductPageMetaResolver\n  extends PageMetaResolver\n  implements\n    PageHeadingResolver,\n    PageTitleResolver,\n    PageDescriptionResolver,\n    PageBreadcrumbResolver,\n    PageImageResolver,\n    PageRobotsResolver {\n  // reusable observable for product data based on the current page\n  protected product$ = this.routingService.getRouterState().pipe(\n    map((state) => state.state.params['productCode']),\n    filter((code) => !!code),\n    switchMap((code) => this.productService.get(code, ProductScope.DETAILS)),\n    filter(Boolean)\n  );\n\n  /**\n   * @deprecated since 3.1, we'll use the BasePageMetaResolver in future versions\n   */\n  // TODO(#10467): Remove deprecated constructors\n  constructor(\n    routingService: RoutingService,\n    productService: ProductService,\n    translation: TranslationService\n  );\n  constructor(\n    routingService: RoutingService,\n    productService: ProductService,\n    translation: TranslationService,\n    // tslint:disable-next-line: unified-signatures\n    basePageMetaResolver?: BasePageMetaResolver\n  );\n  constructor(\n    protected routingService: RoutingService,\n    protected productService: ProductService,\n    protected translation: TranslationService,\n    @Optional() protected basePageMetaResolver?: BasePageMetaResolver\n  ) {\n    super();\n    this.pageType = PageType.PRODUCT_PAGE;\n  }\n\n  /**\n   * Resolves the page heading for the Product Detail Page.\n   * The page heading is used in the UI (`<h1>`), where as the page\n   * title is used by the browser and crawlers.\n   */\n  resolveHeading(): Observable<string> {\n    return this.product$.pipe(\n      switchMap((p: Product) =>\n        this.translation.translate('pageMetaResolver.product.heading', {\n          heading: p.name,\n        })\n      )\n    );\n  }\n\n  /**\n   * Resolves the page title for the Product Detail Page. The page title\n   * is resolved with the product name, the first category and the manufacturer.\n   * The page title used by the browser (history, tabs) and crawlers.\n   */\n  resolveTitle(): Observable<string> {\n    return this.product$.pipe(\n      switchMap((p: Product) => {\n        let title = p.name;\n        title += this.resolveFirstCategory(p);\n        title += this.resolveManufacturer(p);\n        return this.translation.translate('pageMetaResolver.product.title', {\n          title: title,\n        });\n      })\n    );\n  }\n\n  /**\n   * Resolves the page description for the Product Detail Page. The description\n   * is based on the `product.summary`.\n   */\n  resolveDescription(): Observable<string> {\n    return this.product$.pipe(\n      switchMap((p: Product) =>\n        this.translation.translate('pageMetaResolver.product.description', {\n          description: p.summary,\n        })\n      )\n    );\n  }\n\n  /**\n   * Resolves breadcrumbs for the Product Detail Page. The breadcrumbs are driven by\n   * a static home page crumb and a crumb for each category.\n   */\n  resolveBreadcrumbs(): Observable<BreadcrumbMeta[]> {\n    return combineLatest([\n      this.product$.pipe(),\n      this.translation.translate('common.home'),\n    ]).pipe(\n      map(([p, label]: [Product, string]) => {\n        const breadcrumbs = [];\n        breadcrumbs.push({ label: label, link: '/' });\n        for (const { name, code, url } of p.categories || []) {\n          breadcrumbs.push({\n            label: name || code,\n            link: url,\n          });\n        }\n        return breadcrumbs;\n      })\n    );\n  }\n\n  /**\n   * Resolves the main page image for the Product Detail Page. The product image\n   * is based on the PRIMARY product image. The zoom format is used by default.\n   */\n  resolveImage(): Observable<string> {\n    return this.product$.pipe(\n      map((p: Product) =>\n        (<any>p.images?.PRIMARY)?.zoom?.url\n          ? (<any>p.images.PRIMARY).zoom.url\n          : null\n      )\n    );\n  }\n\n  protected resolveFirstCategory(product: Product): string {\n    let firstCategory;\n    if (product.categories?.length > 0) {\n      firstCategory = product.categories[0];\n    }\n    return firstCategory\n      ? ` | ${firstCategory.name || firstCategory.code}`\n      : '';\n  }\n\n  protected resolveManufacturer(product: Product): string {\n    return product.manufacturer ? ` | ${product.manufacturer}` : '';\n  }\n\n  /**\n   * Resolves the robot information for the Product Detail Page. The\n   * robot instruction defaults to FOLLOW and INDEX for all product pages,\n   * regardless of whether they're purchasable or not.\n   */\n  // TODO(#10467): resolve robots from `BasePageMetaResolver` instead\n  resolveRobots(): Observable<PageRobotsMeta[]> {\n    return of([PageRobotsMeta.FOLLOW, PageRobotsMeta.INDEX]);\n  }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { filter, map, switchMap } from 'rxjs/operators';\nimport { PageRobotsMeta } from '../../cms/model/page.model';\nimport { BasePageMetaResolver } from '../../cms/page/base-page-meta.resolver';\nimport { PageMetaResolver } from '../../cms/page/page-meta.resolver';\nimport {\n  PageRobotsResolver,\n  PageTitleResolver,\n} from '../../cms/page/page.resolvers';\nimport { TranslationService } from '../../i18n/translation.service';\nimport { PageType } from '../../model/cms.model';\nimport { RoutingService } from '../../routing/facade/routing.service';\nimport { ProductSearchService } from '../facade/product-search.service';\n\n/**\n * Resolves the page data for the Search Result Page based on the\n * `PageType.CATEGORY_PAGE` and the `SearchResultsListPageTemplate` template.\n *\n * Only the page title is resolved in the standard implementation.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class SearchPageMetaResolver\n  extends PageMetaResolver\n  implements PageMetaResolver, PageTitleResolver, PageRobotsResolver {\n  protected total$: Observable<\n    number\n  > = this.productSearchService.getResults().pipe(\n    filter((data) => !!data?.pagination),\n    map((results) => results.pagination.totalResults)\n  );\n\n  protected query$: Observable<\n    string\n  > = this.routingService\n    .getRouterState()\n    .pipe(map((state) => state.state.params['query']));\n\n  /**\n   * @deprecated since 3.1 we'll use the `BasePageMetaResolver` going forward\n   */\n  // TODO(#10467): Remove deprecated constructors\n  constructor(\n    routingService: RoutingService,\n    productSearchService: ProductSearchService,\n    translation: TranslationService\n  );\n  constructor(\n    routingService: RoutingService,\n    productSearchService: ProductSearchService,\n    translation: TranslationService,\n    // tslint:disable-next-line: unified-signatures\n    basePageMetaResolver?: BasePageMetaResolver\n  );\n  constructor(\n    protected routingService: RoutingService,\n    protected productSearchService: ProductSearchService,\n    protected translation: TranslationService,\n    @Optional() protected basePageMetaResolver?: BasePageMetaResolver\n  ) {\n    super();\n    this.pageType = PageType.CONTENT_PAGE;\n    this.pageTemplate = 'SearchResultsListPageTemplate';\n  }\n\n  resolveTitle(): Observable<string> {\n    const sources = [this.total$, this.query$];\n    return combineLatest(sources).pipe(\n      switchMap(([t, q]: [number, string]) =>\n        this.translation.translate('pageMetaResolver.search.title', {\n          count: t,\n          query: q,\n        })\n      )\n    );\n  }\n\n  /**\n   * @override\n   * This is added in 3.1 and will be ignored if the `BasePageMetaResolver` is not\n   * available.\n   */\n  // TODO(#10467) drop the 3.1 note.\n  resolveRobots(): Observable<PageRobotsMeta[]> {\n    return this.basePageMetaResolver?.resolveRobots() ?? of([]);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport {\n  StateConfig,\n  StateTransferType,\n} from '../../state/config/state-config';\nimport { effects } from './effects/index';\nimport { PRODUCT_FEATURE } from './product-state';\nimport { metaReducers, reducerProvider, reducerToken } from './reducers/index';\nimport { provideDefaultConfigFactory } from '../../config/config-providers';\n\nexport function productStoreConfigFactory(): StateConfig {\n  // if we want to reuse PRODUCT_FEATURE const in config, we have to use factory instead of plain object\n  const config: StateConfig = {\n    state: {\n      ssrTransfer: {\n        keys: { [PRODUCT_FEATURE]: StateTransferType.TRANSFER_STATE },\n      },\n    },\n  };\n  return config;\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forFeature(PRODUCT_FEATURE, reducerToken, { metaReducers }),\n    EffectsModule.forFeature(effects),\n  ],\n  providers: [\n    provideDefaultConfigFactory(productStoreConfigFactory),\n    reducerProvider,\n  ],\n})\nexport class ProductStoreModule {}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { PageMetaResolver } from '../cms/page/page-meta.resolver';\nimport { CategoryPageMetaResolver } from './services/category-page-meta.resolver';\nimport { CouponSearchPageResolver } from './services/coupon-search-page-meta.resolver';\nimport { ProductPageMetaResolver } from './services/product-page-meta.resolver';\nimport { SearchPageMetaResolver } from './services/search-page-meta.resolver';\nimport { ProductStoreModule } from './store/product-store.module';\n\nconst pageTitleResolvers = [\n  {\n    provide: PageMetaResolver,\n    useExisting: ProductPageMetaResolver,\n    multi: true,\n  },\n  {\n    provide: PageMetaResolver,\n    useExisting: CategoryPageMetaResolver,\n    multi: true,\n  },\n  {\n    provide: PageMetaResolver,\n    useExisting: SearchPageMetaResolver,\n    multi: true,\n  },\n  {\n    provide: PageMetaResolver,\n    useExisting: CouponSearchPageResolver,\n    multi: true,\n  },\n];\n\n@NgModule({\n  imports: [ProductStoreModule],\n})\nexport class ProductModule {\n  static forRoot(): ModuleWithProviders<ProductModule> {\n    return {\n      ngModule: ProductModule,\n      providers: [...pageTitleResolvers],\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { SmartEditService } from '../services/smart-edit.service';\n\n@Injectable({ providedIn: 'root' })\nexport class CmsTicketInterceptor implements HttpInterceptor {\n  constructor(private service: SmartEditService) {}\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    if (request.url.includes('/cms/') && this.service.cmsTicketId) {\n      request = request.clone({\n        setParams: {\n          cmsTicketId: this.service.cmsTicketId,\n        },\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n","import { Provider } from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { CmsTicketInterceptor } from './cms-ticket.interceptor';\n\nexport const interceptors: Provider[] = [\n  {\n    provide: HTTP_INTERCEPTORS,\n    useExisting: CmsTicketInterceptor,\n    multi: true,\n  },\n];\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { interceptors } from './http-interceptors/index';\n\n@NgModule({})\nexport class SmartEditModule {\n  static forRoot(): ModuleWithProviders<SmartEditModule> {\n    return {\n      ngModule: SmartEditModule,\n      providers: [...interceptors],\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { UserConsentAdapter } from './user-consent.adapter';\nimport { ConsentTemplate } from '../../../model/consent.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserConsentConnector {\n  constructor(protected adapter: UserConsentAdapter) {}\n\n  loadConsents(userId: string): Observable<ConsentTemplate[]> {\n    return this.adapter.loadConsents(userId);\n  }\n\n  giveConsent(\n    userId: string,\n    consentTemplateId: string,\n    consentTemplateVersion: number\n  ): Observable<ConsentTemplate> {\n    return this.adapter.giveConsent(\n      userId,\n      consentTemplateId,\n      consentTemplateVersion\n    );\n  }\n\n  withdrawConsent(userId: string, consentCode: string): Observable<{}> {\n    return this.adapter.withdrawConsent(userId, consentCode);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CostCenter } from '../../../model/org-unit.model';\nimport { UserCostCenterAdapter } from './user-cost-center.adapter';\nimport { EntitiesModel } from '../../../model/misc.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserCostCenterConnector {\n  constructor(protected adapter: UserCostCenterAdapter) {}\n\n  getActiveList(userId: string): Observable<EntitiesModel<CostCenter>> {\n    return this.adapter.loadActiveList(userId);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {\n  CustomerCouponSearchResult,\n  CustomerCouponNotification,\n  CustomerCoupon2Customer,\n} from '../../../model/customer-coupon.model';\nimport { CustomerCouponAdapter } from './customer-coupon.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CustomerCouponConnector {\n  constructor(protected adapter: CustomerCouponAdapter) {}\n\n  getCustomerCoupons(\n    userId: string,\n    pageSize: number,\n    currentPage: number,\n    sort: string\n  ): Observable<CustomerCouponSearchResult> {\n    return this.adapter.getCustomerCoupons(userId, pageSize, currentPage, sort);\n  }\n\n  turnOnNotification(\n    userId: string,\n    couponCode: string\n  ): Observable<CustomerCouponNotification> {\n    return this.adapter.turnOnNotification(userId, couponCode);\n  }\n\n  turnOffNotification(userId: string, couponCode: string): Observable<{}> {\n    return this.adapter.turnOffNotification(userId, couponCode);\n  }\n\n  claimCustomerCoupon(\n    userId: string,\n    couponCode: string\n  ): Observable<CustomerCoupon2Customer> {\n    return this.adapter.claimCustomerCoupon(userId, couponCode);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { UserInterestsAdapter } from './user-interests.adapter';\nimport { Observable } from 'rxjs';\nimport {\n  ProductInterestSearchResult,\n  ProductInterestEntryRelation,\n  NotificationType,\n} from '../../../model/product-interest.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserInterestsConnector {\n  constructor(protected adapter: UserInterestsAdapter) {}\n  getInterests(\n    userId: string,\n    pageSize?: number,\n    currentPage?: number,\n    sort?: string,\n    productCode?: string,\n    notificationType?: NotificationType\n  ): Observable<ProductInterestSearchResult> {\n    return this.adapter.getInterests(\n      userId,\n      pageSize,\n      currentPage,\n      sort,\n      productCode,\n      notificationType\n    );\n  }\n\n  removeInterest(\n    userId: string,\n    item: ProductInterestEntryRelation\n  ): Observable<any[]> {\n    return this.adapter.removeInterest(userId, item);\n  }\n\n  addInterest(\n    userId: string,\n    productCode: string,\n    notificationType: NotificationType\n  ): Observable<any> {\n    return this.adapter.addInterest(userId, productCode, notificationType);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ConsignmentTracking } from '../../../model/consignment-tracking.model';\nimport {\n  CancellationRequestEntryInputList,\n  Order,\n  OrderHistoryList,\n  ReturnRequest,\n  ReturnRequestEntryInputList,\n  ReturnRequestList,\n  ReturnRequestModification,\n} from '../../../model/order.model';\nimport { UserOrderAdapter } from './user-order.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserOrderConnector {\n  constructor(protected adapter: UserOrderAdapter) {}\n\n  public get(userId: string, orderCode: string): Observable<Order> {\n    return this.adapter.load(userId, orderCode);\n  }\n\n  public getHistory(\n    userId: string,\n    pageSize?: number,\n    currentPage?: number,\n    sort?: string\n  ): Observable<OrderHistoryList> {\n    return this.adapter.loadHistory(userId, pageSize, currentPage, sort);\n  }\n\n  public getConsignmentTracking(\n    orderCode: string,\n    consignmentCode: string,\n    userId?: string\n  ): Observable<ConsignmentTracking> {\n    return this.adapter.getConsignmentTracking(\n      orderCode,\n      consignmentCode,\n      userId\n    );\n  }\n\n  public cancel(\n    userId: string,\n    orderCode: string,\n    cancelRequestInput: CancellationRequestEntryInputList\n  ): Observable<{}> {\n    return this.adapter.cancel(userId, orderCode, cancelRequestInput);\n  }\n\n  public return(\n    userId: string,\n    returnRequestInput: ReturnRequestEntryInputList\n  ): Observable<ReturnRequest> {\n    return this.adapter.createReturnRequest(userId, returnRequestInput);\n  }\n\n  public getReturnRequestDetail(\n    userId: string,\n    returnRequestCode: string\n  ): Observable<ReturnRequest> {\n    return this.adapter.loadReturnRequestDetail(userId, returnRequestCode);\n  }\n\n  public getReturnRequestList(\n    userId: string,\n    pageSize?: number,\n    currentPage?: number,\n    sort?: string\n  ): Observable<ReturnRequestList> {\n    return this.adapter.loadReturnRequestList(\n      userId,\n      pageSize,\n      currentPage,\n      sort\n    );\n  }\n\n  public cancelReturnRequest(\n    userId: string,\n    returnRequestCode: string,\n    returnRequestModification: ReturnRequestModification\n  ): Observable<{}> {\n    return this.adapter.cancelReturnRequest(\n      userId,\n      returnRequestCode,\n      returnRequestModification\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { UserPaymentAdapter } from './user-payment.adapter';\nimport { Observable } from 'rxjs';\nimport { PaymentDetails } from '../../../model/cart.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserPaymentConnector {\n  constructor(protected adapter: UserPaymentAdapter) {}\n\n  getAll(userId: string): Observable<PaymentDetails[]> {\n    return this.adapter.loadAll(userId);\n  }\n\n  delete(userId: string, paymentMethodID: string): Observable<{}> {\n    return this.adapter.delete(userId, paymentMethodID);\n  }\n\n  setDefault(userId: string, paymentMethodID: string): Observable<{}> {\n    return this.adapter.setDefault(userId, paymentMethodID);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Title, User, UserSignUp } from '../../../model/misc.model';\nimport { UserAdapter } from './user.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserConnector {\n  constructor(protected adapter: UserAdapter) {}\n\n  get(userId: string): Observable<User> {\n    return this.adapter.load(userId);\n  }\n\n  update(username: string, user: User): Observable<{}> {\n    return this.adapter.update(username, user);\n  }\n\n  register(user: UserSignUp): Observable<User> {\n    return this.adapter.register(user);\n  }\n\n  registerGuest(guid: string, password: string): Observable<User> {\n    return this.adapter.registerGuest(guid, password);\n  }\n\n  requestForgotPasswordEmail(userEmailAddress: string): Observable<{}> {\n    return this.adapter.requestForgotPasswordEmail(userEmailAddress);\n  }\n\n  resetPassword(token: string, newPassword: string): Observable<{}> {\n    return this.adapter.resetPassword(token, newPassword);\n  }\n\n  updateEmail(\n    userId: string,\n    currentPassword: string,\n    newUserId: string\n  ): Observable<{}> {\n    return this.adapter.updateEmail(userId, currentPassword, newUserId);\n  }\n\n  updatePassword(\n    userId: string,\n    oldPassword: string,\n    newPassword: string\n  ): Observable<{}> {\n    return this.adapter.updatePassword(userId, oldPassword, newPassword);\n  }\n\n  remove(userId: string): Observable<{}> {\n    return this.adapter.remove(userId);\n  }\n\n  getTitles(): Observable<Title[]> {\n    return this.adapter.loadTitles();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { merge, Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { AnonymousConsentsService } from '../../anonymous-consents/index';\nimport { AnonymousConsent, Consent } from '../../model/index';\nimport { UserConsentService } from './user-consent.service';\n\n/**\n * Unified facade for both anonymous and registered user consents.\n */\n@Injectable({ providedIn: 'root' })\nexport class ConsentService {\n  constructor(\n    protected anonymousConsentsService: AnonymousConsentsService,\n    protected userConsentService: UserConsentService\n  ) {}\n\n  /**\n   * Returns either anonymous consent or registered consent as they are emmited.\n   * @param templateCode for which to return either anonymous or registered consent.\n   */\n  getConsent(templateCode: string): Observable<AnonymousConsent | Consent> {\n    return merge(\n      this.userConsentService.getConsent(templateCode),\n      this.anonymousConsentsService.getConsent(templateCode)\n    );\n  }\n\n  /**\n   * Checks if the `templateId`'s template has a given consent.\n   * The method returns `false` if the consent doesn't exist or if it's withdrawn. Otherwise, `true` is returned.\n   *\n   * @param templateId of a template which's consent should be checked\n   */\n  checkConsentGivenByTemplateId(templateId: string): Observable<boolean> {\n    return this.getConsent(templateId).pipe(\n      map((consent) => {\n        if (!consent) {\n          return false;\n        }\n\n        return this.isAnonymousConsentType(consent)\n          ? this.anonymousConsentsService.isConsentGiven(consent)\n          : this.userConsentService.isConsentGiven(consent);\n      }),\n      distinctUntilChanged()\n    );\n  }\n\n  /**\n   * Checks if the `templateId`'s template has a withdrawn consent.\n   * The method returns `true` if the consent doesn't exist or if it's withdrawn. Otherwise, `false` is returned.\n   *\n   * @param templateId of a template which's consent should be checked\n   */\n  checkConsentWithdrawnByTemplateId(templateId: string): Observable<boolean> {\n    return this.getConsent(templateId).pipe(\n      map((consent) => {\n        if (!consent) {\n          return true;\n        }\n\n        return this.isAnonymousConsentType(consent)\n          ? this.anonymousConsentsService.isConsentWithdrawn(consent)\n          : this.userConsentService.isConsentWithdrawn(consent);\n      }),\n      distinctUntilChanged()\n    );\n  }\n\n  /**\n   *\n   * Checks the provided `consent`'s type and delegates to an appropriate method - `anonymousConsentsService.isConsentGiven(consent)` or `this.userConsentService.isConsentGiven`\n   *\n   * @param consent a consent to check\n   */\n  isConsentGiven(consent: AnonymousConsent | Consent): boolean {\n    return this.isAnonymousConsentType(consent)\n      ? this.anonymousConsentsService.isConsentGiven(consent)\n      : this.userConsentService.isConsentGiven(consent);\n  }\n\n  /**\n   *\n   * Checks the provided `consent`'s type and delegates to an appropriate method - `anonymousConsentsService.isConsentWithdrawn(consent)` or `this.userConsentService.isConsentWithdrawn`\n   *\n   * @param consent a consent to check\n   */\n  isConsentWithdrawn(consent: AnonymousConsent | Consent): boolean {\n    return this.isAnonymousConsentType(consent)\n      ? this.anonymousConsentsService.isConsentWithdrawn(consent)\n      : this.userConsentService.isConsentWithdrawn(consent);\n  }\n\n  /**\n   * Returns `true` if the provided consent is of type `AnonymousConsent`. Otherwise, `false` is returned.\n   */\n  isAnonymousConsentType(\n    consent: AnonymousConsent | Consent\n  ): consent is AnonymousConsent {\n    if (!consent) {\n      return false;\n    }\n\n    return (consent as AnonymousConsent).templateCode !== undefined;\n  }\n\n  /**\n   * Returns `true` if the provided consent is of type `Consent`. Otherwise, `false` is returned.\n   */\n  isConsentType(consent: AnonymousConsent | Consent): consent is Consent {\n    if (!consent) {\n      return false;\n    }\n\n    return (consent as Consent).code !== undefined;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map, tap } from 'rxjs/operators';\nimport { UserIdService } from '../../auth/user-auth/facade/user-id.service';\nimport { CustomerCouponSearchResult } from '../../model/customer-coupon.model';\nimport { StateWithProcess } from '../../process/store/process-state';\nimport {\n  getProcessErrorFactory,\n  getProcessLoadingFactory,\n  getProcessSuccessFactory,\n} from '../../process/store/selectors/process.selectors';\nimport { UserActions } from '../store/actions/index';\nimport { UsersSelectors } from '../store/selectors/index';\nimport {\n  CLAIM_CUSTOMER_COUPON_PROCESS_ID,\n  StateWithUser,\n  SUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID,\n  UNSUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID,\n} from '../store/user-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CustomerCouponService {\n  constructor(\n    protected store: Store<StateWithUser | StateWithProcess<void>>,\n    protected userIdService: UserIdService\n  ) {}\n\n  /**\n   * Retrieves customer's coupons\n   * @param pageSize page size\n   * @param currentPage current page\n   * @param sort sort\n   */\n  loadCustomerCoupons(\n    pageSize: number,\n    currentPage?: number,\n    sort?: string\n  ): void {\n    this.userIdService.invokeWithUserId((userId) => {\n      this.store.dispatch(\n        new UserActions.LoadCustomerCoupons({\n          userId,\n          pageSize: pageSize,\n          currentPage: currentPage,\n          sort: sort,\n        })\n      );\n    });\n  }\n\n  /**\n   * Returns customer coupon search result\n   * @param pageSize page size\n   */\n  getCustomerCoupons(pageSize: number): Observable<CustomerCouponSearchResult> {\n    return combineLatest([\n      this.store.pipe(select(UsersSelectors.getCustomerCouponsState)),\n      this.getClaimCustomerCouponResultLoading(),\n    ]).pipe(\n      filter(([, loading]) => !loading),\n      tap(([customerCouponsState]) => {\n        const attemptedLoad =\n          customerCouponsState.loading ||\n          customerCouponsState.success ||\n          customerCouponsState.error;\n        if (!attemptedLoad) {\n          this.loadCustomerCoupons(pageSize);\n        }\n      }),\n      map(([customerCouponsState]) => customerCouponsState.value)\n    );\n  }\n\n  /**\n   * Returns a loaded flag for customer coupons\n   */\n  getCustomerCouponsLoaded(): Observable<boolean> {\n    return this.store.pipe(select(UsersSelectors.getCustomerCouponsLoaded));\n  }\n\n  /**\n   * Returns a loading flag for customer coupons\n   */\n  getCustomerCouponsLoading(): Observable<boolean> {\n    return this.store.pipe(select(UsersSelectors.getCustomerCouponsLoading));\n  }\n\n  /**\n   * Subscribe a CustomerCoupon Notification\n   * @param couponCode a customer coupon code\n   */\n  subscribeCustomerCoupon(couponCode: string): void {\n    this.userIdService.invokeWithUserId((userId) => {\n      this.store.dispatch(\n        new UserActions.SubscribeCustomerCoupon({\n          userId,\n          couponCode: couponCode,\n        })\n      );\n    });\n  }\n\n  /**\n   * Returns the subscribe customer coupon notification process loading flag\n   */\n  getSubscribeCustomerCouponResultLoading(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessLoadingFactory(SUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns the subscribe customer coupon notification process success flag\n   */\n  getSubscribeCustomerCouponResultSuccess(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessSuccessFactory(SUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns the subscribe customer coupon notification process error flag\n   */\n  getSubscribeCustomerCouponResultError(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessErrorFactory(SUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Unsubscribe a CustomerCoupon Notification\n   * @param couponCode a customer coupon code\n   */\n  unsubscribeCustomerCoupon(couponCode: string): void {\n    this.userIdService.invokeWithUserId((userId) => {\n      this.store.dispatch(\n        new UserActions.UnsubscribeCustomerCoupon({\n          userId,\n          couponCode: couponCode,\n        })\n      );\n    });\n  }\n\n  /**\n   * Returns the unsubscribe customer coupon notification process loading flag\n   */\n  getUnsubscribeCustomerCouponResultLoading(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessLoadingFactory(UNSUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns the unsubscribe customer coupon notification process success flag\n   */\n  getUnsubscribeCustomerCouponResultSuccess(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessSuccessFactory(UNSUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns the unsubscribe customer coupon notification process error flag\n   */\n  getUnsubscribeCustomerCouponResultError(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessErrorFactory(UNSUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Claim a CustomerCoupon\n   * @param couponCode a customer coupon code\n   */\n  claimCustomerCoupon(couponCode: string): void {\n    this.userIdService.invokeWithUserId((userId) => {\n      this.store.dispatch(\n        new UserActions.ClaimCustomerCoupon({\n          userId,\n          couponCode,\n        })\n      );\n    });\n  }\n\n  /**\n   * Returns the claim customer coupon notification process success flag\n   */\n  getClaimCustomerCouponResultSuccess(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessSuccessFactory(CLAIM_CUSTOMER_COUPON_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns the claim customer coupon notification process loading flag\n   */\n  getClaimCustomerCouponResultLoading(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessLoadingFactory(CLAIM_CUSTOMER_COUPON_PROCESS_ID))\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { UserIdService } from '../../auth/user-auth/facade/user-id.service';\nimport {\n  ReturnRequest,\n  ReturnRequestEntryInputList,\n  ReturnRequestList,\n  ReturnRequestModification,\n} from '../../model/order.model';\nimport { OCC_USER_ID_ANONYMOUS } from '../../occ/utils/occ-constants';\nimport { StateWithProcess } from '../../process/store/process-state';\nimport {\n  getProcessLoadingFactory,\n  getProcessSuccessFactory,\n} from '../../process/store/selectors/process.selectors';\nimport { UserActions } from '../store/actions/index';\nimport { UsersSelectors } from '../store/selectors/index';\nimport { CANCEL_RETURN_PROCESS_ID, StateWithUser } from '../store/user-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderReturnRequestService {\n  constructor(\n    protected store: Store<StateWithUser | StateWithProcess<void>>,\n    protected userIdService: UserIdService\n  ) {}\n\n  /**\n   * Create order return request\n   * @param orderCode an order code\n   * @param returnRequestInput order return request entry input\n   */\n  createOrderReturnRequest(\n    returnRequestInput: ReturnRequestEntryInputList\n  ): void {\n    this.userIdService.invokeWithUserId((userId) => {\n      this.store.dispatch(\n        new UserActions.CreateOrderReturnRequest({\n          userId,\n          returnRequestInput,\n        })\n      );\n    });\n  }\n\n  /**\n   * Return an order return request\n   */\n  getOrderReturnRequest(): Observable<ReturnRequest> {\n    return this.store.pipe(select(UsersSelectors.getOrderReturnRequest));\n  }\n\n  /**\n   * Gets order return request list\n   */\n  getOrderReturnRequestList(pageSize: number): Observable<ReturnRequestList> {\n    return this.store.pipe(\n      select(UsersSelectors.getOrderReturnRequestListState),\n      tap((returnListState) => {\n        const attemptedLoad =\n          returnListState.loading ||\n          returnListState.success ||\n          returnListState.error;\n        if (!attemptedLoad) {\n          this.loadOrderReturnRequestList(pageSize);\n        }\n      }),\n      map((returnListState) => returnListState.value)\n    );\n  }\n\n  /**\n   * Loads order return request detail\n   * @param returnRequestCode\n   */\n  loadOrderReturnRequestDetail(returnRequestCode: string): void {\n    this.userIdService.invokeWithUserId((userId) => {\n      this.store.dispatch(\n        new UserActions.LoadOrderReturnRequest({\n          userId,\n          returnRequestCode,\n        })\n      );\n    });\n  }\n\n  /**\n   * Loads order return request list\n   * @param pageSize page size\n   * @param currentPage current page\n   * @param sort sort\n   */\n  loadOrderReturnRequestList(\n    pageSize: number,\n    currentPage?: number,\n    sort?: string\n  ): void {\n    this.userIdService.invokeWithUserId((userId) => {\n      if (userId !== OCC_USER_ID_ANONYMOUS) {\n        this.store.dispatch(\n          new UserActions.LoadOrderReturnRequestList({\n            userId,\n            pageSize,\n            currentPage,\n            sort,\n          })\n        );\n      }\n    });\n  }\n\n  /**\n   * Cleaning order return request list\n   */\n  clearOrderReturnRequestList(): void {\n    this.store.dispatch(new UserActions.ClearOrderReturnRequestList());\n  }\n\n  /**\n   * Get the order return request loading flag\n   */\n  getReturnRequestLoading(): Observable<boolean> {\n    return this.store.pipe(select(UsersSelectors.getOrderReturnRequestLoading));\n  }\n\n  /**\n   * Get the order return request success flag\n   */\n  getReturnRequestSuccess(): Observable<boolean> {\n    return this.store.pipe(select(UsersSelectors.getOrderReturnRequestSuccess));\n  }\n\n  /**\n   * Cleaning order return request details\n   */\n  clearOrderReturnRequestDetail(): void {\n    this.store.dispatch(new UserActions.ClearOrderReturnRequest());\n  }\n\n  /*\n   * Cancel order return request\n   */\n  cancelOrderReturnRequest(\n    returnRequestCode: string,\n    returnRequestModification: ReturnRequestModification\n  ): void {\n    this.userIdService.invokeWithUserId((userId) => {\n      this.store.dispatch(\n        new UserActions.CancelOrderReturnRequest({\n          userId,\n          returnRequestCode,\n          returnRequestModification,\n        })\n      );\n    });\n  }\n\n  /**\n   * Returns the cancel return request loading flag\n   */\n  getCancelReturnRequestLoading(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessLoadingFactory(CANCEL_RETURN_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns the cancel return request success flag\n   */\n  getCancelReturnRequestSuccess(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessSuccessFactory(CANCEL_RETURN_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Resets the cancel return request process flags\n   */\n  resetCancelReturnRequestProcessState(): void {\n    return this.store.dispatch(new UserActions.ResetCancelReturnProcess());\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { UserIdService } from '../../auth/user-auth/facade/user-id.service';\nimport { Address, Country, Region } from '../../model/address.model';\nimport { StateWithProcess } from '../../process/store/process-state';\nimport { UserActions } from '../store/actions/index';\nimport { UsersSelectors } from '../store/selectors/index';\nimport { StateWithUser } from '../store/user-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserAddressService {\n  constructor(\n    protected store: Store<StateWithUser | StateWithProcess<void>>,\n    protected userIdService: UserIdService\n  ) {}\n\n  /**\n   * Retrieves user's addresses\n   */\n  loadAddresses(): void {\n    this.userIdService.invokeWithUserId((userId) => {\n      this.store.dispatch(new UserActions.LoadUserAddresses(userId));\n    });\n  }\n\n  /**\n   * Adds user address\n   * @param address a user address\n   */\n  addUserAddress(address: Address): void {\n    this.userIdService.invokeWithUserId((userId) => {\n      this.store.dispatch(\n        new UserActions.AddUserAddress({\n          userId,\n          address,\n        })\n      );\n    });\n  }\n\n  /**\n   * Sets user address as default\n   * @param addressId a user address ID\n   */\n  setAddressAsDefault(addressId: string): void {\n    this.userIdService.invokeWithUserId((userId) => {\n      this.store.dispatch(\n        new UserActions.UpdateUserAddress({\n          userId,\n          addressId,\n          address: { defaultAddress: true },\n        })\n      );\n    });\n  }\n\n  /**\n   * Updates existing user address\n   * @param addressId a user address ID\n   * @param address a user address\n   */\n  updateUserAddress(addressId: string, address: Address): void {\n    this.userIdService.invokeWithUserId((userId) => {\n      this.store.dispatch(\n        new UserActions.UpdateUserAddress({\n          userId,\n          addressId,\n          address,\n        })\n      );\n    });\n  }\n\n  /**\n   * Deletes existing user address\n   * @param addressId a user address ID\n   */\n  deleteUserAddress(addressId: string): void {\n    this.userIdService.invokeWithUserId((userId) => {\n      this.store.dispatch(\n        new UserActions.DeleteUserAddress({\n          userId,\n          addressId,\n        })\n      );\n    });\n  }\n\n  /**\n   * Returns addresses\n   */\n  getAddresses(): Observable<Address[]> {\n    return this.store.pipe(select(UsersSelectors.getAddresses));\n  }\n\n  /**\n   * Returns a loading flag for addresses\n   */\n  getAddressesLoading(): Observable<boolean> {\n    return this.store.pipe(select(UsersSelectors.getAddressesLoading));\n  }\n\n  getAddressesLoadedSuccess(): Observable<boolean> {\n    return this.store.pipe(select(UsersSelectors.getAddressesLoadedSuccess));\n  }\n  /**\n   * Retrieves delivery countries\n   */\n  loadDeliveryCountries(): void {\n    this.store.dispatch(new UserActions.LoadDeliveryCountries());\n  }\n\n  /**\n   * Returns all delivery countries\n   */\n  getDeliveryCountries(): Observable<Country[]> {\n    return this.store.pipe(select(UsersSelectors.getAllDeliveryCountries));\n  }\n\n  /**\n   * Returns a country based on the provided `isocode`\n   * @param isocode an isocode for a country\n   */\n  getCountry(isocode: string): Observable<Country> {\n    return this.store.pipe(\n      select(UsersSelectors.countrySelectorFactory(isocode))\n    );\n  }\n\n  /**\n   * Retrieves regions for specified country by `countryIsoCode`\n   * @param countryIsoCode\n   */\n  loadRegions(countryIsoCode: string): void {\n    this.store.dispatch(new UserActions.LoadRegions(countryIsoCode));\n  }\n\n  /**\n   * Clear regions in store - useful when changing country\n   */\n  clearRegions(): void {\n    this.store.dispatch(new UserActions.ClearRegions());\n  }\n\n  /**\n   * Returns all regions\n   */\n  getRegions(countryIsoCode: string): Observable<Region[]> {\n    return this.store.pipe(\n      select(UsersSelectors.getRegionsDataAndLoading),\n      map(({ regions, country, loading, loaded }) => {\n        if (!countryIsoCode && (loading || loaded)) {\n          this.clearRegions();\n          return [];\n        } else if (loading && !loaded) {\n          // don't interrupt loading\n          return [];\n        } else if (!loading && countryIsoCode !== country && countryIsoCode) {\n          // country changed - clear store and load new regions\n          if (country) {\n            this.clearRegions();\n          }\n          this.loadRegions(countryIsoCode);\n          return [];\n        }\n        return regions;\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable, queueScheduler } from 'rxjs';\nimport { filter, map, observeOn, tap } from 'rxjs/operators';\nimport { UserIdService } from '../../auth/user-auth/facade/user-id.service';\nimport { Address } from '../../model/address.model';\nimport { CostCenter } from '../../model/org-unit.model';\nimport { OCC_USER_ID_ANONYMOUS } from '../../occ/utils/occ-constants';\nimport { StateWithProcess } from '../../process/store/process-state';\nimport { LoaderState } from '../../state/utils/loader/loader-state';\nimport { UserActions } from '../store/actions/index';\nimport { UsersSelectors } from '../store/selectors/index';\nimport { StateWithUser } from '../store/user-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserCostCenterService {\n  constructor(\n    protected store: Store<StateWithUser | StateWithProcess<void>>,\n    protected userIdService: UserIdService\n  ) {}\n\n  /**\n   * Load all visible active cost centers for the currently login user\n   */\n  loadActiveCostCenters(): void {\n    this.userIdService.invokeWithUserId((userId) => {\n      if (userId && userId !== OCC_USER_ID_ANONYMOUS) {\n        this.store.dispatch(new UserActions.LoadActiveCostCenters(userId));\n      }\n    });\n  }\n\n  private getCostCentersState(): Observable<LoaderState<CostCenter[]>> {\n    return this.store.select(UsersSelectors.getCostCentersState);\n  }\n\n  /**\n   * Get all visible active cost centers\n   */\n  getActiveCostCenters(): Observable<CostCenter[]> {\n    return this.getCostCentersState().pipe(\n      observeOn(queueScheduler),\n      tap((process: LoaderState<CostCenter[]>) => {\n        if (!(process.loading || process.success || process.error)) {\n          this.loadActiveCostCenters();\n        }\n      }),\n      filter(\n        (process: LoaderState<CostCenter[]>) => process.success || process.error\n      ),\n      map((result) => result.value)\n    );\n  }\n\n  /**\n   * Get the addresses of the cost center's unit based on cost center id\n   * @param costCenterId cost center id\n   */\n  getCostCenterAddresses(costCenterId: string): Observable<Address[]> {\n    return this.getActiveCostCenters().pipe(\n      map((costCenters) => {\n        const costCenter = costCenters.find((cc) => cc.code === costCenterId);\n        if (costCenter && costCenter.unit) {\n          return costCenter.unit.addresses;\n        } else {\n          return [];\n        }\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { UserIdService } from '../../auth/user-auth/facade/user-id.service';\nimport {\n  NotificationType,\n  ProductInterestEntryRelation,\n  ProductInterestSearchResult,\n} from '../../model/product-interest.model';\nimport { StateWithProcess } from '../../process/store/process-state';\nimport {\n  getProcessErrorFactory,\n  getProcessLoadingFactory,\n  getProcessSuccessFactory,\n} from '../../process/store/selectors/process.selectors';\nimport { UserActions } from '../store/actions/index';\nimport { UsersSelectors } from '../store/selectors/index';\nimport {\n  ADD_PRODUCT_INTEREST_PROCESS_ID,\n  REMOVE_PRODUCT_INTERESTS_PROCESS_ID,\n  StateWithUser,\n} from '../store/user-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserInterestsService {\n  constructor(\n    protected store: Store<StateWithUser | StateWithProcess<void>>,\n    protected userIdService: UserIdService\n  ) {}\n\n  /**\n   * Retrieves an product interest list\n   * @param pageSize page size\n   * @param currentPage current page\n   * @param sort sort\n   */\n  loadProductInterests(\n    pageSize?: number,\n    currentPage?: number,\n    sort?: string,\n    productCode?: string,\n    notificationType?: NotificationType\n  ): void {\n    this.userIdService.invokeWithUserId((userId) => {\n      this.store.dispatch(\n        new UserActions.LoadProductInterests({\n          userId,\n          pageSize: pageSize,\n          currentPage: currentPage,\n          sort: sort,\n          productCode: productCode,\n          notificationType: notificationType,\n        })\n      );\n    });\n  }\n\n  /**\n   * Returns product interests\n   */\n  getProductInterests(): Observable<ProductInterestSearchResult> {\n    return this.store.pipe(select(UsersSelectors.getInterests));\n  }\n\n  /**\n   * Returns product interests\n   * @param pageSize the page size\n   */\n  getAndLoadProductInterests(\n    pageSize?: number\n  ): Observable<ProductInterestSearchResult> {\n    return this.store.pipe(\n      select(UsersSelectors.getInterestsState),\n      tap((interestListState) => {\n        const attemptedLoad =\n          interestListState.loading ||\n          interestListState.success ||\n          interestListState.error;\n        if (!attemptedLoad) {\n          this.loadProductInterests(pageSize);\n        }\n      }),\n      map((interestListState) => interestListState.value)\n    );\n  }\n\n  /**\n   * Returns a loading flag for product interests\n   */\n  getProdutInterestsLoading(): Observable<boolean> {\n    return this.store.pipe(select(UsersSelectors.getInterestsLoading));\n  }\n\n  /**\n   * Removes a ProductInterestRelation\n   * @param item product interest relation item\n   * @param singleDelete flag to delete only one interest\n   */\n  removeProdutInterest(\n    item: ProductInterestEntryRelation,\n    singleDelete?: boolean\n  ): void {\n    this.userIdService.invokeWithUserId((userId) => {\n      this.store.dispatch(\n        new UserActions.RemoveProductInterest({\n          userId,\n          item: item,\n          singleDelete: singleDelete,\n        })\n      );\n    });\n  }\n\n  /**\n   * Returns a loading flag for removing product interests.\n   */\n  getRemoveProdutInterestLoading(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessLoadingFactory(REMOVE_PRODUCT_INTERESTS_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns a success flag for removing a product interests.\n   */\n  getRemoveProdutInterestSuccess(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessSuccessFactory(REMOVE_PRODUCT_INTERESTS_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Add a new product interest.\n   *\n   * @param productCode the product code\n   * @param notificationType the notification type\n   */\n  addProductInterest(\n    productCode: string,\n    notificationType: NotificationType\n  ): void {\n    this.userIdService.invokeWithUserId((userId) => {\n      this.store.dispatch(\n        new UserActions.AddProductInterest({\n          userId,\n          productCode: productCode,\n          notificationType: notificationType,\n        })\n      );\n    });\n  }\n\n  /**\n   * Returns a success flag for adding a product interest.\n   */\n  getAddProductInterestSuccess(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessSuccessFactory(ADD_PRODUCT_INTEREST_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns a error flag for adding a product interest.\n   */\n  getAddProductInterestError(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessErrorFactory(ADD_PRODUCT_INTEREST_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Reset product interest adding state.\n   */\n  resetAddInterestState(): void {\n    this.store.dispatch(new UserActions.ResetAddInterestState());\n  }\n\n  /**\n   * Reset product interest removing state.\n   */\n  resetRemoveInterestState(): void {\n    this.store.dispatch(new UserActions.ResetRemoveInterestState());\n  }\n\n  /**\n   * Clears product interests\n   */\n  clearProductInterests(): void {\n    this.store.dispatch(new UserActions.ClearProductInterests());\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { UserIdService } from '../../auth/user-auth/facade/user-id.service';\nimport { NotificationPreference } from '../../model/notification-preference.model';\nimport { StateWithProcess } from '../../process/store/process-state';\nimport { getProcessLoadingFactory } from '../../process/store/selectors/process.selectors';\nimport { UserActions } from '../store/actions/index';\nimport { UsersSelectors } from '../store/selectors/index';\nimport {\n  StateWithUser,\n  UPDATE_NOTIFICATION_PREFERENCES_PROCESS_ID,\n} from '../store/user-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserNotificationPreferenceService {\n  constructor(\n    protected store: Store<StateWithUser | StateWithProcess<void>>,\n    protected userIdService: UserIdService\n  ) {}\n\n  /**\n   * Returns all notification preferences.\n   */\n  getPreferences(): Observable<NotificationPreference[]> {\n    return this.store.pipe(select(UsersSelectors.getPreferences));\n  }\n\n  /**\n   * Returns all enabled notification preferences.\n   */\n  getEnabledPreferences(): Observable<NotificationPreference[]> {\n    return this.store.pipe(select(UsersSelectors.getEnabledPreferences));\n  }\n\n  /**\n   * Loads all notification preferences.\n   */\n  loadPreferences(): void {\n    this.userIdService.invokeWithUserId((userId) => {\n      this.store.dispatch(new UserActions.LoadNotificationPreferences(userId));\n    });\n  }\n\n  /**\n   * Clear all notification preferences.\n   */\n  clearPreferences(): void {\n    this.store.dispatch(new UserActions.ClearNotificationPreferences());\n  }\n\n  /**\n   * Returns a loading flag for notification preferences.\n   */\n  getPreferencesLoading(): Observable<boolean> {\n    return this.store.pipe(select(UsersSelectors.getPreferencesLoading));\n  }\n\n  /**\n   * Updating notification preferences.\n   * @param preferences a preference list\n   */\n  updatePreferences(preferences: NotificationPreference[]): void {\n    this.userIdService.invokeWithUserId((userId) => {\n      this.store.dispatch(\n        new UserActions.UpdateNotificationPreferences({\n          userId,\n          preferences: preferences,\n        })\n      );\n    });\n  }\n\n  /**\n   * Returns a loading flag for updating preferences.\n   */\n  getUpdatePreferencesResultLoading(): Observable<boolean> {\n    return this.store.select(\n      getProcessLoadingFactory(UPDATE_NOTIFICATION_PREFERENCES_PROCESS_ID)\n    );\n  }\n\n  /**\n   * Resets the update notification preferences process state. The state needs to be\n   * reset after the process concludes, regardless if it's a success or an error.\n   */\n  resetNotificationPreferences(): void {\n    this.store.dispatch(new UserActions.ResetNotificationPreferences());\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { map, take, tap } from 'rxjs/operators';\nimport { UserIdService } from '../../auth/user-auth/facade/user-id.service';\nimport { ConsignmentTracking } from '../../model/consignment-tracking.model';\nimport {\n  CancellationRequestEntryInputList,\n  Order,\n  OrderHistoryList,\n} from '../../model/order.model';\nimport { OCC_USER_ID_ANONYMOUS } from '../../occ/utils/occ-constants';\nimport { StateWithProcess } from '../../process/store/process-state';\nimport {\n  getProcessLoadingFactory,\n  getProcessSuccessFactory,\n} from '../../process/store/selectors/process.selectors';\nimport { RoutingService } from '../../routing/facade/routing.service';\nimport { UserActions } from '../store/actions/index';\nimport { UsersSelectors } from '../store/selectors/index';\nimport { CANCEL_ORDER_PROCESS_ID, StateWithUser } from '../store/user-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserOrderService {\n  constructor(\n    protected store: Store<StateWithUser | StateWithProcess<void>>,\n    protected userIdService: UserIdService,\n    protected routingService: RoutingService\n  ) {}\n\n  /**\n   * Returns an order's detail\n   */\n  getOrderDetails(): Observable<Order> {\n    return this.store.pipe(select(UsersSelectors.getOrderDetails));\n  }\n\n  /**\n   * Retrieves order's details\n   *\n   * @param orderCode an order code\n   */\n  loadOrderDetails(orderCode: string): void {\n    this.userIdService.invokeWithUserId((userId) => {\n      this.store.dispatch(\n        new UserActions.LoadOrderDetails({\n          userId,\n          orderCode,\n        })\n      );\n    });\n  }\n\n  /**\n   * Clears order's details\n   */\n  clearOrderDetails(): void {\n    this.store.dispatch(new UserActions.ClearOrderDetails());\n  }\n\n  /**\n   * Returns order history list\n   */\n  getOrderHistoryList(pageSize: number): Observable<OrderHistoryList> {\n    return this.store.pipe(\n      select(UsersSelectors.getOrdersState),\n      tap((orderListState) => {\n        const attemptedLoad =\n          orderListState.loading ||\n          orderListState.success ||\n          orderListState.error;\n        if (!attemptedLoad) {\n          this.loadOrderList(pageSize);\n        }\n      }),\n      map((orderListState) => orderListState.value)\n    );\n  }\n\n  /**\n   * Returns a loaded flag for order history list\n   */\n  getOrderHistoryListLoaded(): Observable<boolean> {\n    return this.store.pipe(select(UsersSelectors.getOrdersLoaded));\n  }\n\n  /**\n   * Retrieves an order list\n   * @param pageSize page size\n   * @param currentPage current page\n   * @param sort sort\n   */\n  loadOrderList(pageSize: number, currentPage?: number, sort?: string): void {\n    this.userIdService.invokeWithUserId((userId) => {\n      if (userId !== OCC_USER_ID_ANONYMOUS) {\n        let replenishmentOrderCode: string;\n\n        this.routingService\n          .getRouterState()\n          .pipe(take(1))\n          .subscribe((data) => {\n            replenishmentOrderCode =\n              data?.state?.params?.replenishmentOrderCode;\n          })\n          .unsubscribe();\n\n        this.store.dispatch(\n          new UserActions.LoadUserOrders({\n            userId,\n            pageSize,\n            currentPage,\n            sort,\n            replenishmentOrderCode,\n          })\n        );\n      }\n    });\n  }\n\n  /**\n   * Cleaning order list\n   */\n  clearOrderList(): void {\n    this.store.dispatch(new UserActions.ClearUserOrders());\n  }\n\n  /**\n   *  Returns a consignment tracking detail\n   */\n  getConsignmentTracking(): Observable<ConsignmentTracking> {\n    return this.store.pipe(select(UsersSelectors.getConsignmentTracking));\n  }\n\n  /**\n   * Retrieves consignment tracking details\n   * @param orderCode an order code\n   * @param consignmentCode a consignment code\n   */\n  loadConsignmentTracking(orderCode: string, consignmentCode: string): void {\n    this.userIdService.invokeWithUserId((userId) => {\n      this.store.dispatch(\n        new UserActions.LoadConsignmentTracking({\n          userId,\n          orderCode,\n          consignmentCode,\n        })\n      );\n    });\n  }\n\n  /**\n   * Cleaning consignment tracking\n   */\n  clearConsignmentTracking(): void {\n    this.store.dispatch(new UserActions.ClearConsignmentTracking());\n  }\n\n  /*\n   * Cancel an order\n   */\n  cancelOrder(\n    orderCode: string,\n    cancelRequestInput: CancellationRequestEntryInputList\n  ): void {\n    this.userIdService.invokeWithUserId((userId) => {\n      this.store.dispatch(\n        new UserActions.CancelOrder({\n          userId,\n          orderCode,\n          cancelRequestInput,\n        })\n      );\n    });\n  }\n\n  /**\n   * Returns the cancel order loading flag\n   */\n  getCancelOrderLoading(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessLoadingFactory(CANCEL_ORDER_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns the cancel order success flag\n   */\n  getCancelOrderSuccess(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessSuccessFactory(CANCEL_ORDER_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Resets the cancel order process flags\n   */\n  resetCancelOrderProcessState(): void {\n    return this.store.dispatch(new UserActions.ResetCancelOrderProcess());\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { UserIdService } from '../../auth/user-auth/facade/user-id.service';\nimport { Country } from '../../model/address.model';\nimport { PaymentDetails } from '../../model/cart.model';\nimport { StateWithProcess } from '../../process/store/process-state';\nimport { UserActions } from '../store/actions/index';\nimport { UsersSelectors } from '../store/selectors/index';\nimport { StateWithUser } from '../store/user-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserPaymentService {\n  constructor(\n    protected store: Store<StateWithUser | StateWithProcess<void>>,\n    protected userIdService: UserIdService\n  ) {}\n\n  /**\n   * Loads all user's payment methods.\n   */\n  loadPaymentMethods(): void {\n    this.userIdService.invokeWithUserId((userId) => {\n      this.store.dispatch(new UserActions.LoadUserPaymentMethods(userId));\n    });\n  }\n\n  /**\n   * Returns all user's payment methods\n   */\n  getPaymentMethods(): Observable<PaymentDetails[]> {\n    return this.store.pipe(select(UsersSelectors.getPaymentMethods));\n  }\n\n  /**\n   * Returns a loading flag for payment methods\n   */\n  getPaymentMethodsLoading(): Observable<boolean> {\n    return this.store.pipe(select(UsersSelectors.getPaymentMethodsLoading));\n  }\n\n  getPaymentMethodsLoadedSuccess(): Observable<boolean> {\n    return this.store.pipe(\n      select(UsersSelectors.getPaymentMethodsLoadedSuccess)\n    );\n  }\n  /**\n   * Sets the payment as a default one\n   * @param paymentMethodId a payment method ID\n   */\n  setPaymentMethodAsDefault(paymentMethodId: string): void {\n    this.userIdService.invokeWithUserId((userId) => {\n      this.store.dispatch(\n        new UserActions.SetDefaultUserPaymentMethod({\n          userId,\n          paymentMethodId,\n        })\n      );\n    });\n  }\n\n  /**\n   * Deletes the payment method\n   *\n   * @param paymentMethodId a payment method ID\n   */\n  deletePaymentMethod(paymentMethodId: string): void {\n    this.userIdService.invokeWithUserId((userId) => {\n      this.store.dispatch(\n        new UserActions.DeleteUserPaymentMethod({\n          userId,\n          paymentMethodId,\n        })\n      );\n    });\n  }\n\n  /**\n   * Returns all billing countries\n   */\n  getAllBillingCountries(): Observable<Country[]> {\n    return this.store.pipe(select(UsersSelectors.getAllBillingCountries));\n  }\n\n  /**\n   * Retrieves billing countries\n   */\n  loadBillingCountries(): void {\n    this.store.dispatch(new UserActions.LoadBillingCountries());\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { UserIdService } from '../../auth/user-auth/facade/user-id.service';\nimport {\n  ReplenishmentOrder,\n  ReplenishmentOrderList,\n} from '../../model/replenishment-order.model';\nimport { OCC_USER_ID_ANONYMOUS } from '../../occ/utils/occ-constants';\nimport { StateWithProcess } from '../../process/store/process-state';\nimport {\n  getProcessErrorFactory,\n  getProcessLoadingFactory,\n  getProcessSuccessFactory,\n} from '../../process/store/selectors/process.selectors';\nimport { UserActions } from '../store/actions/index';\nimport { UsersSelectors } from '../store/selectors/index';\nimport {\n  CANCEL_REPLENISHMENT_ORDER_PROCESS_ID,\n  StateWithUser,\n} from '../store/user-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserReplenishmentOrderService {\n  constructor(\n    protected store: Store<StateWithUser | StateWithProcess<void>>,\n    protected userIdService: UserIdService\n  ) {}\n\n  /**\n   * Returns replenishment order details for a given 'current' user\n   *\n   * @param replenishmentOrderCode a replenishment order code\n   */\n  loadReplenishmentOrderDetails(replenishmentOrderCode: string): void {\n    this.userIdService.invokeWithUserId((userId) => {\n      if (userId !== OCC_USER_ID_ANONYMOUS) {\n        this.store.dispatch(\n          new UserActions.LoadReplenishmentOrderDetails({\n            userId,\n            replenishmentOrderCode,\n          })\n        );\n      }\n    });\n  }\n\n  /**\n   * Returns a replenishment order details\n   */\n  getReplenishmentOrderDetails(): Observable<ReplenishmentOrder> {\n    return this.store.pipe(\n      select(UsersSelectors.getReplenishmentOrderDetailsValue)\n    );\n  }\n\n  /**\n   * Returns a replenishment order details loading flag\n   */\n  getReplenishmentOrderDetailsLoading(): Observable<boolean> {\n    return this.store.pipe(\n      select(UsersSelectors.getReplenishmentOrderDetailsLoading)\n    );\n  }\n\n  /**\n   * Returns a replenishment order details success flag\n   */\n  getReplenishmentOrderDetailsSuccess(): Observable<boolean> {\n    return this.store.pipe(\n      select(UsersSelectors.getReplenishmentOrderDetailsSuccess)\n    );\n  }\n\n  /**\n   * Returns a replenishment order details error flag\n   */\n  getReplenishmentOrderDetailsError(): Observable<boolean> {\n    return this.store.pipe(\n      select(UsersSelectors.getReplenishmentOrderDetailsError)\n    );\n  }\n\n  /**\n   * Clears the replenishment orders details state\n   */\n  clearReplenishmentOrderDetails(): void {\n    this.store.dispatch(new UserActions.ClearReplenishmentOrderDetails());\n  }\n\n  /**\n   * Cancels a specific replenishment order for a given 'current' user\n   *\n   * @param replenishmentOrderCode a replenishment order code\n   */\n  cancelReplenishmentOrder(replenishmentOrderCode: string): void {\n    this.userIdService.invokeWithUserId((userId) => {\n      if (userId !== OCC_USER_ID_ANONYMOUS) {\n        this.store.dispatch(\n          new UserActions.CancelReplenishmentOrder({\n            userId,\n            replenishmentOrderCode,\n          })\n        );\n      }\n    });\n  }\n\n  /**\n   * Returns the cancel replenishment order loading flag\n   */\n  getCancelReplenishmentOrderLoading(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessLoadingFactory(CANCEL_REPLENISHMENT_ORDER_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns the cancel replenishment order success flag\n   */\n  getCancelReplenishmentOrderSuccess(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessSuccessFactory(CANCEL_REPLENISHMENT_ORDER_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Returns the cancel replenishment order error flag\n   */\n  getCancelReplenishmentOrderError(): Observable<boolean> {\n    return this.store.pipe(\n      select(getProcessErrorFactory(CANCEL_REPLENISHMENT_ORDER_PROCESS_ID))\n    );\n  }\n\n  /**\n   * Clears the cancel replenishment order processing state\n   */\n  clearCancelReplenishmentOrderProcessState(): void {\n    this.store.dispatch(new UserActions.ClearCancelReplenishmentOrder());\n  }\n\n  /**\n   * Returns replenishment order history list\n   */\n  getReplenishmentOrderHistoryList(\n    pageSize: number\n  ): Observable<ReplenishmentOrderList> {\n    return this.store.pipe(\n      select(UsersSelectors.getReplenishmentOrdersState),\n      tap((replenishmentOrderListState) => {\n        const attemptedLoad =\n          replenishmentOrderListState.loading ||\n          replenishmentOrderListState.success ||\n          replenishmentOrderListState.error;\n        if (!attemptedLoad) {\n          this.loadReplenishmentOrderList(pageSize);\n        }\n      }),\n      map((replenishmentOrderListState) => replenishmentOrderListState.value)\n    );\n  }\n\n  /**\n   * Returns a loading flag for replenishment order history list\n   */\n  getReplenishmentOrderHistoryListLoading(): Observable<boolean> {\n    return this.store.pipe(\n      select(UsersSelectors.getReplenishmentOrdersLoading)\n    );\n  }\n\n  /**\n   * Returns a error flag for replenishment order history list\n   */\n  getReplenishmentOrderHistoryListError(): Observable<boolean> {\n    return this.store.pipe(select(UsersSelectors.getReplenishmentOrdersError));\n  }\n\n  /**\n   * Returns a success flag for replenishment order history list\n   */\n  getReplenishmentOrderHistoryListSuccess(): Observable<boolean> {\n    return this.store.pipe(\n      select(UsersSelectors.getReplenishmentOrdersSuccess)\n    );\n  }\n\n  /**\n   * Retrieves a replenishment order list\n   * @param pageSize page size\n   * @param currentPage current page\n   * @param sort sort\n   */\n  loadReplenishmentOrderList(\n    pageSize?: number,\n    currentPage?: number,\n    sort?: string\n  ): void {\n    this.userIdService.invokeWithUserId((userId) => {\n      if (userId !== OCC_USER_ID_ANONYMOUS) {\n        this.store.dispatch(\n          new UserActions.LoadUserReplenishmentOrders({\n            userId,\n            pageSize,\n            currentPage,\n            sort,\n          })\n        );\n      }\n    });\n  }\n\n  /**\n   * Cleaning replenishment order list\n   */\n  clearReplenishmentOrderList(): void {\n    this.store.dispatch(new UserActions.ClearUserReplenishmentOrders());\n  }\n}\n","import { UserActions } from '../actions/index';\nimport { BillingCountriesState } from '../user-state';\n\nexport const initialState: BillingCountriesState = {\n  entities: {},\n};\n\nexport function reducer(\n  state = initialState,\n  action: UserActions.BillingCountriesAction | UserActions.ClearUserMiscsData\n): BillingCountriesState {\n  switch (action.type) {\n    case UserActions.LOAD_BILLING_COUNTRIES_SUCCESS: {\n      const billingCountries = action.payload;\n      const entities = billingCountries.reduce(\n        (countryEntities: { [isocode: string]: any }, name: any) => {\n          return {\n            ...countryEntities,\n            [name.isocode]: name,\n          };\n        },\n        {\n          ...state.entities,\n        }\n      );\n\n      return {\n        ...state,\n        entities,\n      };\n    }\n\n    case UserActions.CLEAR_USER_MISCS_DATA: {\n      return initialState;\n    }\n  }\n\n  return state;\n}\n","import { ConsignmentTracking } from '../../../model/index';\nimport { UserActions } from '../actions/index';\nimport { ConsignmentTrackingState } from '../user-state';\n\nexport const initialState: ConsignmentTrackingState = {};\n\nexport function reducer(\n  state = initialState,\n  action: UserActions.ConsignmentTrackingAction\n): ConsignmentTrackingState {\n  switch (action.type) {\n    case UserActions.LOAD_CONSIGNMENT_TRACKING_SUCCESS: {\n      const tracking: ConsignmentTracking = action.payload;\n      return {\n        tracking,\n      };\n    }\n    case UserActions.CLEAR_CONSIGNMENT_TRACKING: {\n      return initialState;\n    }\n  }\n  return state;\n}\n","import * as fromActions from '../actions/customer-coupon.action';\nimport {\n  CustomerCoupon,\n  CustomerCouponSearchResult,\n} from '../../../model/customer-coupon.model';\n\nexport const initialState: CustomerCouponSearchResult = {\n  coupons: [],\n  sorts: [],\n  pagination: {},\n};\nexport function reducer(\n  state = initialState,\n  action: fromActions.CustomerCouponAction\n): CustomerCouponSearchResult {\n  switch (action.type) {\n    case fromActions.LOAD_CUSTOMER_COUPONS_SUCCESS: {\n      return action.payload;\n    }\n\n    case fromActions.SUBSCRIBE_CUSTOMER_COUPON_SUCCESS: {\n      const updatedCustomerCoupon = action.payload.coupon;\n      const customerCoupons = new Array<CustomerCoupon>(state.coupons.length);\n      state.coupons.forEach((customerCoupon: CustomerCoupon, index) =>\n        customerCoupon.couponId === updatedCustomerCoupon.couponId\n          ? (customerCoupons[index] = updatedCustomerCoupon)\n          : (customerCoupons[index] = customerCoupon)\n      );\n      return { ...state, coupons: customerCoupons };\n    }\n\n    case fromActions.UNSUBSCRIBE_CUSTOMER_COUPON_SUCCESS: {\n      const updatedCouponCode = action.payload;\n      const customerCoupons = new Array<CustomerCoupon>(state.coupons.length);\n      state.coupons.forEach((customerCoupon: CustomerCoupon, index) =>\n        customerCoupon.couponId === updatedCouponCode\n          ? (customerCoupons[index] = {\n              ...customerCoupon,\n              notificationOn: false,\n            })\n          : (customerCoupons[index] = customerCoupon)\n      );\n      return { ...state, coupons: customerCoupons };\n    }\n  }\n  return state;\n}\n","import { Country } from '../../../model/address.model';\nimport { UserActions } from '../actions/index';\nimport { DeliveryCountriesState } from '../user-state';\n\nexport const initialState: DeliveryCountriesState = {\n  entities: {},\n};\n\nexport function reducer(\n  state = initialState,\n  action: UserActions.DeliveryCountriesAction | UserActions.ClearUserMiscsData\n): DeliveryCountriesState {\n  switch (action.type) {\n    case UserActions.LOAD_DELIVERY_COUNTRIES_SUCCESS: {\n      const deliveryCountries = action.payload;\n      const entities = deliveryCountries.reduce(\n        (countryEntities: { [isocode: string]: Country }, country: Country) => {\n          return {\n            ...countryEntities,\n            [country.isocode]: country,\n          };\n        },\n        {\n          ...state.entities,\n        }\n      );\n\n      return {\n        ...state,\n        entities,\n      };\n    }\n\n    case UserActions.CLEAR_USER_MISCS_DATA: {\n      return initialState;\n    }\n  }\n\n  return state;\n}\n","import { NotificationPreference } from '../../../model';\nimport { UserActions } from '../actions/index';\n\nexport const initialState: NotificationPreference[] = [];\n\nexport function reducer(\n  state = initialState,\n  action: UserActions.NotificationPreferenceAction\n): NotificationPreference[] {\n  switch (action.type) {\n    case UserActions.LOAD_NOTIFICATION_PREFERENCES_FAIL: {\n      return initialState;\n    }\n\n    case UserActions.LOAD_NOTIFICATION_PREFERENCES_SUCCESS:\n    case UserActions.UPDATE_NOTIFICATION_PREFERENCES_SUCCESS: {\n      return action.payload ? action.payload : initialState;\n    }\n  }\n\n  return state;\n}\n","import { Order } from '../../../model/order.model';\nimport { UserActions } from '../actions/index';\n\nexport const initialState: Order = {};\n\nexport function reducer(\n  state = initialState,\n  action: UserActions.OrderDetailsAction\n): Order {\n  switch (action.type) {\n    case UserActions.LOAD_ORDER_DETAILS_SUCCESS: {\n      const order: Order = action.payload;\n      return order;\n    }\n  }\n  return state;\n}\n","import { ReturnRequestList } from '../../../model/order.model';\nimport { UserActions } from '../actions/index';\n\nexport const initialState: ReturnRequestList = {\n  returnRequests: [],\n  pagination: {},\n  sorts: [],\n};\n\nexport function reducer(\n  state = initialState,\n  action: UserActions.OrderReturnRequestAction\n): ReturnRequestList {\n  switch (action.type) {\n    case UserActions.LOAD_ORDER_RETURN_REQUEST_LIST_SUCCESS: {\n      return action.payload ? action.payload : initialState;\n    }\n  }\n\n  return state;\n}\n","import { PaymentDetails } from '../../../model/cart.model';\nimport { UserActions } from '../actions/index';\n\nexport const initialState: PaymentDetails[] = [];\n\nexport function reducer(\n  state = initialState,\n  action: UserActions.UserPaymentMethodsAction\n): PaymentDetails[] {\n  switch (action.type) {\n    case UserActions.LOAD_USER_PAYMENT_METHODS_SUCCESS: {\n      return action.payload ? action.payload : initialState;\n    }\n\n    case UserActions.LOAD_USER_PAYMENT_METHODS_FAIL: {\n      return initialState;\n    }\n  }\n  return state;\n}\n","import { UserActions } from '../actions/index';\nimport { ProductInterestSearchResult } from '../../../model/product-interest.model';\n\nexport const initialState: ProductInterestSearchResult = {\n  results: [],\n  pagination: {},\n  sorts: [],\n};\n\nexport function reducer(\n  state = initialState,\n  action: UserActions.ProductInterestsAction\n): ProductInterestSearchResult {\n  switch (action.type) {\n    case UserActions.LOAD_PRODUCT_INTERESTS_SUCCESS: {\n      return action.payload ? action.payload : initialState;\n    }\n    case UserActions.LOAD_PRODUCT_INTERESTS_FAIL: {\n      return initialState;\n    }\n  }\n  return state;\n}\n","import { Region } from '../../../model/address.model';\nimport { UserActions } from '../actions/index';\nimport { RegionsState } from '../user-state';\n\nexport const initialState: RegionsState = {\n  entities: [],\n  country: null,\n};\n\nexport function reducer(\n  state = initialState,\n  action: UserActions.RegionsAction | UserActions.ClearUserMiscsData\n): RegionsState {\n  switch (action.type) {\n    case UserActions.LOAD_REGIONS_SUCCESS: {\n      const entities: Region[] = action.payload.entities;\n      const country: string = action.payload.country;\n      if (entities || country) {\n        return {\n          ...state,\n          entities,\n          country,\n        };\n      }\n      return initialState;\n    }\n  }\n\n  return state;\n}\n","import { ReplenishmentOrder } from '../../../model/replenishment-order.model';\nimport { UserActions } from '../actions/index';\n\nexport const initialState: ReplenishmentOrder = {};\n\nexport function reducer(\n  state = initialState,\n  action: UserActions.ReplenishmentOrderDetailsAction\n): ReplenishmentOrder {\n  switch (action.type) {\n    case UserActions.LOAD_REPLENISHMENT_ORDER_DETAILS_SUCCESS:\n    case UserActions.CANCEL_REPLENISHMENT_ORDER_SUCCESS: {\n      return action.payload ? action.payload : initialState;\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","import { UserActions } from '../actions/index';\n\nexport const initialState = false;\n\nexport function reducer(\n  state = initialState,\n  action: UserActions.ResetPasswordAction\n): boolean {\n  switch (action.type) {\n    case UserActions.RESET_PASSWORD_SUCCESS: {\n      return true;\n    }\n  }\n  return state;\n}\n","import { Title } from '../../../model/misc.model';\nimport { UserActions } from '../actions/index';\nimport { TitlesState } from '../user-state';\n\nexport const initialState: TitlesState = {\n  entities: {},\n};\n\nexport function reducer(\n  state = initialState,\n  action: UserActions.TitlesAction | UserActions.ClearUserMiscsData\n): TitlesState {\n  switch (action.type) {\n    case UserActions.LOAD_TITLES_SUCCESS: {\n      const titles = action.payload;\n      const entities = titles.reduce(\n        (titleEntities: { [code: string]: Title }, name: Title) => {\n          return {\n            ...titleEntities,\n            [name.code]: name,\n          };\n        },\n        {\n          ...state.entities,\n        }\n      );\n\n      return {\n        ...state,\n        entities,\n      };\n    }\n\n    case UserActions.CLEAR_USER_MISCS_DATA: {\n      return initialState;\n    }\n  }\n\n  return state;\n}\n","import { Address } from '../../../model/address.model';\nimport { UserActions } from '../actions/index';\n\nexport const initialState: Address[] = [];\n\nexport function reducer(\n  state = initialState,\n  action: UserActions.UserAddressesAction\n): Address[] {\n  switch (action.type) {\n    case UserActions.LOAD_USER_ADDRESSES_FAIL: {\n      return initialState;\n    }\n\n    case UserActions.LOAD_USER_ADDRESSES_SUCCESS: {\n      return action.payload ? action.payload : initialState;\n    }\n  }\n  return state;\n}\n","import { ConsentTemplate } from '../../../model/consent.model';\nimport { UserActions } from '../actions/index';\n\nexport const initialState: ConsentTemplate[] = [];\n\nexport function reducer(\n  state = initialState,\n  action: UserActions.UserConsentsAction\n): ConsentTemplate[] {\n  switch (action.type) {\n    case UserActions.LOAD_USER_CONSENTS_SUCCESS: {\n      const consents = action.payload;\n      return consents ? consents : initialState;\n    }\n\n    case UserActions.GIVE_USER_CONSENT_SUCCESS: {\n      const updatedConsentTemplate = action.consentTemplate;\n      return state.map((consentTemplate) =>\n        consentTemplate.id === updatedConsentTemplate.id\n          ? updatedConsentTemplate\n          : consentTemplate\n      );\n    }\n  }\n\n  return state;\n}\n","import { CostCenter } from '../../../model/org-unit.model';\nimport { UserActions } from '../actions/index';\n\nexport const initialState: CostCenter[] = [];\n\nexport function reducer(\n  state = initialState,\n  action: UserActions.UserCostCenterAction\n): CostCenter[] {\n  switch (action.type) {\n    case UserActions.LOAD_ACTIVE_COST_CENTERS_FAIL: {\n      return initialState;\n    }\n\n    case UserActions.LOAD_ACTIVE_COST_CENTERS_SUCCESS: {\n      return action.payload ? action.payload : initialState;\n    }\n  }\n  return state;\n}\n","import { User } from '../../../model/misc.model';\nimport { UserActions } from '../actions/index';\n\nexport const initialState: User = <User>{};\n\nexport function reducer(\n  state = initialState,\n  action: UserActions.UserDetailsAction | UserActions.EmailActions\n): User {\n  switch (action.type) {\n    case UserActions.LOAD_USER_DETAILS_SUCCESS: {\n      return action.payload;\n    }\n\n    case UserActions.UPDATE_USER_DETAILS_SUCCESS: {\n      const updatedDetails: User = {\n        ...state,\n        ...action.userUpdates,\n      };\n      return {\n        ...updatedDetails,\n        name: `${updatedDetails.firstName} ${updatedDetails.lastName}`,\n      };\n    }\n  }\n\n  return state;\n}\n","import { OrderHistoryList } from '../../../model/order.model';\nimport { UserActions } from '../actions/index';\n\nexport const initialState: OrderHistoryList = {\n  orders: [],\n  pagination: {},\n  sorts: [],\n};\n\nexport function reducer(\n  state = initialState,\n  action: UserActions.UserOrdersAction\n): OrderHistoryList {\n  switch (action.type) {\n    case UserActions.LOAD_USER_ORDERS_SUCCESS: {\n      return action.payload ? action.payload : initialState;\n    }\n    case UserActions.LOAD_USER_ORDERS_FAIL: {\n      return initialState;\n    }\n  }\n\n  return state;\n}\n","import {\n  ReplenishmentOrder,\n  ReplenishmentOrderList,\n} from '../../../model/replenishment-order.model';\nimport { UserActions } from '../actions/index';\nexport const initialState: ReplenishmentOrderList = {\n  replenishmentOrders: [],\n  pagination: {},\n  sorts: [],\n};\n\nexport function reducer(\n  state = initialState,\n  action:\n    | UserActions.UserReplenishmentOrdersAction\n    | UserActions.ReplenishmentOrderDetailsAction\n): ReplenishmentOrderList {\n  switch (action.type) {\n    case UserActions.LOAD_USER_REPLENISHMENT_ORDERS_SUCCESS: {\n      return action.payload ? action.payload : initialState;\n    }\n\n    case UserActions.CANCEL_REPLENISHMENT_ORDER_SUCCESS: {\n      const cancelledReplenishmentOrder = action.payload;\n      const userReplenishmentOrders = [...state.replenishmentOrders];\n\n      const index = userReplenishmentOrders.findIndex(\n        (replenishmentOrder: ReplenishmentOrder) =>\n          replenishmentOrder.replenishmentOrderCode ===\n          cancelledReplenishmentOrder.replenishmentOrderCode\n      );\n\n      if (index === -1) {\n        return initialState;\n      } else {\n        userReplenishmentOrders[index] = {\n          ...cancelledReplenishmentOrder,\n        };\n      }\n\n      return { ...state, replenishmentOrders: userReplenishmentOrders };\n    }\n  }\n  return state;\n}\n","import { InjectionToken, Provider } from '@angular/core';\nimport {\n  ActionReducer,\n  ActionReducerMap,\n  combineReducers,\n  MetaReducer,\n} from '@ngrx/store';\nimport { AuthActions } from '../../../auth/user-auth/store/actions/index';\nimport { Address } from '../../../model/address.model';\nimport { PaymentDetails } from '../../../model/cart.model';\nimport { ConsentTemplate } from '../../../model/consent.model';\nimport { CustomerCouponSearchResult } from '../../../model/customer-coupon.model';\nimport { NotificationPreference } from '../../../model/notification-preference.model';\nimport {\n  Order,\n  OrderHistoryList,\n  ReturnRequest,\n  ReturnRequestList,\n} from '../../../model/order.model';\nimport { CostCenter } from '../../../model/org-unit.model';\nimport { ProductInterestSearchResult } from '../../../model/product-interest.model';\nimport {\n  ReplenishmentOrder,\n  ReplenishmentOrderList,\n} from '../../../model/replenishment-order.model';\nimport { loaderReducer } from '../../../state/utils/loader/loader.reducer';\nimport {\n  CUSTOMER_COUPONS,\n  NOTIFICATION_PREFERENCES,\n  PRODUCT_INTERESTS,\n  REGIONS,\n  RegionsState,\n  UserState,\n  USER_ADDRESSES,\n  USER_CONSENTS,\n  USER_COST_CENTERS,\n  USER_ORDERS,\n  USER_ORDER_DETAILS,\n  USER_PAYMENT_METHODS,\n  USER_REPLENISHMENT_ORDERS,\n  USER_REPLENISHMENT_ORDER_DETAILS,\n  USER_RETURN_REQUESTS,\n  USER_RETURN_REQUEST_DETAILS,\n} from '../user-state';\nimport * as fromBillingCountriesReducer from './billing-countries.reducer';\nimport * as fromConsignmentTrackingReducer from './consignment-tracking.reducer';\nimport * as fromCustomerCouponReducer from './customer-coupon.reducer';\nimport * as fromDeliveryCountries from './delivery-countries.reducer';\nimport * as fromNotificationPreferenceReducer from './notification-preference.reducer';\nimport * as fromOrderDetailsReducer from './order-details.reducer';\nimport * as fromOrderReturnRequestReducer from './order-return-request.reducer';\nimport * as fromPaymentReducer from './payment-methods.reducer';\nimport * as fromInterestsReducer from './product-interests.reducer';\nimport * as fromRegionsReducer from './regions.reducer';\nimport * as fromReplenishmentOrderDetailsReducer from './replenishment-order-details.reducer';\nimport * as fromResetPasswordReducer from './reset-password.reducer';\nimport * as fromTitlesReducer from './titles.reducer';\nimport * as fromAddressesReducer from './user-addresses.reducer';\nimport * as fromUserConsentsReducer from './user-consents.reducer';\nimport * as fromCostCenterReducer from './user-cost-center.reducer';\nimport * as fromUserDetailsReducer from './user-details.reducer';\nimport * as fromUserOrdersReducer from './user-orders.reducer';\nimport * as fromUserReplenishmentOrdersReducer from './user-replenishment-orders.reducer';\n\nexport function getReducers(): ActionReducerMap<UserState> {\n  return {\n    account: combineReducers({\n      details: fromUserDetailsReducer.reducer,\n    }),\n    addresses: loaderReducer<Address[]>(\n      USER_ADDRESSES,\n      fromAddressesReducer.reducer\n    ),\n    billingCountries: fromBillingCountriesReducer.reducer,\n    consents: loaderReducer<ConsentTemplate[]>(\n      USER_CONSENTS,\n      fromUserConsentsReducer.reducer\n    ),\n    payments: loaderReducer<PaymentDetails[]>(\n      USER_PAYMENT_METHODS,\n      fromPaymentReducer.reducer\n    ),\n    orders: loaderReducer<OrderHistoryList>(\n      USER_ORDERS,\n      fromUserOrdersReducer.reducer\n    ),\n    order: loaderReducer<Order>(\n      USER_ORDER_DETAILS,\n      fromOrderDetailsReducer.reducer\n    ),\n    replenishmentOrders: loaderReducer<ReplenishmentOrderList>(\n      USER_REPLENISHMENT_ORDERS,\n      fromUserReplenishmentOrdersReducer.reducer\n    ),\n    orderReturn: loaderReducer<ReturnRequest>(USER_RETURN_REQUEST_DETAILS),\n    orderReturnList: loaderReducer<ReturnRequestList>(\n      USER_RETURN_REQUESTS,\n      fromOrderReturnRequestReducer.reducer\n    ),\n    countries: fromDeliveryCountries.reducer,\n    titles: fromTitlesReducer.reducer,\n    regions: loaderReducer<RegionsState>(REGIONS, fromRegionsReducer.reducer),\n    resetPassword: fromResetPasswordReducer.reducer,\n    consignmentTracking: fromConsignmentTrackingReducer.reducer,\n    customerCoupons: loaderReducer<CustomerCouponSearchResult>(\n      CUSTOMER_COUPONS,\n      fromCustomerCouponReducer.reducer\n    ),\n    notificationPreferences: loaderReducer<NotificationPreference[]>(\n      NOTIFICATION_PREFERENCES,\n      fromNotificationPreferenceReducer.reducer\n    ),\n    productInterests: loaderReducer<ProductInterestSearchResult>(\n      PRODUCT_INTERESTS,\n      fromInterestsReducer.reducer\n    ),\n    costCenters: loaderReducer<CostCenter[]>(\n      USER_COST_CENTERS,\n      fromCostCenterReducer.reducer\n    ),\n    replenishmentOrder: loaderReducer<ReplenishmentOrder>(\n      USER_REPLENISHMENT_ORDER_DETAILS,\n      fromReplenishmentOrderDetailsReducer.reducer\n    ),\n  };\n}\n\nexport const reducerToken: InjectionToken<ActionReducerMap<\n  UserState\n>> = new InjectionToken<ActionReducerMap<UserState>>('UserReducers');\n\nexport const reducerProvider: Provider = {\n  provide: reducerToken,\n  useFactory: getReducers,\n};\n\nexport function clearUserState(\n  reducer: ActionReducer<any>\n): ActionReducer<any> {\n  return function (state, action) {\n    if (action.type === AuthActions.LOGOUT) {\n      state = undefined;\n    }\n\n    return reducer(state, action);\n  };\n}\n\nexport const metaReducers: MetaReducer<any>[] = [clearUserState];\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { CountryType } from '../../../model/address.model';\nimport { SiteConnector } from '../../../site-context/connectors/site.connector';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { UserActions } from '../actions/index';\n\n@Injectable()\nexport class BillingCountriesEffect {\n  @Effect()\n  loadBillingCountries$: Observable<\n    UserActions.BillingCountriesAction\n  > = this.actions$.pipe(\n    ofType(UserActions.LOAD_BILLING_COUNTRIES),\n    switchMap(() => {\n      return this.siteConnector.getCountries(CountryType.BILLING).pipe(\n        map(\n          (countries) => new UserActions.LoadBillingCountriesSuccess(countries)\n        ),\n        catchError((error) =>\n          of(\n            new UserActions.LoadBillingCountriesFail(normalizeHttpError(error))\n          )\n        )\n      );\n    })\n  );\n\n  constructor(\n    private actions$: Actions,\n    private siteConnector: SiteConnector\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SiteContextActions } from '../../../site-context/store/actions/index';\nimport { UserActions } from '../actions/index';\n\n@Injectable()\nexport class ClearMiscsDataEffect {\n  @Effect()\n  clearMiscsData$: Observable<Action> = this.actions$.pipe(\n    ofType(\n      SiteContextActions.LANGUAGE_CHANGE,\n      SiteContextActions.CURRENCY_CHANGE\n    ),\n    map(() => {\n      return new UserActions.ClearUserMiscsData();\n    })\n  );\n\n  constructor(private actions$: Actions) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { ConsignmentTracking } from '../../../model/consignment-tracking.model';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { UserOrderConnector } from '../../connectors/order/user-order.connector';\nimport { UserActions } from '../actions/index';\n\n@Injectable()\nexport class ConsignmentTrackingEffects {\n  @Effect()\n  loadConsignmentTracking$: Observable<\n    UserActions.ConsignmentTrackingAction\n  > = this.actions$.pipe(\n    ofType(UserActions.LOAD_CONSIGNMENT_TRACKING),\n    map((action: UserActions.LoadConsignmentTracking) => action.payload),\n    switchMap((payload) => {\n      return this.userOrderConnector\n        .getConsignmentTracking(\n          payload.orderCode,\n          payload.consignmentCode,\n          payload.userId\n        )\n        .pipe(\n          map(\n            (tracking: ConsignmentTracking) =>\n              new UserActions.LoadConsignmentTrackingSuccess(tracking)\n          ),\n          catchError((error) =>\n            of(\n              new UserActions.LoadConsignmentTrackingFail(\n                normalizeHttpError(error)\n              )\n            )\n          )\n        );\n    })\n  );\n\n  constructor(\n    private actions$: Actions,\n    private userOrderConnector: UserOrderConnector\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, mergeMap } from 'rxjs/operators';\nimport * as fromCustomerCouponsAction from '../actions/customer-coupon.action';\nimport { CustomerCouponConnector } from '../../connectors/customer-coupon/customer-coupon.connector';\nimport { CustomerCouponSearchResult } from '../../../model/customer-coupon.model';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\n\n@Injectable()\nexport class CustomerCouponEffects {\n  @Effect()\n  loadCustomerCoupons$: Observable<\n    fromCustomerCouponsAction.CustomerCouponAction\n  > = this.actions$.pipe(\n    ofType(fromCustomerCouponsAction.LOAD_CUSTOMER_COUPONS),\n    map(\n      (action: fromCustomerCouponsAction.LoadCustomerCoupons) => action.payload\n    ),\n    mergeMap((payload) => {\n      return this.customerCouponConnector\n        .getCustomerCoupons(\n          payload.userId,\n          payload.pageSize,\n          payload.currentPage,\n          payload.sort\n        )\n        .pipe(\n          map((coupons: CustomerCouponSearchResult) => {\n            return new fromCustomerCouponsAction.LoadCustomerCouponsSuccess(\n              coupons\n            );\n          }),\n          catchError((error) =>\n            of(\n              new fromCustomerCouponsAction.LoadCustomerCouponsFail(\n                normalizeHttpError(error)\n              )\n            )\n          )\n        );\n    })\n  );\n\n  @Effect()\n  subscribeCustomerCoupon$: Observable<\n    fromCustomerCouponsAction.CustomerCouponAction\n  > = this.actions$.pipe(\n    ofType(fromCustomerCouponsAction.SUBSCRIBE_CUSTOMER_COUPON),\n    map(\n      (action: fromCustomerCouponsAction.SubscribeCustomerCoupon) =>\n        action.payload\n    ),\n    mergeMap((payload) => {\n      return this.customerCouponConnector\n        .turnOnNotification(payload.userId, payload.couponCode)\n        .pipe(\n          map((data: any) => {\n            return new fromCustomerCouponsAction.SubscribeCustomerCouponSuccess(\n              data\n            );\n          }),\n          catchError((error) =>\n            of(\n              new fromCustomerCouponsAction.SubscribeCustomerCouponFail(\n                normalizeHttpError(error)\n              )\n            )\n          )\n        );\n    })\n  );\n\n  @Effect()\n  unsubscribeCustomerCoupon$: Observable<\n    fromCustomerCouponsAction.CustomerCouponAction\n  > = this.actions$.pipe(\n    ofType(fromCustomerCouponsAction.UNSUBSCRIBE_CUSTOMER_COUPON),\n    map(\n      (action: fromCustomerCouponsAction.UnsubscribeCustomerCoupon) =>\n        action.payload\n    ),\n    mergeMap((payload) => {\n      return this.customerCouponConnector\n        .turnOffNotification(payload.userId, payload.couponCode)\n        .pipe(\n          map(() => {\n            return new fromCustomerCouponsAction.UnsubscribeCustomerCouponSuccess(\n              payload.couponCode\n            );\n          }),\n          catchError((error) =>\n            of(\n              new fromCustomerCouponsAction.UnsubscribeCustomerCouponFail(\n                normalizeHttpError(error)\n              )\n            )\n          )\n        );\n    })\n  );\n\n  @Effect()\n  claimCustomerCoupon$: Observable<\n    fromCustomerCouponsAction.CustomerCouponAction\n  > = this.actions$.pipe(\n    ofType(fromCustomerCouponsAction.CLAIM_CUSTOMER_COUPON),\n    map(\n      (action: fromCustomerCouponsAction.ClaimCustomerCoupon) => action.payload\n    ),\n    mergeMap((payload) => {\n      return this.customerCouponConnector\n        .claimCustomerCoupon(payload.userId, payload.couponCode)\n        .pipe(\n          map((data) => {\n            return new fromCustomerCouponsAction.ClaimCustomerCouponSuccess(\n              data\n            );\n          }),\n          catchError((error) =>\n            of(\n              new fromCustomerCouponsAction.ClaimCustomerCouponFail(\n                normalizeHttpError(error)\n              )\n            )\n          )\n        );\n    })\n  );\n\n  constructor(\n    private actions$: Actions,\n    private customerCouponConnector: CustomerCouponConnector\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { CountryType } from '../../../model/address.model';\nimport { SiteConnector } from '../../../site-context/connectors/site.connector';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { UserActions } from '../actions/index';\n\n@Injectable()\nexport class DeliveryCountriesEffects {\n  @Effect()\n  loadDeliveryCountries$: Observable<\n    UserActions.DeliveryCountriesAction\n  > = this.actions$.pipe(\n    ofType(UserActions.LOAD_DELIVERY_COUNTRIES),\n    switchMap(() => {\n      return this.siteConnector.getCountries(CountryType.SHIPPING).pipe(\n        map(\n          (countries) => new UserActions.LoadDeliveryCountriesSuccess(countries)\n        ),\n        catchError((error) =>\n          of(\n            new UserActions.LoadDeliveryCountriesFail(normalizeHttpError(error))\n          )\n        )\n      );\n    })\n  );\n\n  constructor(\n    private actions$: Actions,\n    private siteConnector: SiteConnector\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, concatMap, map, switchMap } from 'rxjs/operators';\nimport { GlobalMessageType } from '../../../global-message/models/global-message.model';\nimport { GlobalMessageActions } from '../../../global-message/store/actions/index';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { UserConnector } from '../../connectors/user/user.connector';\nimport { UserActions } from '../actions/index';\n\n@Injectable()\nexport class ForgotPasswordEffects {\n  @Effect()\n  requestForgotPasswordEmail$: Observable<\n    | UserActions.ForgotPasswordEmailRequestSuccess\n    | GlobalMessageActions.AddMessage\n    | UserActions.ForgotPasswordEmailRequestFail\n  > = this.actions$.pipe(\n    ofType(UserActions.FORGOT_PASSWORD_EMAIL_REQUEST),\n    map((action: UserActions.ForgotPasswordEmailRequest) => {\n      return action.payload;\n    }),\n    concatMap((userEmailAddress) => {\n      return this.userAccountConnector\n        .requestForgotPasswordEmail(userEmailAddress)\n        .pipe(\n          switchMap(() => [\n            new UserActions.ForgotPasswordEmailRequestSuccess(),\n            new GlobalMessageActions.AddMessage({\n              text: { key: 'forgottenPassword.passwordResetEmailSent' },\n              type: GlobalMessageType.MSG_TYPE_CONFIRMATION,\n            }),\n          ]),\n          catchError((error) =>\n            of(\n              new UserActions.ForgotPasswordEmailRequestFail(\n                normalizeHttpError(error)\n              )\n            )\n          )\n        );\n    })\n  );\n\n  constructor(\n    private actions$: Actions,\n    private userAccountConnector: UserConnector\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, mergeMap, switchMap } from 'rxjs/operators';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { UserNotificationPreferenceConnector } from '../../connectors/notification-preference/user-notification-preference.connector';\nimport { UserActions } from '../actions/index';\n\n@Injectable()\nexport class NotificationPreferenceEffects {\n  @Effect()\n  loadPreferences$: Observable<\n    UserActions.NotificationPreferenceAction\n  > = this.actions$.pipe(\n    ofType(UserActions.LOAD_NOTIFICATION_PREFERENCES),\n    map((action: UserActions.LoadNotificationPreferences) => action.payload),\n    switchMap((payload) =>\n      this.connector.loadAll(payload).pipe(\n        map(\n          (preferences) =>\n            new UserActions.LoadNotificationPreferencesSuccess(preferences)\n        ),\n        catchError((error) =>\n          of(\n            new UserActions.LoadNotificationPreferencesFail(\n              normalizeHttpError(error)\n            )\n          )\n        )\n      )\n    )\n  );\n\n  @Effect()\n  updatePreferences$: Observable<\n    UserActions.NotificationPreferenceAction\n  > = this.actions$.pipe(\n    ofType(UserActions.UPDATE_NOTIFICATION_PREFERENCES),\n    map((action: UserActions.UpdateNotificationPreferences) => action.payload),\n    mergeMap((payload) =>\n      this.connector.update(payload.userId, payload.preferences).pipe(\n        map(\n          () =>\n            new UserActions.UpdateNotificationPreferencesSuccess(\n              payload.preferences\n            )\n        ),\n        catchError((error) =>\n          of(\n            new UserActions.UpdateNotificationPreferencesFail(\n              normalizeHttpError(error)\n            )\n          )\n        )\n      )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private connector: UserNotificationPreferenceConnector\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { Order } from '../../../model/order.model';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { UserOrderConnector } from '../../connectors/order/user-order.connector';\nimport { UserActions } from '../actions/index';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n} from '../../../global-message/index';\n\n@Injectable()\nexport class OrderDetailsEffect {\n  @Effect()\n  loadOrderDetails$: Observable<\n    UserActions.OrderDetailsAction\n  > = this.actions$.pipe(\n    ofType(UserActions.LOAD_ORDER_DETAILS),\n    map((action: UserActions.LoadOrderDetails) => action.payload),\n    switchMap((payload) => {\n      return this.orderConnector.get(payload.userId, payload.orderCode).pipe(\n        map((order: Order) => {\n          return new UserActions.LoadOrderDetailsSuccess(order);\n        }),\n        catchError((error) =>\n          of(new UserActions.LoadOrderDetailsFail(normalizeHttpError(error)))\n        )\n      );\n    })\n  );\n\n  @Effect()\n  cancelOrder$: Observable<UserActions.OrderDetailsAction> = this.actions$.pipe(\n    ofType(UserActions.CANCEL_ORDER),\n    map((action: UserActions.CancelOrder) => action.payload),\n    switchMap((payload) => {\n      return this.orderConnector\n        .cancel(payload.userId, payload.orderCode, payload.cancelRequestInput)\n        .pipe(\n          map(() => new UserActions.CancelOrderSuccess()),\n          catchError((error) => {\n            error.error?.errors.forEach((err) =>\n              this.globalMessageService.add(\n                err.message,\n                GlobalMessageType.MSG_TYPE_ERROR\n              )\n            );\n\n            return of(\n              new UserActions.CancelOrderFail(normalizeHttpError(error))\n            );\n          })\n        );\n    })\n  );\n\n  constructor(\n    private actions$: Actions,\n    private orderConnector: UserOrderConnector,\n    private globalMessageService: GlobalMessageService\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { ReturnRequest, ReturnRequestList } from '../../../model/order.model';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { UserOrderConnector } from '../../connectors/order/user-order.connector';\nimport { UserActions } from '../actions/index';\n\n@Injectable()\nexport class OrderReturnRequestEffect {\n  @Effect()\n  createReturnRequest$: Observable<\n    UserActions.OrderReturnRequestAction\n  > = this.actions$.pipe(\n    ofType(UserActions.CREATE_ORDER_RETURN_REQUEST),\n    map((action: UserActions.CreateOrderReturnRequest) => action.payload),\n    switchMap((payload) => {\n      return this.orderConnector\n        .return(payload.userId, payload.returnRequestInput)\n        .pipe(\n          map(\n            (returnRequest: ReturnRequest) =>\n              new UserActions.CreateOrderReturnRequestSuccess(returnRequest)\n          ),\n          catchError((error) =>\n            of(\n              new UserActions.CreateOrderReturnRequestFail(\n                normalizeHttpError(error)\n              )\n            )\n          )\n        );\n    })\n  );\n\n  @Effect()\n  loadReturnRequest$: Observable<\n    UserActions.OrderReturnRequestAction\n  > = this.actions$.pipe(\n    ofType(UserActions.LOAD_ORDER_RETURN_REQUEST),\n    map((action: UserActions.LoadOrderReturnRequest) => action.payload),\n    switchMap((payload) => {\n      return this.orderConnector\n        .getReturnRequestDetail(payload.userId, payload.returnRequestCode)\n        .pipe(\n          map(\n            (returnRequest: ReturnRequest) =>\n              new UserActions.LoadOrderReturnRequestSuccess(returnRequest)\n          ),\n          catchError((error) =>\n            of(\n              new UserActions.LoadOrderReturnRequestFail(\n                normalizeHttpError(error)\n              )\n            )\n          )\n        );\n    })\n  );\n\n  @Effect()\n  cancelReturnRequest$: Observable<\n    UserActions.OrderReturnRequestAction\n  > = this.actions$.pipe(\n    ofType(UserActions.CANCEL_ORDER_RETURN_REQUEST),\n    map((action: UserActions.CancelOrderReturnRequest) => action.payload),\n    switchMap((payload) => {\n      return this.orderConnector\n        .cancelReturnRequest(\n          payload.userId,\n          payload.returnRequestCode,\n          payload.returnRequestModification\n        )\n        .pipe(\n          map(() => new UserActions.CancelOrderReturnRequestSuccess()),\n          catchError((error) =>\n            of(\n              new UserActions.CancelOrderReturnRequestFail(\n                normalizeHttpError(error)\n              )\n            )\n          )\n        );\n    })\n  );\n\n  @Effect()\n  loadReturnRequestList$: Observable<\n    UserActions.OrderReturnRequestAction\n  > = this.actions$.pipe(\n    ofType(UserActions.LOAD_ORDER_RETURN_REQUEST_LIST),\n    map((action: UserActions.LoadOrderReturnRequestList) => action.payload),\n    switchMap((payload) => {\n      return this.orderConnector\n        .getReturnRequestList(\n          payload.userId,\n          payload.pageSize,\n          payload.currentPage,\n          payload.sort\n        )\n        .pipe(\n          map(\n            (returnRequestList: ReturnRequestList) =>\n              new UserActions.LoadOrderReturnRequestListSuccess(\n                returnRequestList\n              )\n          ),\n          catchError((error) =>\n            of(\n              new UserActions.LoadOrderReturnRequestListFail(\n                normalizeHttpError(error)\n              )\n            )\n          )\n        );\n    })\n  );\n\n  constructor(\n    private actions$: Actions,\n    private orderConnector: UserOrderConnector\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, mergeMap, switchMap } from 'rxjs/operators';\nimport { PaymentDetails } from '../../../model/cart.model';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { UserPaymentConnector } from '../../connectors/payment/user-payment.connector';\nimport { UserActions } from '../actions/index';\n\n@Injectable()\nexport class UserPaymentMethodsEffects {\n  @Effect()\n  loadUserPaymentMethods$: Observable<Action> = this.actions$.pipe(\n    ofType(UserActions.LOAD_USER_PAYMENT_METHODS),\n    map((action: UserActions.LoadUserPaymentMethods) => action.payload),\n    mergeMap((payload) => {\n      return this.userPaymentMethodConnector.getAll(payload).pipe(\n        map((payments: PaymentDetails[]) => {\n          return new UserActions.LoadUserPaymentMethodsSuccess(payments);\n        }),\n        catchError((error) =>\n          of(\n            new UserActions.LoadUserPaymentMethodsFail(\n              normalizeHttpError(error)\n            )\n          )\n        )\n      );\n    })\n  );\n\n  @Effect()\n  setDefaultUserPaymentMethod$: Observable<Action> = this.actions$.pipe(\n    ofType(UserActions.SET_DEFAULT_USER_PAYMENT_METHOD),\n    map((action: UserActions.SetDefaultUserPaymentMethod) => action.payload),\n    mergeMap((payload) => {\n      return this.userPaymentMethodConnector\n        .setDefault(payload.userId, payload.paymentMethodId)\n        .pipe(\n          switchMap((data) => [\n            new UserActions.SetDefaultUserPaymentMethodSuccess(data),\n            new UserActions.LoadUserPaymentMethods(payload.userId),\n          ]),\n          catchError((error) =>\n            of(\n              new UserActions.SetDefaultUserPaymentMethodFail(\n                normalizeHttpError(error)\n              )\n            )\n          )\n        );\n    })\n  );\n  @Effect()\n  deleteUserPaymentMethod$: Observable<Action> = this.actions$.pipe(\n    ofType(UserActions.DELETE_USER_PAYMENT_METHOD),\n    map((action: UserActions.DeleteUserPaymentMethod) => action.payload),\n    mergeMap((payload) => {\n      return this.userPaymentMethodConnector\n        .delete(payload.userId, payload.paymentMethodId)\n        .pipe(\n          switchMap((data) => [\n            new UserActions.DeleteUserPaymentMethodSuccess(data),\n            new UserActions.LoadUserPaymentMethods(payload.userId),\n          ]),\n          catchError((error) =>\n            of(\n              new UserActions.DeleteUserPaymentMethodFail(\n                normalizeHttpError(error)\n              )\n            )\n          )\n        );\n    })\n  );\n\n  constructor(\n    private actions$: Actions,\n    private userPaymentMethodConnector: UserPaymentConnector\n  ) {}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Effect, Actions, ofType } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap, catchError } from 'rxjs/operators';\nimport { UserActions } from '../actions/index';\nimport { ProductInterestSearchResult } from '../../../model/product-interest.model';\nimport { UserInterestsConnector } from '../../connectors/interests/user-interests.connector';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\n\n@Injectable()\nexport class ProductInterestsEffect {\n  constructor(\n    private actions$: Actions,\n    private userInterestsConnector: UserInterestsConnector\n  ) {}\n\n  @Effect()\n  loadProductInteres$: Observable<\n    UserActions.ProductInterestsAction\n  > = this.actions$.pipe(\n    ofType(UserActions.LOAD_PRODUCT_INTERESTS),\n    map((action: UserActions.LoadProductInterests) => action.payload),\n    switchMap((payload) => {\n      return this.userInterestsConnector\n        .getInterests(\n          payload.userId,\n          payload.pageSize,\n          payload.currentPage,\n          payload.sort,\n          payload.productCode,\n          payload.notificationType\n        )\n        .pipe(\n          map((interests: ProductInterestSearchResult) => {\n            return new UserActions.LoadProductInterestsSuccess(interests);\n          }),\n          catchError((error) =>\n            of(\n              new UserActions.LoadProductInterestsFail(\n                normalizeHttpError(error)\n              )\n            )\n          )\n        );\n    })\n  );\n\n  @Effect()\n  removeProductInterest$: Observable<Action> = this.actions$.pipe(\n    ofType(UserActions.REMOVE_PRODUCT_INTEREST),\n    map((action: UserActions.RemoveProductInterest) => action.payload),\n    switchMap((payload) =>\n      this.userInterestsConnector\n        .removeInterest(payload.userId, payload.item)\n        .pipe(\n          switchMap((data) => [\n            new UserActions.LoadProductInterests(\n              payload.singleDelete\n                ? {\n                    userId: payload.userId,\n                    productCode: payload.item.product.code,\n                    notificationType:\n                      payload.item.productInterestEntry[0].interestType,\n                  }\n                : { userId: payload.userId }\n            ),\n            new UserActions.RemoveProductInterestSuccess(data),\n          ]),\n          catchError((error) =>\n            of(\n              new UserActions.RemoveProductInterestFail(\n                normalizeHttpError(error)\n              )\n            )\n          )\n        )\n    )\n  );\n\n  @Effect()\n  addProductInterest$: Observable<Action> = this.actions$.pipe(\n    ofType(UserActions.ADD_PRODUCT_INTEREST),\n    map((action: UserActions.AddProductInterest) => action.payload),\n    switchMap((payload) =>\n      this.userInterestsConnector\n        .addInterest(\n          payload.userId,\n          payload.productCode,\n          payload.notificationType\n        )\n        .pipe(\n          switchMap((res: any) => [\n            new UserActions.LoadProductInterests({\n              userId: payload.userId,\n              productCode: payload.productCode,\n              notificationType: payload.notificationType,\n            }),\n            new UserActions.AddProductInterestSuccess(res),\n          ]),\n          catchError((error) =>\n            of(\n              new UserActions.AddProductInterestFail(normalizeHttpError(error))\n            )\n          )\n        )\n    )\n  );\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { SiteConnector } from '../../../site-context/connectors/site.connector';\nimport { StateUtils } from '../../../state/utils/index';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { UserActions } from '../actions/index';\nimport { REGIONS } from '../user-state';\n\n@Injectable()\nexport class RegionsEffects {\n  @Effect()\n  loadRegions$: Observable<UserActions.RegionsAction> = this.actions$.pipe(\n    ofType(UserActions.LOAD_REGIONS),\n    map((action: UserActions.LoadRegions) => {\n      return action.payload;\n    }),\n    switchMap((countryCode: string) => {\n      return this.siteConnector.getRegions(countryCode).pipe(\n        map(\n          (regions) =>\n            new UserActions.LoadRegionsSuccess({\n              entities: regions,\n              country: countryCode,\n            })\n        ),\n        catchError((error) =>\n          of(new UserActions.LoadRegionsFail(normalizeHttpError(error)))\n        )\n      );\n    })\n  );\n\n  @Effect()\n  resetRegions$: Observable<Action> = this.actions$.pipe(\n    ofType(UserActions.CLEAR_USER_MISCS_DATA, UserActions.CLEAR_REGIONS),\n    map(() => {\n      return new StateUtils.LoaderResetAction(REGIONS);\n    })\n  );\n\n  constructor(\n    private actions$: Actions,\n    private siteConnector: SiteConnector\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n} from '../../../global-message/index';\nimport { ReplenishmentOrder } from '../../../model/replenishment-order.model';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { UserReplenishmentOrderConnector } from '../../connectors/replenishment-order/user-replenishment-order.connector';\nimport { UserActions } from '../actions/index';\n\n@Injectable()\nexport class ReplenishmentOrderDetailsEffect {\n  @Effect()\n  loadReplenishmentOrderDetails$: Observable<\n    UserActions.ReplenishmentOrderDetailsAction\n  > = this.actions$.pipe(\n    ofType(UserActions.LOAD_REPLENISHMENT_ORDER_DETAILS),\n    map((action: UserActions.LoadReplenishmentOrderDetails) => action.payload),\n    switchMap((payload) => {\n      return this.replenishmentOrderConnector\n        .load(payload.userId, payload.replenishmentOrderCode)\n        .pipe(\n          map((replenishmentOrder: ReplenishmentOrder) => {\n            return new UserActions.LoadReplenishmentOrderDetailsSuccess(\n              replenishmentOrder\n            );\n          }),\n          catchError((error) =>\n            of(\n              new UserActions.LoadReplenishmentOrderDetailsFail(\n                normalizeHttpError(error)\n              )\n            )\n          )\n        );\n    })\n  );\n\n  @Effect()\n  cancelReplenishmentOrder$: Observable<\n    UserActions.ReplenishmentOrderDetailsAction\n  > = this.actions$.pipe(\n    ofType(UserActions.CANCEL_REPLENISHMENT_ORDER),\n    map((action: UserActions.CancelReplenishmentOrder) => action.payload),\n    switchMap((payload) => {\n      return this.replenishmentOrderConnector\n        .cancelReplenishmentOrder(\n          payload.userId,\n          payload.replenishmentOrderCode\n        )\n        .pipe(\n          map(\n            (replenishmentOrder: ReplenishmentOrder) =>\n              new UserActions.CancelReplenishmentOrderSuccess(\n                replenishmentOrder\n              )\n          ),\n          catchError((error) => {\n            error?.error?.errors.forEach((err) =>\n              this.globalMessageService.add(\n                err.message,\n                GlobalMessageType.MSG_TYPE_ERROR\n              )\n            );\n\n            return of(\n              new UserActions.CancelReplenishmentOrderFail(\n                normalizeHttpError(error)\n              )\n            );\n          })\n        );\n    })\n  );\n\n  constructor(\n    private actions$: Actions,\n    private replenishmentOrderConnector: UserReplenishmentOrderConnector,\n    private globalMessageService: GlobalMessageService\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { from, Observable } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { GlobalMessageType } from '../../../global-message/models/global-message.model';\nimport { GlobalMessageActions } from '../../../global-message/store/actions/index';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { UserConnector } from '../../connectors/user/user.connector';\nimport { UserActions } from '../actions/index';\n\n@Injectable()\nexport class ResetPasswordEffects {\n  @Effect()\n  resetPassword$: Observable<\n    | UserActions.ResetPasswordSuccess\n    | GlobalMessageActions.AddMessage\n    | UserActions.ResetPasswordFail\n  > = this.actions$.pipe(\n    ofType(UserActions.RESET_PASSWORD),\n    map((action: UserActions.ResetPassword) => action.payload),\n    switchMap(({ token, password }) => {\n      return this.userAccountConnector.resetPassword(token, password).pipe(\n        switchMap(() => [\n          new UserActions.ResetPasswordSuccess(),\n          new GlobalMessageActions.AddMessage({\n            text: { key: 'forgottenPassword.passwordResetSuccess' },\n            type: GlobalMessageType.MSG_TYPE_CONFIRMATION,\n          }),\n        ]),\n        catchError((error) => {\n          const actions: Array<\n            UserActions.ResetPasswordFail | GlobalMessageActions.AddMessage\n          > = [new UserActions.ResetPasswordFail(normalizeHttpError(error))];\n          if (error?.error?.errors) {\n            error.error.errors.forEach((err) => {\n              if (err.message) {\n                actions.push(\n                  new GlobalMessageActions.AddMessage({\n                    text: { raw: err.message },\n                    type: GlobalMessageType.MSG_TYPE_ERROR,\n                  })\n                );\n              }\n            });\n          }\n          return from(actions);\n        })\n      );\n    })\n  );\n\n  constructor(\n    private actions$: Actions,\n    private userAccountConnector: UserConnector\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { UserConnector } from '../../connectors/user/user.connector';\nimport { UserActions } from '../actions/index';\n\n@Injectable()\nexport class TitlesEffects {\n  @Effect()\n  loadTitles$: Observable<UserActions.TitlesAction> = this.actions$.pipe(\n    ofType(UserActions.LOAD_TITLES),\n    switchMap(() => {\n      return this.userAccountConnector.getTitles().pipe(\n        map((titles) => {\n          return new UserActions.LoadTitlesSuccess(titles);\n        }),\n        catchError((error) =>\n          of(new UserActions.LoadTitlesFail(normalizeHttpError(error)))\n        )\n      );\n    })\n  );\n\n  constructor(\n    private actions$: Actions,\n    private userAccountConnector: UserConnector\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, concatMap, map } from 'rxjs/operators';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { UserConnector } from '../../connectors/user/user.connector';\nimport { UserActions } from '../actions/index';\n\n@Injectable()\nexport class UpdateEmailEffects {\n  constructor(\n    private actions$: Actions,\n    private userAccountConnector: UserConnector\n  ) {}\n\n  @Effect()\n  updateEmail$: Observable<\n    UserActions.UpdateEmailSuccessAction | UserActions.UpdateEmailErrorAction\n  > = this.actions$.pipe(\n    ofType(UserActions.UPDATE_EMAIL),\n    map((action: UserActions.UpdateEmailAction) => action.payload),\n    concatMap((payload) =>\n      this.userAccountConnector\n        .updateEmail(payload.uid, payload.password, payload.newUid)\n        .pipe(\n          map(() => new UserActions.UpdateEmailSuccessAction(payload.newUid)),\n          catchError((error) =>\n            of(\n              new UserActions.UpdateEmailErrorAction(normalizeHttpError(error))\n            )\n          )\n        )\n    )\n  );\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, concatMap, map } from 'rxjs/operators';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { UserConnector } from '../../connectors/user/user.connector';\nimport { UserActions } from '../actions/index';\n\n@Injectable()\nexport class UpdatePasswordEffects {\n  constructor(\n    private actions$: Actions,\n    private userAccountConnector: UserConnector\n  ) {}\n\n  @Effect()\n  updatePassword$: Observable<\n    UserActions.UpdatePasswordSuccess | UserActions.UpdatePasswordFail\n  > = this.actions$.pipe(\n    ofType(UserActions.UPDATE_PASSWORD),\n    map((action: UserActions.UpdatePassword) => action.payload),\n    concatMap((payload) =>\n      this.userAccountConnector\n        .updatePassword(\n          payload.userId,\n          payload.oldPassword,\n          payload.newPassword\n        )\n        .pipe(\n          map(() => new UserActions.UpdatePasswordSuccess()),\n          catchError((error) =>\n            of(new UserActions.UpdatePasswordFail(normalizeHttpError(error)))\n          )\n        )\n    )\n  );\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, mergeMap, tap } from 'rxjs/operators';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n} from '../../../global-message/index';\nimport { Address } from '../../../model/address.model';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { UserAddressConnector } from '../../connectors/address/user-address.connector';\nimport { UserAddressService } from '../../facade/user-address.service';\nimport { UserActions } from '../actions/index';\n\n@Injectable()\nexport class UserAddressesEffects {\n  @Effect()\n  loadUserAddresses$: Observable<\n    UserActions.UserAddressesAction\n  > = this.actions$.pipe(\n    ofType(UserActions.LOAD_USER_ADDRESSES),\n    map((action: UserActions.LoadUserAddresses) => action.payload),\n    mergeMap((payload) => {\n      return this.userAddressConnector.getAll(payload).pipe(\n        map((addresses: Address[]) => {\n          return new UserActions.LoadUserAddressesSuccess(addresses);\n        }),\n        catchError((error) =>\n          of(new UserActions.LoadUserAddressesFail(normalizeHttpError(error)))\n        )\n      );\n    })\n  );\n\n  @Effect()\n  addUserAddress$: Observable<\n    UserActions.UserAddressesAction\n  > = this.actions$.pipe(\n    ofType(UserActions.ADD_USER_ADDRESS),\n    map((action: UserActions.AddUserAddress) => action.payload),\n    mergeMap((payload) => {\n      return this.userAddressConnector\n        .add(payload.userId, payload.address)\n        .pipe(\n          map((data: any) => {\n            return new UserActions.AddUserAddressSuccess(data);\n          }),\n          catchError((error) =>\n            of(new UserActions.AddUserAddressFail(normalizeHttpError(error)))\n          )\n        );\n    })\n  );\n\n  @Effect()\n  updateUserAddress$: Observable<\n    UserActions.UserAddressesAction\n  > = this.actions$.pipe(\n    ofType(UserActions.UPDATE_USER_ADDRESS),\n    map((action: UserActions.UpdateUserAddress) => action.payload),\n    mergeMap((payload) => {\n      return this.userAddressConnector\n        .update(payload.userId, payload.addressId, payload.address)\n        .pipe(\n          map((data) => {\n            // don't show the message if just setting address as default\n            if (\n              payload.address &&\n              Object.keys(payload.address).length === 1 &&\n              payload.address.defaultAddress\n            ) {\n              return new UserActions.LoadUserAddresses(payload.userId);\n            } else {\n              return new UserActions.UpdateUserAddressSuccess(data);\n            }\n          }),\n          catchError((error) =>\n            of(new UserActions.UpdateUserAddressFail(normalizeHttpError(error)))\n          )\n        );\n    })\n  );\n\n  @Effect()\n  deleteUserAddress$: Observable<\n    UserActions.UserAddressesAction\n  > = this.actions$.pipe(\n    ofType(UserActions.DELETE_USER_ADDRESS),\n    map((action: UserActions.DeleteUserAddress) => action.payload),\n    mergeMap((payload) => {\n      return this.userAddressConnector\n        .delete(payload.userId, payload.addressId)\n        .pipe(\n          map((data) => {\n            return new UserActions.DeleteUserAddressSuccess(data);\n          }),\n          catchError((error) =>\n            of(new UserActions.DeleteUserAddressFail(normalizeHttpError(error)))\n          )\n        );\n    })\n  );\n\n  /**\n   *  Reload addresses and notify about add success\n   */\n  @Effect({ dispatch: false })\n  showGlobalMessageOnAddSuccess$ = this.actions$.pipe(\n    ofType(UserActions.ADD_USER_ADDRESS_SUCCESS),\n    tap(() => {\n      this.loadAddresses();\n      this.showGlobalMessage('addressForm.userAddressAddSuccess');\n    })\n  );\n\n  /**\n   *  Reload addresses and notify about update success\n   */\n  @Effect({ dispatch: false })\n  showGlobalMessageOnUpdateSuccess$ = this.actions$.pipe(\n    ofType(UserActions.UPDATE_USER_ADDRESS_SUCCESS),\n    tap(() => {\n      this.loadAddresses();\n      this.showGlobalMessage('addressForm.userAddressUpdateSuccess');\n    })\n  );\n\n  /**\n   *  Reload addresses and notify about delete success\n   */\n  @Effect({ dispatch: false })\n  showGlobalMessageOnDeleteSuccess$ = this.actions$.pipe(\n    ofType(UserActions.DELETE_USER_ADDRESS_SUCCESS),\n    tap(() => {\n      this.loadAddresses();\n      this.showGlobalMessage('addressForm.userAddressDeleteSuccess');\n    })\n  );\n\n  constructor(\n    private actions$: Actions,\n    private userAddressConnector: UserAddressConnector,\n    private userAddressService: UserAddressService,\n    private messageService: GlobalMessageService\n  ) {}\n\n  /**\n   * Show global confirmation message with provided text\n   */\n  private showGlobalMessage(text: string) {\n    this.messageService.add(\n      { key: text },\n      GlobalMessageType.MSG_TYPE_CONFIRMATION\n    );\n  }\n\n  private loadAddresses() {\n    this.userAddressService.loadAddresses();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, concatMap, map } from 'rxjs/operators';\nimport { GlobalMessageType } from '../../../global-message/models/global-message.model';\nimport { GlobalMessageActions } from '../../../global-message/store/actions';\nimport { SiteContextActions } from '../../../site-context/store/actions/index';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { UserConsentConnector } from '../../connectors/consent/user-consent.connector';\nimport { UserActions } from '../actions/index';\n\n@Injectable()\nexport class UserConsentsEffect {\n  @Effect()\n  resetConsents$: Observable<\n    UserActions.ResetLoadUserConsents\n  > = this.actions$.pipe(\n    ofType(SiteContextActions.LANGUAGE_CHANGE),\n    map(() => new UserActions.ResetLoadUserConsents())\n  );\n\n  @Effect()\n  getConsents$: Observable<UserActions.UserConsentsAction> = this.actions$.pipe(\n    ofType(UserActions.LOAD_USER_CONSENTS),\n    map((action: UserActions.LoadUserConsents) => action.payload),\n    concatMap((userId) =>\n      this.userConsentConnector.loadConsents(userId).pipe(\n        map((consents) => new UserActions.LoadUserConsentsSuccess(consents)),\n        catchError((error) =>\n          of(new UserActions.LoadUserConsentsFail(normalizeHttpError(error)))\n        )\n      )\n    )\n  );\n\n  @Effect()\n  giveConsent$: Observable<\n    UserActions.UserConsentsAction | GlobalMessageActions.RemoveMessagesByType\n  > = this.actions$.pipe(\n    ofType<UserActions.GiveUserConsent | UserActions.TransferAnonymousConsent>(\n      UserActions.GIVE_USER_CONSENT,\n      UserActions.TRANSFER_ANONYMOUS_CONSENT\n    ),\n    concatMap((action) =>\n      this.userConsentConnector\n        .giveConsent(\n          action.payload.userId,\n          action.payload.consentTemplateId,\n          action.payload.consentTemplateVersion\n        )\n        .pipe(\n          map((consent) => new UserActions.GiveUserConsentSuccess(consent)),\n          catchError((error) => {\n            const errors: Array<\n              | UserActions.UserConsentsAction\n              | GlobalMessageActions.RemoveMessagesByType\n            > = [\n              new UserActions.GiveUserConsentFail(normalizeHttpError(error)),\n            ];\n            if (\n              action.type === UserActions.TRANSFER_ANONYMOUS_CONSENT &&\n              error.status === 409\n            ) {\n              errors.push(\n                new GlobalMessageActions.RemoveMessagesByType(\n                  GlobalMessageType.MSG_TYPE_ERROR\n                )\n              );\n            }\n            return of(...errors);\n          })\n        )\n    )\n  );\n\n  @Effect()\n  withdrawConsent$: Observable<\n    UserActions.UserConsentsAction\n  > = this.actions$.pipe(\n    ofType(UserActions.WITHDRAW_USER_CONSENT),\n    map((action: UserActions.WithdrawUserConsent) => action.payload),\n    concatMap(({ userId, consentCode }) =>\n      this.userConsentConnector.withdrawConsent(userId, consentCode).pipe(\n        map(() => new UserActions.WithdrawUserConsentSuccess()),\n        catchError((error) =>\n          of(new UserActions.WithdrawUserConsentFail(normalizeHttpError(error)))\n        )\n      )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private userConsentConnector: UserConsentConnector\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { EntitiesModel } from '../../../model/misc.model';\nimport { CostCenter } from '../../../model/org-unit.model';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { UserCostCenterConnector } from '../../connectors/cost-center/user-cost-center.connector';\nimport { UserActions } from '../actions/index';\n\n@Injectable()\nexport class UserCostCenterEffects {\n  @Effect()\n  loadActiveCostCenters$: Observable<\n    UserActions.UserCostCenterAction\n  > = this.actions$.pipe(\n    ofType(UserActions.LOAD_ACTIVE_COST_CENTERS),\n    map((action: UserActions.LoadActiveCostCenters) => action.payload),\n    switchMap((payload) =>\n      this.userCostCenterConnector.getActiveList(payload).pipe(\n        // TODO(#8875): Should we use here serialize utils?\n        map(\n          (data: EntitiesModel<CostCenter>) =>\n            new UserActions.LoadActiveCostCentersSuccess(data.values)\n        ),\n        catchError((error) =>\n          of(\n            new UserActions.LoadActiveCostCentersFail(normalizeHttpError(error))\n          )\n        )\n      )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private userCostCenterConnector: UserCostCenterConnector\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, concatMap, map, mergeMap } from 'rxjs/operators';\nimport { User } from '../../../model/misc.model';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { UserConnector } from '../../connectors/user/user.connector';\nimport { UserActions } from '../actions/index';\n\n@Injectable()\nexport class UserDetailsEffects {\n  @Effect()\n  loadUserDetails$: Observable<\n    UserActions.UserDetailsAction\n  > = this.actions$.pipe(\n    ofType(UserActions.LOAD_USER_DETAILS),\n    map((action: UserActions.LoadUserDetails) => action.payload),\n    mergeMap((userId) => {\n      return this.userConnector.get(userId).pipe(\n        map((user: User) => {\n          return new UserActions.LoadUserDetailsSuccess(user);\n        }),\n        catchError((error) =>\n          of(new UserActions.LoadUserDetailsFail(normalizeHttpError(error)))\n        )\n      );\n    })\n  );\n\n  @Effect()\n  updateUserDetails$: Observable<\n    UserActions.UpdateUserDetailsSuccess | UserActions.UpdateUserDetailsFail\n  > = this.actions$.pipe(\n    ofType(UserActions.UPDATE_USER_DETAILS),\n    map((action: UserActions.UpdateUserDetails) => action.payload),\n    concatMap((payload) =>\n      this.userConnector.update(payload.username, payload.userDetails).pipe(\n        map(\n          () => new UserActions.UpdateUserDetailsSuccess(payload.userDetails)\n        ),\n        catchError((error) =>\n          of(new UserActions.UpdateUserDetailsFail(normalizeHttpError(error)))\n        )\n      )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private userConnector: UserConnector\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { OrderHistoryList } from '../../../model/order.model';\nimport { SiteContextActions } from '../../../site-context/store/actions/index';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport {\n  UserOrderConnector,\n  UserReplenishmentOrderConnector,\n} from '../../connectors/index';\nimport { UserActions } from '../actions/index';\n\n@Injectable()\nexport class UserOrdersEffect {\n  constructor(\n    private actions$: Actions,\n    private orderConnector: UserOrderConnector,\n    private replenishmentOrderConnector: UserReplenishmentOrderConnector\n  ) {}\n\n  @Effect()\n  loadUserOrders$: Observable<\n    UserActions.UserOrdersAction\n  > = this.actions$.pipe(\n    ofType(UserActions.LOAD_USER_ORDERS),\n    map((action: UserActions.LoadUserOrders) => action.payload),\n    switchMap((payload) => {\n      return (Boolean(payload.replenishmentOrderCode)\n        ? this.replenishmentOrderConnector.loadReplenishmentDetailsHistory(\n            payload.userId,\n            payload.replenishmentOrderCode,\n            payload.pageSize,\n            payload.currentPage,\n            payload.sort\n          )\n        : this.orderConnector.getHistory(\n            payload.userId,\n            payload.pageSize,\n            payload.currentPage,\n            payload.sort\n          )\n      ).pipe(\n        map((orders: OrderHistoryList) => {\n          return new UserActions.LoadUserOrdersSuccess(orders);\n        }),\n        catchError((error) =>\n          of(new UserActions.LoadUserOrdersFail(normalizeHttpError(error)))\n        )\n      );\n    })\n  );\n\n  @Effect()\n  resetUserOrders$: Observable<\n    UserActions.ClearUserOrders\n  > = this.actions$.pipe(\n    ofType(SiteContextActions.LANGUAGE_CHANGE),\n    map(() => {\n      return new UserActions.ClearUserOrders();\n    })\n  );\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, mergeMap, switchMap } from 'rxjs/operators';\nimport { AuthService } from '../../../auth/user-auth/facade/auth.service';\nimport { UserSignUp } from '../../../model/misc.model';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { UserConnector } from '../../connectors/user/user.connector';\nimport { UserActions } from '../actions/index';\n\n@Injectable()\nexport class UserRegisterEffects {\n  @Effect()\n  registerUser$: Observable<\n    UserActions.UserRegisterOrRemoveAction\n  > = this.actions$.pipe(\n    ofType(UserActions.REGISTER_USER),\n    map((action: UserActions.RegisterUser) => action.payload),\n    mergeMap((user: UserSignUp) =>\n      this.userConnector.register(user).pipe(\n        map(() => new UserActions.RegisterUserSuccess()),\n        catchError((error) =>\n          of(new UserActions.RegisterUserFail(normalizeHttpError(error)))\n        )\n      )\n    )\n  );\n\n  @Effect()\n  registerGuest$: Observable<\n    UserActions.UserRegisterOrRemoveAction\n  > = this.actions$.pipe(\n    ofType(UserActions.REGISTER_GUEST),\n    map((action: UserActions.RegisterGuest) => action.payload),\n    mergeMap(({ guid, password }) =>\n      this.userConnector.registerGuest(guid, password).pipe(\n        switchMap((user) => {\n          this.authService.loginWithCredentials(user.uid, password);\n          return [new UserActions.RegisterGuestSuccess()];\n        }),\n        catchError((error) =>\n          of(new UserActions.RegisterGuestFail(normalizeHttpError(error)))\n        )\n      )\n    )\n  );\n\n  @Effect()\n  removeUser$: Observable<\n    UserActions.UserRegisterOrRemoveAction\n  > = this.actions$.pipe(\n    ofType(UserActions.REMOVE_USER),\n    map((action: UserActions.RemoveUser) => action.payload),\n    mergeMap((userId: string) => {\n      return this.userConnector.remove(userId).pipe(\n        switchMap(() => {\n          this.authService.logout();\n          return [new UserActions.RemoveUserSuccess()];\n        }),\n        catchError((error) =>\n          of(new UserActions.RemoveUserFail(normalizeHttpError(error)))\n        )\n      );\n    })\n  );\n\n  constructor(\n    private actions$: Actions,\n    private userConnector: UserConnector,\n    private authService: AuthService\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { ReplenishmentOrderList } from '../../../model/replenishment-order.model';\nimport { normalizeHttpError } from '../../../util/normalize-http-error';\nimport { UserReplenishmentOrderConnector } from '../../connectors/replenishment-order/user-replenishment-order.connector';\nimport { UserActions } from '../actions/index';\n\n@Injectable()\nexport class UserReplenishmentOrdersEffect {\n  @Effect()\n  loadUserReplenishmentOrders$: Observable<\n    UserActions.UserReplenishmentOrdersAction\n  > = this.actions$.pipe(\n    ofType(UserActions.LOAD_USER_REPLENISHMENT_ORDERS),\n    map((action: UserActions.LoadUserReplenishmentOrders) => action.payload),\n    switchMap((payload) => {\n      return this.replenishmentOrderConnector\n        .loadHistory(\n          payload.userId,\n          payload.pageSize,\n          payload.currentPage,\n          payload.sort\n        )\n        .pipe(\n          map((orders: ReplenishmentOrderList) => {\n            return new UserActions.LoadUserReplenishmentOrdersSuccess(orders);\n          }),\n          catchError((error) =>\n            of(\n              new UserActions.LoadUserReplenishmentOrdersFail(\n                normalizeHttpError(error)\n              )\n            )\n          )\n        );\n    })\n  );\n\n  constructor(\n    private actions$: Actions,\n    private replenishmentOrderConnector: UserReplenishmentOrderConnector\n  ) {}\n}\n","import { BillingCountriesEffect } from './billing-countries.effect';\nimport { ClearMiscsDataEffect } from './clear-miscs-data.effect';\nimport { ConsignmentTrackingEffects } from './consignment-tracking.effect';\nimport { CustomerCouponEffects } from './customer-coupon.effect';\nimport { DeliveryCountriesEffects } from './delivery-countries.effect';\nimport { ForgotPasswordEffects } from './forgot-password.effect';\nimport { NotificationPreferenceEffects } from './notification-preference.effect';\nimport { OrderDetailsEffect } from './order-details.effect';\nimport { OrderReturnRequestEffect } from './order-return-request.effect';\nimport { UserPaymentMethodsEffects } from './payment-methods.effect';\nimport { ProductInterestsEffect } from './product-interests.effect';\nimport { RegionsEffects } from './regions.effect';\nimport { ReplenishmentOrderDetailsEffect } from './replenishment-order-details.effect';\nimport { ResetPasswordEffects } from './reset-password.effect';\nimport { TitlesEffects } from './titles.effect';\nimport { UpdateEmailEffects } from './update-email.effect';\nimport { UpdatePasswordEffects } from './update-password.effect';\nimport { UserAddressesEffects } from './user-addresses.effect';\nimport { UserConsentsEffect } from './user-consents.effect';\nimport { UserCostCenterEffects } from './user-cost-center.effect';\nimport { UserDetailsEffects } from './user-details.effect';\nimport { UserOrdersEffect } from './user-orders.effect';\nimport { UserRegisterEffects } from './user-register.effect';\nimport { UserReplenishmentOrdersEffect } from './user-replenishment-orders.effect';\n\nexport const effects: any[] = [\n  ClearMiscsDataEffect,\n  DeliveryCountriesEffects,\n  RegionsEffects,\n  TitlesEffects,\n  UserDetailsEffects,\n  UserAddressesEffects,\n  UserPaymentMethodsEffects,\n  UserRegisterEffects,\n  UserOrdersEffect,\n  OrderDetailsEffect,\n  BillingCountriesEffect,\n  ResetPasswordEffects,\n  ForgotPasswordEffects,\n  UpdateEmailEffects,\n  UpdatePasswordEffects,\n  UserConsentsEffect,\n  ConsignmentTrackingEffects,\n  CustomerCouponEffects,\n  NotificationPreferenceEffects,\n  ProductInterestsEffect,\n  OrderReturnRequestEffect,\n  UserCostCenterEffects,\n  ReplenishmentOrderDetailsEffect,\n  UserReplenishmentOrdersEffect,\n];\n\nexport * from './billing-countries.effect';\nexport * from './clear-miscs-data.effect';\nexport * from './consignment-tracking.effect';\nexport * from './customer-coupon.effect';\nexport * from './delivery-countries.effect';\nexport * from './notification-preference.effect';\nexport * from './order-details.effect';\nexport * from './order-return-request.effect';\nexport * from './payment-methods.effect';\nexport * from './product-interests.effect';\nexport * from './regions.effect';\nexport * from './replenishment-order-details.effect';\nexport * from './reset-password.effect';\nexport * from './titles.effect';\nexport * from './user-addresses.effect';\nexport * from './user-consents.effect';\nexport * from './user-details.effect';\nexport * from './user-orders.effect';\nexport * from './user-register.effect';\nexport * from './user-replenishment-orders.effect';\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { RouterModule } from '@angular/router';\n\nimport { metaReducers, reducerToken, reducerProvider } from './reducers/index';\nimport { effects } from './effects/index';\nimport { USER_FEATURE } from './user-state';\nimport { StateModule } from '../../state/state.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StateModule,\n    StoreModule.forFeature(USER_FEATURE, reducerToken, { metaReducers }),\n    EffectsModule.forFeature(effects),\n    RouterModule,\n  ],\n  providers: [reducerProvider],\n})\nexport class UserStoreModule {}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { UserStoreModule } from './store/user-store.module';\n\n@NgModule({\n  imports: [UserStoreModule],\n})\nexport class UserModule {\n  static forRoot(): ModuleWithProviders<UserModule> {\n    return {\n      ngModule: UserModule,\n    };\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ExternalJsFileLoader {\n  constructor(@Inject(DOCUMENT) protected document: any) {}\n\n  /**\n   * Loads a javascript from an external URL\n   * @param src URL for the script to be loaded\n   * @param params additional parameters to be attached to the given URL\n   * @param callback a function to be invoked after the script has been loaded\n   * @param errorCallback function to be invoked after error during script loading\n   */\n  public load(\n    src: string,\n    params?: Object,\n    callback?: EventListener,\n    errorCallback?: EventListener\n  ): void {\n    const script: HTMLScriptElement = this.document.createElement('script');\n    script.type = 'text/javascript';\n    if (params) {\n      script.src = src + this.parseParams(params);\n    } else {\n      script.src = src;\n    }\n\n    script.async = true;\n    script.defer = true;\n    if (callback) {\n      script.addEventListener('load', callback);\n    }\n    if (errorCallback) {\n      script.addEventListener('error', errorCallback);\n    }\n\n    document.head.appendChild(script);\n  }\n\n  /**\n   * Parses the given object with parameters to a string \"param1=value1&param2=value2\"\n   * @param params object containing parameters\n   */\n  private parseParams(params: Object): string {\n    let result = '';\n    const keysArray = Object.keys(params);\n    if (keysArray.length > 0) {\n      result =\n        '?' +\n        keysArray\n          .map((key) => encodeURI(key) + '=' + encodeURI(params[key]))\n          .join('&');\n    }\n    return result;\n  }\n}\n","/*\n * Public API Surface of core\n */\nexport * from './src/anonymous-consents/index';\nexport * from './src/asm/index';\nexport * from './src/auth/index';\nexport * from './src/cart/index';\nexport * from './src/checkout/index';\nexport * from './src/cms/index';\nexport * from './src/config/index';\nexport * from './src/event/index';\nexport * from './src/features-config/index';\nexport * from './src/global-message/index';\nexport * from './src/i18n/index';\nexport * from './src/model/index';\nexport * from './src/cost-center/index';\nexport * from './src/occ/index';\nexport * from './src/personalization/index';\nexport * from './src/process/index';\nexport * from './src/product/index';\nexport * from './src/routing/index';\nexport * from './src/site-context/index';\nexport * from './src/smart-edit/index';\nexport * from './src/state/index';\nexport * from './src/user/index';\nexport * from './src/util/index';\nexport * from './src/window/index';\nexport * from './src/lazy-loading/index';\n\n/** AUGMENTABLE_TYPES_START */\nexport { Product } from './src/model/product.model';\nexport { ProductSearchPage, Facet } from './src/model/product-search.model';\nexport { Cart } from './src/model/cart.model';\nexport { CostCenter, B2BUnit, B2BUser } from './src/model/org-unit.model';\nexport { AuthToken } from './src/auth/user-auth/models/auth-token.model';\nexport { Order } from './src/model/order.model';\n/** AUGMENTABLE_TYPES_END */\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {AnonymousConsentsInterceptor as ɵbd} from './src/anonymous-consents/http-interceptors/anonymous-consents-interceptor';\nexport {interceptors as ɵbc} from './src/anonymous-consents/http-interceptors/index';\nexport {AnonymousConsentsStoreModule as ɵk,anonymousConsentsStatePersistenceFactory as ɵj} from './src/anonymous-consents/store/anonymous-consents-store.module';\nexport {AnonymousConsentsEffects as ɵw} from './src/anonymous-consents/store/effects/anonymous-consents.effect';\nexport {effects as ɵv} from './src/anonymous-consents/store/effects/index';\nexport {reducer as ɵba} from './src/anonymous-consents/store/reducers/anonymous-consents-banner.reducer';\nexport {reducer as ɵbb} from './src/anonymous-consents/store/reducers/anonymous-consents-update.reducer';\nexport {reducer as ɵz} from './src/anonymous-consents/store/reducers/anonymous-consents.reducer';\nexport {clearAnonymousConsentTemplates as ɵt,getReducers as ɵq,metaReducers as ɵu,reducerProvider as ɵs,reducerToken as ɵr} from './src/anonymous-consents/store/reducers/index';\nexport {asmStatePersistenceFactory as ɵa} from './src/asm/asm.module';\nexport {defaultAsmConfig as ɵbn} from './src/asm/config/default-asm-config';\nexport {StateWithAsm as ɵbo} from './src/asm/store';\nexport {AsmStoreModule as ɵbe} from './src/asm/store/asm-store.module';\nexport {CustomerEffects as ɵbl} from './src/asm/store/effects/customer.effect';\nexport {effects as ɵbk} from './src/asm/store/effects/index';\nexport {reducer as ɵbm} from './src/asm/store/reducers/asm-ui.reducer';\nexport {clearCustomerSupportAgentAsmState as ɵbi,getReducers as ɵbf,metaReducers as ɵbj,reducerProvider as ɵbh,reducerToken as ɵbg} from './src/asm/store/reducers/index';\nexport {interceptors as ɵbv} from './src/auth/client-auth/http-interceptors/index';\nexport {ClientAuthStoreModule as ɵbp} from './src/auth/client-auth/store/client-auth-store.module';\nexport {ClientTokenEffect as ɵbu} from './src/auth/client-auth/store/effects/client-token.effect';\nexport {effects as ɵbt} from './src/auth/client-auth/store/effects/index';\nexport {getReducers as ɵbq,reducerProvider as ɵbs,reducerToken as ɵbr} from './src/auth/client-auth/store/reducers/index';\nexport {baseUrlConfigValidator as ɵbx} from './src/auth/user-auth/config/base-url-config-validator';\nexport {defaultAuthConfig as ɵbw} from './src/auth/user-auth/config/default-auth-config';\nexport {interceptors as ɵby} from './src/auth/user-auth/http-interceptors/index';\nexport {authStatePersistenceFactory as ɵc,checkOAuthParamsInUrl as ɵb} from './src/auth/user-auth/user-auth.module';\nexport {cartStatePersistenceFactory as ɵd,uninitializeActiveCartMetaReducerFactory as ɵe} from './src/cart/cart-persistence.module';\nexport {SaveCartAdapter as ɵcl} from './src/cart/connectors/save-cart/save-cart.adapter';\nexport {SaveCartConnector as ɵck} from './src/cart/connectors/save-cart/save-cart.connecter';\nexport {CartEntryEffects as ɵch} from './src/cart/store/effects/cart-entry.effect';\nexport {CartVoucherEffects as ɵci} from './src/cart/store/effects/cart-voucher.effect';\nexport {CartEffects as ɵcg} from './src/cart/store/effects/cart.effect';\nexport {MultiCartEffects as ɵcm} from './src/cart/store/effects/multi-cart.effect';\nexport {WishListEffects as ɵcj} from './src/cart/store/effects/wish-list.effect';\nexport {MultiCartStoreModule as ɵca} from './src/cart/store/multi-cart-store.module';\nexport {clearMultiCartState as ɵcb,getMultiCartReducers as ɵce,multiCartMetaReducers as ɵcc,multiCartReducerProvider as ɵcf,multiCartReducerToken as ɵcd} from './src/cart/store/reducers/index';\nexport {activeCartReducer as ɵcq,cartEntitiesReducer as ɵcr,wishListReducer as ɵcs} from './src/cart/store/reducers/multi-cart.reducer';\nexport {CheckoutCartInterceptor as ɵdj} from './src/checkout/http-interceptors/checkout-cart.interceptor';\nexport {interceptors as ɵdi} from './src/checkout/http-interceptors/index';\nexport {CheckoutStoreModule as ɵct} from './src/checkout/store/checkout-store.module';\nexport {AddressVerificationEffect as ɵcy} from './src/checkout/store/effects/address-verification.effect';\nexport {CardTypesEffects as ɵcz} from './src/checkout/store/effects/card-types.effect';\nexport {CheckoutEffects as ɵda} from './src/checkout/store/effects/checkout.effect';\nexport {effects as ɵcx} from './src/checkout/store/effects/index';\nexport {PaymentTypesEffects as ɵdb} from './src/checkout/store/effects/payment-types.effect';\nexport {ReplenishmentOrderEffects as ɵdc} from './src/checkout/store/effects/replenishment-order.effect';\nexport {reducer as ɵdf} from './src/checkout/store/reducers/address-verification.reducer';\nexport {reducer as ɵde} from './src/checkout/store/reducers/card-types.reducer';\nexport {reducer as ɵdd} from './src/checkout/store/reducers/checkout.reducer';\nexport {getReducers as ɵcu,reducerProvider as ɵcw,reducerToken as ɵcv} from './src/checkout/store/reducers/index';\nexport {reducer as ɵdh} from './src/checkout/store/reducers/order-types.reducer';\nexport {reducer as ɵdg} from './src/checkout/store/reducers/payment-types.reducer';\nexport {PageMetaResolver as ɵfy} from './src/cms/page';\nexport {CmsStoreModule as ɵdl,cmsStoreConfigFactory as ɵdk} from './src/cms/store/cms-store.module';\nexport {ComponentsEffects as ɵds} from './src/cms/store/effects/components.effect';\nexport {effects as ɵdr} from './src/cms/store/effects/index';\nexport {NavigationEntryItemEffects as ɵdt} from './src/cms/store/effects/navigation-entry-item.effect';\nexport {PageEffects as ɵdu} from './src/cms/store/effects/page.effect';\nexport {reducer as ɵdy} from './src/cms/store/reducers/components.reducer';\nexport {clearCmsState as ɵdp,getReducers as ɵdm,metaReducers as ɵdq,reducerProvider as ɵdo,reducerToken as ɵdn} from './src/cms/store/reducers/index';\nexport {reducer as ɵdz} from './src/cms/store/reducers/navigation-entry-item.reducer';\nexport {reducer as ɵdv} from './src/cms/store/reducers/page-data.reducer';\nexport {reducer as ɵdx} from './src/cms/store/reducers/page-index.reducer';\nexport {CONFIG_INITIALIZER_FORROOT_GUARD as ɵf} from './src/config/config-initializer/config-initializer';\nexport {TEST_CONFIG_COOKIE_NAME as ɵg,configFromCookieFactory as ɵh} from './src/config/test-config.module';\nexport {defaultGlobalMessageConfigFactory as ɵeg} from './src/global-message/config/default-global-message-config';\nexport {HttpErrorInterceptor as ɵeh} from './src/global-message/http-interceptors/http-error.interceptor';\nexport {GlobalMessageEffect as ɵef} from './src/global-message/store/effects/global-message.effect';\nexport {GlobalMessageStoreModule as ɵea} from './src/global-message/store/global-message-store.module';\nexport {reducer as ɵee} from './src/global-message/store/reducers/global-message.reducer';\nexport {getReducers as ɵeb,reducerProvider as ɵed,reducerToken as ɵec} from './src/global-message/store/reducers/index';\nexport {defaultI18nConfig as ɵei} from './src/i18n/config/default-i18n-config';\nexport {i18nextInit as ɵek} from './src/i18n/i18next/i18next-init';\nexport {i18nextProviders as ɵej} from './src/i18n/i18next/i18next-providers';\nexport {MockTranslationService as ɵel} from './src/i18n/testing/mock-translation.service';\nexport {defaultOccAsmConfig as ɵem} from './src/occ/adapters/asm/default-occ-asm-config';\nexport {defaultOccCartConfig as ɵen} from './src/occ/adapters/cart/default-occ-cart-config';\nexport {OccSaveCartAdapter as ɵeo} from './src/occ/adapters/cart/occ-save-cart.adapter';\nexport {defaultOccCheckoutConfig as ɵep} from './src/occ/adapters/checkout/default-occ-checkout-config';\nexport {defaultOccCostCentersConfig as ɵeq} from './src/occ/adapters/cost-center/default-occ-cost-centers-config';\nexport {defaultOccProductConfig as ɵer} from './src/occ/adapters/product/default-occ-product-config';\nexport {defaultOccSiteContextConfig as ɵes} from './src/occ/adapters/site-context/default-occ-site-context-config';\nexport {OccAddressListNormalizer as ɵew} from './src/occ/adapters/user/converters/occ-address-list-normalizer';\nexport {defaultOccUserConfig as ɵet} from './src/occ/adapters/user/default-occ-user-config';\nexport {OccUserCostCenterAdapter as ɵev} from './src/occ/adapters/user/occ-user-cost-centers.adapter';\nexport {initConfig as ɵi} from './src/occ/config-loader/occ-config-loader.module';\nexport {defaultPersonalizationConfig as ɵey} from './src/personalization/config/default-personalization-config';\nexport {interceptors as ɵez} from './src/personalization/http-interceptors/index';\nexport {OccPersonalizationIdInterceptor as ɵfa} from './src/personalization/http-interceptors/occ-personalization-id.interceptor';\nexport {OccPersonalizationTimeInterceptor as ɵfb} from './src/personalization/http-interceptors/occ-personalization-time.interceptor';\nexport {ProcessStoreModule as ɵfc} from './src/process/store/process-store.module';\nexport {getReducers as ɵfd,reducerProvider as ɵff,reducerToken as ɵfe} from './src/process/store/reducers/index';\nexport {CouponSearchPageResolver as ɵfx} from './src/product/services/coupon-search-page-meta.resolver';\nexport {effects as ɵfn} from './src/product/store/effects/index';\nexport {ProductReferencesEffects as ɵfo} from './src/product/store/effects/product-references.effect';\nexport {ProductReviewsEffects as ɵfp} from './src/product/store/effects/product-reviews.effect';\nexport {ProductsSearchEffects as ɵfq} from './src/product/store/effects/product-search.effect';\nexport {ProductEffects as ɵfr} from './src/product/store/effects/product.effect';\nexport {ProductStoreModule as ɵfh,productStoreConfigFactory as ɵfg} from './src/product/store/product-store.module';\nexport {clearProductsState as ɵfl,getReducers as ɵfi,metaReducers as ɵfm,reducerProvider as ɵfk,reducerToken as ɵfj} from './src/product/store/reducers/index';\nexport {reducer as ɵfw} from './src/product/store/reducers/product-references.reducer';\nexport {reducer as ɵfv} from './src/product/store/reducers/product-reviews.reducer';\nexport {reducer as ɵfs} from './src/product/store/reducers/product-search.reducer';\nexport {UrlParsingService as ɵx} from './src/routing/configurable-routes/url-translation/url-parsing.service';\nexport {addExternalRoutesFactory as ɵfz} from './src/routing/external-routes/external-routes.providers';\nexport {effects as ɵgf} from './src/routing/store/effects/index';\nexport {RouterEffects as ɵgg} from './src/routing/store/effects/router.effect';\nexport {CustomSerializer as ɵge,getReducers as ɵga,reducer as ɵgb,reducerProvider as ɵgd,reducerToken as ɵgc} from './src/routing/store/reducers/router.reducer';\nexport {baseSiteConfigValidator as ɵgz} from './src/site-context/config/base-site-config-validator';\nexport {defaultSiteContextConfigFactory as ɵgt} from './src/site-context/config/default-site-context-config';\nexport {contextServiceProviders as ɵgv,initializeContext as ɵgu} from './src/site-context/providers/context-service-providers';\nexport {siteContextParamsProviders as ɵgy} from './src/site-context/providers/site-context-params-providers';\nexport {SiteContextParamsService as ɵbz} from './src/site-context/services/site-context-params.service';\nexport {SiteContextRoutesHandler as ɵgw} from './src/site-context/services/site-context-routes-handler';\nexport {SiteContextUrlSerializer as ɵgx} from './src/site-context/services/site-context-url-serializer';\nexport {BaseSiteEffects as ɵgn} from './src/site-context/store/effects/base-site.effect';\nexport {CurrenciesEffects as ɵgo} from './src/site-context/store/effects/currencies.effect';\nexport {effects as ɵgm} from './src/site-context/store/effects/index';\nexport {LanguagesEffects as ɵgp} from './src/site-context/store/effects/languages.effect';\nexport {reducer as ɵgs} from './src/site-context/store/reducers/base-site.reducer';\nexport {reducer as ɵgr} from './src/site-context/store/reducers/currencies.reducer';\nexport {getReducers as ɵgj,reducerProvider as ɵgl,reducerToken as ɵgk} from './src/site-context/store/reducers/index';\nexport {reducer as ɵgq} from './src/site-context/store/reducers/languages.reducer';\nexport {SiteContextStoreModule as ɵgi,siteContextStoreConfigFactory as ɵgh} from './src/site-context/store/site-context-store.module';\nexport {CmsTicketInterceptor as ɵhb} from './src/smart-edit/http-interceptors/cms-ticket.interceptor';\nexport {interceptors as ɵha} from './src/smart-edit/http-interceptors/index';\nexport {STORAGE_SYNC_META_REDUCER as ɵm,TRANSFER_STATE_META_REDUCER as ɵl,stateMetaReducers as ɵn} from './src/state/reducers/index';\nexport {getStorageSyncReducer as ɵo} from './src/state/reducers/storage-sync.reducer';\nexport {getTransferStateReducer as ɵp} from './src/state/reducers/transfer-state.reducer';\nexport {entityLoaderReducer as ɵdw} from './src/state/utils/entity-loader/entity-loader.reducer';\nexport {entityProcessesLoaderReducer as ɵcn} from './src/state/utils/entity-processes-loader/entity-processes-loader.reducer';\nexport {entityReducer as ɵco} from './src/state/utils/entity/entity.reducer';\nexport {loaderReducer as ɵy} from './src/state/utils/loader/loader.reducer';\nexport {processesLoaderReducer as ɵcp} from './src/state/utils/processes-loader';\nexport {entityScopedLoaderReducer as ɵft} from './src/state/utils/scoped-loader/entity-scoped-loader.reducer';\nexport {scopedLoaderReducer as ɵfu} from './src/state/utils/scoped-loader/scoped-loader.reducer';\nexport {UserNotificationPreferenceAdapter as ɵeu} from './src/user/connectors/notification-preference/user-notification-preference.adapter';\nexport {UserNotificationPreferenceConnector as ɵig} from './src/user/connectors/notification-preference/user-notification-preference.connector';\nexport {UserReplenishmentOrderAdapter as ɵex} from './src/user/connectors/replenishment-order';\nexport {BillingCountriesEffect as ɵhj} from './src/user/store/effects/billing-countries.effect';\nexport {ClearMiscsDataEffect as ɵhk} from './src/user/store/effects/clear-miscs-data.effect';\nexport {ConsignmentTrackingEffects as ɵhl} from './src/user/store/effects/consignment-tracking.effect';\nexport {CustomerCouponEffects as ɵhm} from './src/user/store/effects/customer-coupon.effect';\nexport {DeliveryCountriesEffects as ɵhn} from './src/user/store/effects/delivery-countries.effect';\nexport {ForgotPasswordEffects as ɵid} from './src/user/store/effects/forgot-password.effect';\nexport {effects as ɵhi} from './src/user/store/effects/index';\nexport {NotificationPreferenceEffects as ɵho} from './src/user/store/effects/notification-preference.effect';\nexport {OrderDetailsEffect as ɵhp} from './src/user/store/effects/order-details.effect';\nexport {OrderReturnRequestEffect as ɵhq} from './src/user/store/effects/order-return-request.effect';\nexport {UserPaymentMethodsEffects as ɵhr} from './src/user/store/effects/payment-methods.effect';\nexport {ProductInterestsEffect as ɵhs} from './src/user/store/effects/product-interests.effect';\nexport {RegionsEffects as ɵht} from './src/user/store/effects/regions.effect';\nexport {ReplenishmentOrderDetailsEffect as ɵhu} from './src/user/store/effects/replenishment-order-details.effect';\nexport {ResetPasswordEffects as ɵhv} from './src/user/store/effects/reset-password.effect';\nexport {TitlesEffects as ɵhw} from './src/user/store/effects/titles.effect';\nexport {UpdateEmailEffects as ɵie} from './src/user/store/effects/update-email.effect';\nexport {UpdatePasswordEffects as ɵif} from './src/user/store/effects/update-password.effect';\nexport {UserAddressesEffects as ɵhx} from './src/user/store/effects/user-addresses.effect';\nexport {UserConsentsEffect as ɵhy} from './src/user/store/effects/user-consents.effect';\nexport {UserCostCenterEffects as ɵih} from './src/user/store/effects/user-cost-center.effect';\nexport {UserDetailsEffects as ɵhz} from './src/user/store/effects/user-details.effect';\nexport {UserOrdersEffect as ɵia} from './src/user/store/effects/user-orders.effect';\nexport {UserRegisterEffects as ɵib} from './src/user/store/effects/user-register.effect';\nexport {UserReplenishmentOrdersEffect as ɵic} from './src/user/store/effects/user-replenishment-orders.effect';\nexport {reducer as ɵik} from './src/user/store/reducers/billing-countries.reducer';\nexport {reducer as ɵiv} from './src/user/store/reducers/consignment-tracking.reducer';\nexport {reducer as ɵiw} from './src/user/store/reducers/customer-coupon.reducer';\nexport {reducer as ɵir} from './src/user/store/reducers/delivery-countries.reducer';\nexport {clearUserState as ɵhg,getReducers as ɵhd,metaReducers as ɵhh,reducerProvider as ɵhf,reducerToken as ɵhe} from './src/user/store/reducers/index';\nexport {reducer as ɵix} from './src/user/store/reducers/notification-preference.reducer';\nexport {reducer as ɵio} from './src/user/store/reducers/order-details.reducer';\nexport {reducer as ɵiq} from './src/user/store/reducers/order-return-request.reducer';\nexport {reducer as ɵim} from './src/user/store/reducers/payment-methods.reducer';\nexport {reducer as ɵiy} from './src/user/store/reducers/product-interests.reducer';\nexport {reducer as ɵit} from './src/user/store/reducers/regions.reducer';\nexport {reducer as ɵja} from './src/user/store/reducers/replenishment-order-details.reducer';\nexport {reducer as ɵiu} from './src/user/store/reducers/reset-password.reducer';\nexport {reducer as ɵis} from './src/user/store/reducers/titles.reducer';\nexport {reducer as ɵij} from './src/user/store/reducers/user-addresses.reducer';\nexport {reducer as ɵil} from './src/user/store/reducers/user-consents.reducer';\nexport {reducer as ɵiz} from './src/user/store/reducers/user-cost-center.reducer';\nexport {reducer as ɵii} from './src/user/store/reducers/user-details.reducer';\nexport {reducer as ɵin} from './src/user/store/reducers/user-orders.reducer';\nexport {reducer as ɵip} from './src/user/store/reducers/user-replenishment-orders.reducer';\nexport {UserStoreModule as ɵhc} from './src/user/store/user-store.module';"]}