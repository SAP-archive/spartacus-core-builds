import { GlobalMessageActions } from '../actions/index';
export const initialState = {
    entities: {},
};
export function reducer(state = initialState, action) {
    switch (action.type) {
        case GlobalMessageActions.ADD_MESSAGE: {
            const message = action.payload;
            if (state.entities[message.type] === undefined) {
                return Object.assign(Object.assign({}, state), { entities: Object.assign(Object.assign({}, state.entities), { [message.type]: [message.text] }) });
            }
            else {
                const currentMessages = state.entities[message.type];
                return Object.assign(Object.assign({}, state), { entities: Object.assign(Object.assign({}, state.entities), { [message.type]: [...currentMessages, message.text] }) });
            }
        }
        case GlobalMessageActions.REMOVE_MESSAGE: {
            const msgType = action.payload.type;
            const msgIndex = action.payload.index;
            if (Object.keys(state.entities).length === 0 ||
                !state.entities[msgType]) {
                return state;
            }
            const messages = [...state.entities[msgType]];
            messages.splice(msgIndex, 1);
            return Object.assign(Object.assign({}, state), { entities: Object.assign(Object.assign({}, state.entities), { [msgType]: messages }) });
        }
        case GlobalMessageActions.REMOVE_MESSAGES_BY_TYPE: {
            const entities = Object.assign(Object.assign({}, state.entities), { [action.payload]: [] });
            return Object.assign(Object.assign({}, state), { entities });
        }
    }
    return state;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2xvYmFsLW1lc3NhZ2UucmVkdWNlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFydGFjdXMvY29yZS8iLCJzb3VyY2VzIjpbInNyYy9nbG9iYWwtbWVzc2FnZS9zdG9yZS9yZWR1Y2Vycy9nbG9iYWwtbWVzc2FnZS5yZWR1Y2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUtBLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBR3hELE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBdUI7SUFDOUMsUUFBUSxFQUFFLEVBQUU7Q0FDYixDQUFDO0FBRUYsTUFBTSxVQUFVLE9BQU8sQ0FDckIsS0FBSyxHQUFHLFlBQVksRUFDcEIsTUFBZ0Q7SUFFaEQsUUFBUSxNQUFNLENBQUMsSUFBSSxFQUFFO1FBQ25CLEtBQUssb0JBQW9CLENBQUMsV0FBVyxDQUFDLENBQUM7WUFDckMsTUFBTSxPQUFPLEdBQWtCLE1BQU0sQ0FBQyxPQUFPLENBQUM7WUFFOUMsSUFBSSxLQUFLLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxTQUFTLEVBQUU7Z0JBQzlDLHVDQUNLLEtBQUssS0FDUixRQUFRLGtDQUNILEtBQUssQ0FBQyxRQUFRLEtBQ2pCLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxPQUVoQzthQUNIO2lCQUFNO2dCQUNMLE1BQU0sZUFBZSxHQUFtQixLQUFLLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDckUsdUNBQ0ssS0FBSyxLQUNSLFFBQVEsa0NBQ0gsS0FBSyxDQUFDLFFBQVEsS0FDakIsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxHQUFHLGVBQWUsRUFBRSxPQUFPLENBQUMsSUFBSSxDQUFDLE9BRXBEO2FBQ0g7U0FDRjtRQUVELEtBQUssb0JBQW9CLENBQUMsY0FBYyxDQUFDLENBQUM7WUFDeEMsTUFBTSxPQUFPLEdBQXNCLE1BQU0sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDO1lBQ3ZELE1BQU0sUUFBUSxHQUFXLE1BQU0sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDO1lBQzlDLElBQ0UsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUMsTUFBTSxLQUFLLENBQUM7Z0JBQ3hDLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsRUFDeEI7Z0JBQ0EsT0FBTyxLQUFLLENBQUM7YUFDZDtZQUVELE1BQU0sUUFBUSxHQUFHLENBQUMsR0FBRyxLQUFLLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7WUFDOUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDLENBQUM7WUFFN0IsdUNBQ0ssS0FBSyxLQUNSLFFBQVEsa0NBQ0gsS0FBSyxDQUFDLFFBQVEsS0FDakIsQ0FBQyxPQUFPLENBQUMsRUFBRSxRQUFRLE9BRXJCO1NBQ0g7UUFFRCxLQUFLLG9CQUFvQixDQUFDLHVCQUF1QixDQUFDLENBQUM7WUFDakQsTUFBTSxRQUFRLG1DQUNULEtBQUssQ0FBQyxRQUFRLEtBQ2pCLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEVBQUUsR0FDckIsQ0FBQztZQUNGLHVDQUNLLEtBQUssS0FDUixRQUFRLElBQ1I7U0FDSDtLQUNGO0lBRUQsT0FBTyxLQUFLLENBQUM7QUFDZixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVHJhbnNsYXRhYmxlIH0gZnJvbSAnLi4vLi4vLi4vaTE4bi90cmFuc2xhdGFibGUnO1xuaW1wb3J0IHtcbiAgR2xvYmFsTWVzc2FnZSxcbiAgR2xvYmFsTWVzc2FnZVR5cGUsXG59IGZyb20gJy4uLy4uL21vZGVscy9nbG9iYWwtbWVzc2FnZS5tb2RlbCc7XG5pbXBvcnQgeyBHbG9iYWxNZXNzYWdlQWN0aW9ucyB9IGZyb20gJy4uL2FjdGlvbnMvaW5kZXgnO1xuaW1wb3J0IHsgR2xvYmFsTWVzc2FnZVN0YXRlIH0gZnJvbSAnLi4vZ2xvYmFsLW1lc3NhZ2Utc3RhdGUnO1xuXG5leHBvcnQgY29uc3QgaW5pdGlhbFN0YXRlOiBHbG9iYWxNZXNzYWdlU3RhdGUgPSB7XG4gIGVudGl0aWVzOiB7fSxcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiByZWR1Y2VyKFxuICBzdGF0ZSA9IGluaXRpYWxTdGF0ZSxcbiAgYWN0aW9uOiBHbG9iYWxNZXNzYWdlQWN0aW9ucy5HbG9iYWxNZXNzYWdlQWN0aW9uXG4pOiBHbG9iYWxNZXNzYWdlU3RhdGUge1xuICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgY2FzZSBHbG9iYWxNZXNzYWdlQWN0aW9ucy5BRERfTUVTU0FHRToge1xuICAgICAgY29uc3QgbWVzc2FnZTogR2xvYmFsTWVzc2FnZSA9IGFjdGlvbi5wYXlsb2FkO1xuXG4gICAgICBpZiAoc3RhdGUuZW50aXRpZXNbbWVzc2FnZS50eXBlXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgICAgZW50aXRpZXM6IHtcbiAgICAgICAgICAgIC4uLnN0YXRlLmVudGl0aWVzLFxuICAgICAgICAgICAgW21lc3NhZ2UudHlwZV06IFttZXNzYWdlLnRleHRdLFxuICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zdCBjdXJyZW50TWVzc2FnZXM6IFRyYW5zbGF0YWJsZVtdID0gc3RhdGUuZW50aXRpZXNbbWVzc2FnZS50eXBlXTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgICBlbnRpdGllczoge1xuICAgICAgICAgICAgLi4uc3RhdGUuZW50aXRpZXMsXG4gICAgICAgICAgICBbbWVzc2FnZS50eXBlXTogWy4uLmN1cnJlbnRNZXNzYWdlcywgbWVzc2FnZS50ZXh0XSxcbiAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgICAgfVxuICAgIH1cblxuICAgIGNhc2UgR2xvYmFsTWVzc2FnZUFjdGlvbnMuUkVNT1ZFX01FU1NBR0U6IHtcbiAgICAgIGNvbnN0IG1zZ1R5cGU6IEdsb2JhbE1lc3NhZ2VUeXBlID0gYWN0aW9uLnBheWxvYWQudHlwZTtcbiAgICAgIGNvbnN0IG1zZ0luZGV4OiBudW1iZXIgPSBhY3Rpb24ucGF5bG9hZC5pbmRleDtcbiAgICAgIGlmIChcbiAgICAgICAgT2JqZWN0LmtleXMoc3RhdGUuZW50aXRpZXMpLmxlbmd0aCA9PT0gMCB8fFxuICAgICAgICAhc3RhdGUuZW50aXRpZXNbbXNnVHlwZV1cbiAgICAgICkge1xuICAgICAgICByZXR1cm4gc3RhdGU7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IG1lc3NhZ2VzID0gWy4uLnN0YXRlLmVudGl0aWVzW21zZ1R5cGVdXTtcbiAgICAgIG1lc3NhZ2VzLnNwbGljZShtc2dJbmRleCwgMSk7XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICBlbnRpdGllczoge1xuICAgICAgICAgIC4uLnN0YXRlLmVudGl0aWVzLFxuICAgICAgICAgIFttc2dUeXBlXTogbWVzc2FnZXMsXG4gICAgICAgIH0sXG4gICAgICB9O1xuICAgIH1cblxuICAgIGNhc2UgR2xvYmFsTWVzc2FnZUFjdGlvbnMuUkVNT1ZFX01FU1NBR0VTX0JZX1RZUEU6IHtcbiAgICAgIGNvbnN0IGVudGl0aWVzID0ge1xuICAgICAgICAuLi5zdGF0ZS5lbnRpdGllcyxcbiAgICAgICAgW2FjdGlvbi5wYXlsb2FkXTogW10sXG4gICAgICB9O1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIGVudGl0aWVzLFxuICAgICAgfTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gc3RhdGU7XG59XG4iXX0=