import { __assign } from "tslib";
import { InjectionToken } from '@angular/core';
import { AuthActions } from '../../../auth/store/actions/index';
import { loaderReducer } from '../../../state/utils/loader/loader.reducer';
import { CSAGENT_TOKEN_DATA, CUSTOMER_SEARCH_DATA, } from '../asm-state';
import * as fromAsmUiReducer from './asm-ui.reducer';
export function getReducers() {
    return {
        customerSearchResult: loaderReducer(CUSTOMER_SEARCH_DATA),
        asmUi: fromAsmUiReducer.reducer,
        csagentToken: loaderReducer(CSAGENT_TOKEN_DATA),
    };
}
export var reducerToken = new InjectionToken('AsmReducers');
export var reducerProvider = {
    provide: reducerToken,
    useFactory: getReducers,
};
export function clearCustomerSupportAgentAsmState(reducer) {
    return function (state, action) {
        if (action.type === AuthActions.LOGOUT_CUSTOMER_SUPPORT_AGENT) {
            state = __assign(__assign({}, state), { customerSearchResult: undefined, csagentToken: undefined });
        }
        return reducer(state, action);
    };
}
export var metaReducers = [
    clearCustomerSupportAgentAsmState,
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ac3BhcnRhY3VzL2NvcmUvIiwic291cmNlcyI6WyJzcmMvYXNtL3N0b3JlL3JlZHVjZXJzL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFZLE1BQU0sZUFBZSxDQUFDO0FBT3pELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUNoRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sNENBQTRDLENBQUM7QUFFM0UsT0FBTyxFQUVMLGtCQUFrQixFQUNsQixvQkFBb0IsR0FDckIsTUFBTSxjQUFjLENBQUM7QUFDdEIsT0FBTyxLQUFLLGdCQUFnQixNQUFNLGtCQUFrQixDQUFDO0FBR3JELE1BQU0sVUFBVSxXQUFXO0lBQ3pCLE9BQU87UUFDTCxvQkFBb0IsRUFBRSxhQUFhLENBQ2pDLG9CQUFvQixDQUNyQjtRQUNELEtBQUssRUFBRSxnQkFBZ0IsQ0FBQyxPQUFPO1FBQy9CLFlBQVksRUFBRSxhQUFhLENBQVksa0JBQWtCLENBQUM7S0FDM0QsQ0FBQztBQUNKLENBQUM7QUFFRCxNQUFNLENBQUMsSUFBTSxZQUFZLEdBRXBCLElBQUksY0FBYyxDQUE2QixhQUFhLENBQUMsQ0FBQztBQUVuRSxNQUFNLENBQUMsSUFBTSxlQUFlLEdBQWE7SUFDdkMsT0FBTyxFQUFFLFlBQVk7SUFDckIsVUFBVSxFQUFFLFdBQVc7Q0FDeEIsQ0FBQztBQUVGLE1BQU0sVUFBVSxpQ0FBaUMsQ0FDL0MsT0FBd0M7SUFFeEMsT0FBTyxVQUFVLEtBQUssRUFBRSxNQUFNO1FBQzVCLElBQUksTUFBTSxDQUFDLElBQUksS0FBSyxXQUFXLENBQUMsNkJBQTZCLEVBQUU7WUFDN0QsS0FBSyx5QkFDQSxLQUFLLEtBQ1Isb0JBQW9CLEVBQUUsU0FBUyxFQUMvQixZQUFZLEVBQUUsU0FBUyxHQUN4QixDQUFDO1NBQ0g7UUFDRCxPQUFPLE9BQU8sQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDaEMsQ0FBQyxDQUFDO0FBQ0osQ0FBQztBQUVELE1BQU0sQ0FBQyxJQUFNLFlBQVksR0FBdUI7SUFDOUMsaUNBQWlDO0NBQ2xDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3Rpb25Ub2tlbiwgUHJvdmlkZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gIEFjdGlvbixcbiAgQWN0aW9uUmVkdWNlcixcbiAgQWN0aW9uUmVkdWNlck1hcCxcbiAgTWV0YVJlZHVjZXIsXG59IGZyb20gJ0BuZ3J4L3N0b3JlJztcbmltcG9ydCB7IEF1dGhBY3Rpb25zIH0gZnJvbSAnLi4vLi4vLi4vYXV0aC9zdG9yZS9hY3Rpb25zL2luZGV4JztcbmltcG9ydCB7IGxvYWRlclJlZHVjZXIgfSBmcm9tICcuLi8uLi8uLi9zdGF0ZS91dGlscy9sb2FkZXIvbG9hZGVyLnJlZHVjZXInO1xuaW1wb3J0IHsgQ3VzdG9tZXJTZWFyY2hQYWdlIH0gZnJvbSAnLi4vLi4vbW9kZWxzL2FzbS5tb2RlbHMnO1xuaW1wb3J0IHtcbiAgQXNtU3RhdGUsXG4gIENTQUdFTlRfVE9LRU5fREFUQSxcbiAgQ1VTVE9NRVJfU0VBUkNIX0RBVEEsXG59IGZyb20gJy4uL2FzbS1zdGF0ZSc7XG5pbXBvcnQgKiBhcyBmcm9tQXNtVWlSZWR1Y2VyIGZyb20gJy4vYXNtLXVpLnJlZHVjZXInO1xuaW1wb3J0IHsgVXNlclRva2VuIH0gZnJvbSAnLi4vLi4vLi4vYXV0aC9tb2RlbHMvdG9rZW4tdHlwZXMubW9kZWwnO1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0UmVkdWNlcnMoKTogQWN0aW9uUmVkdWNlck1hcDxBc21TdGF0ZT4ge1xuICByZXR1cm4ge1xuICAgIGN1c3RvbWVyU2VhcmNoUmVzdWx0OiBsb2FkZXJSZWR1Y2VyPEN1c3RvbWVyU2VhcmNoUGFnZT4oXG4gICAgICBDVVNUT01FUl9TRUFSQ0hfREFUQVxuICAgICksXG4gICAgYXNtVWk6IGZyb21Bc21VaVJlZHVjZXIucmVkdWNlcixcbiAgICBjc2FnZW50VG9rZW46IGxvYWRlclJlZHVjZXI8VXNlclRva2VuPihDU0FHRU5UX1RPS0VOX0RBVEEpLFxuICB9O1xufVxuXG5leHBvcnQgY29uc3QgcmVkdWNlclRva2VuOiBJbmplY3Rpb25Ub2tlbjxBY3Rpb25SZWR1Y2VyTWFwPFxuICBBc21TdGF0ZVxuPj4gPSBuZXcgSW5qZWN0aW9uVG9rZW48QWN0aW9uUmVkdWNlck1hcDxBc21TdGF0ZT4+KCdBc21SZWR1Y2VycycpO1xuXG5leHBvcnQgY29uc3QgcmVkdWNlclByb3ZpZGVyOiBQcm92aWRlciA9IHtcbiAgcHJvdmlkZTogcmVkdWNlclRva2VuLFxuICB1c2VGYWN0b3J5OiBnZXRSZWR1Y2Vycyxcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBjbGVhckN1c3RvbWVyU3VwcG9ydEFnZW50QXNtU3RhdGUoXG4gIHJlZHVjZXI6IEFjdGlvblJlZHVjZXI8QXNtU3RhdGUsIEFjdGlvbj5cbik6IEFjdGlvblJlZHVjZXI8QXNtU3RhdGUsIEFjdGlvbj4ge1xuICByZXR1cm4gZnVuY3Rpb24gKHN0YXRlLCBhY3Rpb24pIHtcbiAgICBpZiAoYWN0aW9uLnR5cGUgPT09IEF1dGhBY3Rpb25zLkxPR09VVF9DVVNUT01FUl9TVVBQT1JUX0FHRU5UKSB7XG4gICAgICBzdGF0ZSA9IHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIGN1c3RvbWVyU2VhcmNoUmVzdWx0OiB1bmRlZmluZWQsXG4gICAgICAgIGNzYWdlbnRUb2tlbjogdW5kZWZpbmVkLFxuICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIHJlZHVjZXIoc3RhdGUsIGFjdGlvbik7XG4gIH07XG59XG5cbmV4cG9ydCBjb25zdCBtZXRhUmVkdWNlcnM6IE1ldGFSZWR1Y2VyPGFueT5bXSA9IFtcbiAgY2xlYXJDdXN0b21lclN1cHBvcnRBZ2VudEFzbVN0YXRlLFxuXTtcbiJdfQ==