import { OCC_USER_ID_ANONYMOUS } from '../../occ/utils/occ-constants';
export function getCartIdByUserId(cart, userId) {
    if (userId === OCC_USER_ID_ANONYMOUS) {
        return cart.guid;
    }
    return cart.code;
}
export function getWishlistName(customerId) {
    return `wishlist${customerId}`;
}
/**
 * What is a temporary cart?
 * - frontend only cart entity!
 * - can be identified in store by `temp-` prefix with some unique id (multiple carts can be created at the same time eg. active cart, wishlist)
 *
 * Why we need temporary carts?
 * - to have information about cart creation process (meta flags: loading, error - for showing loader, error message)
 * - to know if there is currently a cart creation process in progress (eg. so, we don't create more than one active cart at the same time)
 * - cart identifiers are created in the backend, so those are only known after cart is created
 *
 * Temporary cart lifecycle
 * - create cart method invoked
 * - new `temp-${uuid}` cart is created with `loading=true` state
 * - backend returns created cart
 * - normal cart entity is saved under correct id (eg. for logged user under cart `code` key)
 * - temporary cart value is set to backend response (anyone observing this cart can read code/guid from it and switch selector to normal cart)
 * - in next tick temporary cart is removed
 */
export function isTempCartId(cartId) {
    return cartId.startsWith('temp-');
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ac3BhcnRhY3VzL2NvcmUvIiwic291cmNlcyI6WyJzcmMvY2FydC91dGlscy91dGlscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUV0RSxNQUFNLFVBQVUsaUJBQWlCLENBQUMsSUFBVSxFQUFFLE1BQWM7SUFDMUQsSUFBSSxNQUFNLEtBQUsscUJBQXFCLEVBQUU7UUFDcEMsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDO0tBQ2xCO0lBQ0QsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDO0FBQ25CLENBQUM7QUFFRCxNQUFNLFVBQVUsZUFBZSxDQUFDLFVBQWtCO0lBQ2hELE9BQU8sV0FBVyxVQUFVLEVBQUUsQ0FBQztBQUNqQyxDQUFDO0FBRUQ7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBaUJHO0FBQ0gsTUFBTSxVQUFVLFlBQVksQ0FBQyxNQUFjO0lBQ3pDLE9BQU8sTUFBTSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUNwQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FydCB9IGZyb20gJy4uLy4uL21vZGVsL2NhcnQubW9kZWwnO1xuaW1wb3J0IHsgT0NDX1VTRVJfSURfQU5PTllNT1VTIH0gZnJvbSAnLi4vLi4vb2NjL3V0aWxzL29jYy1jb25zdGFudHMnO1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q2FydElkQnlVc2VySWQoY2FydDogQ2FydCwgdXNlcklkOiBzdHJpbmcpOiBzdHJpbmcge1xuICBpZiAodXNlcklkID09PSBPQ0NfVVNFUl9JRF9BTk9OWU1PVVMpIHtcbiAgICByZXR1cm4gY2FydC5ndWlkO1xuICB9XG4gIHJldHVybiBjYXJ0LmNvZGU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRXaXNobGlzdE5hbWUoY3VzdG9tZXJJZDogc3RyaW5nKTogc3RyaW5nIHtcbiAgcmV0dXJuIGB3aXNobGlzdCR7Y3VzdG9tZXJJZH1gO1xufVxuXG4vKipcbiAqIFdoYXQgaXMgYSB0ZW1wb3JhcnkgY2FydD9cbiAqIC0gZnJvbnRlbmQgb25seSBjYXJ0IGVudGl0eSFcbiAqIC0gY2FuIGJlIGlkZW50aWZpZWQgaW4gc3RvcmUgYnkgYHRlbXAtYCBwcmVmaXggd2l0aCBzb21lIHVuaXF1ZSBpZCAobXVsdGlwbGUgY2FydHMgY2FuIGJlIGNyZWF0ZWQgYXQgdGhlIHNhbWUgdGltZSBlZy4gYWN0aXZlIGNhcnQsIHdpc2hsaXN0KVxuICpcbiAqIFdoeSB3ZSBuZWVkIHRlbXBvcmFyeSBjYXJ0cz9cbiAqIC0gdG8gaGF2ZSBpbmZvcm1hdGlvbiBhYm91dCBjYXJ0IGNyZWF0aW9uIHByb2Nlc3MgKG1ldGEgZmxhZ3M6IGxvYWRpbmcsIGVycm9yIC0gZm9yIHNob3dpbmcgbG9hZGVyLCBlcnJvciBtZXNzYWdlKVxuICogLSB0byBrbm93IGlmIHRoZXJlIGlzIGN1cnJlbnRseSBhIGNhcnQgY3JlYXRpb24gcHJvY2VzcyBpbiBwcm9ncmVzcyAoZWcuIHNvLCB3ZSBkb24ndCBjcmVhdGUgbW9yZSB0aGFuIG9uZSBhY3RpdmUgY2FydCBhdCB0aGUgc2FtZSB0aW1lKVxuICogLSBjYXJ0IGlkZW50aWZpZXJzIGFyZSBjcmVhdGVkIGluIHRoZSBiYWNrZW5kLCBzbyB0aG9zZSBhcmUgb25seSBrbm93biBhZnRlciBjYXJ0IGlzIGNyZWF0ZWRcbiAqXG4gKiBUZW1wb3JhcnkgY2FydCBsaWZlY3ljbGVcbiAqIC0gY3JlYXRlIGNhcnQgbWV0aG9kIGludm9rZWRcbiAqIC0gbmV3IGB0ZW1wLSR7dXVpZH1gIGNhcnQgaXMgY3JlYXRlZCB3aXRoIGBsb2FkaW5nPXRydWVgIHN0YXRlXG4gKiAtIGJhY2tlbmQgcmV0dXJucyBjcmVhdGVkIGNhcnRcbiAqIC0gbm9ybWFsIGNhcnQgZW50aXR5IGlzIHNhdmVkIHVuZGVyIGNvcnJlY3QgaWQgKGVnLiBmb3IgbG9nZ2VkIHVzZXIgdW5kZXIgY2FydCBgY29kZWAga2V5KVxuICogLSB0ZW1wb3JhcnkgY2FydCB2YWx1ZSBpcyBzZXQgdG8gYmFja2VuZCByZXNwb25zZSAoYW55b25lIG9ic2VydmluZyB0aGlzIGNhcnQgY2FuIHJlYWQgY29kZS9ndWlkIGZyb20gaXQgYW5kIHN3aXRjaCBzZWxlY3RvciB0byBub3JtYWwgY2FydClcbiAqIC0gaW4gbmV4dCB0aWNrIHRlbXBvcmFyeSBjYXJ0IGlzIHJlbW92ZWRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzVGVtcENhcnRJZChjYXJ0SWQ6IHN0cmluZyk6IGJvb2xlYW4ge1xuICByZXR1cm4gY2FydElkLnN0YXJ0c1dpdGgoJ3RlbXAtJyk7XG59XG4iXX0=