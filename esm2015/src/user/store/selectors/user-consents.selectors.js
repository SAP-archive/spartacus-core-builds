import { createSelector } from '@ngrx/store';
import { StateUtils } from '../../../state/utils/index';
import { getUserState } from './feature.selector';
const ɵ0 = (state) => state.consents;
export const getConsentsState = createSelector(getUserState, ɵ0);
export const getConsentsValue = createSelector(getConsentsState, StateUtils.loaderValueSelector);
export const getConsentByTemplateId = (templateId) => createSelector(getConsentsValue, (templates) => templates.find((template) => template.id === templateId));
export const getConsentsLoading = createSelector(getConsentsState, StateUtils.loaderLoadingSelector);
export const getConsentsSuccess = createSelector(getConsentsState, StateUtils.loaderSuccessSelector);
export const getConsentsError = createSelector(getConsentsState, StateUtils.loaderErrorSelector);
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci1jb25zZW50cy5zZWxlY3RvcnMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ac3BhcnRhY3VzL2NvcmUvIiwic291cmNlcyI6WyJzcmMvdXNlci9zdG9yZS9zZWxlY3RvcnMvdXNlci1jb25zZW50cy5zZWxlY3RvcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGNBQWMsRUFBb0IsTUFBTSxhQUFhLENBQUM7QUFFL0QsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBR3hELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztXQUtqQixDQUFDLEtBQWdCLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxRQUFRO0FBSHJFLE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUd6QixjQUFjLENBQUMsWUFBWSxLQUF1QyxDQUFDO0FBRXZFLE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUd6QixjQUFjLENBQUMsZ0JBQWdCLEVBQUUsVUFBVSxDQUFDLG1CQUFtQixDQUFDLENBQUM7QUFFckUsTUFBTSxDQUFDLE1BQU0sc0JBQXNCLEdBQUcsQ0FDcEMsVUFBa0IsRUFDZ0MsRUFBRSxDQUNwRCxjQUFjLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxTQUFTLEVBQUUsRUFBRSxDQUM3QyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsUUFBUSxFQUFFLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxLQUFLLFVBQVUsQ0FBQyxDQUN6RCxDQUFDO0FBRUosTUFBTSxDQUFDLE1BQU0sa0JBQWtCLEdBRzNCLGNBQWMsQ0FBQyxnQkFBZ0IsRUFBRSxVQUFVLENBQUMscUJBQXFCLENBQUMsQ0FBQztBQUV2RSxNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FHM0IsY0FBYyxDQUFDLGdCQUFnQixFQUFFLFVBQVUsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO0FBRXZFLE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUd6QixjQUFjLENBQUMsZ0JBQWdCLEVBQUUsVUFBVSxDQUFDLG1CQUFtQixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVTZWxlY3RvciwgTWVtb2l6ZWRTZWxlY3RvciB9IGZyb20gJ0BuZ3J4L3N0b3JlJztcbmltcG9ydCB7IENvbnNlbnRUZW1wbGF0ZSB9IGZyb20gJy4uLy4uLy4uL21vZGVsL2NvbnNlbnQubW9kZWwnO1xuaW1wb3J0IHsgU3RhdGVVdGlscyB9IGZyb20gJy4uLy4uLy4uL3N0YXRlL3V0aWxzL2luZGV4JztcbmltcG9ydCB7IExvYWRlclN0YXRlIH0gZnJvbSAnLi4vLi4vLi4vc3RhdGUvdXRpbHMvbG9hZGVyL2xvYWRlci1zdGF0ZSc7XG5pbXBvcnQgeyBTdGF0ZVdpdGhVc2VyLCBVc2VyU3RhdGUgfSBmcm9tICcuLi91c2VyLXN0YXRlJztcbmltcG9ydCB7IGdldFVzZXJTdGF0ZSB9IGZyb20gJy4vZmVhdHVyZS5zZWxlY3Rvcic7XG5cbmV4cG9ydCBjb25zdCBnZXRDb25zZW50c1N0YXRlOiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhVc2VyLFxuICBMb2FkZXJTdGF0ZTxDb25zZW50VGVtcGxhdGVbXT5cbj4gPSBjcmVhdGVTZWxlY3RvcihnZXRVc2VyU3RhdGUsIChzdGF0ZTogVXNlclN0YXRlKSA9PiBzdGF0ZS5jb25zZW50cyk7XG5cbmV4cG9ydCBjb25zdCBnZXRDb25zZW50c1ZhbHVlOiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhVc2VyLFxuICBDb25zZW50VGVtcGxhdGVbXVxuPiA9IGNyZWF0ZVNlbGVjdG9yKGdldENvbnNlbnRzU3RhdGUsIFN0YXRlVXRpbHMubG9hZGVyVmFsdWVTZWxlY3Rvcik7XG5cbmV4cG9ydCBjb25zdCBnZXRDb25zZW50QnlUZW1wbGF0ZUlkID0gKFxuICB0ZW1wbGF0ZUlkOiBzdHJpbmdcbik6IE1lbW9pemVkU2VsZWN0b3I8U3RhdGVXaXRoVXNlciwgQ29uc2VudFRlbXBsYXRlPiA9PlxuICBjcmVhdGVTZWxlY3RvcihnZXRDb25zZW50c1ZhbHVlLCAodGVtcGxhdGVzKSA9PlxuICAgIHRlbXBsYXRlcy5maW5kKCh0ZW1wbGF0ZSkgPT4gdGVtcGxhdGUuaWQgPT09IHRlbXBsYXRlSWQpXG4gICk7XG5cbmV4cG9ydCBjb25zdCBnZXRDb25zZW50c0xvYWRpbmc6IE1lbW9pemVkU2VsZWN0b3I8XG4gIFN0YXRlV2l0aFVzZXIsXG4gIGJvb2xlYW5cbj4gPSBjcmVhdGVTZWxlY3RvcihnZXRDb25zZW50c1N0YXRlLCBTdGF0ZVV0aWxzLmxvYWRlckxvYWRpbmdTZWxlY3Rvcik7XG5cbmV4cG9ydCBjb25zdCBnZXRDb25zZW50c1N1Y2Nlc3M6IE1lbW9pemVkU2VsZWN0b3I8XG4gIFN0YXRlV2l0aFVzZXIsXG4gIGJvb2xlYW5cbj4gPSBjcmVhdGVTZWxlY3RvcihnZXRDb25zZW50c1N0YXRlLCBTdGF0ZVV0aWxzLmxvYWRlclN1Y2Nlc3NTZWxlY3Rvcik7XG5cbmV4cG9ydCBjb25zdCBnZXRDb25zZW50c0Vycm9yOiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhVc2VyLFxuICBib29sZWFuXG4+ID0gY3JlYXRlU2VsZWN0b3IoZ2V0Q29uc2VudHNTdGF0ZSwgU3RhdGVVdGlscy5sb2FkZXJFcnJvclNlbGVjdG9yKTtcbiJdfQ==