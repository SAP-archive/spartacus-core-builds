import { DefaultUrlSerializer, UrlTree } from '@angular/router';
import { SiteContextParamsService } from './site-context-params.service';
import * as ɵngcc0 from '@angular/core';
export interface ParamValuesMap {
    [name: string]: string;
}
export interface UrlTreeWithSiteContext extends UrlTree {
    siteContext?: ParamValuesMap;
}
export declare class SiteContextUrlSerializer extends DefaultUrlSerializer {
    private siteContextParams;
    private get urlEncodingParameters();
    get hasContextInRoutes(): boolean;
    constructor(siteContextParams: SiteContextParamsService);
    parse(url: string): UrlTreeWithSiteContext;
    urlExtractContextParameters(url: string): {
        url: string;
        params: ParamValuesMap;
    };
    private urlTreeIncludeContextParameters;
    serialize(tree: UrlTreeWithSiteContext): string;
    urlTreeExtractContextParameters(urlTree: UrlTreeWithSiteContext): ParamValuesMap;
    private urlIncludeContextParameters;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SiteContextUrlSerializer, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<SiteContextUrlSerializer>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2l0ZS1jb250ZXh0LXVybC1zZXJpYWxpemVyLmQudHMiLCJzb3VyY2VzIjpbInNpdGUtY29udGV4dC11cmwtc2VyaWFsaXplci5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7QUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW9CQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERlZmF1bHRVcmxTZXJpYWxpemVyLCBVcmxUcmVlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IFNpdGVDb250ZXh0UGFyYW1zU2VydmljZSB9IGZyb20gJy4vc2l0ZS1jb250ZXh0LXBhcmFtcy5zZXJ2aWNlJztcbmV4cG9ydCBpbnRlcmZhY2UgUGFyYW1WYWx1ZXNNYXAge1xuICAgIFtuYW1lOiBzdHJpbmddOiBzdHJpbmc7XG59XG5leHBvcnQgaW50ZXJmYWNlIFVybFRyZWVXaXRoU2l0ZUNvbnRleHQgZXh0ZW5kcyBVcmxUcmVlIHtcbiAgICBzaXRlQ29udGV4dD86IFBhcmFtVmFsdWVzTWFwO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgU2l0ZUNvbnRleHRVcmxTZXJpYWxpemVyIGV4dGVuZHMgRGVmYXVsdFVybFNlcmlhbGl6ZXIge1xuICAgIHByaXZhdGUgc2l0ZUNvbnRleHRQYXJhbXM7XG4gICAgcHJpdmF0ZSBnZXQgdXJsRW5jb2RpbmdQYXJhbWV0ZXJzKCk7XG4gICAgZ2V0IGhhc0NvbnRleHRJblJvdXRlcygpOiBib29sZWFuO1xuICAgIGNvbnN0cnVjdG9yKHNpdGVDb250ZXh0UGFyYW1zOiBTaXRlQ29udGV4dFBhcmFtc1NlcnZpY2UpO1xuICAgIHBhcnNlKHVybDogc3RyaW5nKTogVXJsVHJlZVdpdGhTaXRlQ29udGV4dDtcbiAgICB1cmxFeHRyYWN0Q29udGV4dFBhcmFtZXRlcnModXJsOiBzdHJpbmcpOiB7XG4gICAgICAgIHVybDogc3RyaW5nO1xuICAgICAgICBwYXJhbXM6IFBhcmFtVmFsdWVzTWFwO1xuICAgIH07XG4gICAgcHJpdmF0ZSB1cmxUcmVlSW5jbHVkZUNvbnRleHRQYXJhbWV0ZXJzO1xuICAgIHNlcmlhbGl6ZSh0cmVlOiBVcmxUcmVlV2l0aFNpdGVDb250ZXh0KTogc3RyaW5nO1xuICAgIHVybFRyZWVFeHRyYWN0Q29udGV4dFBhcmFtZXRlcnModXJsVHJlZTogVXJsVHJlZVdpdGhTaXRlQ29udGV4dCk6IFBhcmFtVmFsdWVzTWFwO1xuICAgIHByaXZhdGUgdXJsSW5jbHVkZUNvbnRleHRQYXJhbWV0ZXJzO1xufVxuIl19