import { createSelector } from '@ngrx/store';
import { getUserState } from './feature.selector';
import { StateUtils } from '../../../state/utils/index';
const ɵ0 = (state) => state.orderReturn;
export const getOrderReturnRequestState = createSelector(getUserState, ɵ0);
const ɵ1 = (state) => StateUtils.loaderValueSelector(state);
export const getOrderReturnRequest = createSelector(getOrderReturnRequestState, ɵ1);
const ɵ2 = (state) => StateUtils.loaderLoadingSelector(state);
export const getOrderReturnRequestLoading = createSelector(getOrderReturnRequestState, ɵ2);
const ɵ3 = (state) => StateUtils.loaderSuccessSelector(state) &&
    !StateUtils.loaderLoadingSelector(state);
export const getOrderReturnRequestSuccess = createSelector(getOrderReturnRequestState, ɵ3);
const ɵ4 = (state) => state.orderReturnList;
export const getOrderReturnRequestListState = createSelector(getUserState, ɵ4);
const ɵ5 = (state) => StateUtils.loaderValueSelector(state);
export const getOrderReturnRequestList = createSelector(getOrderReturnRequestListState, ɵ5);
export { ɵ0, ɵ1, ɵ2, ɵ3, ɵ4, ɵ5 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3JkZXItcmV0dXJuLXJlcXVlc3Quc2VsZWN0b3JzLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHNwYXJ0YWN1cy9jb3JlLyIsInNvdXJjZXMiOlsic3JjL3VzZXIvc3RvcmUvc2VsZWN0b3JzL29yZGVyLXJldHVybi1yZXF1ZXN0LnNlbGVjdG9ycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFvQixNQUFNLGFBQWEsQ0FBQztBQUcvRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFbEQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLDRCQUE0QixDQUFDO1dBS3ZCLENBQUMsS0FBZ0IsRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLFdBQVc7QUFIeEUsTUFBTSxDQUFDLE1BQU0sMEJBQTBCLEdBR25DLGNBQWMsQ0FBQyxZQUFZLEtBQTBDLENBQUM7V0FPeEUsQ0FBQyxLQUFpQyxFQUFFLEVBQUUsQ0FBQyxVQUFVLENBQUMsbUJBQW1CLENBQUMsS0FBSyxDQUFDO0FBTDlFLE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUc5QixjQUFjLENBQ2hCLDBCQUEwQixLQUUzQixDQUFDO1dBT0EsQ0FBQyxLQUFpQyxFQUFFLEVBQUUsQ0FBQyxVQUFVLENBQUMscUJBQXFCLENBQUMsS0FBSyxDQUFDO0FBTGhGLE1BQU0sQ0FBQyxNQUFNLDRCQUE0QixHQUdyQyxjQUFjLENBQ2hCLDBCQUEwQixLQUUzQixDQUFDO1dBT0EsQ0FBQyxLQUFpQyxFQUFFLEVBQUUsQ0FDcEMsVUFBVSxDQUFDLHFCQUFxQixDQUFDLEtBQUssQ0FBQztJQUN2QyxDQUFDLFVBQVUsQ0FBQyxxQkFBcUIsQ0FBQyxLQUFLLENBQUM7QUFQNUMsTUFBTSxDQUFDLE1BQU0sNEJBQTRCLEdBR3JDLGNBQWMsQ0FDaEIsMEJBQTBCLEtBSTNCLENBQUM7V0FLK0IsQ0FBQyxLQUFnQixFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQUMsZUFBZTtBQUg1RSxNQUFNLENBQUMsTUFBTSw4QkFBOEIsR0FHdkMsY0FBYyxDQUFDLFlBQVksS0FBOEMsQ0FBQztXQU81RSxDQUFDLEtBQXFDLEVBQUUsRUFBRSxDQUN4QyxVQUFVLENBQUMsbUJBQW1CLENBQUMsS0FBSyxDQUFDO0FBTnpDLE1BQU0sQ0FBQyxNQUFNLHlCQUF5QixHQUdsQyxjQUFjLENBQ2hCLDhCQUE4QixLQUcvQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlU2VsZWN0b3IsIE1lbW9pemVkU2VsZWN0b3IgfSBmcm9tICdAbmdyeC9zdG9yZSc7XG5pbXBvcnQgeyBSZXR1cm5SZXF1ZXN0LCBSZXR1cm5SZXF1ZXN0TGlzdCB9IGZyb20gJy4uLy4uLy4uL21vZGVsL29yZGVyLm1vZGVsJztcbmltcG9ydCB7IFN0YXRlV2l0aFVzZXIsIFVzZXJTdGF0ZSB9IGZyb20gJy4uL3VzZXItc3RhdGUnO1xuaW1wb3J0IHsgZ2V0VXNlclN0YXRlIH0gZnJvbSAnLi9mZWF0dXJlLnNlbGVjdG9yJztcbmltcG9ydCB7IExvYWRlclN0YXRlIH0gZnJvbSAnLi4vLi4vLi4vc3RhdGUvdXRpbHMvbG9hZGVyL2xvYWRlci1zdGF0ZSc7XG5pbXBvcnQgeyBTdGF0ZVV0aWxzIH0gZnJvbSAnLi4vLi4vLi4vc3RhdGUvdXRpbHMvaW5kZXgnO1xuXG5leHBvcnQgY29uc3QgZ2V0T3JkZXJSZXR1cm5SZXF1ZXN0U3RhdGU6IE1lbW9pemVkU2VsZWN0b3I8XG4gIFN0YXRlV2l0aFVzZXIsXG4gIExvYWRlclN0YXRlPFJldHVyblJlcXVlc3Q+XG4+ID0gY3JlYXRlU2VsZWN0b3IoZ2V0VXNlclN0YXRlLCAoc3RhdGU6IFVzZXJTdGF0ZSkgPT4gc3RhdGUub3JkZXJSZXR1cm4pO1xuXG5leHBvcnQgY29uc3QgZ2V0T3JkZXJSZXR1cm5SZXF1ZXN0OiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhVc2VyLFxuICBSZXR1cm5SZXF1ZXN0XG4+ID0gY3JlYXRlU2VsZWN0b3IoXG4gIGdldE9yZGVyUmV0dXJuUmVxdWVzdFN0YXRlLFxuICAoc3RhdGU6IExvYWRlclN0YXRlPFJldHVyblJlcXVlc3Q+KSA9PiBTdGF0ZVV0aWxzLmxvYWRlclZhbHVlU2VsZWN0b3Ioc3RhdGUpXG4pO1xuXG5leHBvcnQgY29uc3QgZ2V0T3JkZXJSZXR1cm5SZXF1ZXN0TG9hZGluZzogTWVtb2l6ZWRTZWxlY3RvcjxcbiAgU3RhdGVXaXRoVXNlcixcbiAgYm9vbGVhblxuPiA9IGNyZWF0ZVNlbGVjdG9yKFxuICBnZXRPcmRlclJldHVyblJlcXVlc3RTdGF0ZSxcbiAgKHN0YXRlOiBMb2FkZXJTdGF0ZTxSZXR1cm5SZXF1ZXN0PikgPT4gU3RhdGVVdGlscy5sb2FkZXJMb2FkaW5nU2VsZWN0b3Ioc3RhdGUpXG4pO1xuXG5leHBvcnQgY29uc3QgZ2V0T3JkZXJSZXR1cm5SZXF1ZXN0U3VjY2VzczogTWVtb2l6ZWRTZWxlY3RvcjxcbiAgU3RhdGVXaXRoVXNlcixcbiAgYm9vbGVhblxuPiA9IGNyZWF0ZVNlbGVjdG9yKFxuICBnZXRPcmRlclJldHVyblJlcXVlc3RTdGF0ZSxcbiAgKHN0YXRlOiBMb2FkZXJTdGF0ZTxSZXR1cm5SZXF1ZXN0PikgPT5cbiAgICBTdGF0ZVV0aWxzLmxvYWRlclN1Y2Nlc3NTZWxlY3RvcihzdGF0ZSkgJiZcbiAgICAhU3RhdGVVdGlscy5sb2FkZXJMb2FkaW5nU2VsZWN0b3Ioc3RhdGUpXG4pO1xuXG5leHBvcnQgY29uc3QgZ2V0T3JkZXJSZXR1cm5SZXF1ZXN0TGlzdFN0YXRlOiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhVc2VyLFxuICBMb2FkZXJTdGF0ZTxSZXR1cm5SZXF1ZXN0TGlzdD5cbj4gPSBjcmVhdGVTZWxlY3RvcihnZXRVc2VyU3RhdGUsIChzdGF0ZTogVXNlclN0YXRlKSA9PiBzdGF0ZS5vcmRlclJldHVybkxpc3QpO1xuXG5leHBvcnQgY29uc3QgZ2V0T3JkZXJSZXR1cm5SZXF1ZXN0TGlzdDogTWVtb2l6ZWRTZWxlY3RvcjxcbiAgU3RhdGVXaXRoVXNlcixcbiAgUmV0dXJuUmVxdWVzdExpc3Rcbj4gPSBjcmVhdGVTZWxlY3RvcihcbiAgZ2V0T3JkZXJSZXR1cm5SZXF1ZXN0TGlzdFN0YXRlLFxuICAoc3RhdGU6IExvYWRlclN0YXRlPFJldHVyblJlcXVlc3RMaXN0PikgPT5cbiAgICBTdGF0ZVV0aWxzLmxvYWRlclZhbHVlU2VsZWN0b3Ioc3RhdGUpXG4pO1xuIl19