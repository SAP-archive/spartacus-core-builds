import { createSelector } from '@ngrx/store';
import { StateLoaderSelectors } from '../../../state/utils/index';
import { getAnonymousConsentState } from './feature.selector';
var ɵ0 = function (state) { return state.templates; };
export var getAnonymousConsentTemplatesState = createSelector(getAnonymousConsentState, ɵ0);
export var getAnonymousConsentTemplatesValue = createSelector(getAnonymousConsentTemplatesState, StateLoaderSelectors.loaderValueSelector);
export var getAnonymousConsentTemplatesLoading = createSelector(getAnonymousConsentTemplatesState, StateLoaderSelectors.loaderLoadingSelector);
export var getAnonymousConsentTemplatesSuccess = createSelector(getAnonymousConsentTemplatesState, StateLoaderSelectors.loaderSuccessSelector);
export var getAnonymousConsentTemplatesError = createSelector(getAnonymousConsentTemplatesState, StateLoaderSelectors.loaderErrorSelector);
export var getAnonymousConsentTemplate = function (templateCode) {
    return createSelector(getAnonymousConsentTemplatesValue, function (templates) {
        return templates
            ? templates.find(function (template) { return template.id === templateCode; })
            : null;
    });
};
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5vbnltb3VzLWNvbnNlbnQtdGVtcGxhdGVzLnNlbGVjdG9ycy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFydGFjdXMvY29yZS8iLCJzb3VyY2VzIjpbInNyYy9hbm9ueW1vdXMtY29uc2VudHMvc3RvcmUvc2VsZWN0b3JzL2Fub255bW91cy1jb25zZW50LXRlbXBsYXRlcy5zZWxlY3RvcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGNBQWMsRUFBb0IsTUFBTSxhQUFhLENBQUM7QUFFL0QsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFHbEUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sb0JBQW9CLENBQUM7U0FLakIsVUFBQyxLQUFLLElBQUssT0FBQSxLQUFLLENBQUMsU0FBUyxFQUFmLENBQWU7QUFIdkUsTUFBTSxDQUFDLElBQU0saUNBQWlDLEdBRzFDLGNBQWMsQ0FBQyx3QkFBd0IsS0FBNkIsQ0FBQztBQUV6RSxNQUFNLENBQUMsSUFBTSxpQ0FBaUMsR0FHMUMsY0FBYyxDQUNoQixpQ0FBaUMsRUFDakMsb0JBQW9CLENBQUMsbUJBQW1CLENBQ3pDLENBQUM7QUFFRixNQUFNLENBQUMsSUFBTSxtQ0FBbUMsR0FHNUMsY0FBYyxDQUNoQixpQ0FBaUMsRUFDakMsb0JBQW9CLENBQUMscUJBQXFCLENBQzNDLENBQUM7QUFFRixNQUFNLENBQUMsSUFBTSxtQ0FBbUMsR0FHNUMsY0FBYyxDQUNoQixpQ0FBaUMsRUFDakMsb0JBQW9CLENBQUMscUJBQXFCLENBQzNDLENBQUM7QUFFRixNQUFNLENBQUMsSUFBTSxpQ0FBaUMsR0FHMUMsY0FBYyxDQUNoQixpQ0FBaUMsRUFDakMsb0JBQW9CLENBQUMsbUJBQW1CLENBQ3pDLENBQUM7QUFFRixNQUFNLENBQUMsSUFBTSwyQkFBMkIsR0FBRyxVQUN6QyxZQUFvQjtJQUVwQixPQUFPLGNBQWMsQ0FBQyxpQ0FBaUMsRUFBRSxVQUFDLFNBQVM7UUFDakUsT0FBTyxTQUFTO1lBQ2QsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsVUFBQyxRQUFRLElBQUssT0FBQSxRQUFRLENBQUMsRUFBRSxLQUFLLFlBQVksRUFBNUIsQ0FBNEIsQ0FBQztZQUM1RCxDQUFDLENBQUMsSUFBSSxDQUFDO0lBQ1gsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVTZWxlY3RvciwgTWVtb2l6ZWRTZWxlY3RvciB9IGZyb20gJ0BuZ3J4L3N0b3JlJztcbmltcG9ydCB7IENvbnNlbnRUZW1wbGF0ZSB9IGZyb20gJy4uLy4uLy4uL21vZGVsL2NvbnNlbnQubW9kZWwnO1xuaW1wb3J0IHsgU3RhdGVMb2FkZXJTZWxlY3RvcnMgfSBmcm9tICcuLi8uLi8uLi9zdGF0ZS91dGlscy9pbmRleCc7XG5pbXBvcnQgeyBMb2FkZXJTdGF0ZSB9IGZyb20gJy4uLy4uLy4uL3N0YXRlL3V0aWxzL2xvYWRlci9sb2FkZXItc3RhdGUnO1xuaW1wb3J0IHsgU3RhdGVXaXRoQW5vbnltb3VzQ29uc2VudHMgfSBmcm9tICcuLi9hbm9ueW1vdXMtY29uc2VudHMtc3RhdGUnO1xuaW1wb3J0IHsgZ2V0QW5vbnltb3VzQ29uc2VudFN0YXRlIH0gZnJvbSAnLi9mZWF0dXJlLnNlbGVjdG9yJztcblxuZXhwb3J0IGNvbnN0IGdldEFub255bW91c0NvbnNlbnRUZW1wbGF0ZXNTdGF0ZTogTWVtb2l6ZWRTZWxlY3RvcjxcbiAgU3RhdGVXaXRoQW5vbnltb3VzQ29uc2VudHMsXG4gIExvYWRlclN0YXRlPENvbnNlbnRUZW1wbGF0ZVtdPlxuPiA9IGNyZWF0ZVNlbGVjdG9yKGdldEFub255bW91c0NvbnNlbnRTdGF0ZSwgKHN0YXRlKSA9PiBzdGF0ZS50ZW1wbGF0ZXMpO1xuXG5leHBvcnQgY29uc3QgZ2V0QW5vbnltb3VzQ29uc2VudFRlbXBsYXRlc1ZhbHVlOiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhBbm9ueW1vdXNDb25zZW50cyxcbiAgQ29uc2VudFRlbXBsYXRlW11cbj4gPSBjcmVhdGVTZWxlY3RvcihcbiAgZ2V0QW5vbnltb3VzQ29uc2VudFRlbXBsYXRlc1N0YXRlLFxuICBTdGF0ZUxvYWRlclNlbGVjdG9ycy5sb2FkZXJWYWx1ZVNlbGVjdG9yXG4pO1xuXG5leHBvcnQgY29uc3QgZ2V0QW5vbnltb3VzQ29uc2VudFRlbXBsYXRlc0xvYWRpbmc6IE1lbW9pemVkU2VsZWN0b3I8XG4gIFN0YXRlV2l0aEFub255bW91c0NvbnNlbnRzLFxuICBib29sZWFuXG4+ID0gY3JlYXRlU2VsZWN0b3IoXG4gIGdldEFub255bW91c0NvbnNlbnRUZW1wbGF0ZXNTdGF0ZSxcbiAgU3RhdGVMb2FkZXJTZWxlY3RvcnMubG9hZGVyTG9hZGluZ1NlbGVjdG9yXG4pO1xuXG5leHBvcnQgY29uc3QgZ2V0QW5vbnltb3VzQ29uc2VudFRlbXBsYXRlc1N1Y2Nlc3M6IE1lbW9pemVkU2VsZWN0b3I8XG4gIFN0YXRlV2l0aEFub255bW91c0NvbnNlbnRzLFxuICBib29sZWFuXG4+ID0gY3JlYXRlU2VsZWN0b3IoXG4gIGdldEFub255bW91c0NvbnNlbnRUZW1wbGF0ZXNTdGF0ZSxcbiAgU3RhdGVMb2FkZXJTZWxlY3RvcnMubG9hZGVyU3VjY2Vzc1NlbGVjdG9yXG4pO1xuXG5leHBvcnQgY29uc3QgZ2V0QW5vbnltb3VzQ29uc2VudFRlbXBsYXRlc0Vycm9yOiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhBbm9ueW1vdXNDb25zZW50cyxcbiAgYm9vbGVhblxuPiA9IGNyZWF0ZVNlbGVjdG9yKFxuICBnZXRBbm9ueW1vdXNDb25zZW50VGVtcGxhdGVzU3RhdGUsXG4gIFN0YXRlTG9hZGVyU2VsZWN0b3JzLmxvYWRlckVycm9yU2VsZWN0b3Jcbik7XG5cbmV4cG9ydCBjb25zdCBnZXRBbm9ueW1vdXNDb25zZW50VGVtcGxhdGUgPSAoXG4gIHRlbXBsYXRlQ29kZTogc3RyaW5nXG4pOiBNZW1vaXplZFNlbGVjdG9yPFN0YXRlV2l0aEFub255bW91c0NvbnNlbnRzLCBDb25zZW50VGVtcGxhdGU+ID0+IHtcbiAgcmV0dXJuIGNyZWF0ZVNlbGVjdG9yKGdldEFub255bW91c0NvbnNlbnRUZW1wbGF0ZXNWYWx1ZSwgKHRlbXBsYXRlcykgPT4ge1xuICAgIHJldHVybiB0ZW1wbGF0ZXNcbiAgICAgID8gdGVtcGxhdGVzLmZpbmQoKHRlbXBsYXRlKSA9PiB0ZW1wbGF0ZS5pZCA9PT0gdGVtcGxhdGVDb2RlKVxuICAgICAgOiBudWxsO1xuICB9KTtcbn07XG4iXX0=