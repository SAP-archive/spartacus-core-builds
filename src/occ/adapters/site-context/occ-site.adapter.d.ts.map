{"version":3,"file":"occ-site.adapter.d.ts","sources":["occ-site.adapter.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Country, CountryType, Region } from '../../../model/address.model';\nimport { BaseSite, Currency, Language } from '../../../model/misc.model';\nimport { SiteAdapter } from '../../../site-context/connectors/site.adapter';\nimport { ConverterService } from '../../../util/converter.service';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\nexport declare class OccSiteAdapter implements SiteAdapter {\n    protected http: HttpClient;\n    protected occEndpointsService: OccEndpointsService;\n    protected converterService: ConverterService;\n    constructor(http: HttpClient, occEndpointsService: OccEndpointsService, converterService: ConverterService);\n    loadLanguages(): Observable<Language[]>;\n    loadCurrencies(): Observable<Currency[]>;\n    loadCountries(type?: CountryType): Observable<Country[]>;\n    loadRegions(countryIsoCode: string): Observable<Region[]>;\n    /**\n     * There is no OCC API to load one site based on Uid.\n     * So, we have to load all sites, and find the one from the list.\n     */\n    loadBaseSite(siteUid?: string): Observable<BaseSite>;\n    loadBaseSites(): Observable<BaseSite[]>;\n}\n"]}