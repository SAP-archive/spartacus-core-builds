import { EntityFailAction, EntityLoadAction, EntitySuccessAction, } from '../../../state/utils/entity-loader/entity-loader.action';
import { MULTI_CART_DATA } from '../multi-cart-state';
export const CREATE_CART = '[Cart] Create Cart';
export const CREATE_CART_FAIL = '[Cart] Create Cart Fail';
export const CREATE_CART_SUCCESS = '[Cart] Create Cart Success';
export const LOAD_CART = '[Cart] Load Cart';
export const LOAD_CART_FAIL = '[Cart] Load Cart Fail';
export const LOAD_CART_SUCCESS = '[Cart] Load Cart Success';
export const ADD_EMAIL_TO_CART = '[Cart] Add Email to Cart';
export const ADD_EMAIL_TO_CART_FAIL = '[Cart] Add Email to Cart Fail';
export const ADD_EMAIL_TO_CART_SUCCESS = '[Cart] Add Email to Cart Success';
export const MERGE_CART = '[Cart] Merge Cart';
export const MERGE_CART_SUCCESS = '[Cart] Merge Cart Success';
export const RESET_CART_DETAILS = '[Cart] Reset Cart Details';
export const CLEAR_EXPIRED_COUPONS = '[Cart] Clear Expired Coupon';
export const CLEAR_CART = '[Cart] Clear Cart';
export const DELETE_CART = '[Cart] Delete Cart';
export const DELETE_CART_FAIL = '[Cart] Delete Cart Fail';
export class CreateCart extends EntityLoadAction {
    constructor(payload) {
        super(MULTI_CART_DATA, payload.tempCartId);
        this.payload = payload;
        this.type = CREATE_CART;
    }
}
export class CreateCartFail extends EntityFailAction {
    constructor(payload) {
        super(MULTI_CART_DATA, payload.tempCartId);
        this.payload = payload;
        this.type = CREATE_CART_FAIL;
    }
}
export class CreateCartSuccess extends EntitySuccessAction {
    constructor(payload) {
        super(MULTI_CART_DATA, payload.cartId);
        this.payload = payload;
        this.type = CREATE_CART_SUCCESS;
    }
}
export class AddEmailToCart {
    constructor(payload) {
        this.payload = payload;
        this.type = ADD_EMAIL_TO_CART;
    }
}
export class AddEmailToCartFail {
    constructor(payload) {
        this.payload = payload;
        this.type = ADD_EMAIL_TO_CART_FAIL;
    }
}
export class AddEmailToCartSuccess {
    constructor(payload) {
        this.payload = payload;
        this.type = ADD_EMAIL_TO_CART_SUCCESS;
    }
}
export class LoadCart {
    constructor(payload) {
        this.payload = payload;
        this.type = LOAD_CART;
    }
}
export class LoadCartFail {
    constructor(payload) {
        this.payload = payload;
        this.type = LOAD_CART_FAIL;
    }
}
export class LoadCartSuccess {
    constructor(payload) {
        this.payload = payload;
        this.type = LOAD_CART_SUCCESS;
    }
}
export class MergeCart {
    constructor(payload) {
        this.payload = payload;
        this.type = MERGE_CART;
    }
}
export class MergeCartSuccess {
    constructor(payload) {
        this.payload = payload;
        this.type = MERGE_CART_SUCCESS;
    }
}
export class ResetCartDetails {
    constructor() {
        this.type = RESET_CART_DETAILS;
    }
}
export class ClearExpiredCoupons {
    constructor(payload) {
        this.payload = payload;
        this.type = CLEAR_EXPIRED_COUPONS;
    }
}
export class ClearCart {
    constructor() {
        this.type = CLEAR_CART;
    }
}
export class DeleteCart {
    constructor(payload) {
        this.payload = payload;
        this.type = DELETE_CART;
    }
}
export class DeleteCartFail {
    constructor(payload) {
        this.payload = payload;
        this.type = DELETE_CART_FAIL;
    }
}
//# sourceMappingURL=data:application/json;base64,