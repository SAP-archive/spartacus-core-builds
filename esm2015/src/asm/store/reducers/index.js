import { InjectionToken } from '@angular/core';
import { AuthActions } from '../../../auth/store/actions/index';
import { loaderReducer } from '../../../state/utils/loader/loader.reducer';
import { CSAGENT_TOKEN_DATA, CUSTOMER_SEARCH_DATA, } from '../asm-state';
import * as fromAsmUiReducer from './asm-ui.reducer';
export function getReducers() {
    return {
        customerSearchResult: loaderReducer(CUSTOMER_SEARCH_DATA),
        asmUi: fromAsmUiReducer.reducer,
        csagentToken: loaderReducer(CSAGENT_TOKEN_DATA),
    };
}
export const reducerToken = new InjectionToken('AsmReducers');
export const reducerProvider = {
    provide: reducerToken,
    useFactory: getReducers,
};
export function clearCustomerSupportAgentAsmState(reducer) {
    return function (state, action) {
        if (action.type === AuthActions.LOGOUT_CUSTOMER_SUPPORT_AGENT) {
            state = Object.assign(Object.assign({}, state), { customerSearchResult: undefined, csagentToken: undefined });
        }
        return reducer(state, action);
    };
}
export const metaReducers = [
    clearCustomerSupportAgentAsmState,
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlL3NyYy9hc20vc3RvcmUvcmVkdWNlcnMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGNBQWMsRUFBWSxNQUFNLGVBQWUsQ0FBQztBQU96RCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDaEUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDRDQUE0QyxDQUFDO0FBRTNFLE9BQU8sRUFFTCxrQkFBa0IsRUFDbEIsb0JBQW9CLEdBQ3JCLE1BQU0sY0FBYyxDQUFDO0FBQ3RCLE9BQU8sS0FBSyxnQkFBZ0IsTUFBTSxrQkFBa0IsQ0FBQztBQUdyRCxNQUFNLFVBQVUsV0FBVztJQUN6QixPQUFPO1FBQ0wsb0JBQW9CLEVBQUUsYUFBYSxDQUNqQyxvQkFBb0IsQ0FDckI7UUFDRCxLQUFLLEVBQUUsZ0JBQWdCLENBQUMsT0FBTztRQUMvQixZQUFZLEVBQUUsYUFBYSxDQUFZLGtCQUFrQixDQUFDO0tBQzNELENBQUM7QUFDSixDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUVwQixJQUFJLGNBQWMsQ0FBNkIsYUFBYSxDQUFDLENBQUM7QUFFbkUsTUFBTSxDQUFDLE1BQU0sZUFBZSxHQUFhO0lBQ3ZDLE9BQU8sRUFBRSxZQUFZO0lBQ3JCLFVBQVUsRUFBRSxXQUFXO0NBQ3hCLENBQUM7QUFFRixNQUFNLFVBQVUsaUNBQWlDLENBQy9DLE9BQXdDO0lBRXhDLE9BQU8sVUFBVSxLQUFLLEVBQUUsTUFBTTtRQUM1QixJQUFJLE1BQU0sQ0FBQyxJQUFJLEtBQUssV0FBVyxDQUFDLDZCQUE2QixFQUFFO1lBQzdELEtBQUssbUNBQ0EsS0FBSyxLQUNSLG9CQUFvQixFQUFFLFNBQVMsRUFDL0IsWUFBWSxFQUFFLFNBQVMsR0FDeEIsQ0FBQztTQUNIO1FBQ0QsT0FBTyxPQUFPLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ2hDLENBQUMsQ0FBQztBQUNKLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQXVCO0lBQzlDLGlDQUFpQztDQUNsQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0aW9uVG9rZW4sIFByb3ZpZGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICBBY3Rpb24sXG4gIEFjdGlvblJlZHVjZXIsXG4gIEFjdGlvblJlZHVjZXJNYXAsXG4gIE1ldGFSZWR1Y2VyLFxufSBmcm9tICdAbmdyeC9zdG9yZSc7XG5pbXBvcnQgeyBBdXRoQWN0aW9ucyB9IGZyb20gJy4uLy4uLy4uL2F1dGgvc3RvcmUvYWN0aW9ucy9pbmRleCc7XG5pbXBvcnQgeyBsb2FkZXJSZWR1Y2VyIH0gZnJvbSAnLi4vLi4vLi4vc3RhdGUvdXRpbHMvbG9hZGVyL2xvYWRlci5yZWR1Y2VyJztcbmltcG9ydCB7IEN1c3RvbWVyU2VhcmNoUGFnZSB9IGZyb20gJy4uLy4uL21vZGVscy9hc20ubW9kZWxzJztcbmltcG9ydCB7XG4gIEFzbVN0YXRlLFxuICBDU0FHRU5UX1RPS0VOX0RBVEEsXG4gIENVU1RPTUVSX1NFQVJDSF9EQVRBLFxufSBmcm9tICcuLi9hc20tc3RhdGUnO1xuaW1wb3J0ICogYXMgZnJvbUFzbVVpUmVkdWNlciBmcm9tICcuL2FzbS11aS5yZWR1Y2VyJztcbmltcG9ydCB7IFVzZXJUb2tlbiB9IGZyb20gJy4uLy4uLy4uL2F1dGgvbW9kZWxzL3Rva2VuLXR5cGVzLm1vZGVsJztcblxuZXhwb3J0IGZ1bmN0aW9uIGdldFJlZHVjZXJzKCk6IEFjdGlvblJlZHVjZXJNYXA8QXNtU3RhdGU+IHtcbiAgcmV0dXJuIHtcbiAgICBjdXN0b21lclNlYXJjaFJlc3VsdDogbG9hZGVyUmVkdWNlcjxDdXN0b21lclNlYXJjaFBhZ2U+KFxuICAgICAgQ1VTVE9NRVJfU0VBUkNIX0RBVEFcbiAgICApLFxuICAgIGFzbVVpOiBmcm9tQXNtVWlSZWR1Y2VyLnJlZHVjZXIsXG4gICAgY3NhZ2VudFRva2VuOiBsb2FkZXJSZWR1Y2VyPFVzZXJUb2tlbj4oQ1NBR0VOVF9UT0tFTl9EQVRBKSxcbiAgfTtcbn1cblxuZXhwb3J0IGNvbnN0IHJlZHVjZXJUb2tlbjogSW5qZWN0aW9uVG9rZW48QWN0aW9uUmVkdWNlck1hcDxcbiAgQXNtU3RhdGVcbj4+ID0gbmV3IEluamVjdGlvblRva2VuPEFjdGlvblJlZHVjZXJNYXA8QXNtU3RhdGU+PignQXNtUmVkdWNlcnMnKTtcblxuZXhwb3J0IGNvbnN0IHJlZHVjZXJQcm92aWRlcjogUHJvdmlkZXIgPSB7XG4gIHByb3ZpZGU6IHJlZHVjZXJUb2tlbixcbiAgdXNlRmFjdG9yeTogZ2V0UmVkdWNlcnMsXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gY2xlYXJDdXN0b21lclN1cHBvcnRBZ2VudEFzbVN0YXRlKFxuICByZWR1Y2VyOiBBY3Rpb25SZWR1Y2VyPEFzbVN0YXRlLCBBY3Rpb24+XG4pOiBBY3Rpb25SZWR1Y2VyPEFzbVN0YXRlLCBBY3Rpb24+IHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChzdGF0ZSwgYWN0aW9uKSB7XG4gICAgaWYgKGFjdGlvbi50eXBlID09PSBBdXRoQWN0aW9ucy5MT0dPVVRfQ1VTVE9NRVJfU1VQUE9SVF9BR0VOVCkge1xuICAgICAgc3RhdGUgPSB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICBjdXN0b21lclNlYXJjaFJlc3VsdDogdW5kZWZpbmVkLFxuICAgICAgICBjc2FnZW50VG9rZW46IHVuZGVmaW5lZCxcbiAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiByZWR1Y2VyKHN0YXRlLCBhY3Rpb24pO1xuICB9O1xufVxuXG5leHBvcnQgY29uc3QgbWV0YVJlZHVjZXJzOiBNZXRhUmVkdWNlcjxhbnk+W10gPSBbXG4gIGNsZWFyQ3VzdG9tZXJTdXBwb3J0QWdlbnRBc21TdGF0ZSxcbl07XG4iXX0=