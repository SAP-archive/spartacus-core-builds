import { PROCESS_FEATURE } from '../../../process/store/process-state';
import { StateUtils } from '../../../state/utils/index';
import { PLACED_ORDER_PROCESS_ID } from '../checkout-state';
export const SCHEDULE_REPLENISHMENT_ORDER = '[Checkout] Schedule Replenishment Order';
export const SCHEDULE_REPLENISHMENT_ORDER_SUCCESS = '[Checkout] Schedule Replenishment Order Success';
export const SCHEDULE_REPLENISHMENT_ORDER_FAIL = '[Checkout] Schedule Replenishment Order Fail';
export const CLEAR_SCHEDULE_REPLENISHMENT_ORDER = '[Checkout] Clear Schedule Replenishment Data';
export class ScheduleReplenishmentOrder extends StateUtils.EntityLoadAction {
    constructor(payload) {
        super(PROCESS_FEATURE, PLACED_ORDER_PROCESS_ID);
        this.payload = payload;
        this.type = SCHEDULE_REPLENISHMENT_ORDER;
    }
}
export class ScheduleReplenishmentOrderSuccess extends StateUtils.EntitySuccessAction {
    constructor(payload) {
        super(PROCESS_FEATURE, PLACED_ORDER_PROCESS_ID);
        this.payload = payload;
        this.type = SCHEDULE_REPLENISHMENT_ORDER_SUCCESS;
    }
}
export class ScheduleReplenishmentOrderFail extends StateUtils.EntityFailAction {
    constructor(payload) {
        super(PROCESS_FEATURE, PLACED_ORDER_PROCESS_ID, payload);
        this.payload = payload;
        this.type = SCHEDULE_REPLENISHMENT_ORDER_FAIL;
    }
}
export class ClearScheduleReplenishmentOrderAction extends StateUtils.EntityLoaderResetAction {
    constructor() {
        super(PROCESS_FEATURE, PLACED_ORDER_PROCESS_ID);
        this.type = CLEAR_SCHEDULE_REPLENISHMENT_ORDER;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVwbGVuaXNobWVudC1vcmRlci5hY3Rpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlL3NyYy9jaGVja291dC9zdG9yZS9hY3Rpb25zL3JlcGxlbmlzaG1lbnQtb3JkZXIuYWN0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUlBLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUN2RSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDeEQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFNUQsTUFBTSxDQUFDLE1BQU0sNEJBQTRCLEdBQ3ZDLHlDQUF5QyxDQUFDO0FBQzVDLE1BQU0sQ0FBQyxNQUFNLG9DQUFvQyxHQUMvQyxpREFBaUQsQ0FBQztBQUNwRCxNQUFNLENBQUMsTUFBTSxpQ0FBaUMsR0FDNUMsOENBQThDLENBQUM7QUFDakQsTUFBTSxDQUFDLE1BQU0sa0NBQWtDLEdBQzdDLDhDQUE4QyxDQUFDO0FBRWpELE1BQU0sT0FBTywwQkFBMkIsU0FBUSxVQUFVLENBQUMsZ0JBQWdCO0lBRXpFLFlBQ1MsT0FLTjtRQUVELEtBQUssQ0FBQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsQ0FBQztRQVB6QyxZQUFPLEdBQVAsT0FBTyxDQUtiO1FBUE0sU0FBSSxHQUFHLDRCQUE0QixDQUFDO0lBVTdDLENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyxpQ0FBa0MsU0FBUSxVQUFVLENBQUMsbUJBQW1CO0lBRW5GLFlBQW1CLE9BQTJCO1FBQzVDLEtBQUssQ0FBQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsQ0FBQztRQUQvQixZQUFPLEdBQVAsT0FBTyxDQUFvQjtRQURyQyxTQUFJLEdBQUcsb0NBQW9DLENBQUM7SUFHckQsQ0FBQztDQUNGO0FBRUQsTUFBTSxPQUFPLDhCQUErQixTQUFRLFVBQVUsQ0FBQyxnQkFBZ0I7SUFFN0UsWUFBbUIsT0FBWTtRQUM3QixLQUFLLENBQUMsZUFBZSxFQUFFLHVCQUF1QixFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBRHhDLFlBQU8sR0FBUCxPQUFPLENBQUs7UUFEdEIsU0FBSSxHQUFHLGlDQUFpQyxDQUFDO0lBR2xELENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyxxQ0FBc0MsU0FBUSxVQUFVLENBQUMsdUJBQXVCO0lBRTNGO1FBQ0UsS0FBSyxDQUFDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxDQUFDO1FBRnpDLFNBQUksR0FBRyxrQ0FBa0MsQ0FBQztJQUduRCxDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBSZXBsZW5pc2htZW50T3JkZXIsXG4gIFNjaGVkdWxlUmVwbGVuaXNobWVudEZvcm0sXG59IGZyb20gJy4uLy4uLy4uL21vZGVsL3JlcGxlbmlzaG1lbnQtb3JkZXIubW9kZWwnO1xuaW1wb3J0IHsgUFJPQ0VTU19GRUFUVVJFIH0gZnJvbSAnLi4vLi4vLi4vcHJvY2Vzcy9zdG9yZS9wcm9jZXNzLXN0YXRlJztcbmltcG9ydCB7IFN0YXRlVXRpbHMgfSBmcm9tICcuLi8uLi8uLi9zdGF0ZS91dGlscy9pbmRleCc7XG5pbXBvcnQgeyBQTEFDRURfT1JERVJfUFJPQ0VTU19JRCB9IGZyb20gJy4uL2NoZWNrb3V0LXN0YXRlJztcblxuZXhwb3J0IGNvbnN0IFNDSEVEVUxFX1JFUExFTklTSE1FTlRfT1JERVIgPVxuICAnW0NoZWNrb3V0XSBTY2hlZHVsZSBSZXBsZW5pc2htZW50IE9yZGVyJztcbmV4cG9ydCBjb25zdCBTQ0hFRFVMRV9SRVBMRU5JU0hNRU5UX09SREVSX1NVQ0NFU1MgPVxuICAnW0NoZWNrb3V0XSBTY2hlZHVsZSBSZXBsZW5pc2htZW50IE9yZGVyIFN1Y2Nlc3MnO1xuZXhwb3J0IGNvbnN0IFNDSEVEVUxFX1JFUExFTklTSE1FTlRfT1JERVJfRkFJTCA9XG4gICdbQ2hlY2tvdXRdIFNjaGVkdWxlIFJlcGxlbmlzaG1lbnQgT3JkZXIgRmFpbCc7XG5leHBvcnQgY29uc3QgQ0xFQVJfU0NIRURVTEVfUkVQTEVOSVNITUVOVF9PUkRFUiA9XG4gICdbQ2hlY2tvdXRdIENsZWFyIFNjaGVkdWxlIFJlcGxlbmlzaG1lbnQgRGF0YSc7XG5cbmV4cG9ydCBjbGFzcyBTY2hlZHVsZVJlcGxlbmlzaG1lbnRPcmRlciBleHRlbmRzIFN0YXRlVXRpbHMuRW50aXR5TG9hZEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBTQ0hFRFVMRV9SRVBMRU5JU0hNRU5UX09SREVSO1xuICBjb25zdHJ1Y3RvcihcbiAgICBwdWJsaWMgcGF5bG9hZDoge1xuICAgICAgY2FydElkOiBzdHJpbmc7XG4gICAgICBzY2hlZHVsZVJlcGxlbmlzaG1lbnRGb3JtOiBTY2hlZHVsZVJlcGxlbmlzaG1lbnRGb3JtO1xuICAgICAgdGVybXNDaGVja2VkOiBib29sZWFuO1xuICAgICAgdXNlcklkOiBzdHJpbmc7XG4gICAgfVxuICApIHtcbiAgICBzdXBlcihQUk9DRVNTX0ZFQVRVUkUsIFBMQUNFRF9PUkRFUl9QUk9DRVNTX0lEKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgU2NoZWR1bGVSZXBsZW5pc2htZW50T3JkZXJTdWNjZXNzIGV4dGVuZHMgU3RhdGVVdGlscy5FbnRpdHlTdWNjZXNzQWN0aW9uIHtcbiAgcmVhZG9ubHkgdHlwZSA9IFNDSEVEVUxFX1JFUExFTklTSE1FTlRfT1JERVJfU1VDQ0VTUztcbiAgY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IFJlcGxlbmlzaG1lbnRPcmRlcikge1xuICAgIHN1cGVyKFBST0NFU1NfRkVBVFVSRSwgUExBQ0VEX09SREVSX1BST0NFU1NfSUQpO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBTY2hlZHVsZVJlcGxlbmlzaG1lbnRPcmRlckZhaWwgZXh0ZW5kcyBTdGF0ZVV0aWxzLkVudGl0eUZhaWxBY3Rpb24ge1xuICByZWFkb25seSB0eXBlID0gU0NIRURVTEVfUkVQTEVOSVNITUVOVF9PUkRFUl9GQUlMO1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgcGF5bG9hZDogYW55KSB7XG4gICAgc3VwZXIoUFJPQ0VTU19GRUFUVVJFLCBQTEFDRURfT1JERVJfUFJPQ0VTU19JRCwgcGF5bG9hZCk7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIENsZWFyU2NoZWR1bGVSZXBsZW5pc2htZW50T3JkZXJBY3Rpb24gZXh0ZW5kcyBTdGF0ZVV0aWxzLkVudGl0eUxvYWRlclJlc2V0QWN0aW9uIHtcbiAgcmVhZG9ubHkgdHlwZSA9IENMRUFSX1NDSEVEVUxFX1JFUExFTklTSE1FTlRfT1JERVI7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKFBST0NFU1NfRkVBVFVSRSwgUExBQ0VEX09SREVSX1BST0NFU1NfSUQpO1xuICB9XG59XG5cbmV4cG9ydCB0eXBlIFJlcGxlbmlzaG1lbnRPcmRlckFjdGlvbnMgPVxuICB8IFNjaGVkdWxlUmVwbGVuaXNobWVudE9yZGVyXG4gIHwgU2NoZWR1bGVSZXBsZW5pc2htZW50T3JkZXJTdWNjZXNzXG4gIHwgU2NoZWR1bGVSZXBsZW5pc2htZW50T3JkZXJGYWlsXG4gIHwgQ2xlYXJTY2hlZHVsZVJlcGxlbmlzaG1lbnRPcmRlckFjdGlvbjtcbiJdfQ==