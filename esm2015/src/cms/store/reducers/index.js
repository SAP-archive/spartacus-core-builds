/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { InjectionToken } from '@angular/core';
import { combineReducers, } from '@ngrx/store';
import { AuthActions } from '../../../auth/store/actions/index';
import { PageType } from '../../../model/cms.model';
import { SiteContextActions } from '../../../site-context/store/actions/index';
import { entityLoaderReducer } from '../../../state/utils/entity-loader/entity-loader.reducer';
import { COMPONENT_ENTITY, NAVIGATION_DETAIL_ENTITY, } from '../cms-state';
import * as fromNavigation from './navigation-entry-item.reducer';
import * as fromPageReducer from './page-data.reducer';
import * as fromPageIndexReducer from './page-index.reducer';
/**
 * @return {?}
 */
export function getReducers() {
    return {
        page: combineReducers({
            pageData: fromPageReducer.reducer,
            index: combineReducers({
                content: entityLoaderReducer(PageType.CONTENT_PAGE, fromPageIndexReducer.reducer(PageType.CONTENT_PAGE)),
                product: entityLoaderReducer(PageType.PRODUCT_PAGE, fromPageIndexReducer.reducer(PageType.PRODUCT_PAGE)),
                category: entityLoaderReducer(PageType.CATEGORY_PAGE, fromPageIndexReducer.reducer(PageType.CATEGORY_PAGE)),
                catalog: entityLoaderReducer(PageType.CATALOG_PAGE, fromPageIndexReducer.reducer(PageType.CATALOG_PAGE)),
            }),
        }),
        component: entityLoaderReducer(COMPONENT_ENTITY),
        navigation: entityLoaderReducer(NAVIGATION_DETAIL_ENTITY, fromNavigation.reducer),
    };
}
/** @type {?} */
export const reducerToken = new InjectionToken('CmsReducers');
/** @type {?} */
export const reducerProvider = {
    provide: reducerToken,
    useFactory: getReducers,
};
/**
 * @param {?} reducer
 * @return {?}
 */
export function clearCmsState(reducer) {
    return (/**
     * @param {?} state
     * @param {?} action
     * @return {?}
     */
    function (state, action) {
        if (action.type === SiteContextActions.LANGUAGE_CHANGE ||
            action.type === AuthActions.LOGOUT ||
            action.type === AuthActions.LOGIN) {
            state = undefined;
        }
        return reducer(state, action);
    });
}
/** @type {?} */
export const metaReducers = [clearCmsState];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ac3BhcnRhY3VzL2NvcmUvIiwic291cmNlcyI6WyJzcmMvY21zL3N0b3JlL3JlZHVjZXJzL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFZLE1BQU0sZUFBZSxDQUFDO0FBQ3pELE9BQU8sRUFJTCxlQUFlLEdBRWhCLE1BQU0sYUFBYSxDQUFDO0FBQ3JCLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUNoRSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDcEQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sMkNBQTJDLENBQUM7QUFDL0UsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sMERBQTBELENBQUM7QUFFL0YsT0FBTyxFQUVMLGdCQUFnQixFQUNoQix3QkFBd0IsR0FFekIsTUFBTSxjQUFjLENBQUM7QUFDdEIsT0FBTyxLQUFLLGNBQWMsTUFBTSxpQ0FBaUMsQ0FBQztBQUNsRSxPQUFPLEtBQUssZUFBZSxNQUFNLHFCQUFxQixDQUFDO0FBQ3ZELE9BQU8sS0FBSyxvQkFBb0IsTUFBTSxzQkFBc0IsQ0FBQzs7OztBQUU3RCxNQUFNLFVBQVUsV0FBVztJQUN6QixPQUFPO1FBQ0wsSUFBSSxFQUFFLGVBQWUsQ0FBQztZQUNwQixRQUFRLEVBQUUsZUFBZSxDQUFDLE9BQU87WUFDakMsS0FBSyxFQUFFLGVBQWUsQ0FBQztnQkFDckIsT0FBTyxFQUFFLG1CQUFtQixDQUMxQixRQUFRLENBQUMsWUFBWSxFQUNyQixvQkFBb0IsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxDQUNwRDtnQkFDRCxPQUFPLEVBQUUsbUJBQW1CLENBQzFCLFFBQVEsQ0FBQyxZQUFZLEVBQ3JCLG9CQUFvQixDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLENBQ3BEO2dCQUNELFFBQVEsRUFBRSxtQkFBbUIsQ0FDM0IsUUFBUSxDQUFDLGFBQWEsRUFDdEIsb0JBQW9CLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsQ0FDckQ7Z0JBQ0QsT0FBTyxFQUFFLG1CQUFtQixDQUMxQixRQUFRLENBQUMsWUFBWSxFQUNyQixvQkFBb0IsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxDQUNwRDthQUNGLENBQUM7U0FDSCxDQUFDO1FBQ0YsU0FBUyxFQUFFLG1CQUFtQixDQUFDLGdCQUFnQixDQUFDO1FBQ2hELFVBQVUsRUFBRSxtQkFBbUIsQ0FDN0Isd0JBQXdCLEVBQ3hCLGNBQWMsQ0FBQyxPQUFPLENBQ3ZCO0tBQ0YsQ0FBQztBQUNKLENBQUM7O0FBRUQsTUFBTSxPQUFPLFlBQVksR0FFckIsSUFBSSxjQUFjLENBQTZCLGFBQWEsQ0FBQzs7QUFFakUsTUFBTSxPQUFPLGVBQWUsR0FBYTtJQUN2QyxPQUFPLEVBQUUsWUFBWTtJQUNyQixVQUFVLEVBQUUsV0FBVztDQUN4Qjs7Ozs7QUFFRCxNQUFNLFVBQVUsYUFBYSxDQUMzQixPQUE0QztJQUU1Qzs7Ozs7SUFBTyxVQUFTLEtBQUssRUFBRSxNQUFNO1FBQzNCLElBQ0UsTUFBTSxDQUFDLElBQUksS0FBSyxrQkFBa0IsQ0FBQyxlQUFlO1lBQ2xELE1BQU0sQ0FBQyxJQUFJLEtBQUssV0FBVyxDQUFDLE1BQU07WUFDbEMsTUFBTSxDQUFDLElBQUksS0FBSyxXQUFXLENBQUMsS0FBSyxFQUNqQztZQUNBLEtBQUssR0FBRyxTQUFTLENBQUM7U0FDbkI7UUFDRCxPQUFPLE9BQU8sQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDaEMsQ0FBQyxFQUFDO0FBQ0osQ0FBQzs7QUFFRCxNQUFNLE9BQU8sWUFBWSxHQUFnQyxDQUFDLGFBQWEsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGlvblRva2VuLCBQcm92aWRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgQWN0aW9uLFxuICBBY3Rpb25SZWR1Y2VyLFxuICBBY3Rpb25SZWR1Y2VyTWFwLFxuICBjb21iaW5lUmVkdWNlcnMsXG4gIE1ldGFSZWR1Y2VyLFxufSBmcm9tICdAbmdyeC9zdG9yZSc7XG5pbXBvcnQgeyBBdXRoQWN0aW9ucyB9IGZyb20gJy4uLy4uLy4uL2F1dGgvc3RvcmUvYWN0aW9ucy9pbmRleCc7XG5pbXBvcnQgeyBQYWdlVHlwZSB9IGZyb20gJy4uLy4uLy4uL21vZGVsL2Ntcy5tb2RlbCc7XG5pbXBvcnQgeyBTaXRlQ29udGV4dEFjdGlvbnMgfSBmcm9tICcuLi8uLi8uLi9zaXRlLWNvbnRleHQvc3RvcmUvYWN0aW9ucy9pbmRleCc7XG5pbXBvcnQgeyBlbnRpdHlMb2FkZXJSZWR1Y2VyIH0gZnJvbSAnLi4vLi4vLi4vc3RhdGUvdXRpbHMvZW50aXR5LWxvYWRlci9lbnRpdHktbG9hZGVyLnJlZHVjZXInO1xuaW1wb3J0IHsgTm9kZUl0ZW0gfSBmcm9tICcuLi8uLi9tb2RlbC9ub2RlLWl0ZW0ubW9kZWwnO1xuaW1wb3J0IHtcbiAgQ21zU3RhdGUsXG4gIENPTVBPTkVOVF9FTlRJVFksXG4gIE5BVklHQVRJT05fREVUQUlMX0VOVElUWSxcbiAgU3RhdGVXaXRoQ21zLFxufSBmcm9tICcuLi9jbXMtc3RhdGUnO1xuaW1wb3J0ICogYXMgZnJvbU5hdmlnYXRpb24gZnJvbSAnLi9uYXZpZ2F0aW9uLWVudHJ5LWl0ZW0ucmVkdWNlcic7XG5pbXBvcnQgKiBhcyBmcm9tUGFnZVJlZHVjZXIgZnJvbSAnLi9wYWdlLWRhdGEucmVkdWNlcic7XG5pbXBvcnQgKiBhcyBmcm9tUGFnZUluZGV4UmVkdWNlciBmcm9tICcuL3BhZ2UtaW5kZXgucmVkdWNlcic7XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRSZWR1Y2VycygpOiBBY3Rpb25SZWR1Y2VyTWFwPENtc1N0YXRlPiB7XG4gIHJldHVybiB7XG4gICAgcGFnZTogY29tYmluZVJlZHVjZXJzKHtcbiAgICAgIHBhZ2VEYXRhOiBmcm9tUGFnZVJlZHVjZXIucmVkdWNlcixcbiAgICAgIGluZGV4OiBjb21iaW5lUmVkdWNlcnMoe1xuICAgICAgICBjb250ZW50OiBlbnRpdHlMb2FkZXJSZWR1Y2VyPHN0cmluZz4oXG4gICAgICAgICAgUGFnZVR5cGUuQ09OVEVOVF9QQUdFLFxuICAgICAgICAgIGZyb21QYWdlSW5kZXhSZWR1Y2VyLnJlZHVjZXIoUGFnZVR5cGUuQ09OVEVOVF9QQUdFKVxuICAgICAgICApLFxuICAgICAgICBwcm9kdWN0OiBlbnRpdHlMb2FkZXJSZWR1Y2VyPHN0cmluZz4oXG4gICAgICAgICAgUGFnZVR5cGUuUFJPRFVDVF9QQUdFLFxuICAgICAgICAgIGZyb21QYWdlSW5kZXhSZWR1Y2VyLnJlZHVjZXIoUGFnZVR5cGUuUFJPRFVDVF9QQUdFKVxuICAgICAgICApLFxuICAgICAgICBjYXRlZ29yeTogZW50aXR5TG9hZGVyUmVkdWNlcjxzdHJpbmc+KFxuICAgICAgICAgIFBhZ2VUeXBlLkNBVEVHT1JZX1BBR0UsXG4gICAgICAgICAgZnJvbVBhZ2VJbmRleFJlZHVjZXIucmVkdWNlcihQYWdlVHlwZS5DQVRFR09SWV9QQUdFKVxuICAgICAgICApLFxuICAgICAgICBjYXRhbG9nOiBlbnRpdHlMb2FkZXJSZWR1Y2VyPHN0cmluZz4oXG4gICAgICAgICAgUGFnZVR5cGUuQ0FUQUxPR19QQUdFLFxuICAgICAgICAgIGZyb21QYWdlSW5kZXhSZWR1Y2VyLnJlZHVjZXIoUGFnZVR5cGUuQ0FUQUxPR19QQUdFKVxuICAgICAgICApLFxuICAgICAgfSksXG4gICAgfSksXG4gICAgY29tcG9uZW50OiBlbnRpdHlMb2FkZXJSZWR1Y2VyKENPTVBPTkVOVF9FTlRJVFkpLFxuICAgIG5hdmlnYXRpb246IGVudGl0eUxvYWRlclJlZHVjZXI8Tm9kZUl0ZW0+KFxuICAgICAgTkFWSUdBVElPTl9ERVRBSUxfRU5USVRZLFxuICAgICAgZnJvbU5hdmlnYXRpb24ucmVkdWNlclxuICAgICksXG4gIH07XG59XG5cbmV4cG9ydCBjb25zdCByZWR1Y2VyVG9rZW46IEluamVjdGlvblRva2VuPFxuICBBY3Rpb25SZWR1Y2VyTWFwPENtc1N0YXRlPlxuPiA9IG5ldyBJbmplY3Rpb25Ub2tlbjxBY3Rpb25SZWR1Y2VyTWFwPENtc1N0YXRlPj4oJ0Ntc1JlZHVjZXJzJyk7XG5cbmV4cG9ydCBjb25zdCByZWR1Y2VyUHJvdmlkZXI6IFByb3ZpZGVyID0ge1xuICBwcm92aWRlOiByZWR1Y2VyVG9rZW4sXG4gIHVzZUZhY3Rvcnk6IGdldFJlZHVjZXJzLFxufTtcblxuZXhwb3J0IGZ1bmN0aW9uIGNsZWFyQ21zU3RhdGUoXG4gIHJlZHVjZXI6IEFjdGlvblJlZHVjZXI8U3RhdGVXaXRoQ21zLCBBY3Rpb24+XG4pOiBBY3Rpb25SZWR1Y2VyPFN0YXRlV2l0aENtcywgQWN0aW9uPiB7XG4gIHJldHVybiBmdW5jdGlvbihzdGF0ZSwgYWN0aW9uKSB7XG4gICAgaWYgKFxuICAgICAgYWN0aW9uLnR5cGUgPT09IFNpdGVDb250ZXh0QWN0aW9ucy5MQU5HVUFHRV9DSEFOR0UgfHxcbiAgICAgIGFjdGlvbi50eXBlID09PSBBdXRoQWN0aW9ucy5MT0dPVVQgfHxcbiAgICAgIGFjdGlvbi50eXBlID09PSBBdXRoQWN0aW9ucy5MT0dJTlxuICAgICkge1xuICAgICAgc3RhdGUgPSB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHJldHVybiByZWR1Y2VyKHN0YXRlLCBhY3Rpb24pO1xuICB9O1xufVxuXG5leHBvcnQgY29uc3QgbWV0YVJlZHVjZXJzOiBNZXRhUmVkdWNlcjxTdGF0ZVdpdGhDbXM+W10gPSBbY2xlYXJDbXNTdGF0ZV07XG4iXX0=