import { Injectable } from '@angular/core';
import { Config } from '../../../config/config-tokens';
import * as i0 from "@angular/core";
import * as i1 from "../../../config/config-tokens";
export class AuthConfig {
}
AuthConfig.ɵprov = i0.ɵɵdefineInjectable({ factory: function AuthConfig_Factory() { return i0.ɵɵinject(i1.Config); }, token: AuthConfig, providedIn: "root" });
AuthConfig.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root',
                useExisting: Config,
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aC1jb25maWcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlL3NyYy9hdXRoL3VzZXItYXV0aC9jb25maWcvYXV0aC1jb25maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUzQyxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sK0JBQStCLENBQUM7OztBQTJCdkQsTUFBTSxPQUFnQixVQUFVOzs7O1lBSi9CLFVBQVUsU0FBQztnQkFDVixVQUFVLEVBQUUsTUFBTTtnQkFDbEIsV0FBVyxFQUFFLE1BQU07YUFDcEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBdXRoQ29uZmlnIGFzIExpYkNvbmZpZyB9IGZyb20gJ2FuZ3VsYXItb2F1dGgyLW9pZGMnO1xuaW1wb3J0IHsgQ29uZmlnIH0gZnJvbSAnLi4vLi4vLi4vY29uZmlnL2NvbmZpZy10b2tlbnMnO1xuXG4vLyBzaWxldFJlZnJlc2hUaW1lb3V0IC0gb21pdHRlZCBhcyBpdCBpcyBkZXByZWNhdGVkIG9mIHR5cG9cbi8vIGNsaWVudElkIC0gd2UgbmVlZCBpdCBmb3IgY2xpZW50IGNyZWRlbnRpYWxzIGZsb3dcbi8vIGR1bW15Q2xpZW50U2VjcmV0IC0gd2UgbmVlZCBpdCBmb3IgY2xpZW50IGNyZWRlbnRpYWxzIGZsb3dcbi8vIGxvZ2luVXJsIC0gc2ltaWxhcmx5IGxpa2UgdGhlIHJlc3Qgb2YgZW5kcG9pbnRzIHdlIHdhbnQgdG8gaGF2ZSBmdWxsIGNvbnRyb2wgb3ZlciB0aGF0XG4vLyBsb2dvdXRVcmwgLSBzaW1pbGFybHkgbGlrZSB0aGUgcmVzdCBvZiBlbmRwb2ludHMgd2Ugd2FudCB0byBoYXZlIGZ1bGwgY29udHJvbCBvdmVyIHRoYXRcbi8vIHRva2VuRW5kcG9pbnQgLSBzaW1pbGFybHkgbGlrZSB0aGUgcmVzdCBvZiBlbmRwb2ludHMgd2Ugd2FudCB0byBoYXZlIGZ1bGwgY29udHJvbCBvdmVyIHRoYXRcbi8vIHJldm9jYXRpb25FbmRwb2ludCAtIHNpbWlsYXJseSBsaWtlIHRoZSByZXN0IG9mIGVuZHBvaW50cyB3ZSB3YW50IHRvIGhhdmUgZnVsbCBjb250cm9sIG92ZXIgdGhhdFxuLy8gdXNlcmluZm9FbmRwb2ludCAtIHNpbWlsYXJseSBsaWtlIHRoZSByZXN0IG9mIGVuZHBvaW50cyB3ZSB3YW50IHRvIGhhdmUgZnVsbCBjb250cm9sIG92ZXIgdGhhdFxuLy9cbmV4cG9ydCB0eXBlIEF1dGhMaWJDb25maWcgPSBPbWl0PFxuICBMaWJDb25maWcsXG4gIHwgJ2NsaWVudElkJ1xuICB8ICdkdW1teUNsaWVudFNlY3JldCdcbiAgfCAnc2lsZXRSZWZyZXNoVGltZW91dCdcbiAgfCAnbG9naW5VcmwnXG4gIHwgJ2xvZ291dFVybCdcbiAgfCAndG9rZW5FbmRwb2ludCdcbiAgfCAncmV2b2NhdGlvbkVuZHBvaW50J1xuICB8ICd1c2VyaW5mb0VuZHBvaW50J1xuPjtcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCcsXG4gIHVzZUV4aXN0aW5nOiBDb25maWcsXG59KVxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIEF1dGhDb25maWcge1xuICBhdXRoZW50aWNhdGlvbj86IHtcbiAgICAvKipcbiAgICAgKiBPQXV0aCBjbGllbnQgaWQuXG4gICAgICovXG4gICAgY2xpZW50X2lkPzogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFNlY3JldCBmb3IgY2xpZW50IHJlcXVpcmVkIGJ5IEh5YnJpcyBPQXV0aC5cbiAgICAgKi9cbiAgICBjbGllbnRfc2VjcmV0Pzogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEJhc2UgdXJsIGZvciBhdXRoIHNlcnZlciAoZm9yIGxvZ2luLCB0b2tlbiwgcmV2b2tlIGVuZHBvaW50cykuXG4gICAgICovXG4gICAgYmFzZVVybD86IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBFbmRwb2ludCBmb3IgZ2V0dGluZyB0b2tlbi5cbiAgICAgKi9cbiAgICB0b2tlbkVuZHBvaW50Pzogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEVuZHBvaW50IHVybCBmb3IgcmV2b2tpbmcgdG9rZW5zLlxuICAgICAqL1xuICAgIHJldm9rZUVuZHBvaW50Pzogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFVybCBmb3IgbG9naW4gcmVkaXJlY3QgZm9yIEltcGxpY2l0IGFuZCBBdXRob3JpemF0aW9uIENvZGUgRmxvdy5cbiAgICAgKi9cbiAgICBsb2dpblVybD86IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBSZWRpcmVjdCB1cmwgYWZ0ZXIgbG9nb3V0LlxuICAgICAqL1xuICAgIGxvZ291dFVybD86IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBVc2VyaW5mbyBlbmRwb2ludC5cbiAgICAgKi9cbiAgICB1c2VyaW5mb0VuZHBvaW50Pzogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIENvbmZpZyBmb3IgYW5ndWxhci1vYXV0aC1vaWRjIGxpYnJhcnkuXG4gICAgICovXG4gICAgT0F1dGhMaWJDb25maWc/OiBBdXRoTGliQ29uZmlnO1xuICB9O1xufVxuIl19