{"version":3,"file":"cart-voucher.service.d.ts","sources":["cart-voucher.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { UserIdService } from '../../auth/index';\nimport * as fromProcessStore from '../../process/store/process-state';\nimport { ActiveCartService } from './active-cart.service';\nexport declare class CartVoucherService {\n    protected store: Store<fromProcessStore.StateWithProcess<void>>;\n    protected activeCartService: ActiveCartService;\n    protected userIdService: UserIdService;\n    constructor(store: Store<fromProcessStore.StateWithProcess<void>>, activeCartService: ActiveCartService, userIdService: UserIdService);\n    addVoucher(voucherId: string, cartId?: string): void;\n    removeVoucher(voucherId: string, cartId?: string): void;\n    /**\n     * Get add voucher process error flag\n     * @deprecated since 2.0\n     */\n    getAddVoucherResultError(): Observable<boolean>;\n    /**\n     * Get add voucher process success flag\n     * @deprecated since 2.0\n     */\n    getAddVoucherResultSuccess(): Observable<boolean>;\n    /**\n     * Get add voucher process loading flag\n     * @deprecated since 2.0\n     */\n    getAddVoucherResultLoading(): Observable<boolean>;\n    /**\n     * Reset add voucher process\n     * @deprecated since 2.0\n     */\n    resetAddVoucherProcessingState(): void;\n    private combineUserAndCartId;\n}\n"]}