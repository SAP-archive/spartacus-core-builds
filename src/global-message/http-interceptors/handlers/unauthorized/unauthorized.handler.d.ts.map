{"version":3,"file":"unauthorized.handler.d.ts","sources":["unauthorized.handler.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { HttpErrorResponse, HttpRequest } from '@angular/common/http';\nimport { GlobalMessageService } from '../../../facade/global-message.service';\nimport { HttpResponseStatus } from '../../../models/response-status.model';\nimport { HttpErrorHandler } from './../http-error.handler';\nimport { Priority } from '../../../../util/applicable';\n/**\n * Handles Oauth client errors when a 401 is returned. This is the case for failing\n * authenticaton requests to OCC.\n */\nexport declare class UnauthorizedErrorHandler extends HttpErrorHandler {\n    protected globalMessageService: GlobalMessageService;\n    responseStatus: HttpResponseStatus;\n    constructor(globalMessageService: GlobalMessageService);\n    handleError(_request: HttpRequest<any>, response: HttpErrorResponse): void;\n    getPriority(): Priority;\n}\n"]}