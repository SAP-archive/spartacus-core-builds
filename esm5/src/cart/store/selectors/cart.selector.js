import { createFeatureSelector, createSelector, } from '@ngrx/store';
import { StateLoaderSelectors } from '../../../state/utils/index';
import { CART_FEATURE, } from '../cart-state';
var getCartContentSelector = function (state) { return state.content; };
var ɵ0 = getCartContentSelector;
var getCartRefreshSelector = function (state) { return state.refresh; };
var ɵ1 = getCartRefreshSelector;
var getCartEntriesSelector = function (state) { return state.entries; };
var ɵ2 = getCartEntriesSelector;
var getCartMergeCompleteSelector = function (state) {
    return state.cartMergeComplete;
};
var ɵ3 = getCartMergeCompleteSelector;
export var getCartsState = createFeatureSelector(CART_FEATURE);
var ɵ4 = function (cartsState) { return cartsState.active; };
export var getActiveCartState = createSelector(getCartsState, ɵ4);
var ɵ5 = function (state) { return StateLoaderSelectors.loaderValueSelector(state); };
export var getCartState = createSelector(getActiveCartState, ɵ5);
export var getCartContent = createSelector(getCartState, getCartContentSelector);
export var getCartRefresh = createSelector(getCartState, getCartRefreshSelector);
var ɵ6 = function (state) {
    return (StateLoaderSelectors.loaderSuccessSelector(state) &&
        !StateLoaderSelectors.loaderLoadingSelector(state) &&
        !StateLoaderSelectors.loaderValueSelector(state).refresh) ||
        (StateLoaderSelectors.loaderErrorSelector(state) &&
            !StateLoaderSelectors.loaderLoadingSelector(state) &&
            !StateLoaderSelectors.loaderValueSelector(state).refresh);
};
export var getCartLoaded = createSelector(getActiveCartState, ɵ6);
var ɵ7 = function (state) { return StateLoaderSelectors.loaderLoadingSelector(state); };
export var getCartLoading = createSelector(getActiveCartState, ɵ7);
export var getCartMergeComplete = createSelector(getCartState, getCartMergeCompleteSelector);
export var getCartEntriesMap = createSelector(getCartState, getCartEntriesSelector);
export var getCartEntrySelectorFactory = function (productCode) {
    return createSelector(getCartEntriesMap, function (entries) {
        if (entries) {
            return entries[productCode];
        }
    });
};
var ɵ8 = function (entities) {
    return Object.keys(entities).map(function (code) { return entities[code]; });
};
export var getCartEntries = createSelector(getCartEntriesMap, ɵ8);
var ɵ9 = function (content) { return content.user; };
export var getCartUser = createSelector(getCartContent, ɵ9);
export { ɵ0, ɵ1, ɵ2, ɵ3, ɵ4, ɵ5, ɵ6, ɵ7, ɵ8, ɵ9 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FydC5zZWxlY3Rvci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFydGFjdXMvY29yZS8iLCJzb3VyY2VzIjpbInNyYy9jYXJ0L3N0b3JlL3NlbGVjdG9ycy9jYXJ0LnNlbGVjdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCxxQkFBcUIsRUFDckIsY0FBYyxHQUVmLE1BQU0sYUFBYSxDQUFDO0FBR3JCLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRWxFLE9BQU8sRUFHTCxZQUFZLEdBRWIsTUFBTSxlQUFlLENBQUM7QUFHdkIsSUFBTSxzQkFBc0IsR0FBRyxVQUFDLEtBQWdCLElBQUssT0FBQSxLQUFLLENBQUMsT0FBTyxFQUFiLENBQWEsQ0FBQzs7QUFDbkUsSUFBTSxzQkFBc0IsR0FBRyxVQUFDLEtBQWdCLElBQUssT0FBQSxLQUFLLENBQUMsT0FBTyxFQUFiLENBQWEsQ0FBQzs7QUFDbkUsSUFBTSxzQkFBc0IsR0FBRyxVQUFDLEtBQWdCLElBQUssT0FBQSxLQUFLLENBQUMsT0FBTyxFQUFiLENBQWEsQ0FBQzs7QUFDbkUsSUFBTSw0QkFBNEIsR0FBRyxVQUFDLEtBQWdCO0lBQ3BELE9BQUEsS0FBSyxDQUFDLGlCQUFpQjtBQUF2QixDQUF1QixDQUFDOztBQUUxQixNQUFNLENBQUMsSUFBTSxhQUFhLEdBR3RCLHFCQUFxQixDQUFhLFlBQVksQ0FBQyxDQUFDO1NBT2xELFVBQUMsVUFBc0IsSUFBSyxPQUFBLFVBQVUsQ0FBQyxNQUFNLEVBQWpCLENBQWlCO0FBTC9DLE1BQU0sQ0FBQyxJQUFNLGtCQUFrQixHQUczQixjQUFjLENBQ2hCLGFBQWEsS0FFZCxDQUFDO1NBT0EsVUFBQSxLQUFLLElBQUksT0FBQSxvQkFBb0IsQ0FBQyxtQkFBbUIsQ0FBQyxLQUFLLENBQUMsRUFBL0MsQ0FBK0M7QUFMMUQsTUFBTSxDQUFDLElBQU0sWUFBWSxHQUdyQixjQUFjLENBQ2hCLGtCQUFrQixLQUVuQixDQUFDO0FBRUYsTUFBTSxDQUFDLElBQU0sY0FBYyxHQUd2QixjQUFjLENBQ2hCLFlBQVksRUFDWixzQkFBc0IsQ0FDdkIsQ0FBQztBQUVGLE1BQU0sQ0FBQyxJQUFNLGNBQWMsR0FHdkIsY0FBYyxDQUNoQixZQUFZLEVBQ1osc0JBQXNCLENBQ3ZCLENBQUM7U0FPQSxVQUFBLEtBQUs7SUFDSCxPQUFBLENBQUMsb0JBQW9CLENBQUMscUJBQXFCLENBQUMsS0FBSyxDQUFDO1FBQ2hELENBQUMsb0JBQW9CLENBQUMscUJBQXFCLENBQUMsS0FBSyxDQUFDO1FBQ2xELENBQUMsb0JBQW9CLENBQUMsbUJBQW1CLENBQUMsS0FBSyxDQUFDLENBQUMsT0FBTyxDQUFDO1FBQzNELENBQUMsb0JBQW9CLENBQUMsbUJBQW1CLENBQUMsS0FBSyxDQUFDO1lBQzlDLENBQUMsb0JBQW9CLENBQUMscUJBQXFCLENBQUMsS0FBSyxDQUFDO1lBQ2xELENBQUMsb0JBQW9CLENBQUMsbUJBQW1CLENBQUMsS0FBSyxDQUFDLENBQUMsT0FBTyxDQUFDO0FBTDNELENBSzJEO0FBWC9ELE1BQU0sQ0FBQyxJQUFNLGFBQWEsR0FHdEIsY0FBYyxDQUNoQixrQkFBa0IsS0FRbkIsQ0FBQztTQUlBLFVBQUEsS0FBSyxJQUFJLE9BQUEsb0JBQW9CLENBQUMscUJBQXFCLENBQUMsS0FBSyxDQUFDLEVBQWpELENBQWlEO0FBRjVELE1BQU0sQ0FBQyxJQUFNLGNBQWMsR0FBbUMsY0FBYyxDQUMxRSxrQkFBa0IsS0FFbkIsQ0FBQztBQUVGLE1BQU0sQ0FBQyxJQUFNLG9CQUFvQixHQUc3QixjQUFjLENBQ2hCLFlBQVksRUFDWiw0QkFBNEIsQ0FDN0IsQ0FBQztBQUVGLE1BQU0sQ0FBQyxJQUFNLGlCQUFpQixHQUcxQixjQUFjLENBQ2hCLFlBQVksRUFDWixzQkFBc0IsQ0FDdkIsQ0FBQztBQUVGLE1BQU0sQ0FBQyxJQUFNLDJCQUEyQixHQUFHLFVBQ3pDLFdBQW1CO0lBRW5CLE9BQU8sY0FBYyxDQUNuQixpQkFBaUIsRUFDakIsVUFBQSxPQUFPO1FBQ0wsSUFBSSxPQUFPLEVBQUU7WUFDWCxPQUFPLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztTQUM3QjtJQUNILENBQUMsQ0FDRixDQUFDO0FBQ0osQ0FBQyxDQUFDO1NBT0EsVUFBQSxRQUFRO0lBQ04sT0FBTyxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxVQUFBLElBQUksSUFBSSxPQUFBLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBZCxDQUFjLENBQUMsQ0FBQztBQUMzRCxDQUFDO0FBUEgsTUFBTSxDQUFDLElBQU0sY0FBYyxHQUd2QixjQUFjLENBQ2hCLGlCQUFpQixLQUlsQixDQUFDO1NBT0EsVUFBQSxPQUFPLElBQUksT0FBQSxPQUFPLENBQUMsSUFBSSxFQUFaLENBQVk7QUFMekIsTUFBTSxDQUFDLElBQU0sV0FBVyxHQUdwQixjQUFjLENBQ2hCLGNBQWMsS0FFZixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgY3JlYXRlRmVhdHVyZVNlbGVjdG9yLFxuICBjcmVhdGVTZWxlY3RvcixcbiAgTWVtb2l6ZWRTZWxlY3Rvcixcbn0gZnJvbSAnQG5ncngvc3RvcmUnO1xuaW1wb3J0IHsgQ2FydCB9IGZyb20gJy4uLy4uLy4uL21vZGVsL2NhcnQubW9kZWwnO1xuaW1wb3J0IHsgT3JkZXJFbnRyeSB9IGZyb20gJy4uLy4uLy4uL21vZGVsL29yZGVyLm1vZGVsJztcbmltcG9ydCB7IFN0YXRlTG9hZGVyU2VsZWN0b3JzIH0gZnJvbSAnLi4vLi4vLi4vc3RhdGUvdXRpbHMvaW5kZXgnO1xuaW1wb3J0IHsgTG9hZGVyU3RhdGUgfSBmcm9tICcuLi8uLi8uLi9zdGF0ZS91dGlscy9sb2FkZXIvbG9hZGVyLXN0YXRlJztcbmltcG9ydCB7XG4gIENhcnRzU3RhdGUsXG4gIENhcnRTdGF0ZSxcbiAgQ0FSVF9GRUFUVVJFLFxuICBTdGF0ZVdpdGhDYXJ0LFxufSBmcm9tICcuLi9jYXJ0LXN0YXRlJztcbmltcG9ydCB7IFVzZXIgfSBmcm9tICcuLi8uLi8uLi9tb2RlbC9taXNjLm1vZGVsJztcblxuY29uc3QgZ2V0Q2FydENvbnRlbnRTZWxlY3RvciA9IChzdGF0ZTogQ2FydFN0YXRlKSA9PiBzdGF0ZS5jb250ZW50O1xuY29uc3QgZ2V0Q2FydFJlZnJlc2hTZWxlY3RvciA9IChzdGF0ZTogQ2FydFN0YXRlKSA9PiBzdGF0ZS5yZWZyZXNoO1xuY29uc3QgZ2V0Q2FydEVudHJpZXNTZWxlY3RvciA9IChzdGF0ZTogQ2FydFN0YXRlKSA9PiBzdGF0ZS5lbnRyaWVzO1xuY29uc3QgZ2V0Q2FydE1lcmdlQ29tcGxldGVTZWxlY3RvciA9IChzdGF0ZTogQ2FydFN0YXRlKSA9PlxuICBzdGF0ZS5jYXJ0TWVyZ2VDb21wbGV0ZTtcblxuZXhwb3J0IGNvbnN0IGdldENhcnRzU3RhdGU6IE1lbW9pemVkU2VsZWN0b3I8XG4gIFN0YXRlV2l0aENhcnQsXG4gIENhcnRzU3RhdGVcbj4gPSBjcmVhdGVGZWF0dXJlU2VsZWN0b3I8Q2FydHNTdGF0ZT4oQ0FSVF9GRUFUVVJFKTtcblxuZXhwb3J0IGNvbnN0IGdldEFjdGl2ZUNhcnRTdGF0ZTogTWVtb2l6ZWRTZWxlY3RvcjxcbiAgU3RhdGVXaXRoQ2FydCxcbiAgTG9hZGVyU3RhdGU8Q2FydFN0YXRlPlxuPiA9IGNyZWF0ZVNlbGVjdG9yKFxuICBnZXRDYXJ0c1N0YXRlLFxuICAoY2FydHNTdGF0ZTogQ2FydHNTdGF0ZSkgPT4gY2FydHNTdGF0ZS5hY3RpdmVcbik7XG5cbmV4cG9ydCBjb25zdCBnZXRDYXJ0U3RhdGU6IE1lbW9pemVkU2VsZWN0b3I8XG4gIFN0YXRlV2l0aENhcnQsXG4gIENhcnRTdGF0ZVxuPiA9IGNyZWF0ZVNlbGVjdG9yKFxuICBnZXRBY3RpdmVDYXJ0U3RhdGUsXG4gIHN0YXRlID0+IFN0YXRlTG9hZGVyU2VsZWN0b3JzLmxvYWRlclZhbHVlU2VsZWN0b3Ioc3RhdGUpXG4pO1xuXG5leHBvcnQgY29uc3QgZ2V0Q2FydENvbnRlbnQ6IE1lbW9pemVkU2VsZWN0b3I8XG4gIFN0YXRlV2l0aENhcnQsXG4gIENhcnRcbj4gPSBjcmVhdGVTZWxlY3RvcihcbiAgZ2V0Q2FydFN0YXRlLFxuICBnZXRDYXJ0Q29udGVudFNlbGVjdG9yXG4pO1xuXG5leHBvcnQgY29uc3QgZ2V0Q2FydFJlZnJlc2g6IE1lbW9pemVkU2VsZWN0b3I8XG4gIFN0YXRlV2l0aENhcnQsXG4gIGJvb2xlYW5cbj4gPSBjcmVhdGVTZWxlY3RvcihcbiAgZ2V0Q2FydFN0YXRlLFxuICBnZXRDYXJ0UmVmcmVzaFNlbGVjdG9yXG4pO1xuXG5leHBvcnQgY29uc3QgZ2V0Q2FydExvYWRlZDogTWVtb2l6ZWRTZWxlY3RvcjxcbiAgU3RhdGVXaXRoQ2FydCxcbiAgYm9vbGVhblxuPiA9IGNyZWF0ZVNlbGVjdG9yKFxuICBnZXRBY3RpdmVDYXJ0U3RhdGUsXG4gIHN0YXRlID0+XG4gICAgKFN0YXRlTG9hZGVyU2VsZWN0b3JzLmxvYWRlclN1Y2Nlc3NTZWxlY3RvcihzdGF0ZSkgJiZcbiAgICAgICFTdGF0ZUxvYWRlclNlbGVjdG9ycy5sb2FkZXJMb2FkaW5nU2VsZWN0b3Ioc3RhdGUpICYmXG4gICAgICAhU3RhdGVMb2FkZXJTZWxlY3RvcnMubG9hZGVyVmFsdWVTZWxlY3RvcihzdGF0ZSkucmVmcmVzaCkgfHxcbiAgICAoU3RhdGVMb2FkZXJTZWxlY3RvcnMubG9hZGVyRXJyb3JTZWxlY3RvcihzdGF0ZSkgJiZcbiAgICAgICFTdGF0ZUxvYWRlclNlbGVjdG9ycy5sb2FkZXJMb2FkaW5nU2VsZWN0b3Ioc3RhdGUpICYmXG4gICAgICAhU3RhdGVMb2FkZXJTZWxlY3RvcnMubG9hZGVyVmFsdWVTZWxlY3RvcihzdGF0ZSkucmVmcmVzaClcbik7XG5cbmV4cG9ydCBjb25zdCBnZXRDYXJ0TG9hZGluZzogTWVtb2l6ZWRTZWxlY3RvcjxhbnksIGJvb2xlYW4+ID0gY3JlYXRlU2VsZWN0b3IoXG4gIGdldEFjdGl2ZUNhcnRTdGF0ZSxcbiAgc3RhdGUgPT4gU3RhdGVMb2FkZXJTZWxlY3RvcnMubG9hZGVyTG9hZGluZ1NlbGVjdG9yKHN0YXRlKVxuKTtcblxuZXhwb3J0IGNvbnN0IGdldENhcnRNZXJnZUNvbXBsZXRlOiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhDYXJ0LFxuICBib29sZWFuXG4+ID0gY3JlYXRlU2VsZWN0b3IoXG4gIGdldENhcnRTdGF0ZSxcbiAgZ2V0Q2FydE1lcmdlQ29tcGxldGVTZWxlY3RvclxuKTtcblxuZXhwb3J0IGNvbnN0IGdldENhcnRFbnRyaWVzTWFwOiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhDYXJ0LFxuICB7IFtjb2RlOiBzdHJpbmddOiBPcmRlckVudHJ5IH1cbj4gPSBjcmVhdGVTZWxlY3RvcihcbiAgZ2V0Q2FydFN0YXRlLFxuICBnZXRDYXJ0RW50cmllc1NlbGVjdG9yXG4pO1xuXG5leHBvcnQgY29uc3QgZ2V0Q2FydEVudHJ5U2VsZWN0b3JGYWN0b3J5ID0gKFxuICBwcm9kdWN0Q29kZTogc3RyaW5nXG4pOiBNZW1vaXplZFNlbGVjdG9yPFN0YXRlV2l0aENhcnQsIE9yZGVyRW50cnk+ID0+IHtcbiAgcmV0dXJuIGNyZWF0ZVNlbGVjdG9yKFxuICAgIGdldENhcnRFbnRyaWVzTWFwLFxuICAgIGVudHJpZXMgPT4ge1xuICAgICAgaWYgKGVudHJpZXMpIHtcbiAgICAgICAgcmV0dXJuIGVudHJpZXNbcHJvZHVjdENvZGVdO1xuICAgICAgfVxuICAgIH1cbiAgKTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRDYXJ0RW50cmllczogTWVtb2l6ZWRTZWxlY3RvcjxcbiAgU3RhdGVXaXRoQ2FydCxcbiAgT3JkZXJFbnRyeVtdXG4+ID0gY3JlYXRlU2VsZWN0b3IoXG4gIGdldENhcnRFbnRyaWVzTWFwLFxuICBlbnRpdGllcyA9PiB7XG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKGVudGl0aWVzKS5tYXAoY29kZSA9PiBlbnRpdGllc1tjb2RlXSk7XG4gIH1cbik7XG5cbmV4cG9ydCBjb25zdCBnZXRDYXJ0VXNlcjogTWVtb2l6ZWRTZWxlY3RvcjxcbiAgU3RhdGVXaXRoQ2FydCxcbiAgVXNlclxuPiA9IGNyZWF0ZVNlbGVjdG9yKFxuICBnZXRDYXJ0Q29udGVudCxcbiAgY29udGVudCA9PiBjb250ZW50LnVzZXJcbik7XG4iXX0=