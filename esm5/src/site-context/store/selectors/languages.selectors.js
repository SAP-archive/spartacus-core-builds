import { createSelector } from '@ngrx/store';
import { getSiteContextState } from './site-context.selector';
var activeLanguageSelector = function (state) { return state.activeLanguage; };
var ɵ0 = activeLanguageSelector;
var languagesEntitiesSelector = function (state) { return state.entities; };
var ɵ1 = languagesEntitiesSelector;
var ɵ2 = function (state) { return state.languages; };
export var getLanguagesState = createSelector(getSiteContextState, ɵ2);
export var getLanguagesEntities = createSelector(getLanguagesState, languagesEntitiesSelector);
export var getActiveLanguage = createSelector(getLanguagesState, activeLanguageSelector);
var ɵ3 = function (entities) {
    return entities
        ? Object.keys(entities).map(function (isocode) { return entities[isocode]; })
        : null;
};
export var getAllLanguages = createSelector(getLanguagesEntities, ɵ3);
export { ɵ0, ɵ1, ɵ2, ɵ3 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFuZ3VhZ2VzLnNlbGVjdG9ycy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFydGFjdXMvY29yZS8iLCJzb3VyY2VzIjpbInNyYy9zaXRlLWNvbnRleHQvc3RvcmUvc2VsZWN0b3JzL2xhbmd1YWdlcy5zZWxlY3RvcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGNBQWMsRUFBb0IsTUFBTSxhQUFhLENBQUM7QUFRL0QsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFFOUQsSUFBTSxzQkFBc0IsR0FBRyxVQUFDLEtBQXFCLElBQUssT0FBQSxLQUFLLENBQUMsY0FBYyxFQUFwQixDQUFvQixDQUFDOztBQUMvRSxJQUFNLHlCQUF5QixHQUFHLFVBQUMsS0FBcUIsSUFBSyxPQUFBLEtBQUssQ0FBQyxRQUFRLEVBQWQsQ0FBYyxDQUFDOztTQU8xRSxVQUFDLEtBQXVCLElBQUssT0FBQSxLQUFLLENBQUMsU0FBUyxFQUFmLENBQWU7QUFMOUMsTUFBTSxDQUFDLElBQU0saUJBQWlCLEdBRzFCLGNBQWMsQ0FDaEIsbUJBQW1CLEtBRXBCLENBQUM7QUFFRixNQUFNLENBQUMsSUFBTSxvQkFBb0IsR0FHN0IsY0FBYyxDQUNoQixpQkFBaUIsRUFDakIseUJBQXlCLENBQzFCLENBQUM7QUFFRixNQUFNLENBQUMsSUFBTSxpQkFBaUIsR0FHMUIsY0FBYyxDQUNoQixpQkFBaUIsRUFDakIsc0JBQXNCLENBQ3ZCLENBQUM7U0FPQSxVQUFBLFFBQVE7SUFDTixPQUFPLFFBQVE7UUFDYixDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxHQUFHLENBQUMsVUFBQSxPQUFPLElBQUksT0FBQSxRQUFRLENBQUMsT0FBTyxDQUFDLEVBQWpCLENBQWlCLENBQUM7UUFDekQsQ0FBQyxDQUFDLElBQUksQ0FBQztBQUNYLENBQUM7QUFUSCxNQUFNLENBQUMsSUFBTSxlQUFlLEdBR3hCLGNBQWMsQ0FDaEIsb0JBQW9CLEtBTXJCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVTZWxlY3RvciwgTWVtb2l6ZWRTZWxlY3RvciB9IGZyb20gJ0BuZ3J4L3N0b3JlJztcbmltcG9ydCB7IExhbmd1YWdlIH0gZnJvbSAnLi4vLi4vLi4vbW9kZWwvbWlzYy5tb2RlbCc7XG5pbXBvcnQge1xuICBMYW5ndWFnZXNFbnRpdGllcyxcbiAgTGFuZ3VhZ2VzU3RhdGUsXG4gIFNpdGVDb250ZXh0U3RhdGUsXG4gIFN0YXRlV2l0aFNpdGVDb250ZXh0LFxufSBmcm9tICcuLi9zdGF0ZSc7XG5pbXBvcnQgeyBnZXRTaXRlQ29udGV4dFN0YXRlIH0gZnJvbSAnLi9zaXRlLWNvbnRleHQuc2VsZWN0b3InO1xuXG5jb25zdCBhY3RpdmVMYW5ndWFnZVNlbGVjdG9yID0gKHN0YXRlOiBMYW5ndWFnZXNTdGF0ZSkgPT4gc3RhdGUuYWN0aXZlTGFuZ3VhZ2U7XG5jb25zdCBsYW5ndWFnZXNFbnRpdGllc1NlbGVjdG9yID0gKHN0YXRlOiBMYW5ndWFnZXNTdGF0ZSkgPT4gc3RhdGUuZW50aXRpZXM7XG5cbmV4cG9ydCBjb25zdCBnZXRMYW5ndWFnZXNTdGF0ZTogTWVtb2l6ZWRTZWxlY3RvcjxcbiAgU3RhdGVXaXRoU2l0ZUNvbnRleHQsXG4gIExhbmd1YWdlc1N0YXRlXG4+ID0gY3JlYXRlU2VsZWN0b3IoXG4gIGdldFNpdGVDb250ZXh0U3RhdGUsXG4gIChzdGF0ZTogU2l0ZUNvbnRleHRTdGF0ZSkgPT4gc3RhdGUubGFuZ3VhZ2VzXG4pO1xuXG5leHBvcnQgY29uc3QgZ2V0TGFuZ3VhZ2VzRW50aXRpZXM6IE1lbW9pemVkU2VsZWN0b3I8XG4gIFN0YXRlV2l0aFNpdGVDb250ZXh0LFxuICBMYW5ndWFnZXNFbnRpdGllc1xuPiA9IGNyZWF0ZVNlbGVjdG9yKFxuICBnZXRMYW5ndWFnZXNTdGF0ZSxcbiAgbGFuZ3VhZ2VzRW50aXRpZXNTZWxlY3RvclxuKTtcblxuZXhwb3J0IGNvbnN0IGdldEFjdGl2ZUxhbmd1YWdlOiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhTaXRlQ29udGV4dCxcbiAgc3RyaW5nXG4+ID0gY3JlYXRlU2VsZWN0b3IoXG4gIGdldExhbmd1YWdlc1N0YXRlLFxuICBhY3RpdmVMYW5ndWFnZVNlbGVjdG9yXG4pO1xuXG5leHBvcnQgY29uc3QgZ2V0QWxsTGFuZ3VhZ2VzOiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhTaXRlQ29udGV4dCxcbiAgTGFuZ3VhZ2VbXVxuPiA9IGNyZWF0ZVNlbGVjdG9yKFxuICBnZXRMYW5ndWFnZXNFbnRpdGllcyxcbiAgZW50aXRpZXMgPT4ge1xuICAgIHJldHVybiBlbnRpdGllc1xuICAgICAgPyBPYmplY3Qua2V5cyhlbnRpdGllcykubWFwKGlzb2NvZGUgPT4gZW50aXRpZXNbaXNvY29kZV0pXG4gICAgICA6IG51bGw7XG4gIH1cbik7XG4iXX0=