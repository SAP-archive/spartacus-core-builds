import { PROCESS_FEATURE } from '../../../process/store/process-state';
import { StateUtils } from '../../../state/utils/index';
import { CANCEL_REPLENISHMENT_ORDER_PROCESS_ID, USER_REPLENISHMENT_ORDER_DETAILS, } from '../user-state';
export const LOAD_REPLENISHMENT_ORDER_DETAILS = '[User] Load Replenishment Order Details';
export const LOAD_REPLENISHMENT_ORDER_DETAILS_SUCCESS = '[User] Load Replenishment Order Details Success';
export const LOAD_REPLENISHMENT_ORDER_DETAILS_FAIL = '[User] Load Replenishment Order Details Fail';
export const ClEAR_REPLENISHMENT_ORDER_DETAILS = '[User] Clear Replenishment Order Details';
export const CANCEL_REPLENISHMENT_ORDER = '[User] Cancel Replenishment Order';
export const CANCEL_REPLENISHMENT_ORDER_SUCCESS = '[User] Cancel Replenishment Order Success';
export const CANCEL_REPLENISHMENT_ORDER_FAIL = '[User] Cancel Replenishment Order Fail';
export const CLEAR_CANCEL_REPLENISHMENT_ORDER = '[User] Clear Cancel Replenishment Order';
export class LoadReplenishmentOrderDetails extends StateUtils.LoaderLoadAction {
    constructor(payload) {
        super(USER_REPLENISHMENT_ORDER_DETAILS);
        this.payload = payload;
        this.type = LOAD_REPLENISHMENT_ORDER_DETAILS;
    }
}
export class LoadReplenishmentOrderDetailsSuccess extends StateUtils.LoaderSuccessAction {
    constructor(payload) {
        super(USER_REPLENISHMENT_ORDER_DETAILS);
        this.payload = payload;
        this.type = LOAD_REPLENISHMENT_ORDER_DETAILS_SUCCESS;
    }
}
export class LoadReplenishmentOrderDetailsFail extends StateUtils.LoaderFailAction {
    constructor(payload) {
        super(USER_REPLENISHMENT_ORDER_DETAILS, payload);
        this.payload = payload;
        this.type = LOAD_REPLENISHMENT_ORDER_DETAILS_FAIL;
    }
}
export class ClearReplenishmentOrderDetails extends StateUtils.LoaderResetAction {
    constructor() {
        super(USER_REPLENISHMENT_ORDER_DETAILS);
        this.type = ClEAR_REPLENISHMENT_ORDER_DETAILS;
    }
}
export class CancelReplenishmentOrder extends StateUtils.EntityLoadAction {
    constructor(payload) {
        super(PROCESS_FEATURE, CANCEL_REPLENISHMENT_ORDER_PROCESS_ID);
        this.payload = payload;
        this.type = CANCEL_REPLENISHMENT_ORDER;
    }
}
export class CancelReplenishmentOrderSuccess extends StateUtils.EntitySuccessAction {
    constructor(payload) {
        super(PROCESS_FEATURE, CANCEL_REPLENISHMENT_ORDER_PROCESS_ID);
        this.payload = payload;
        this.type = CANCEL_REPLENISHMENT_ORDER_SUCCESS;
    }
}
export class CancelReplenishmentOrderFail extends StateUtils.EntityFailAction {
    constructor(payload) {
        super(PROCESS_FEATURE, CANCEL_REPLENISHMENT_ORDER_PROCESS_ID, payload);
        this.payload = payload;
        this.type = CANCEL_REPLENISHMENT_ORDER_FAIL;
    }
}
export class ClearCancelReplenishmentOrder extends StateUtils.EntityLoaderResetAction {
    constructor() {
        super(PROCESS_FEATURE, CANCEL_REPLENISHMENT_ORDER_PROCESS_ID);
        this.type = CLEAR_CANCEL_REPLENISHMENT_ORDER;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVwbGVuaXNobWVudC1vcmRlci1kZXRhaWxzLmFjdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmUvc3JjL3VzZXIvc3RvcmUvYWN0aW9ucy9yZXBsZW5pc2htZW50LW9yZGVyLWRldGFpbHMuYWN0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUN2RSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDeEQsT0FBTyxFQUNMLHFDQUFxQyxFQUNyQyxnQ0FBZ0MsR0FDakMsTUFBTSxlQUFlLENBQUM7QUFFdkIsTUFBTSxDQUFDLE1BQU0sZ0NBQWdDLEdBQzNDLHlDQUF5QyxDQUFDO0FBQzVDLE1BQU0sQ0FBQyxNQUFNLHdDQUF3QyxHQUNuRCxpREFBaUQsQ0FBQztBQUNwRCxNQUFNLENBQUMsTUFBTSxxQ0FBcUMsR0FDaEQsOENBQThDLENBQUM7QUFDakQsTUFBTSxDQUFDLE1BQU0saUNBQWlDLEdBQzVDLDBDQUEwQyxDQUFDO0FBRTdDLE1BQU0sQ0FBQyxNQUFNLDBCQUEwQixHQUFHLG1DQUFtQyxDQUFDO0FBQzlFLE1BQU0sQ0FBQyxNQUFNLGtDQUFrQyxHQUM3QywyQ0FBMkMsQ0FBQztBQUM5QyxNQUFNLENBQUMsTUFBTSwrQkFBK0IsR0FDMUMsd0NBQXdDLENBQUM7QUFDM0MsTUFBTSxDQUFDLE1BQU0sZ0NBQWdDLEdBQzNDLHlDQUF5QyxDQUFDO0FBRTVDLE1BQU0sT0FBTyw2QkFBOEIsU0FBUSxVQUFVLENBQUMsZ0JBQWdCO0lBRTVFLFlBQ1MsT0FHTjtRQUVELEtBQUssQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFDO1FBTGpDLFlBQU8sR0FBUCxPQUFPLENBR2I7UUFMTSxTQUFJLEdBQUcsZ0NBQWdDLENBQUM7SUFRakQsQ0FBQztDQUNGO0FBRUQsTUFBTSxPQUFPLG9DQUFxQyxTQUFRLFVBQVUsQ0FBQyxtQkFBbUI7SUFFdEYsWUFBbUIsT0FBMkI7UUFDNUMsS0FBSyxDQUFDLGdDQUFnQyxDQUFDLENBQUM7UUFEdkIsWUFBTyxHQUFQLE9BQU8sQ0FBb0I7UUFEckMsU0FBSSxHQUFHLHdDQUF3QyxDQUFDO0lBR3pELENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyxpQ0FBa0MsU0FBUSxVQUFVLENBQUMsZ0JBQWdCO0lBRWhGLFlBQW1CLE9BQVk7UUFDN0IsS0FBSyxDQUFDLGdDQUFnQyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBRGhDLFlBQU8sR0FBUCxPQUFPLENBQUs7UUFEdEIsU0FBSSxHQUFHLHFDQUFxQyxDQUFDO0lBR3RELENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyw4QkFBK0IsU0FBUSxVQUFVLENBQUMsaUJBQWlCO0lBRTlFO1FBQ0UsS0FBSyxDQUFDLGdDQUFnQyxDQUFDLENBQUM7UUFGakMsU0FBSSxHQUFHLGlDQUFpQyxDQUFDO0lBR2xELENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyx3QkFBeUIsU0FBUSxVQUFVLENBQUMsZ0JBQWdCO0lBRXZFLFlBQ1MsT0FHTjtRQUVELEtBQUssQ0FBQyxlQUFlLEVBQUUscUNBQXFDLENBQUMsQ0FBQztRQUx2RCxZQUFPLEdBQVAsT0FBTyxDQUdiO1FBTE0sU0FBSSxHQUFHLDBCQUEwQixDQUFDO0lBUTNDLENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTywrQkFBZ0MsU0FBUSxVQUFVLENBQUMsbUJBQW1CO0lBRWpGLFlBQW1CLE9BQTJCO1FBQzVDLEtBQUssQ0FBQyxlQUFlLEVBQUUscUNBQXFDLENBQUMsQ0FBQztRQUQ3QyxZQUFPLEdBQVAsT0FBTyxDQUFvQjtRQURyQyxTQUFJLEdBQUcsa0NBQWtDLENBQUM7SUFHbkQsQ0FBQztDQUNGO0FBRUQsTUFBTSxPQUFPLDRCQUE2QixTQUFRLFVBQVUsQ0FBQyxnQkFBZ0I7SUFFM0UsWUFBbUIsT0FBWTtRQUM3QixLQUFLLENBQUMsZUFBZSxFQUFFLHFDQUFxQyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBRHRELFlBQU8sR0FBUCxPQUFPLENBQUs7UUFEdEIsU0FBSSxHQUFHLCtCQUErQixDQUFDO0lBR2hELENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyw2QkFBOEIsU0FBUSxVQUFVLENBQUMsdUJBQXVCO0lBRW5GO1FBQ0UsS0FBSyxDQUFDLGVBQWUsRUFBRSxxQ0FBcUMsQ0FBQyxDQUFDO1FBRnZELFNBQUksR0FBRyxnQ0FBZ0MsQ0FBQztJQUdqRCxDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZXBsZW5pc2htZW50T3JkZXIgfSBmcm9tICcuLi8uLi8uLi9tb2RlbC9yZXBsZW5pc2htZW50LW9yZGVyLm1vZGVsJztcbmltcG9ydCB7IFBST0NFU1NfRkVBVFVSRSB9IGZyb20gJy4uLy4uLy4uL3Byb2Nlc3Mvc3RvcmUvcHJvY2Vzcy1zdGF0ZSc7XG5pbXBvcnQgeyBTdGF0ZVV0aWxzIH0gZnJvbSAnLi4vLi4vLi4vc3RhdGUvdXRpbHMvaW5kZXgnO1xuaW1wb3J0IHtcbiAgQ0FOQ0VMX1JFUExFTklTSE1FTlRfT1JERVJfUFJPQ0VTU19JRCxcbiAgVVNFUl9SRVBMRU5JU0hNRU5UX09SREVSX0RFVEFJTFMsXG59IGZyb20gJy4uL3VzZXItc3RhdGUnO1xuXG5leHBvcnQgY29uc3QgTE9BRF9SRVBMRU5JU0hNRU5UX09SREVSX0RFVEFJTFMgPVxuICAnW1VzZXJdIExvYWQgUmVwbGVuaXNobWVudCBPcmRlciBEZXRhaWxzJztcbmV4cG9ydCBjb25zdCBMT0FEX1JFUExFTklTSE1FTlRfT1JERVJfREVUQUlMU19TVUNDRVNTID1cbiAgJ1tVc2VyXSBMb2FkIFJlcGxlbmlzaG1lbnQgT3JkZXIgRGV0YWlscyBTdWNjZXNzJztcbmV4cG9ydCBjb25zdCBMT0FEX1JFUExFTklTSE1FTlRfT1JERVJfREVUQUlMU19GQUlMID1cbiAgJ1tVc2VyXSBMb2FkIFJlcGxlbmlzaG1lbnQgT3JkZXIgRGV0YWlscyBGYWlsJztcbmV4cG9ydCBjb25zdCBDbEVBUl9SRVBMRU5JU0hNRU5UX09SREVSX0RFVEFJTFMgPVxuICAnW1VzZXJdIENsZWFyIFJlcGxlbmlzaG1lbnQgT3JkZXIgRGV0YWlscyc7XG5cbmV4cG9ydCBjb25zdCBDQU5DRUxfUkVQTEVOSVNITUVOVF9PUkRFUiA9ICdbVXNlcl0gQ2FuY2VsIFJlcGxlbmlzaG1lbnQgT3JkZXInO1xuZXhwb3J0IGNvbnN0IENBTkNFTF9SRVBMRU5JU0hNRU5UX09SREVSX1NVQ0NFU1MgPVxuICAnW1VzZXJdIENhbmNlbCBSZXBsZW5pc2htZW50IE9yZGVyIFN1Y2Nlc3MnO1xuZXhwb3J0IGNvbnN0IENBTkNFTF9SRVBMRU5JU0hNRU5UX09SREVSX0ZBSUwgPVxuICAnW1VzZXJdIENhbmNlbCBSZXBsZW5pc2htZW50IE9yZGVyIEZhaWwnO1xuZXhwb3J0IGNvbnN0IENMRUFSX0NBTkNFTF9SRVBMRU5JU0hNRU5UX09SREVSID1cbiAgJ1tVc2VyXSBDbGVhciBDYW5jZWwgUmVwbGVuaXNobWVudCBPcmRlcic7XG5cbmV4cG9ydCBjbGFzcyBMb2FkUmVwbGVuaXNobWVudE9yZGVyRGV0YWlscyBleHRlbmRzIFN0YXRlVXRpbHMuTG9hZGVyTG9hZEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBMT0FEX1JFUExFTklTSE1FTlRfT1JERVJfREVUQUlMUztcbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIHBheWxvYWQ6IHtcbiAgICAgIHVzZXJJZDogc3RyaW5nO1xuICAgICAgcmVwbGVuaXNobWVudE9yZGVyQ29kZTogc3RyaW5nO1xuICAgIH1cbiAgKSB7XG4gICAgc3VwZXIoVVNFUl9SRVBMRU5JU0hNRU5UX09SREVSX0RFVEFJTFMpO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBMb2FkUmVwbGVuaXNobWVudE9yZGVyRGV0YWlsc1N1Y2Nlc3MgZXh0ZW5kcyBTdGF0ZVV0aWxzLkxvYWRlclN1Y2Nlc3NBY3Rpb24ge1xuICByZWFkb25seSB0eXBlID0gTE9BRF9SRVBMRU5JU0hNRU5UX09SREVSX0RFVEFJTFNfU1VDQ0VTUztcbiAgY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IFJlcGxlbmlzaG1lbnRPcmRlcikge1xuICAgIHN1cGVyKFVTRVJfUkVQTEVOSVNITUVOVF9PUkRFUl9ERVRBSUxTKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgTG9hZFJlcGxlbmlzaG1lbnRPcmRlckRldGFpbHNGYWlsIGV4dGVuZHMgU3RhdGVVdGlscy5Mb2FkZXJGYWlsQWN0aW9uIHtcbiAgcmVhZG9ubHkgdHlwZSA9IExPQURfUkVQTEVOSVNITUVOVF9PUkRFUl9ERVRBSUxTX0ZBSUw7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBwYXlsb2FkOiBhbnkpIHtcbiAgICBzdXBlcihVU0VSX1JFUExFTklTSE1FTlRfT1JERVJfREVUQUlMUywgcGF5bG9hZCk7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIENsZWFyUmVwbGVuaXNobWVudE9yZGVyRGV0YWlscyBleHRlbmRzIFN0YXRlVXRpbHMuTG9hZGVyUmVzZXRBY3Rpb24ge1xuICByZWFkb25seSB0eXBlID0gQ2xFQVJfUkVQTEVOSVNITUVOVF9PUkRFUl9ERVRBSUxTO1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcihVU0VSX1JFUExFTklTSE1FTlRfT1JERVJfREVUQUlMUyk7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIENhbmNlbFJlcGxlbmlzaG1lbnRPcmRlciBleHRlbmRzIFN0YXRlVXRpbHMuRW50aXR5TG9hZEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBDQU5DRUxfUkVQTEVOSVNITUVOVF9PUkRFUjtcbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIHBheWxvYWQ6IHtcbiAgICAgIHVzZXJJZDogc3RyaW5nO1xuICAgICAgcmVwbGVuaXNobWVudE9yZGVyQ29kZTogc3RyaW5nO1xuICAgIH1cbiAgKSB7XG4gICAgc3VwZXIoUFJPQ0VTU19GRUFUVVJFLCBDQU5DRUxfUkVQTEVOSVNITUVOVF9PUkRFUl9QUk9DRVNTX0lEKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgQ2FuY2VsUmVwbGVuaXNobWVudE9yZGVyU3VjY2VzcyBleHRlbmRzIFN0YXRlVXRpbHMuRW50aXR5U3VjY2Vzc0FjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBDQU5DRUxfUkVQTEVOSVNITUVOVF9PUkRFUl9TVUNDRVNTO1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgcGF5bG9hZDogUmVwbGVuaXNobWVudE9yZGVyKSB7XG4gICAgc3VwZXIoUFJPQ0VTU19GRUFUVVJFLCBDQU5DRUxfUkVQTEVOSVNITUVOVF9PUkRFUl9QUk9DRVNTX0lEKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgQ2FuY2VsUmVwbGVuaXNobWVudE9yZGVyRmFpbCBleHRlbmRzIFN0YXRlVXRpbHMuRW50aXR5RmFpbEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBDQU5DRUxfUkVQTEVOSVNITUVOVF9PUkRFUl9GQUlMO1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgcGF5bG9hZDogYW55KSB7XG4gICAgc3VwZXIoUFJPQ0VTU19GRUFUVVJFLCBDQU5DRUxfUkVQTEVOSVNITUVOVF9PUkRFUl9QUk9DRVNTX0lELCBwYXlsb2FkKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgQ2xlYXJDYW5jZWxSZXBsZW5pc2htZW50T3JkZXIgZXh0ZW5kcyBTdGF0ZVV0aWxzLkVudGl0eUxvYWRlclJlc2V0QWN0aW9uIHtcbiAgcmVhZG9ubHkgdHlwZSA9IENMRUFSX0NBTkNFTF9SRVBMRU5JU0hNRU5UX09SREVSO1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcihQUk9DRVNTX0ZFQVRVUkUsIENBTkNFTF9SRVBMRU5JU0hNRU5UX09SREVSX1BST0NFU1NfSUQpO1xuICB9XG59XG5cbmV4cG9ydCB0eXBlIFJlcGxlbmlzaG1lbnRPcmRlckRldGFpbHNBY3Rpb24gPVxuICB8IExvYWRSZXBsZW5pc2htZW50T3JkZXJEZXRhaWxzXG4gIHwgTG9hZFJlcGxlbmlzaG1lbnRPcmRlckRldGFpbHNTdWNjZXNzXG4gIHwgTG9hZFJlcGxlbmlzaG1lbnRPcmRlckRldGFpbHNGYWlsXG4gIHwgQ2xlYXJSZXBsZW5pc2htZW50T3JkZXJEZXRhaWxzXG4gIHwgQ2FuY2VsUmVwbGVuaXNobWVudE9yZGVyXG4gIHwgQ2FuY2VsUmVwbGVuaXNobWVudE9yZGVyU3VjY2Vzc1xuICB8IENhbmNlbFJlcGxlbmlzaG1lbnRPcmRlckZhaWxcbiAgfCBDbGVhckNhbmNlbFJlcGxlbmlzaG1lbnRPcmRlcjtcbiJdfQ==