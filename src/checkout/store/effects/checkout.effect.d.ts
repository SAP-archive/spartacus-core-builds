import { Actions } from '@ngrx/effects';
import { Observable } from 'rxjs';
import * as DeprecatedCartActions from '../../../cart/store/actions/cart.action';
import { CartActions } from '../../../cart/store/actions/index';
import { GlobalMessageActions } from '../../../global-message/store/actions/index';
import { UserActions } from '../../../user/store/actions/index';
import { CheckoutConnector } from '../../connectors/checkout/checkout.connector';
import { CheckoutDeliveryConnector } from '../../connectors/delivery/checkout-delivery.connector';
import { CheckoutPaymentConnector } from '../../connectors/payment/checkout-payment.connector';
import { CheckoutActions } from '../actions/index';
import * as ɵngcc0 from '@angular/core';
export declare class CheckoutEffects {
    private actions$;
    private checkoutDeliveryConnector;
    private checkoutPaymentConnector;
    private checkoutConnector;
    private contextChange$;
    addDeliveryAddress$: Observable<UserActions.LoadUserAddresses | CheckoutActions.SetDeliveryAddress | CheckoutActions.AddDeliveryAddressFail>;
    setDeliveryAddress$: Observable<CheckoutActions.SetDeliveryAddressSuccess | CheckoutActions.ClearSupportedDeliveryModes | CheckoutActions.ClearCheckoutDeliveryMode | CheckoutActions.ResetLoadSupportedDeliveryModesProcess | CheckoutActions.LoadSupportedDeliveryModes | CheckoutActions.SetDeliveryAddressFail>;
    loadSupportedDeliveryModes$: Observable<CheckoutActions.LoadSupportedDeliveryModesSuccess | CheckoutActions.LoadSupportedDeliveryModesFail>;
    clearCheckoutMiscsDataOnLanguageChange$: Observable<CheckoutActions.CheckoutClearMiscsData | CheckoutActions.ResetLoadSupportedDeliveryModesProcess>;
    clearDeliveryModesOnCurrencyChange$: Observable<CheckoutActions.ClearSupportedDeliveryModes>;
    clearCheckoutDataOnLogout$: Observable<CheckoutActions.ClearCheckoutData>;
    clearCheckoutDataOnLogin$: Observable<CheckoutActions.ClearCheckoutData>;
    setDeliveryMode$: Observable<CheckoutActions.SetDeliveryModeSuccess | CheckoutActions.SetDeliveryModeFail | DeprecatedCartActions.LoadCart>;
    createPaymentDetails$: Observable<UserActions.LoadUserPaymentMethods | CheckoutActions.CreatePaymentDetailsSuccess | CheckoutActions.CreatePaymentDetailsFail>;
    setPaymentDetails$: Observable<CheckoutActions.SetPaymentDetailsSuccess | CheckoutActions.SetPaymentDetailsFail>;
    placeOrder$: Observable<CheckoutActions.PlaceOrderSuccess | GlobalMessageActions.AddMessage | CheckoutActions.PlaceOrderFail | CartActions.RemoveCart>;
    loadCheckoutDetails$: Observable<CheckoutActions.LoadCheckoutDetailsSuccess | CheckoutActions.LoadCheckoutDetailsFail>;
    reloadDetailsOnMergeCart$: Observable<CheckoutActions.LoadCheckoutDetails>;
    clearCheckoutDeliveryAddress$: Observable<CheckoutActions.ClearCheckoutDeliveryAddressFail | CheckoutActions.ClearCheckoutDeliveryAddressSuccess>;
    clearCheckoutDeliveryMode$: Observable<CheckoutActions.ClearCheckoutDeliveryModeFail | CheckoutActions.ClearCheckoutDeliveryModeSuccess | CartActions.CartProcessesDecrement | CartActions.LoadCart>;
    constructor(actions$: Actions, checkoutDeliveryConnector: CheckoutDeliveryConnector, checkoutPaymentConnector: CheckoutPaymentConnector, checkoutConnector: CheckoutConnector);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CheckoutEffects>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<CheckoutEffects>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tvdXQuZWZmZWN0LmQudHMiLCJzb3VyY2VzIjpbImNoZWNrb3V0LmVmZmVjdC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7OztBQVVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFzQkE7Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWN0aW9ucyB9IGZyb20gJ0BuZ3J4L2VmZmVjdHMnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0ICogYXMgRGVwcmVjYXRlZENhcnRBY3Rpb25zIGZyb20gJy4uLy4uLy4uL2NhcnQvc3RvcmUvYWN0aW9ucy9jYXJ0LmFjdGlvbic7XG5pbXBvcnQgeyBDYXJ0QWN0aW9ucyB9IGZyb20gJy4uLy4uLy4uL2NhcnQvc3RvcmUvYWN0aW9ucy9pbmRleCc7XG5pbXBvcnQgeyBHbG9iYWxNZXNzYWdlQWN0aW9ucyB9IGZyb20gJy4uLy4uLy4uL2dsb2JhbC1tZXNzYWdlL3N0b3JlL2FjdGlvbnMvaW5kZXgnO1xuaW1wb3J0IHsgVXNlckFjdGlvbnMgfSBmcm9tICcuLi8uLi8uLi91c2VyL3N0b3JlL2FjdGlvbnMvaW5kZXgnO1xuaW1wb3J0IHsgQ2hlY2tvdXRDb25uZWN0b3IgfSBmcm9tICcuLi8uLi9jb25uZWN0b3JzL2NoZWNrb3V0L2NoZWNrb3V0LmNvbm5lY3Rvcic7XG5pbXBvcnQgeyBDaGVja291dERlbGl2ZXJ5Q29ubmVjdG9yIH0gZnJvbSAnLi4vLi4vY29ubmVjdG9ycy9kZWxpdmVyeS9jaGVja291dC1kZWxpdmVyeS5jb25uZWN0b3InO1xuaW1wb3J0IHsgQ2hlY2tvdXRQYXltZW50Q29ubmVjdG9yIH0gZnJvbSAnLi4vLi4vY29ubmVjdG9ycy9wYXltZW50L2NoZWNrb3V0LXBheW1lbnQuY29ubmVjdG9yJztcbmltcG9ydCB7IENoZWNrb3V0QWN0aW9ucyB9IGZyb20gJy4uL2FjdGlvbnMvaW5kZXgnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ2hlY2tvdXRFZmZlY3RzIHtcbiAgICBwcml2YXRlIGFjdGlvbnMkO1xuICAgIHByaXZhdGUgY2hlY2tvdXREZWxpdmVyeUNvbm5lY3RvcjtcbiAgICBwcml2YXRlIGNoZWNrb3V0UGF5bWVudENvbm5lY3RvcjtcbiAgICBwcml2YXRlIGNoZWNrb3V0Q29ubmVjdG9yO1xuICAgIHByaXZhdGUgY29udGV4dENoYW5nZSQ7XG4gICAgYWRkRGVsaXZlcnlBZGRyZXNzJDogT2JzZXJ2YWJsZTxVc2VyQWN0aW9ucy5Mb2FkVXNlckFkZHJlc3NlcyB8IENoZWNrb3V0QWN0aW9ucy5TZXREZWxpdmVyeUFkZHJlc3MgfCBDaGVja291dEFjdGlvbnMuQWRkRGVsaXZlcnlBZGRyZXNzRmFpbD47XG4gICAgc2V0RGVsaXZlcnlBZGRyZXNzJDogT2JzZXJ2YWJsZTxDaGVja291dEFjdGlvbnMuU2V0RGVsaXZlcnlBZGRyZXNzU3VjY2VzcyB8IENoZWNrb3V0QWN0aW9ucy5DbGVhclN1cHBvcnRlZERlbGl2ZXJ5TW9kZXMgfCBDaGVja291dEFjdGlvbnMuQ2xlYXJDaGVja291dERlbGl2ZXJ5TW9kZSB8IENoZWNrb3V0QWN0aW9ucy5SZXNldExvYWRTdXBwb3J0ZWREZWxpdmVyeU1vZGVzUHJvY2VzcyB8IENoZWNrb3V0QWN0aW9ucy5Mb2FkU3VwcG9ydGVkRGVsaXZlcnlNb2RlcyB8IENoZWNrb3V0QWN0aW9ucy5TZXREZWxpdmVyeUFkZHJlc3NGYWlsPjtcbiAgICBsb2FkU3VwcG9ydGVkRGVsaXZlcnlNb2RlcyQ6IE9ic2VydmFibGU8Q2hlY2tvdXRBY3Rpb25zLkxvYWRTdXBwb3J0ZWREZWxpdmVyeU1vZGVzU3VjY2VzcyB8IENoZWNrb3V0QWN0aW9ucy5Mb2FkU3VwcG9ydGVkRGVsaXZlcnlNb2Rlc0ZhaWw+O1xuICAgIGNsZWFyQ2hlY2tvdXRNaXNjc0RhdGFPbkxhbmd1YWdlQ2hhbmdlJDogT2JzZXJ2YWJsZTxDaGVja291dEFjdGlvbnMuQ2hlY2tvdXRDbGVhck1pc2NzRGF0YSB8IENoZWNrb3V0QWN0aW9ucy5SZXNldExvYWRTdXBwb3J0ZWREZWxpdmVyeU1vZGVzUHJvY2Vzcz47XG4gICAgY2xlYXJEZWxpdmVyeU1vZGVzT25DdXJyZW5jeUNoYW5nZSQ6IE9ic2VydmFibGU8Q2hlY2tvdXRBY3Rpb25zLkNsZWFyU3VwcG9ydGVkRGVsaXZlcnlNb2Rlcz47XG4gICAgY2xlYXJDaGVja291dERhdGFPbkxvZ291dCQ6IE9ic2VydmFibGU8Q2hlY2tvdXRBY3Rpb25zLkNsZWFyQ2hlY2tvdXREYXRhPjtcbiAgICBjbGVhckNoZWNrb3V0RGF0YU9uTG9naW4kOiBPYnNlcnZhYmxlPENoZWNrb3V0QWN0aW9ucy5DbGVhckNoZWNrb3V0RGF0YT47XG4gICAgc2V0RGVsaXZlcnlNb2RlJDogT2JzZXJ2YWJsZTxDaGVja291dEFjdGlvbnMuU2V0RGVsaXZlcnlNb2RlU3VjY2VzcyB8IENoZWNrb3V0QWN0aW9ucy5TZXREZWxpdmVyeU1vZGVGYWlsIHwgRGVwcmVjYXRlZENhcnRBY3Rpb25zLkxvYWRDYXJ0PjtcbiAgICBjcmVhdGVQYXltZW50RGV0YWlscyQ6IE9ic2VydmFibGU8VXNlckFjdGlvbnMuTG9hZFVzZXJQYXltZW50TWV0aG9kcyB8IENoZWNrb3V0QWN0aW9ucy5DcmVhdGVQYXltZW50RGV0YWlsc1N1Y2Nlc3MgfCBDaGVja291dEFjdGlvbnMuQ3JlYXRlUGF5bWVudERldGFpbHNGYWlsPjtcbiAgICBzZXRQYXltZW50RGV0YWlscyQ6IE9ic2VydmFibGU8Q2hlY2tvdXRBY3Rpb25zLlNldFBheW1lbnREZXRhaWxzU3VjY2VzcyB8IENoZWNrb3V0QWN0aW9ucy5TZXRQYXltZW50RGV0YWlsc0ZhaWw+O1xuICAgIHBsYWNlT3JkZXIkOiBPYnNlcnZhYmxlPENoZWNrb3V0QWN0aW9ucy5QbGFjZU9yZGVyU3VjY2VzcyB8IEdsb2JhbE1lc3NhZ2VBY3Rpb25zLkFkZE1lc3NhZ2UgfCBDaGVja291dEFjdGlvbnMuUGxhY2VPcmRlckZhaWwgfCBDYXJ0QWN0aW9ucy5SZW1vdmVDYXJ0PjtcbiAgICBsb2FkQ2hlY2tvdXREZXRhaWxzJDogT2JzZXJ2YWJsZTxDaGVja291dEFjdGlvbnMuTG9hZENoZWNrb3V0RGV0YWlsc1N1Y2Nlc3MgfCBDaGVja291dEFjdGlvbnMuTG9hZENoZWNrb3V0RGV0YWlsc0ZhaWw+O1xuICAgIHJlbG9hZERldGFpbHNPbk1lcmdlQ2FydCQ6IE9ic2VydmFibGU8Q2hlY2tvdXRBY3Rpb25zLkxvYWRDaGVja291dERldGFpbHM+O1xuICAgIGNsZWFyQ2hlY2tvdXREZWxpdmVyeUFkZHJlc3MkOiBPYnNlcnZhYmxlPENoZWNrb3V0QWN0aW9ucy5DbGVhckNoZWNrb3V0RGVsaXZlcnlBZGRyZXNzRmFpbCB8IENoZWNrb3V0QWN0aW9ucy5DbGVhckNoZWNrb3V0RGVsaXZlcnlBZGRyZXNzU3VjY2Vzcz47XG4gICAgY2xlYXJDaGVja291dERlbGl2ZXJ5TW9kZSQ6IE9ic2VydmFibGU8Q2hlY2tvdXRBY3Rpb25zLkNsZWFyQ2hlY2tvdXREZWxpdmVyeU1vZGVGYWlsIHwgQ2hlY2tvdXRBY3Rpb25zLkNsZWFyQ2hlY2tvdXREZWxpdmVyeU1vZGVTdWNjZXNzIHwgQ2FydEFjdGlvbnMuQ2FydFByb2Nlc3Nlc0RlY3JlbWVudCB8IENhcnRBY3Rpb25zLkxvYWRDYXJ0PjtcbiAgICBjb25zdHJ1Y3RvcihhY3Rpb25zJDogQWN0aW9ucywgY2hlY2tvdXREZWxpdmVyeUNvbm5lY3RvcjogQ2hlY2tvdXREZWxpdmVyeUNvbm5lY3RvciwgY2hlY2tvdXRQYXltZW50Q29ubmVjdG9yOiBDaGVja291dFBheW1lbnRDb25uZWN0b3IsIGNoZWNrb3V0Q29ubmVjdG9yOiBDaGVja291dENvbm5lY3Rvcik7XG59XG4iXX0=