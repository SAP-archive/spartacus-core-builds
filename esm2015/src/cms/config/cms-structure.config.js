import { Injectable } from '@angular/core';
import { CmsConfig } from './cms-config';
import { Config } from '../../config/config-tokens';
import * as i0 from "@angular/core";
import * as i1 from "../../config/config-tokens";
/**
 * The `CmsStructureConfig` is used to build pages in Spartacus by configuration
 * instead of using a backend CMS system. The configuration can be used to build
 * complete pages or parts of a page. The `CmsStructureConfig` is optimized to
 * only require the necessary properties. Adapter logic is applied to serialize
 * the `CmsStructureConfig` into the required UI model.
 */
export class CmsStructureConfig extends CmsConfig {
}
CmsStructureConfig.ɵprov = i0.ɵɵdefineInjectable({ factory: function CmsStructureConfig_Factory() { return i0.ɵɵinject(i1.Config); }, token: CmsStructureConfig, providedIn: "root" });
CmsStructureConfig.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root',
                useExisting: Config,
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY21zLXN0cnVjdHVyZS5jb25maWcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlL3NyYy9jbXMvY29uZmlnL2Ntcy1zdHJ1Y3R1cmUuY29uZmlnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFM0MsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUN6QyxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7OztBQTBEcEQ7Ozs7OztHQU1HO0FBS0gsTUFBTSxPQUFnQixrQkFBbUIsU0FBUSxTQUFTOzs7O1lBSnpELFVBQVUsU0FBQztnQkFDVixVQUFVLEVBQUUsTUFBTTtnQkFDbEIsV0FBVyxFQUFFLE1BQU07YUFDcEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb250ZW50U2xvdENvbXBvbmVudERhdGEgfSBmcm9tICcuLi9tb2RlbC9jb250ZW50LXNsb3QtY29tcG9uZW50LWRhdGEubW9kZWwnO1xuaW1wb3J0IHsgQ21zQ29uZmlnIH0gZnJvbSAnLi9jbXMtY29uZmlnJztcbmltcG9ydCB7IENvbmZpZyB9IGZyb20gJy4uLy4uL2NvbmZpZy9jb25maWctdG9rZW5zJztcblxuLyoqXG4gKiBUaGUgYENtc1BhZ2VDb25maWdgIGlzIHVzZWQgdG8gYnVpbGQgcGFnZXMgYnkgY29uZmlndXJhdGlvbi5cbiAqIFRoZSBpbnRlcmZhY2VzIGFyZSBkZXNpZ25lZCB0byBoYXZlIGEgY2xlYW4gY29uZmlndXJhdGlvbiBmb3JcbiAqIHN0YXRpYyBDTVMgc3RydWN0dXJlLiBPcmRpbmFyeSBhdHRyaWJ1dGVzIHRoYXQgYXJlIG5vdFxuICogcmVxdWlyZWQgZm9yIGNvbmZpZ3VyYWJsZSBwYWdlcyBoYXZlIGJlZW4gbGVmdCBvdXQgYW5kXG4gKiB3aWxsIG5vdCBiZSBzZXJpYWxpemVkIGluIHRoZSBhZGFwdGVyIGxvZ2ljLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIENtc1BhZ2VDb25maWcge1xuICAvKipcbiAgICogV2hlbiB0aGUgYGlnbm9yZUJhY2tlbmRgIGlzIHNldCB0byB0cnVlLCB0aGUgQ01TIGJhY2tlbmRcbiAgICogd2lsbCBub3QgYmUgY29uc3VtZWQuIFRoaXMgc2F2ZXMgbmV0d29yayBsYXRlbmN5IGFuZCBpc1xuICAgKiB1c2VmdWwgZm9yIGNvbW1vZGl0eSBjb21tZXJjZSBwYWdlcy5cbiAgICogKi9cbiAgaWdub3JlQmFja2VuZD86IGJvb2xlYW47XG5cbiAgcGFnZUlkPzogc3RyaW5nO1xuXG4gIHR5cGU/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSBwYWdlIHRpdGxlIGlzIHR5cGljYWxseSB1c2VkIHRvIGRpc3BsYXkgdGhlIHBhZ2UgaGVhZGluZ1xuICAgKiBhcyB3ZWxsIGFzIGZvciB0aGUgcGFnZSB0aXRsZSB0YWcuIFRoZSBsYXR0ZXIgaXMgdXNlZCBmb3IgYnJvd3NlclxuICAgKiBuYXZpZ2F0aW9uIGFzIHdlbGwgYXMgU0VPIGFuZCBzb2NpYWwgc2hhcmUgcGxhdGZvcm1zLlxuICAgKi9cbiAgdGl0bGU/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIHRoZSB0ZW1wbGF0ZSBpcyB1c2VkIHRvIGJpbmQgdG8gdGhlIGxheW91dFxuICAgKiBjb25maWd1cmF0aW9uIGFuZCBjc3MgbGF5b3V0IGNsYXNzXG4gICAqL1xuICB0ZW1wbGF0ZT86IHN0cmluZztcblxuICAvKipcbiAgICogVGhlIHBhZ2Ugc2xvdHMgcmVwcmVzZW50IHZhcmlvdXMgc2VjdGlvbnMgb24gdGhlIHBhZ2UgdGhhdFxuICAgKiBjYW4gY29udGFpbiBjb21wb25lbnRzLlxuICAgKi9cbiAgc2xvdHM6IHsgW2tleTogc3RyaW5nXTogQ21zUGFnZVNsb3RDb25maWcgfTtcbn1cblxuLyoqXG4gKiBUaGUgYENtc1BhZ2VTbG90c0NvbmZpZ2AgKHBsdXJhbCkgaG9sZHMgYENtc1BhZ2VTbG90Q29uZmlnYCBvYmplY3RzLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIENtc1BhZ2VTbG90c0NvbmZpZyB7XG4gIFtrZXk6IHN0cmluZ106IENtc1BhZ2VTbG90Q29uZmlnO1xufVxuXG4vKipcbiAqIFRoZSBgQ21zUGFnZVNsb3RDb25maWdgIGlzIGEgc2ltcGxpZmllZCBjb25maWd1cmF0aW9uIG1vZGVsXG4gKiB0aGF0IGNhbiBiZSB1c2VkIHRvIGNvbmZpZ3VyZSBzbG90cyBpbiBzdGF0aWMgY29uZmlndXJhdGlvbixcbiAqIHJhdGhlciB0aGFuIGxvYWRpbmcgZnJvbSBhIGJhY2tlbmQuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQ21zUGFnZVNsb3RDb25maWcge1xuICBjb21wb25lbnRJZHM/OiBzdHJpbmdbXTtcbiAgcHJvcGVydGllcz86IGFueTtcbn1cblxuLyoqXG4gKiBUaGUgYENtc1N0cnVjdHVyZUNvbmZpZ2AgaXMgdXNlZCB0byBidWlsZCBwYWdlcyBpbiBTcGFydGFjdXMgYnkgY29uZmlndXJhdGlvblxuICogaW5zdGVhZCBvZiB1c2luZyBhIGJhY2tlbmQgQ01TIHN5c3RlbS4gVGhlIGNvbmZpZ3VyYXRpb24gY2FuIGJlIHVzZWQgdG8gYnVpbGRcbiAqIGNvbXBsZXRlIHBhZ2VzIG9yIHBhcnRzIG9mIGEgcGFnZS4gVGhlIGBDbXNTdHJ1Y3R1cmVDb25maWdgIGlzIG9wdGltaXplZCB0b1xuICogb25seSByZXF1aXJlIHRoZSBuZWNlc3NhcnkgcHJvcGVydGllcy4gQWRhcHRlciBsb2dpYyBpcyBhcHBsaWVkIHRvIHNlcmlhbGl6ZVxuICogdGhlIGBDbXNTdHJ1Y3R1cmVDb25maWdgIGludG8gdGhlIHJlcXVpcmVkIFVJIG1vZGVsLlxuICovXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290JyxcbiAgdXNlRXhpc3Rpbmc6IENvbmZpZyxcbn0pXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgQ21zU3RydWN0dXJlQ29uZmlnIGV4dGVuZHMgQ21zQ29uZmlnIHtcbiAgY21zU3RydWN0dXJlOiB7XG4gICAgY29tcG9uZW50cz86IHsgW2tleTogc3RyaW5nXTogQ29udGVudFNsb3RDb21wb25lbnREYXRhIHwgYW55IH07XG4gICAgcGFnZXM/OiBDbXNQYWdlQ29uZmlnW107XG4gICAgc2xvdHM/OiBDbXNQYWdlU2xvdHNDb25maWc7XG4gIH07XG59XG4iXX0=