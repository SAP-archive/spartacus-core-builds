import { Actions } from '@ngrx/effects';
import { Store } from '@ngrx/store';
import { Observable } from 'rxjs';
import { CartConnector } from '../../connectors/cart/cart.connector';
import { CartActions } from '../actions/index';
import { StateWithMultiCart } from '../multi-cart-state';
import * as ɵngcc0 from '@angular/core';
export declare class CartEffects {
    private actions$;
    private cartConnector;
    private store;
    private contextChange$;
    loadCart$: Observable<CartActions.LoadCartFail | CartActions.LoadCartSuccess | CartActions.ClearExpiredCoupons | CartActions.RemoveCart>;
    createCart$: Observable<CartActions.MergeCartSuccess | CartActions.CreateCartSuccess | CartActions.CreateCartFail | CartActions.SetTempCart>;
    mergeCart$: Observable<CartActions.CreateCart>;
    refresh$: Observable<CartActions.LoadCart | CartActions.CartProcessesDecrement>;
    refreshWithoutProcesses$: Observable<CartActions.LoadCart>;
    resetCartDetailsOnSiteContextChange$: Observable<CartActions.ResetCartDetails>;
    addEmail$: Observable<CartActions.AddEmailToCartSuccess | CartActions.AddEmailToCartFail | CartActions.LoadCart>;
    deleteCart$: Observable<CartActions.DeleteCartSuccess | CartActions.DeleteCartFail | CartActions.LoadCart>;
    constructor(actions$: Actions, cartConnector: CartConnector, store: Store<StateWithMultiCart>);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CartEffects, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<CartEffects>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FydC5lZmZlY3QuZC50cyIsInNvdXJjZXMiOlsiY2FydC5lZmZlY3QuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7OztBQU1BOzs7Ozs7Ozs7Ozs7Ozs7O0FBY0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBY3Rpb25zIH0gZnJvbSAnQG5ncngvZWZmZWN0cyc7XG5pbXBvcnQgeyBTdG9yZSB9IGZyb20gJ0BuZ3J4L3N0b3JlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IENhcnRDb25uZWN0b3IgfSBmcm9tICcuLi8uLi9jb25uZWN0b3JzL2NhcnQvY2FydC5jb25uZWN0b3InO1xuaW1wb3J0IHsgQ2FydEFjdGlvbnMgfSBmcm9tICcuLi9hY3Rpb25zL2luZGV4JztcbmltcG9ydCB7IFN0YXRlV2l0aE11bHRpQ2FydCB9IGZyb20gJy4uL211bHRpLWNhcnQtc3RhdGUnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ2FydEVmZmVjdHMge1xuICAgIHByaXZhdGUgYWN0aW9ucyQ7XG4gICAgcHJpdmF0ZSBjYXJ0Q29ubmVjdG9yO1xuICAgIHByaXZhdGUgc3RvcmU7XG4gICAgcHJpdmF0ZSBjb250ZXh0Q2hhbmdlJDtcbiAgICBsb2FkQ2FydCQ6IE9ic2VydmFibGU8Q2FydEFjdGlvbnMuTG9hZENhcnRGYWlsIHwgQ2FydEFjdGlvbnMuTG9hZENhcnRTdWNjZXNzIHwgQ2FydEFjdGlvbnMuQ2xlYXJFeHBpcmVkQ291cG9ucyB8IENhcnRBY3Rpb25zLlJlbW92ZUNhcnQ+O1xuICAgIGNyZWF0ZUNhcnQkOiBPYnNlcnZhYmxlPENhcnRBY3Rpb25zLk1lcmdlQ2FydFN1Y2Nlc3MgfCBDYXJ0QWN0aW9ucy5DcmVhdGVDYXJ0U3VjY2VzcyB8IENhcnRBY3Rpb25zLkNyZWF0ZUNhcnRGYWlsIHwgQ2FydEFjdGlvbnMuU2V0VGVtcENhcnQ+O1xuICAgIG1lcmdlQ2FydCQ6IE9ic2VydmFibGU8Q2FydEFjdGlvbnMuQ3JlYXRlQ2FydD47XG4gICAgcmVmcmVzaCQ6IE9ic2VydmFibGU8Q2FydEFjdGlvbnMuTG9hZENhcnQgfCBDYXJ0QWN0aW9ucy5DYXJ0UHJvY2Vzc2VzRGVjcmVtZW50PjtcbiAgICByZWZyZXNoV2l0aG91dFByb2Nlc3NlcyQ6IE9ic2VydmFibGU8Q2FydEFjdGlvbnMuTG9hZENhcnQ+O1xuICAgIHJlc2V0Q2FydERldGFpbHNPblNpdGVDb250ZXh0Q2hhbmdlJDogT2JzZXJ2YWJsZTxDYXJ0QWN0aW9ucy5SZXNldENhcnREZXRhaWxzPjtcbiAgICBhZGRFbWFpbCQ6IE9ic2VydmFibGU8Q2FydEFjdGlvbnMuQWRkRW1haWxUb0NhcnRTdWNjZXNzIHwgQ2FydEFjdGlvbnMuQWRkRW1haWxUb0NhcnRGYWlsIHwgQ2FydEFjdGlvbnMuTG9hZENhcnQ+O1xuICAgIGRlbGV0ZUNhcnQkOiBPYnNlcnZhYmxlPENhcnRBY3Rpb25zLkRlbGV0ZUNhcnRTdWNjZXNzIHwgQ2FydEFjdGlvbnMuRGVsZXRlQ2FydEZhaWwgfCBDYXJ0QWN0aW9ucy5Mb2FkQ2FydD47XG4gICAgY29uc3RydWN0b3IoYWN0aW9ucyQ6IEFjdGlvbnMsIGNhcnRDb25uZWN0b3I6IENhcnRDb25uZWN0b3IsIHN0b3JlOiBTdG9yZTxTdGF0ZVdpdGhNdWx0aUNhcnQ+KTtcbn1cbiJdfQ==