{"version":3,"file":"semantic-path.service.d.ts","sources":["/home/travis/build/SAP/cloud-commerce-spartacus-storefront/dist/core/src/routing/configurable-routes/url-translation/semantic-path.service.d.ts"],"sourcesContent":["import { UrlParsingService } from './url-parsing.service';\nimport { UrlCommands } from './url-command';\nimport { RoutingConfigService } from '../routing-config.service';\nexport declare class SemanticPathService {\n    protected routingConfigService: RoutingConfigService;\n    protected urlParser: UrlParsingService;\n    readonly ROOT_URL: string[];\n    constructor(routingConfigService: RoutingConfigService, urlParser: UrlParsingService);\n    /**\n     * Returns the first path alias configured for a given route name. It adds `/` at the beginning.\n     */\n    get(routeName: string): string;\n    /**\n     * Transforms the array of url commands. Each command can be:\n     * a) string - will be left untouched\n     * b) object { cxRoute: <route name> } - will be replaced with semantic path\n     * c) object { cxRoute: <route name>, params: { ... } } - same as above, but with passed params\n     *\n     * If the first command is the object with the `cxRoute` property, returns an absolute url (with the first element of the array `'/'`)\n     */\n    transform(commands: UrlCommands): any[];\n    private isRouteCommand;\n    private shouldOutputAbsolute;\n    private generateUrlPart;\n    private standarizeRouteCommand;\n    private provideParamsValues;\n    private findPathWithFillableParams;\n    private getParams;\n    private getMappedParamName;\n    private warn;\n}\n"],"names":[],"mappings":"AAAA;;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;"}