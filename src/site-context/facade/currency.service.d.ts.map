{"version":3,"file":"currency.service.d.ts","sources":["/home/travis/build/SAP/cloud-commerce-spartacus-storefront/dist/core/src/site-context/facade/currency.service.d.ts"],"sourcesContent":["import { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { Currency } from '../../model/misc.model';\nimport { WindowRef } from '../../window/window-ref';\nimport { StateWithSiteContext } from '../store/state';\nimport { SiteContext } from './site-context.interface';\nimport { SiteContextConfig } from '../config/site-context-config';\n/**\n * Facade that provides easy access to curreny state, actions and selectors.\n */\nexport declare class CurrencyService implements SiteContext<Currency> {\n    protected store: Store<StateWithSiteContext>;\n    protected config: SiteContextConfig;\n    private sessionStorage;\n    constructor(store: Store<StateWithSiteContext>, winRef: WindowRef, config: SiteContextConfig);\n    /**\n     * Represents all the currencies supported by the current store.\n     */\n    getAll(): Observable<Currency[]>;\n    /**\n     * Represents the isocode of the active currency.\n     */\n    getActive(): Observable<string>;\n    /**\n     * Sets the active language.\n     */\n    setActive(isocode: string): import(\"rxjs\").Subscription;\n    /**\n     * Initials the active currency. The active currency is either given\n     * by the last visit (stored in session storage) or by the\n     * default session currency of the store.\n     */\n    initialize(): void;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA;"}