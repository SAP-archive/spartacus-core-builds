import { __extends } from "tslib";
import { EntityFailAction, EntityLoadAction, EntitySuccessAction, } from '../../../state/utils/entity-loader/entity-loader.action';
import { MULTI_CART_DATA } from '../multi-cart-state';
export var CREATE_CART = '[Cart] Create Cart';
export var CREATE_CART_FAIL = '[Cart] Create Cart Fail';
export var CREATE_CART_SUCCESS = '[Cart] Create Cart Success';
export var LOAD_CART = '[Cart] Load Cart';
export var LOAD_CART_FAIL = '[Cart] Load Cart Fail';
export var LOAD_CART_SUCCESS = '[Cart] Load Cart Success';
export var ADD_EMAIL_TO_CART = '[Cart] Add Email to Cart';
export var ADD_EMAIL_TO_CART_FAIL = '[Cart] Add Email to Cart Fail';
export var ADD_EMAIL_TO_CART_SUCCESS = '[Cart] Add Email to Cart Success';
export var MERGE_CART = '[Cart] Merge Cart';
export var MERGE_CART_SUCCESS = '[Cart] Merge Cart Success';
export var RESET_CART_DETAILS = '[Cart] Reset Cart Details';
export var CLEAR_EXPIRED_COUPONS = '[Cart] Clear Expired Coupon';
export var CLEAR_CART = '[Cart] Clear Cart';
export var DELETE_CART = '[Cart] Delete Cart';
export var DELETE_CART_FAIL = '[Cart] Delete Cart Fail';
var CreateCart = /** @class */ (function (_super) {
    __extends(CreateCart, _super);
    function CreateCart(payload) {
        var _this = _super.call(this, MULTI_CART_DATA, payload.tempCartId) || this;
        _this.payload = payload;
        _this.type = CREATE_CART;
        return _this;
    }
    return CreateCart;
}(EntityLoadAction));
export { CreateCart };
var CreateCartFail = /** @class */ (function (_super) {
    __extends(CreateCartFail, _super);
    function CreateCartFail(payload) {
        var _this = _super.call(this, MULTI_CART_DATA, payload.tempCartId) || this;
        _this.payload = payload;
        _this.type = CREATE_CART_FAIL;
        return _this;
    }
    return CreateCartFail;
}(EntityFailAction));
export { CreateCartFail };
var CreateCartSuccess = /** @class */ (function (_super) {
    __extends(CreateCartSuccess, _super);
    function CreateCartSuccess(payload) {
        var _this = _super.call(this, MULTI_CART_DATA, payload.cartId) || this;
        _this.payload = payload;
        _this.type = CREATE_CART_SUCCESS;
        return _this;
    }
    return CreateCartSuccess;
}(EntitySuccessAction));
export { CreateCartSuccess };
var AddEmailToCart = /** @class */ (function () {
    function AddEmailToCart(payload) {
        this.payload = payload;
        this.type = ADD_EMAIL_TO_CART;
    }
    return AddEmailToCart;
}());
export { AddEmailToCart };
var AddEmailToCartFail = /** @class */ (function () {
    function AddEmailToCartFail(payload) {
        this.payload = payload;
        this.type = ADD_EMAIL_TO_CART_FAIL;
    }
    return AddEmailToCartFail;
}());
export { AddEmailToCartFail };
var AddEmailToCartSuccess = /** @class */ (function () {
    function AddEmailToCartSuccess(payload) {
        this.payload = payload;
        this.type = ADD_EMAIL_TO_CART_SUCCESS;
    }
    return AddEmailToCartSuccess;
}());
export { AddEmailToCartSuccess };
var LoadCart = /** @class */ (function (_super) {
    __extends(LoadCart, _super);
    function LoadCart(payload) {
        var _this = _super.call(this, MULTI_CART_DATA, payload.cartId) || this;
        _this.payload = payload;
        _this.type = LOAD_CART;
        return _this;
    }
    return LoadCart;
}(EntityLoadAction));
export { LoadCart };
var LoadCartFail = /** @class */ (function (_super) {
    __extends(LoadCartFail, _super);
    function LoadCartFail(payload) {
        var _this = _super.call(this, MULTI_CART_DATA, payload.cartId, payload.error) || this;
        _this.payload = payload;
        _this.type = LOAD_CART_FAIL;
        return _this;
    }
    return LoadCartFail;
}(EntityFailAction));
export { LoadCartFail };
var LoadCartSuccess = /** @class */ (function (_super) {
    __extends(LoadCartSuccess, _super);
    function LoadCartSuccess(payload) {
        var _this = _super.call(this, MULTI_CART_DATA, payload.cartId) || this;
        _this.payload = payload;
        _this.type = LOAD_CART_SUCCESS;
        return _this;
    }
    return LoadCartSuccess;
}(EntitySuccessAction));
export { LoadCartSuccess };
var MergeCart = /** @class */ (function () {
    function MergeCart(payload) {
        this.payload = payload;
        this.type = MERGE_CART;
    }
    return MergeCart;
}());
export { MergeCart };
var MergeCartSuccess = /** @class */ (function () {
    function MergeCartSuccess(payload) {
        this.payload = payload;
        this.type = MERGE_CART_SUCCESS;
    }
    return MergeCartSuccess;
}());
export { MergeCartSuccess };
var ResetCartDetails = /** @class */ (function () {
    function ResetCartDetails() {
        this.type = RESET_CART_DETAILS;
    }
    return ResetCartDetails;
}());
export { ResetCartDetails };
var ClearExpiredCoupons = /** @class */ (function () {
    function ClearExpiredCoupons(payload) {
        this.payload = payload;
        this.type = CLEAR_EXPIRED_COUPONS;
    }
    return ClearExpiredCoupons;
}());
export { ClearExpiredCoupons };
var ClearCart = /** @class */ (function () {
    function ClearCart() {
        this.type = CLEAR_CART;
    }
    return ClearCart;
}());
export { ClearCart };
var DeleteCart = /** @class */ (function () {
    function DeleteCart(payload) {
        this.payload = payload;
        this.type = DELETE_CART;
    }
    return DeleteCart;
}());
export { DeleteCart };
var DeleteCartFail = /** @class */ (function () {
    function DeleteCartFail(payload) {
        this.payload = payload;
        this.type = DELETE_CART_FAIL;
    }
    return DeleteCartFail;
}());
export { DeleteCartFail };
//# sourceMappingURL=data:application/json;base64,