{"version":3,"file":"selective-cart.service.d.ts","sources":["/home/travis/build/SAP/cloud-commerce-spartacus-storefront/dist/core/src/cart/facade/selective-cart.service.d.ts"],"sourcesContent":["import { Store } from '@ngrx/store';\nimport { StateWithMultiCart } from '../store/multi-cart-state';\nimport { MultiCartService } from './multi-cart.service';\nimport { UserService } from '../../user/facade/user.service';\nimport { AuthService } from '../../auth/facade/auth.service';\nimport { Observable } from 'rxjs';\nimport { Cart } from '../../model/cart.model';\nimport { OrderEntry } from '../../model/order.model';\nimport { BaseSiteService } from '../../site-context/facade/base-site.service';\nexport declare class SelectiveCartService {\n    protected store: Store<StateWithMultiCart>;\n    protected userService: UserService;\n    protected authService: AuthService;\n    protected multiCartService: MultiCartService;\n    protected baseSiteService: BaseSiteService;\n    private customerId;\n    private userId;\n    private cartId;\n    private selectiveCart$;\n    private cartId$;\n    private readonly PREVIOUS_USER_ID_INITIAL_VALUE;\n    private previousUserId;\n    private cartSelector$;\n    constructor(store: Store<StateWithMultiCart>, userService: UserService, authService: AuthService, multiCartService: MultiCartService, baseSiteService: BaseSiteService);\n    getCart(): Observable<Cart>;\n    getEntries(): Observable<OrderEntry[]>;\n    getLoaded(): Observable<boolean>;\n    private load;\n    addEntry(productCode: string, quantity: number): void;\n    removeEntry(entry: OrderEntry): void;\n    updateEntry(entryNumber: number, quantity: number): void;\n    getEntry(productCode: string): Observable<OrderEntry>;\n    private isEmpty;\n    private isJustLoggedIn;\n    private isLoggedIn;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;"}