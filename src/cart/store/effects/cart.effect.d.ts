import { Actions } from '@ngrx/effects';
import { Store } from '@ngrx/store';
import { Observable } from 'rxjs';
import { CartConnector } from '../../connectors/cart/cart.connector';
import { CartActions } from '../actions/index';
import { StateWithMultiCart } from '../multi-cart-state';
import * as ɵngcc0 from '@angular/core';
export declare class CartEffects {
    private actions$;
    private cartConnector;
    private store;
    private contextChange$;
    loadCart$: Observable<CartActions.LoadCartFail | CartActions.LoadCartSuccess | CartActions.RemoveCart>;
    createCart$: Observable<CartActions.MergeCartSuccess | CartActions.CreateCartSuccess | CartActions.CreateCartFail | CartActions.SetTempCart>;
    mergeCart$: Observable<CartActions.CreateCart>;
    refresh$: Observable<CartActions.LoadCart | CartActions.CartProcessesDecrement>;
    refreshWithoutProcesses$: Observable<CartActions.LoadCart>;
    resetCartDetailsOnSiteContextChange$: Observable<CartActions.ResetCartDetails>;
    addEmail$: Observable<CartActions.AddEmailToCartSuccess | CartActions.AddEmailToCartFail | CartActions.LoadCart>;
    deleteCart$: Observable<CartActions.DeleteCartSuccess | CartActions.DeleteCartFail | CartActions.LoadCart>;
    constructor(actions$: Actions, cartConnector: CartConnector, store: Store<StateWithMultiCart>);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CartEffects, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<CartEffects>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FydC5lZmZlY3QuZC50cyIsInNvdXJjZXMiOlsiY2FydC5lZmZlY3QuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7OztBQU1BOzs7Ozs7Ozs7Ozs7Ozs7O0FBY0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBY3Rpb25zIH0gZnJvbSAnQG5ncngvZWZmZWN0cyc7XG5pbXBvcnQgeyBTdG9yZSB9IGZyb20gJ0BuZ3J4L3N0b3JlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IENhcnRDb25uZWN0b3IgfSBmcm9tICcuLi8uLi9jb25uZWN0b3JzL2NhcnQvY2FydC5jb25uZWN0b3InO1xuaW1wb3J0IHsgQ2FydEFjdGlvbnMgfSBmcm9tICcuLi9hY3Rpb25zL2luZGV4JztcbmltcG9ydCB7IFN0YXRlV2l0aE11bHRpQ2FydCB9IGZyb20gJy4uL211bHRpLWNhcnQtc3RhdGUnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ2FydEVmZmVjdHMge1xuICAgIHByaXZhdGUgYWN0aW9ucyQ7XG4gICAgcHJpdmF0ZSBjYXJ0Q29ubmVjdG9yO1xuICAgIHByaXZhdGUgc3RvcmU7XG4gICAgcHJpdmF0ZSBjb250ZXh0Q2hhbmdlJDtcbiAgICBsb2FkQ2FydCQ6IE9ic2VydmFibGU8Q2FydEFjdGlvbnMuTG9hZENhcnRGYWlsIHwgQ2FydEFjdGlvbnMuTG9hZENhcnRTdWNjZXNzIHwgQ2FydEFjdGlvbnMuUmVtb3ZlQ2FydD47XG4gICAgY3JlYXRlQ2FydCQ6IE9ic2VydmFibGU8Q2FydEFjdGlvbnMuTWVyZ2VDYXJ0U3VjY2VzcyB8IENhcnRBY3Rpb25zLkNyZWF0ZUNhcnRTdWNjZXNzIHwgQ2FydEFjdGlvbnMuQ3JlYXRlQ2FydEZhaWwgfCBDYXJ0QWN0aW9ucy5TZXRUZW1wQ2FydD47XG4gICAgbWVyZ2VDYXJ0JDogT2JzZXJ2YWJsZTxDYXJ0QWN0aW9ucy5DcmVhdGVDYXJ0PjtcbiAgICByZWZyZXNoJDogT2JzZXJ2YWJsZTxDYXJ0QWN0aW9ucy5Mb2FkQ2FydCB8IENhcnRBY3Rpb25zLkNhcnRQcm9jZXNzZXNEZWNyZW1lbnQ+O1xuICAgIHJlZnJlc2hXaXRob3V0UHJvY2Vzc2VzJDogT2JzZXJ2YWJsZTxDYXJ0QWN0aW9ucy5Mb2FkQ2FydD47XG4gICAgcmVzZXRDYXJ0RGV0YWlsc09uU2l0ZUNvbnRleHRDaGFuZ2UkOiBPYnNlcnZhYmxlPENhcnRBY3Rpb25zLlJlc2V0Q2FydERldGFpbHM+O1xuICAgIGFkZEVtYWlsJDogT2JzZXJ2YWJsZTxDYXJ0QWN0aW9ucy5BZGRFbWFpbFRvQ2FydFN1Y2Nlc3MgfCBDYXJ0QWN0aW9ucy5BZGRFbWFpbFRvQ2FydEZhaWwgfCBDYXJ0QWN0aW9ucy5Mb2FkQ2FydD47XG4gICAgZGVsZXRlQ2FydCQ6IE9ic2VydmFibGU8Q2FydEFjdGlvbnMuRGVsZXRlQ2FydFN1Y2Nlc3MgfCBDYXJ0QWN0aW9ucy5EZWxldGVDYXJ0RmFpbCB8IENhcnRBY3Rpb25zLkxvYWRDYXJ0PjtcbiAgICBjb25zdHJ1Y3RvcihhY3Rpb25zJDogQWN0aW9ucywgY2FydENvbm5lY3RvcjogQ2FydENvbm5lY3Rvciwgc3RvcmU6IFN0b3JlPFN0YXRlV2l0aE11bHRpQ2FydD4pO1xufVxuIl19