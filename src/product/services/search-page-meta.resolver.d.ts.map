{"version":3,"file":"search-page-meta.resolver.d.ts","sources":["search-page-meta.resolver.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { Observable } from 'rxjs';\nimport { PageRobotsMeta } from '../../cms/model/page.model';\nimport { BasePageMetaResolver } from '../../cms/page/base-page-meta.resolver';\nimport { PageMetaResolver } from '../../cms/page/page-meta.resolver';\nimport { PageRobotsResolver, PageTitleResolver } from '../../cms/page/page.resolvers';\nimport { TranslationService } from '../../i18n/translation.service';\nimport { RoutingService } from '../../routing/facade/routing.service';\nimport { ProductSearchService } from '../facade/product-search.service';\n/**\n * Resolves the page data for the Search Result Page based on the\n * `PageType.CATEGORY_PAGE` and the `SearchResultsListPageTemplate` template.\n *\n * Only the page title is resolved in the standard implementation.\n */\nexport declare class SearchPageMetaResolver extends PageMetaResolver implements PageMetaResolver, PageTitleResolver, PageRobotsResolver {\n    protected routingService: RoutingService;\n    protected productSearchService: ProductSearchService;\n    protected translation: TranslationService;\n    protected basePageMetaResolver?: BasePageMetaResolver;\n    protected total$: Observable<number>;\n    protected query$: Observable<string>;\n    /**\n     * @deprecated since 3.1 we'll use the `BasePageMetaResolver` going forward\n     */\n    constructor(routingService: RoutingService, productSearchService: ProductSearchService, translation: TranslationService);\n    constructor(routingService: RoutingService, productSearchService: ProductSearchService, translation: TranslationService, basePageMetaResolver?: BasePageMetaResolver);\n    resolveTitle(): Observable<string>;\n    /**\n     * @override\n     * This is added in 3.1 and will be ignored if the `BasePageMetaResolver` is not\n     * available.\n     */\n    resolveRobots(): Observable<PageRobotsMeta[]>;\n}\n"]}