{"version":3,"file":"occ-store-finder.adapter.d.ts","sources":["/home/travis/build/SAP/cloud-commerce-spartacus-storefront/dist/core/src/occ/adapters/store-finder/occ-store-finder.adapter.d.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { GeoPoint } from '../../../model/misc.model';\nimport { PointOfService } from '../../../model/point-of-service.model';\nimport { StoreCount, StoreFinderSearchPage } from '../../../model/store-finder.model';\nimport { StoreFinderAdapter } from '../../../store-finder/connectors/store-finder.adapter';\nimport { StoreFinderSearchConfig } from '../../../store-finder/model';\nimport { ConverterService } from '../../../util/converter.service';\nimport { Occ } from '../../occ-models/occ.models';\nimport { OccEndpointsService } from '../../services/occ-endpoints.service';\nexport declare class OccStoreFinderAdapter implements StoreFinderAdapter {\n    protected http: HttpClient;\n    protected occEndpointsService: OccEndpointsService;\n    protected converterService: ConverterService;\n    constructor(http: HttpClient, occEndpointsService: OccEndpointsService, converterService: ConverterService);\n    search(query: string, searchConfig: StoreFinderSearchConfig, longitudeLatitude?: GeoPoint): Observable<StoreFinderSearchPage>;\n    loadCounts(): Observable<StoreCount[]>;\n    load(storeId: string): Observable<PointOfService>;\n    protected callOccFindStores(query: string, searchConfig: StoreFinderSearchConfig, longitudeLatitude?: GeoPoint): Observable<Occ.StoreFinderSearchPage>;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;AAUA;;;;;;;;;;;AASA;"}