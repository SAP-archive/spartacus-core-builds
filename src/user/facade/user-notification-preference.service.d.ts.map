{"version":3,"file":"user-notification-preference.service.d.ts","sources":["/home/travis/build/SAP/cloud-commerce-spartacus-storefront/dist/core/src/user/facade/user-notification-preference.service.d.ts"],"sourcesContent":["import { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { StateWithProcess } from '../../process/store/process-state';\nimport { StateWithUser } from '../store/user-state';\nimport { NotificationPreference } from '../../model/notification-preference.model';\nexport declare class UserNotificationPreferenceService {\n    protected store: Store<StateWithUser | StateWithProcess<void>>;\n    constructor(store: Store<StateWithUser | StateWithProcess<void>>);\n    /**\n     * Returns all notification preferences.\n     */\n    getPreferences(): Observable<NotificationPreference[]>;\n    /**\n     * Returns all enabled notification preferences.\n     */\n    getEnabledPreferences(): Observable<NotificationPreference[]>;\n    /**\n     * Loads all notification preferences.\n     */\n    loadPreferences(): void;\n    /**\n     * Clear all notification preferences.\n     */\n    clearPreferences(): void;\n    /**\n     * Returns a loading flag for notification preferences.\n     */\n    getPreferencesLoading(): Observable<boolean>;\n    /**\n     * Updating notification preferences.\n     * @param preferences a preference list\n     */\n    updatePreferences(preferences: NotificationPreference[]): void;\n    /**\n     * Returns a loading flag for updating preferences.\n     */\n    getUpdatePreferencesResultLoading(): Observable<boolean>;\n    /**\n     * Resets the update notification preferences process state. The state needs to be\n     * reset after the process concludes, regardless if it's a success or an error.\n     */\n    resetNotificationPreferences(): void;\n}\n"],"names":[],"mappings":"AAAA;;;;;;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;"}