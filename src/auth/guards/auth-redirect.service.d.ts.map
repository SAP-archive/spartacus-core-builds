{"version":3,"file":"auth-redirect.service.d.ts","sources":["auth-redirect.service.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { Router } from '@angular/router';\nimport { RoutingService } from '../../routing/facade/routing.service';\nexport declare class AuthRedirectService {\n    private routing;\n    private router;\n    /**\n     * This service is responsible for redirecting to the last page before authorization. \"The last page\" can be:\n     * 1. Just the previously opened page; or\n     * 2. The page that we just tried to open, but AuthGuard cancelled it\n     *\n     * For example:\n     * 1. The user opens the product page, then clicks /login link and signs in\n     *    -> Then we should redirect to the product page; or\n     * 2. The user opens the product page, then he clicks /my-account link,\n     *    but is automatically redirected to the login page by the AuthGuard, and he signs in\n     *    -> Then we should redirect to the my-account page, not the product page\n     */\n    constructor(routing: RoutingService, router: Router);\n    private redirectUrl;\n    private ignoredUrls;\n    private lastAuthGuardNavigation;\n    redirect(): void;\n    reportAuthGuard(): void;\n    reportNotAuthGuard(): void;\n    private getCurrentNavigation;\n}\n"]}