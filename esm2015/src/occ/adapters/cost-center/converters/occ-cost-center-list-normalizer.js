import { __decorate } from "tslib";
import { Injectable } from '@angular/core';
import { COST_CENTER_NORMALIZER } from '../../../../cost-center/connectors/cost-center/converters';
import { Converter, ConverterService, } from '../../../../util/converter.service';
let OccCostCenterListNormalizer = class OccCostCenterListNormalizer {
    constructor(converter) {
        this.converter = converter;
    }
    convert(source, target) {
        if (target === undefined) {
            target = Object.assign(Object.assign({}, source), { values: source.costCenters.map((costCenter) => (Object.assign({}, this.converter.convert(costCenter, COST_CENTER_NORMALIZER)))) });
        }
        return target;
    }
};
OccCostCenterListNormalizer.ctorParameters = () => [
    { type: ConverterService }
];
OccCostCenterListNormalizer = __decorate([
    Injectable()
], OccCostCenterListNormalizer);
export { OccCostCenterListNormalizer };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib2NjLWNvc3QtY2VudGVyLWxpc3Qtbm9ybWFsaXplci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFydGFjdXMvY29yZS8iLCJzb3VyY2VzIjpbInNyYy9vY2MvYWRhcHRlcnMvY29zdC1jZW50ZXIvY29udmVydGVycy9vY2MtY29zdC1jZW50ZXItbGlzdC1ub3JtYWxpemVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDJEQUEyRCxDQUFDO0FBR25HLE9BQU8sRUFDTCxTQUFTLEVBQ1QsZ0JBQWdCLEdBQ2pCLE1BQU0sb0NBQW9DLENBQUM7QUFJNUMsSUFBYSwyQkFBMkIsR0FBeEMsTUFBYSwyQkFBMkI7SUFFdEMsWUFBb0IsU0FBMkI7UUFBM0IsY0FBUyxHQUFULFNBQVMsQ0FBa0I7SUFBRyxDQUFDO0lBRW5ELE9BQU8sQ0FDTCxNQUEyQixFQUMzQixNQUFrQztRQUVsQyxJQUFJLE1BQU0sS0FBSyxTQUFTLEVBQUU7WUFDeEIsTUFBTSxtQ0FDQSxNQUFjLEtBQ2xCLE1BQU0sRUFBRSxNQUFNLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFVBQVUsRUFBRSxFQUFFLENBQUMsbUJBQzFDLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLFVBQVUsRUFBRSxzQkFBc0IsQ0FBQyxFQUM3RCxDQUFDLEdBQ0osQ0FBQztTQUNIO1FBQ0QsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQztDQUNGLENBQUE7O1lBaEJnQyxnQkFBZ0I7O0FBRnBDLDJCQUEyQjtJQUR2QyxVQUFVLEVBQUU7R0FDQSwyQkFBMkIsQ0FrQnZDO1NBbEJZLDJCQUEyQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENPU1RfQ0VOVEVSX05PUk1BTElaRVIgfSBmcm9tICcuLi8uLi8uLi8uLi9jb3N0LWNlbnRlci9jb25uZWN0b3JzL2Nvc3QtY2VudGVyL2NvbnZlcnRlcnMnO1xuaW1wb3J0IHsgRW50aXRpZXNNb2RlbCB9IGZyb20gJy4uLy4uLy4uLy4uL21vZGVsL21pc2MubW9kZWwnO1xuaW1wb3J0IHsgQ29zdENlbnRlciB9IGZyb20gJy4uLy4uLy4uLy4uL21vZGVsL29yZy11bml0Lm1vZGVsJztcbmltcG9ydCB7XG4gIENvbnZlcnRlcixcbiAgQ29udmVydGVyU2VydmljZSxcbn0gZnJvbSAnLi4vLi4vLi4vLi4vdXRpbC9jb252ZXJ0ZXIuc2VydmljZSc7XG5pbXBvcnQgeyBPY2MgfSBmcm9tICcuLi8uLi8uLi9vY2MtbW9kZWxzL29jYy5tb2RlbHMnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgT2NjQ29zdENlbnRlckxpc3ROb3JtYWxpemVyXG4gIGltcGxlbWVudHMgQ29udmVydGVyPE9jYy5Db3N0Q2VudGVyc0xpc3QsIEVudGl0aWVzTW9kZWw8Q29zdENlbnRlcj4+IHtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBjb252ZXJ0ZXI6IENvbnZlcnRlclNlcnZpY2UpIHt9XG5cbiAgY29udmVydChcbiAgICBzb3VyY2U6IE9jYy5Db3N0Q2VudGVyc0xpc3QsXG4gICAgdGFyZ2V0PzogRW50aXRpZXNNb2RlbDxDb3N0Q2VudGVyPlxuICApOiBFbnRpdGllc01vZGVsPENvc3RDZW50ZXI+IHtcbiAgICBpZiAodGFyZ2V0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRhcmdldCA9IHtcbiAgICAgICAgLi4uKHNvdXJjZSBhcyBhbnkpLFxuICAgICAgICB2YWx1ZXM6IHNvdXJjZS5jb3N0Q2VudGVycy5tYXAoKGNvc3RDZW50ZXIpID0+ICh7XG4gICAgICAgICAgLi4udGhpcy5jb252ZXJ0ZXIuY29udmVydChjb3N0Q2VudGVyLCBDT1NUX0NFTlRFUl9OT1JNQUxJWkVSKSxcbiAgICAgICAgfSkpLFxuICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIHRhcmdldDtcbiAgfVxufVxuIl19