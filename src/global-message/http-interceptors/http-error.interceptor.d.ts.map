{"version":3,"file":"http-error.interceptor.d.ts","sources":["/home/travis/build/SAP/cloud-commerce-spartacus-storefront/dist/core/src/global-message/http-interceptors/http-error.interceptor.d.ts"],"sourcesContent":["import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpErrorHandler } from './handlers/http-error.handler';\nexport declare class HttpErrorInterceptor implements HttpInterceptor {\n    protected handlers: HttpErrorHandler[];\n    constructor(handlers: HttpErrorHandler[]);\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>;\n    protected handleErrorResponse(request: HttpRequest<any>, response: HttpErrorResponse): void;\n    /**\n     * return the error handler that matches the `HttpResponseStatus` code.\n     * If no handler is available, the UNKNOWN handler is returned.\n     */\n    protected getResponseHandler(response: HttpErrorResponse): HttpErrorHandler;\n}\n"],"names":[],"mappings":"AAAA;;;;AAGA;;;;;;;;;;;AAUA;"}