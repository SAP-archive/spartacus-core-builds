{"version":3,"file":"config.module.d.ts","sources":["config.module.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ModuleWithProviders } from '@angular/core';\nimport { ConfigurationService } from './services/configuration.service';\nexport declare class ConfigModule {\n    constructor(_configurationService: ConfigurationService);\n    /**\n     * Import ConfigModule and contribute config to the global configuration\n     *\n     * To provide default configuration in libraries provideDefaultConfig should be used instead.\n     *\n     * @param config Config object to merge with the global configuration\n     */\n    static withConfig(config: object): ModuleWithProviders<ConfigModule>;\n    /**\n     * Import ConfigModule and contribute config to the global configuration using factory function\n     *\n     * To provide default configuration in libraries provideDefaultConfigFactory should be used instead.\n     *\n     * @param configFactory Factory function that will generate configuration\n     * @param deps Optional dependencies to factory function\n     */\n    static withConfigFactory(configFactory: Function, deps?: any[]): ModuleWithProviders<ConfigModule>;\n    /**\n     * Module with providers, should be imported only once, if possible, at the root of the app.\n     *\n     * @param config\n     */\n    static forRoot(config?: any): ModuleWithProviders<ConfigModule>;\n}\n"]}