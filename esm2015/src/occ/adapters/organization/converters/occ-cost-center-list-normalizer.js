import { __decorate } from "tslib";
import { Injectable } from '@angular/core';
import { Converter, ConverterService, } from '../../../../util/converter.service';
import { COST_CENTER_NORMALIZER } from '../../../../organization/connectors/cost-center/converters';
let OccCostCenterListNormalizer = class OccCostCenterListNormalizer {
    constructor(converter) {
        this.converter = converter;
    }
    convert(source, target) {
        if (target === undefined) {
            target = Object.assign(Object.assign({}, source), { values: source.costCenters.map((costCenter) => (Object.assign({}, this.converter.convert(costCenter, COST_CENTER_NORMALIZER)))) });
        }
        return target;
    }
};
OccCostCenterListNormalizer.ctorParameters = () => [
    { type: ConverterService }
];
OccCostCenterListNormalizer = __decorate([
    Injectable()
], OccCostCenterListNormalizer);
export { OccCostCenterListNormalizer };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib2NjLWNvc3QtY2VudGVyLWxpc3Qtbm9ybWFsaXplci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFydGFjdXMvY29yZS8iLCJzb3VyY2VzIjpbInNyYy9vY2MvYWRhcHRlcnMvb3JnYW5pemF0aW9uL2NvbnZlcnRlcnMvb2NjLWNvc3QtY2VudGVyLWxpc3Qtbm9ybWFsaXplci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUzQyxPQUFPLEVBQ0wsU0FBUyxFQUNULGdCQUFnQixHQUNqQixNQUFNLG9DQUFvQyxDQUFDO0FBQzVDLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDREQUE0RCxDQUFDO0FBS3BHLElBQWEsMkJBQTJCLEdBQXhDLE1BQWEsMkJBQTJCO0lBRXRDLFlBQW9CLFNBQTJCO1FBQTNCLGNBQVMsR0FBVCxTQUFTLENBQWtCO0lBQUcsQ0FBQztJQUVuRCxPQUFPLENBQ0wsTUFBMkIsRUFDM0IsTUFBa0M7UUFFbEMsSUFBSSxNQUFNLEtBQUssU0FBUyxFQUFFO1lBQ3hCLE1BQU0sbUNBQ0EsTUFBYyxLQUNsQixNQUFNLEVBQUUsTUFBTSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxVQUFVLEVBQUUsRUFBRSxDQUFDLG1CQUMxQyxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxVQUFVLEVBQUUsc0JBQXNCLENBQUMsRUFDN0QsQ0FBQyxHQUNKLENBQUM7U0FDSDtRQUNELE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUM7Q0FDRixDQUFBOztZQWhCZ0MsZ0JBQWdCOztBQUZwQywyQkFBMkI7SUFEdkMsVUFBVSxFQUFFO0dBQ0EsMkJBQTJCLENBa0J2QztTQWxCWSwyQkFBMkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBPY2MgfSBmcm9tICcuLi8uLi8uLi9vY2MtbW9kZWxzL29jYy5tb2RlbHMnO1xuaW1wb3J0IHtcbiAgQ29udmVydGVyLFxuICBDb252ZXJ0ZXJTZXJ2aWNlLFxufSBmcm9tICcuLi8uLi8uLi8uLi91dGlsL2NvbnZlcnRlci5zZXJ2aWNlJztcbmltcG9ydCB7IENPU1RfQ0VOVEVSX05PUk1BTElaRVIgfSBmcm9tICcuLi8uLi8uLi8uLi9vcmdhbml6YXRpb24vY29ubmVjdG9ycy9jb3N0LWNlbnRlci9jb252ZXJ0ZXJzJztcbmltcG9ydCB7IEVudGl0aWVzTW9kZWwgfSBmcm9tICcuLi8uLi8uLi8uLi9tb2RlbC9taXNjLm1vZGVsJztcbmltcG9ydCB7IENvc3RDZW50ZXIgfSBmcm9tICcuLi8uLi8uLi8uLi9tb2RlbC9vcmctdW5pdC5tb2RlbCc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBPY2NDb3N0Q2VudGVyTGlzdE5vcm1hbGl6ZXJcbiAgaW1wbGVtZW50cyBDb252ZXJ0ZXI8T2NjLkNvc3RDZW50ZXJzTGlzdCwgRW50aXRpZXNNb2RlbDxDb3N0Q2VudGVyPj4ge1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGNvbnZlcnRlcjogQ29udmVydGVyU2VydmljZSkge31cblxuICBjb252ZXJ0KFxuICAgIHNvdXJjZTogT2NjLkNvc3RDZW50ZXJzTGlzdCxcbiAgICB0YXJnZXQ/OiBFbnRpdGllc01vZGVsPENvc3RDZW50ZXI+XG4gICk6IEVudGl0aWVzTW9kZWw8Q29zdENlbnRlcj4ge1xuICAgIGlmICh0YXJnZXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGFyZ2V0ID0ge1xuICAgICAgICAuLi4oc291cmNlIGFzIGFueSksXG4gICAgICAgIHZhbHVlczogc291cmNlLmNvc3RDZW50ZXJzLm1hcCgoY29zdENlbnRlcikgPT4gKHtcbiAgICAgICAgICAuLi50aGlzLmNvbnZlcnRlci5jb252ZXJ0KGNvc3RDZW50ZXIsIENPU1RfQ0VOVEVSX05PUk1BTElaRVIpLFxuICAgICAgICB9KSksXG4gICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gdGFyZ2V0O1xuICB9XG59XG4iXX0=