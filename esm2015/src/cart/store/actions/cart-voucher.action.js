import { PROCESS_FEATURE } from '../../../process/store/process-state';
import { EntityFailAction, EntityLoadAction, EntityResetAction, EntitySuccessAction, } from '../../../state/utils/entity-loader/entity-loader.action';
import { LoaderFailAction, LoaderLoadAction, LoaderSuccessAction, } from '../../../state/utils/loader/loader.action';
import { ADD_VOUCHER_PROCESS_ID, CART_DATA } from '../cart-state';
export const CART_ADD_VOUCHER = '[Cart-voucher] Add Cart Vouchers';
export const CART_ADD_VOUCHER_FAIL = '[Cart-voucher] Add Cart Voucher Fail';
export const CART_ADD_VOUCHER_SUCCESS = '[Cart-voucher] Add Cart Voucher Success';
export const CART_RESET_ADD_VOUCHER = '[Cart-voucher] Reset Add Cart Voucher';
export const CART_REMOVE_VOUCHER = '[Cart-voucher] Remove Cart Voucher';
export const CART_REMOVE_VOUCHER_FAIL = '[Cart-voucher] Remove Cart Voucher Fail';
export const CART_REMOVE_VOUCHER_SUCCESS = '[Cart-voucher] Remove Cart Voucher Success';
// Adding cart voucher actions
export class CartAddVoucher extends EntityLoadAction {
    constructor(payload) {
        super(PROCESS_FEATURE, ADD_VOUCHER_PROCESS_ID);
        this.payload = payload;
        this.type = CART_ADD_VOUCHER;
    }
}
export class CartAddVoucherFail extends EntityFailAction {
    constructor(payload) {
        super(PROCESS_FEATURE, ADD_VOUCHER_PROCESS_ID, payload);
        this.payload = payload;
        this.type = CART_ADD_VOUCHER_FAIL;
    }
}
export class CartAddVoucherSuccess extends EntitySuccessAction {
    constructor(payload) {
        super(PROCESS_FEATURE, ADD_VOUCHER_PROCESS_ID);
        this.payload = payload;
        this.type = CART_ADD_VOUCHER_SUCCESS;
    }
}
export class CartResetAddVoucher extends EntityResetAction {
    constructor() {
        super(PROCESS_FEATURE, ADD_VOUCHER_PROCESS_ID);
        this.type = CART_RESET_ADD_VOUCHER;
    }
}
// Deleting cart voucher
export class CartRemoveVoucher extends LoaderLoadAction {
    constructor(payload) {
        super(CART_DATA);
        this.payload = payload;
        this.type = CART_REMOVE_VOUCHER;
    }
}
export class CartRemoveVoucherFail extends LoaderFailAction {
    constructor(payload) {
        super(CART_DATA, payload);
        this.payload = payload;
        this.type = CART_REMOVE_VOUCHER_FAIL;
    }
}
export class CartRemoveVoucherSuccess extends LoaderSuccessAction {
    constructor(payload) {
        super(CART_DATA);
        this.payload = payload;
        this.type = CART_REMOVE_VOUCHER_SUCCESS;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FydC12b3VjaGVyLmFjdGlvbi5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFydGFjdXMvY29yZS8iLCJzb3VyY2VzIjpbInNyYy9jYXJ0L3N0b3JlL2FjdGlvbnMvY2FydC12b3VjaGVyLmFjdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDdkUsT0FBTyxFQUNMLGdCQUFnQixFQUNoQixnQkFBZ0IsRUFDaEIsaUJBQWlCLEVBQ2pCLG1CQUFtQixHQUNwQixNQUFNLHlEQUF5RCxDQUFDO0FBQ2pFLE9BQU8sRUFDTCxnQkFBZ0IsRUFDaEIsZ0JBQWdCLEVBQ2hCLG1CQUFtQixHQUNwQixNQUFNLDJDQUEyQyxDQUFDO0FBQ25ELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFbEUsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUcsa0NBQWtDLENBQUM7QUFDbkUsTUFBTSxDQUFDLE1BQU0scUJBQXFCLEdBQUcsc0NBQXNDLENBQUM7QUFDNUUsTUFBTSxDQUFDLE1BQU0sd0JBQXdCLEdBQ25DLHlDQUF5QyxDQUFDO0FBQzVDLE1BQU0sQ0FBQyxNQUFNLHNCQUFzQixHQUFHLHVDQUF1QyxDQUFDO0FBRTlFLE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFHLG9DQUFvQyxDQUFDO0FBQ3hFLE1BQU0sQ0FBQyxNQUFNLHdCQUF3QixHQUNuQyx5Q0FBeUMsQ0FBQztBQUM1QyxNQUFNLENBQUMsTUFBTSwyQkFBMkIsR0FDdEMsNENBQTRDLENBQUM7QUFFL0MsOEJBQThCO0FBQzlCLE1BQU0sT0FBTyxjQUFlLFNBQVEsZ0JBQWdCO0lBRWxELFlBQ1MsT0FBOEQ7UUFFckUsS0FBSyxDQUFDLGVBQWUsRUFBRSxzQkFBc0IsQ0FBQyxDQUFDO1FBRnhDLFlBQU8sR0FBUCxPQUFPLENBQXVEO1FBRjlELFNBQUksR0FBRyxnQkFBZ0IsQ0FBQztJQUtqQyxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sa0JBQW1CLFNBQVEsZ0JBQWdCO0lBRXRELFlBQW1CLE9BQVk7UUFDN0IsS0FBSyxDQUFDLGVBQWUsRUFBRSxzQkFBc0IsRUFBRSxPQUFPLENBQUMsQ0FBQztRQUR2QyxZQUFPLEdBQVAsT0FBTyxDQUFLO1FBRHRCLFNBQUksR0FBRyxxQkFBcUIsQ0FBQztJQUd0QyxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8scUJBQXNCLFNBQVEsbUJBQW1CO0lBRTVELFlBQW1CLE9BQTJDO1FBQzVELEtBQUssQ0FBQyxlQUFlLEVBQUUsc0JBQXNCLENBQUMsQ0FBQztRQUQ5QixZQUFPLEdBQVAsT0FBTyxDQUFvQztRQURyRCxTQUFJLEdBQUcsd0JBQXdCLENBQUM7SUFHekMsQ0FBQztDQUNGO0FBRUQsTUFBTSxPQUFPLG1CQUFvQixTQUFRLGlCQUFpQjtJQUV4RDtRQUNFLEtBQUssQ0FBQyxlQUFlLEVBQUUsc0JBQXNCLENBQUMsQ0FBQztRQUZ4QyxTQUFJLEdBQUcsc0JBQXNCLENBQUM7SUFHdkMsQ0FBQztDQUNGO0FBRUQsd0JBQXdCO0FBQ3hCLE1BQU0sT0FBTyxpQkFBa0IsU0FBUSxnQkFBZ0I7SUFFckQsWUFDUyxPQUE4RDtRQUVyRSxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUM7UUFGVixZQUFPLEdBQVAsT0FBTyxDQUF1RDtRQUY5RCxTQUFJLEdBQUcsbUJBQW1CLENBQUM7SUFLcEMsQ0FBQztDQUNGO0FBRUQsTUFBTSxPQUFPLHFCQUFzQixTQUFRLGdCQUFnQjtJQUV6RCxZQUFtQixPQUFZO1FBQzdCLEtBQUssQ0FBQyxTQUFTLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFEVCxZQUFPLEdBQVAsT0FBTyxDQUFLO1FBRHRCLFNBQUksR0FBRyx3QkFBd0IsQ0FBQztJQUd6QyxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sd0JBQXlCLFNBQVEsbUJBQW1CO0lBRS9ELFlBQW1CLE9BQTJDO1FBQzVELEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQztRQURBLFlBQU8sR0FBUCxPQUFPLENBQW9DO1FBRHJELFNBQUksR0FBRywyQkFBMkIsQ0FBQztJQUc1QyxDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQUk9DRVNTX0ZFQVRVUkUgfSBmcm9tICcuLi8uLi8uLi9wcm9jZXNzL3N0b3JlL3Byb2Nlc3Mtc3RhdGUnO1xuaW1wb3J0IHtcbiAgRW50aXR5RmFpbEFjdGlvbixcbiAgRW50aXR5TG9hZEFjdGlvbixcbiAgRW50aXR5UmVzZXRBY3Rpb24sXG4gIEVudGl0eVN1Y2Nlc3NBY3Rpb24sXG59IGZyb20gJy4uLy4uLy4uL3N0YXRlL3V0aWxzL2VudGl0eS1sb2FkZXIvZW50aXR5LWxvYWRlci5hY3Rpb24nO1xuaW1wb3J0IHtcbiAgTG9hZGVyRmFpbEFjdGlvbixcbiAgTG9hZGVyTG9hZEFjdGlvbixcbiAgTG9hZGVyU3VjY2Vzc0FjdGlvbixcbn0gZnJvbSAnLi4vLi4vLi4vc3RhdGUvdXRpbHMvbG9hZGVyL2xvYWRlci5hY3Rpb24nO1xuaW1wb3J0IHsgQUREX1ZPVUNIRVJfUFJPQ0VTU19JRCwgQ0FSVF9EQVRBIH0gZnJvbSAnLi4vY2FydC1zdGF0ZSc7XG5cbmV4cG9ydCBjb25zdCBDQVJUX0FERF9WT1VDSEVSID0gJ1tDYXJ0LXZvdWNoZXJdIEFkZCBDYXJ0IFZvdWNoZXJzJztcbmV4cG9ydCBjb25zdCBDQVJUX0FERF9WT1VDSEVSX0ZBSUwgPSAnW0NhcnQtdm91Y2hlcl0gQWRkIENhcnQgVm91Y2hlciBGYWlsJztcbmV4cG9ydCBjb25zdCBDQVJUX0FERF9WT1VDSEVSX1NVQ0NFU1MgPVxuICAnW0NhcnQtdm91Y2hlcl0gQWRkIENhcnQgVm91Y2hlciBTdWNjZXNzJztcbmV4cG9ydCBjb25zdCBDQVJUX1JFU0VUX0FERF9WT1VDSEVSID0gJ1tDYXJ0LXZvdWNoZXJdIFJlc2V0IEFkZCBDYXJ0IFZvdWNoZXInO1xuXG5leHBvcnQgY29uc3QgQ0FSVF9SRU1PVkVfVk9VQ0hFUiA9ICdbQ2FydC12b3VjaGVyXSBSZW1vdmUgQ2FydCBWb3VjaGVyJztcbmV4cG9ydCBjb25zdCBDQVJUX1JFTU9WRV9WT1VDSEVSX0ZBSUwgPVxuICAnW0NhcnQtdm91Y2hlcl0gUmVtb3ZlIENhcnQgVm91Y2hlciBGYWlsJztcbmV4cG9ydCBjb25zdCBDQVJUX1JFTU9WRV9WT1VDSEVSX1NVQ0NFU1MgPVxuICAnW0NhcnQtdm91Y2hlcl0gUmVtb3ZlIENhcnQgVm91Y2hlciBTdWNjZXNzJztcblxuLy8gQWRkaW5nIGNhcnQgdm91Y2hlciBhY3Rpb25zXG5leHBvcnQgY2xhc3MgQ2FydEFkZFZvdWNoZXIgZXh0ZW5kcyBFbnRpdHlMb2FkQWN0aW9uIHtcbiAgcmVhZG9ubHkgdHlwZSA9IENBUlRfQUREX1ZPVUNIRVI7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHB1YmxpYyBwYXlsb2FkOiB7IHVzZXJJZDogc3RyaW5nOyBjYXJ0SWQ6IHN0cmluZzsgdm91Y2hlcklkOiBzdHJpbmcgfVxuICApIHtcbiAgICBzdXBlcihQUk9DRVNTX0ZFQVRVUkUsIEFERF9WT1VDSEVSX1BST0NFU1NfSUQpO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBDYXJ0QWRkVm91Y2hlckZhaWwgZXh0ZW5kcyBFbnRpdHlGYWlsQWN0aW9uIHtcbiAgcmVhZG9ubHkgdHlwZSA9IENBUlRfQUREX1ZPVUNIRVJfRkFJTDtcbiAgY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IGFueSkge1xuICAgIHN1cGVyKFBST0NFU1NfRkVBVFVSRSwgQUREX1ZPVUNIRVJfUFJPQ0VTU19JRCwgcGF5bG9hZCk7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIENhcnRBZGRWb3VjaGVyU3VjY2VzcyBleHRlbmRzIEVudGl0eVN1Y2Nlc3NBY3Rpb24ge1xuICByZWFkb25seSB0eXBlID0gQ0FSVF9BRERfVk9VQ0hFUl9TVUNDRVNTO1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgcGF5bG9hZDogeyB1c2VySWQ6IHN0cmluZzsgY2FydElkOiBzdHJpbmcgfSkge1xuICAgIHN1cGVyKFBST0NFU1NfRkVBVFVSRSwgQUREX1ZPVUNIRVJfUFJPQ0VTU19JRCk7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIENhcnRSZXNldEFkZFZvdWNoZXIgZXh0ZW5kcyBFbnRpdHlSZXNldEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBDQVJUX1JFU0VUX0FERF9WT1VDSEVSO1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcihQUk9DRVNTX0ZFQVRVUkUsIEFERF9WT1VDSEVSX1BST0NFU1NfSUQpO1xuICB9XG59XG5cbi8vIERlbGV0aW5nIGNhcnQgdm91Y2hlclxuZXhwb3J0IGNsYXNzIENhcnRSZW1vdmVWb3VjaGVyIGV4dGVuZHMgTG9hZGVyTG9hZEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBDQVJUX1JFTU9WRV9WT1VDSEVSO1xuICBjb25zdHJ1Y3RvcihcbiAgICBwdWJsaWMgcGF5bG9hZDogeyB1c2VySWQ6IHN0cmluZzsgY2FydElkOiBzdHJpbmc7IHZvdWNoZXJJZDogc3RyaW5nIH1cbiAgKSB7XG4gICAgc3VwZXIoQ0FSVF9EQVRBKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgQ2FydFJlbW92ZVZvdWNoZXJGYWlsIGV4dGVuZHMgTG9hZGVyRmFpbEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBDQVJUX1JFTU9WRV9WT1VDSEVSX0ZBSUw7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBwYXlsb2FkOiBhbnkpIHtcbiAgICBzdXBlcihDQVJUX0RBVEEsIHBheWxvYWQpO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBDYXJ0UmVtb3ZlVm91Y2hlclN1Y2Nlc3MgZXh0ZW5kcyBMb2FkZXJTdWNjZXNzQWN0aW9uIHtcbiAgcmVhZG9ubHkgdHlwZSA9IENBUlRfUkVNT1ZFX1ZPVUNIRVJfU1VDQ0VTUztcbiAgY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IHsgdXNlcklkOiBzdHJpbmc7IGNhcnRJZDogc3RyaW5nIH0pIHtcbiAgICBzdXBlcihDQVJUX0RBVEEpO1xuICB9XG59XG5cbi8vIGFjdGlvbiB0eXBlc1xuZXhwb3J0IHR5cGUgQ2FydFZvdWNoZXJBY3Rpb24gPVxuICB8IENhcnRBZGRWb3VjaGVyXG4gIHwgQ2FydEFkZFZvdWNoZXJGYWlsXG4gIHwgQ2FydEFkZFZvdWNoZXJTdWNjZXNzXG4gIHwgQ2FydFJlc2V0QWRkVm91Y2hlclxuICB8IENhcnRSZW1vdmVWb3VjaGVyXG4gIHwgQ2FydFJlbW92ZVZvdWNoZXJGYWlsXG4gIHwgQ2FydFJlbW92ZVZvdWNoZXJTdWNjZXNzO1xuIl19