{"version":3,"file":"loading-scopes.service.d.ts","sources":["/home/travis/build/SAP/cloud-commerce-spartacus-storefront/dist/core/src/occ/services/loading-scopes.service.d.ts"],"sourcesContent":["import { OccConfig } from '../config/occ-config';\nexport declare class LoadingScopesService {\n    protected config: OccConfig;\n    constructor(config: OccConfig);\n    /**\n     * Aims to expand scopes based on loading scopes config.\n     *\n     * I.e. if 'details' scope includes 'list' scope by configuration, it'll return ['details', 'list']\n     *\n     * If scope data overlaps with each other, the data should be merged in the order of scopes provided,\n     * i.e. the last scope is merged last, overwriting parts of the data already provided by preceding scope.\n     * It should apply also to implicit scopes (that are included by configuration).\n     *\n     * @param model\n     * @param scopes\n     */\n    expand(model: string, scopes: string[]): string[];\n    /**\n     * Return maxAge for product scope in milliseconds\n     *\n     * @param model\n     * @param scope\n     */\n    getMaxAge(model: string, scope: string): number;\n}\n"],"names":[],"mappings":"AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAuBA;"}