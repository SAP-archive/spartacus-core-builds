{"version":3,"file":"auth.interceptor.d.ts","sources":["auth.interceptor.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthConfigService } from '../services/auth-config.service';\nimport { AuthHttpHeaderService } from '../services/auth-http-header.service';\n/**\n * Responsible for catching auth errors and providing `Authorization` header for API calls.\n * Uses AuthHttpHeaderService for request manipulation and error handling. Interceptor only hooks into request send/received events.\n */\nexport declare class AuthInterceptor implements HttpInterceptor {\n    protected authHttpHeaderService: AuthHttpHeaderService;\n    protected authConfigService: AuthConfigService;\n    constructor(authHttpHeaderService: AuthHttpHeaderService, authConfigService: AuthConfigService);\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>;\n    protected isExpiredToken(resp: HttpErrorResponse): boolean;\n}\n"]}