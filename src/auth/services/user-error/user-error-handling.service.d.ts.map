{"version":3,"file":"user-error-handling.service.d.ts","sources":["user-error-handling.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { RoutingService } from '../../../routing/facade/routing.service';\nimport { AuthService } from '../../facade/auth.service';\nimport { UserToken } from '../../models/token-types.model';\nexport declare class UserErrorHandlingService {\n    protected authService: AuthService;\n    protected routingService: RoutingService;\n    constructor(authService: AuthService, routingService: RoutingService);\n    handleExpiredUserToken(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<UserToken>>;\n    handleExpiredRefreshToken(): void;\n    protected handleExpiredToken(): Observable<UserToken>;\n    protected createNewRequestWithNewToken(request: HttpRequest<any>, token: UserToken): HttpRequest<any>;\n}\n"]}