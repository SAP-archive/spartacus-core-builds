/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Meta } from '@angular/platform-browser';
import { provideConfigFactory } from '../../config';
/** @type {?} */
export var OCC_BASE_URL_META_TAG_NAME = 'occ-backend-base-url';
/** @type {?} */
export var OCC_BASE_URL_META_TAG_PLACEHOLDER = 'OCC_BACKEND_BASE_URL_VALUE';
/** @type {?} */
export var MEDIA_BASE_URL_META_TAG_NAME = 'media-backend-base-url';
/** @type {?} */
export var MEDIA_BASE_URL_META_TAG_PLACEHOLDER = 'MEDIA_BACKEND_BASE_URL_VALUE';
/**
 * @param {?} meta
 * @return {?}
 */
export function occServerConfigFromMetaTagFactory(meta) {
    /** @type {?} */
    var baseUrl = getMetaTagContent(OCC_BASE_URL_META_TAG_NAME, meta);
    return baseUrl && baseUrl !== OCC_BASE_URL_META_TAG_PLACEHOLDER
        ? { backend: { occ: { baseUrl: baseUrl } } }
        : {};
}
/**
 * @param {?} meta
 * @return {?}
 */
export function mediaServerConfigFromMetaTagFactory(meta) {
    /** @type {?} */
    var baseUrl = getMetaTagContent(MEDIA_BASE_URL_META_TAG_NAME, meta);
    return baseUrl && baseUrl !== MEDIA_BASE_URL_META_TAG_PLACEHOLDER
        ? { backend: { media: { baseUrl: baseUrl } } }
        : {};
}
/**
 * @param {?} name
 * @param {?} meta
 * @return {?}
 */
function getMetaTagContent(name, meta) {
    /** @type {?} */
    var metaTag = meta.getTag("name=\"" + name + "\"");
    return metaTag && metaTag.content;
}
/**
 * @return {?}
 */
export function provideConfigFromMetaTags() {
    return [
        provideConfigFactory(occServerConfigFromMetaTagFactory, [Meta]),
        provideConfigFactory(mediaServerConfigFromMetaTagFactory, [Meta]),
    ];
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLWZyb20tbWV0YS10YWctZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFydGFjdXMvY29yZS8iLCJzb3VyY2VzIjpbInNyYy9vY2MvY29uZmlnL2NvbmZpZy1mcm9tLW1ldGEtdGFnLWZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUNBLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxjQUFjLENBQUM7O0FBR3BELE1BQU0sS0FBTywwQkFBMEIsR0FBRyxzQkFBc0I7O0FBQ2hFLE1BQU0sS0FBTyxpQ0FBaUMsR0FBRyw0QkFBNEI7O0FBQzdFLE1BQU0sS0FBTyw0QkFBNEIsR0FBRyx3QkFBd0I7O0FBQ3BFLE1BQU0sS0FBTyxtQ0FBbUMsR0FDOUMsOEJBQThCOzs7OztBQUVoQyxNQUFNLFVBQVUsaUNBQWlDLENBQUMsSUFBVTs7UUFDcEQsT0FBTyxHQUFHLGlCQUFpQixDQUFDLDBCQUEwQixFQUFFLElBQUksQ0FBQztJQUNuRSxPQUFPLE9BQU8sSUFBSSxPQUFPLEtBQUssaUNBQWlDO1FBQzdELENBQUMsQ0FBQyxFQUFFLE9BQU8sRUFBRSxFQUFFLEdBQUcsRUFBRSxFQUFFLE9BQU8sU0FBQSxFQUFFLEVBQUUsRUFBRTtRQUNuQyxDQUFDLENBQUMsRUFBRSxDQUFDO0FBQ1QsQ0FBQzs7Ozs7QUFFRCxNQUFNLFVBQVUsbUNBQW1DLENBQUMsSUFBVTs7UUFDdEQsT0FBTyxHQUFHLGlCQUFpQixDQUFDLDRCQUE0QixFQUFFLElBQUksQ0FBQztJQUNyRSxPQUFPLE9BQU8sSUFBSSxPQUFPLEtBQUssbUNBQW1DO1FBQy9ELENBQUMsQ0FBQyxFQUFFLE9BQU8sRUFBRSxFQUFFLEtBQUssRUFBRSxFQUFFLE9BQU8sU0FBQSxFQUFFLEVBQUUsRUFBRTtRQUNyQyxDQUFDLENBQUMsRUFBRSxDQUFDO0FBQ1QsQ0FBQzs7Ozs7O0FBRUQsU0FBUyxpQkFBaUIsQ0FBQyxJQUFZLEVBQUUsSUFBVTs7UUFDM0MsT0FBTyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsWUFBUyxJQUFJLE9BQUcsQ0FBQztJQUM3QyxPQUFPLE9BQU8sSUFBSSxPQUFPLENBQUMsT0FBTyxDQUFDO0FBQ3BDLENBQUM7Ozs7QUFFRCxNQUFNLFVBQVUseUJBQXlCO0lBQ3ZDLE9BQU87UUFDTCxvQkFBb0IsQ0FBQyxpQ0FBaUMsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQy9ELG9CQUFvQixDQUFDLG1DQUFtQyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDbEUsQ0FBQztBQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcm92aWRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTWV0YSB9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXInO1xuaW1wb3J0IHsgcHJvdmlkZUNvbmZpZ0ZhY3RvcnkgfSBmcm9tICcuLi8uLi9jb25maWcnO1xuaW1wb3J0IHsgT2NjQ29uZmlnIH0gZnJvbSAnLi9vY2MtY29uZmlnJztcblxuZXhwb3J0IGNvbnN0IE9DQ19CQVNFX1VSTF9NRVRBX1RBR19OQU1FID0gJ29jYy1iYWNrZW5kLWJhc2UtdXJsJztcbmV4cG9ydCBjb25zdCBPQ0NfQkFTRV9VUkxfTUVUQV9UQUdfUExBQ0VIT0xERVIgPSAnT0NDX0JBQ0tFTkRfQkFTRV9VUkxfVkFMVUUnO1xuZXhwb3J0IGNvbnN0IE1FRElBX0JBU0VfVVJMX01FVEFfVEFHX05BTUUgPSAnbWVkaWEtYmFja2VuZC1iYXNlLXVybCc7XG5leHBvcnQgY29uc3QgTUVESUFfQkFTRV9VUkxfTUVUQV9UQUdfUExBQ0VIT0xERVIgPVxuICAnTUVESUFfQkFDS0VORF9CQVNFX1VSTF9WQUxVRSc7XG5cbmV4cG9ydCBmdW5jdGlvbiBvY2NTZXJ2ZXJDb25maWdGcm9tTWV0YVRhZ0ZhY3RvcnkobWV0YTogTWV0YSk6IE9jY0NvbmZpZyB7XG4gIGNvbnN0IGJhc2VVcmwgPSBnZXRNZXRhVGFnQ29udGVudChPQ0NfQkFTRV9VUkxfTUVUQV9UQUdfTkFNRSwgbWV0YSk7XG4gIHJldHVybiBiYXNlVXJsICYmIGJhc2VVcmwgIT09IE9DQ19CQVNFX1VSTF9NRVRBX1RBR19QTEFDRUhPTERFUlxuICAgID8geyBiYWNrZW5kOiB7IG9jYzogeyBiYXNlVXJsIH0gfSB9XG4gICAgOiB7fTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG1lZGlhU2VydmVyQ29uZmlnRnJvbU1ldGFUYWdGYWN0b3J5KG1ldGE6IE1ldGEpOiBPY2NDb25maWcge1xuICBjb25zdCBiYXNlVXJsID0gZ2V0TWV0YVRhZ0NvbnRlbnQoTUVESUFfQkFTRV9VUkxfTUVUQV9UQUdfTkFNRSwgbWV0YSk7XG4gIHJldHVybiBiYXNlVXJsICYmIGJhc2VVcmwgIT09IE1FRElBX0JBU0VfVVJMX01FVEFfVEFHX1BMQUNFSE9MREVSXG4gICAgPyB7IGJhY2tlbmQ6IHsgbWVkaWE6IHsgYmFzZVVybCB9IH0gfVxuICAgIDoge307XG59XG5cbmZ1bmN0aW9uIGdldE1ldGFUYWdDb250ZW50KG5hbWU6IHN0cmluZywgbWV0YTogTWV0YSkge1xuICBjb25zdCBtZXRhVGFnID0gbWV0YS5nZXRUYWcoYG5hbWU9XCIke25hbWV9XCJgKTtcbiAgcmV0dXJuIG1ldGFUYWcgJiYgbWV0YVRhZy5jb250ZW50O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcHJvdmlkZUNvbmZpZ0Zyb21NZXRhVGFncygpOiBQcm92aWRlcltdIHtcbiAgcmV0dXJuIFtcbiAgICBwcm92aWRlQ29uZmlnRmFjdG9yeShvY2NTZXJ2ZXJDb25maWdGcm9tTWV0YVRhZ0ZhY3RvcnksIFtNZXRhXSksXG4gICAgcHJvdmlkZUNvbmZpZ0ZhY3RvcnkobWVkaWFTZXJ2ZXJDb25maWdGcm9tTWV0YVRhZ0ZhY3RvcnksIFtNZXRhXSksXG4gIF07XG59XG4iXX0=