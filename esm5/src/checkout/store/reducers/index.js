/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { InjectionToken } from '@angular/core';
import { CHECKOUT_DETAILS, } from '../checkout-state';
import * as fromAction from '../actions/index';
import { LOGOUT } from '../../../auth/store/actions/index';
import { CURRENCY_CHANGE, LANGUAGE_CHANGE, } from '../../../site-context/store/actions/index';
import * as fromAddressVerification from './address-verification.reducer';
import * as fromCardTypes from './card-types.reducer';
import * as fromCheckout from './checkout.reducer';
import { loaderReducer } from '../../../state/utils/loader/loader.reducer';
/**
 * @return {?}
 */
export function getReducers() {
    return {
        steps: loaderReducer(CHECKOUT_DETAILS, fromCheckout.reducer),
        cardTypes: fromCardTypes.reducer,
        addressVerification: fromAddressVerification.reducer,
    };
}
/** @type {?} */
export var reducerToken = new InjectionToken('CheckoutReducers');
/** @type {?} */
export var reducerProvider = {
    provide: reducerToken,
    useFactory: getReducers,
};
/**
 * @param {?} reducer
 * @return {?}
 */
export function clearCheckoutState(reducer) {
    return function (state, action) {
        switch (action.type) {
            case LANGUAGE_CHANGE: {
                action = new fromAction.CheckoutClearMiscsData();
                break;
            }
            case CURRENCY_CHANGE: {
                action = new fromAction.ClearSupportedDeliveryModes();
                break;
            }
            case LOGOUT: {
                action = new fromAction.ClearCheckoutData();
                break;
            }
        }
        return reducer(state, action);
    };
}
/** @type {?} */
export var metaReducers = [clearCheckoutState];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ac3BhcnRhY3VzL2NvcmUvIiwic291cmNlcyI6WyJzcmMvY2hlY2tvdXQvc3RvcmUvcmVkdWNlcnMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQVksTUFBTSxlQUFlLENBQUM7QUFJekQsT0FBTyxFQUVMLGdCQUFnQixHQUVqQixNQUFNLG1CQUFtQixDQUFDO0FBQzNCLE9BQU8sS0FBSyxVQUFVLE1BQU0sa0JBQWtCLENBQUM7QUFDL0MsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQzNELE9BQU8sRUFDTCxlQUFlLEVBQ2YsZUFBZSxHQUNoQixNQUFNLDJDQUEyQyxDQUFDO0FBRW5ELE9BQU8sS0FBSyx1QkFBdUIsTUFBTSxnQ0FBZ0MsQ0FBQztBQUMxRSxPQUFPLEtBQUssYUFBYSxNQUFNLHNCQUFzQixDQUFDO0FBQ3RELE9BQU8sS0FBSyxZQUFZLE1BQU0sb0JBQW9CLENBQUM7QUFDbkQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDRDQUE0QyxDQUFDOzs7O0FBRTNFLE1BQU0sVUFBVSxXQUFXO0lBQ3pCLE9BQU87UUFDTCxLQUFLLEVBQUUsYUFBYSxDQUNsQixnQkFBZ0IsRUFDaEIsWUFBWSxDQUFDLE9BQU8sQ0FDckI7UUFDRCxTQUFTLEVBQUUsYUFBYSxDQUFDLE9BQU87UUFDaEMsbUJBQW1CLEVBQUUsdUJBQXVCLENBQUMsT0FBTztLQUNyRCxDQUFDO0FBQ0osQ0FBQzs7QUFFRCxNQUFNLEtBQU8sWUFBWSxHQUVyQixJQUFJLGNBQWMsQ0FBa0Msa0JBQWtCLENBQUM7O0FBRTNFLE1BQU0sS0FBTyxlQUFlLEdBQWE7SUFDdkMsT0FBTyxFQUFFLFlBQVk7SUFDckIsVUFBVSxFQUFFLFdBQVc7Q0FDeEI7Ozs7O0FBRUQsTUFBTSxVQUFVLGtCQUFrQixDQUNoQyxPQUFxQztJQUVyQyxPQUFPLFVBQVMsS0FBSyxFQUFFLE1BQU07UUFDM0IsUUFBUSxNQUFNLENBQUMsSUFBSSxFQUFFO1lBQ25CLEtBQUssZUFBZSxDQUFDLENBQUM7Z0JBQ3BCLE1BQU0sR0FBRyxJQUFJLFVBQVUsQ0FBQyxzQkFBc0IsRUFBRSxDQUFDO2dCQUNqRCxNQUFNO2FBQ1A7WUFDRCxLQUFLLGVBQWUsQ0FBQyxDQUFDO2dCQUNwQixNQUFNLEdBQUcsSUFBSSxVQUFVLENBQUMsMkJBQTJCLEVBQUUsQ0FBQztnQkFDdEQsTUFBTTthQUNQO1lBQ0QsS0FBSyxNQUFNLENBQUMsQ0FBQztnQkFDWCxNQUFNLEdBQUcsSUFBSSxVQUFVLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztnQkFDNUMsTUFBTTthQUNQO1NBQ0Y7UUFDRCxPQUFPLE9BQU8sQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDaEMsQ0FBQyxDQUFDO0FBQ0osQ0FBQzs7QUFFRCxNQUFNLEtBQU8sWUFBWSxHQUFpQyxDQUFDLGtCQUFrQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0aW9uVG9rZW4sIFByb3ZpZGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IEFjdGlvblJlZHVjZXJNYXAsIE1ldGFSZWR1Y2VyLCBBY3Rpb25SZWR1Y2VyIH0gZnJvbSAnQG5ncngvc3RvcmUnO1xuXG5pbXBvcnQge1xuICBDaGVja291dFN0YXRlLFxuICBDSEVDS09VVF9ERVRBSUxTLFxuICBDaGVja291dFN0ZXBzU3RhdGUsXG59IGZyb20gJy4uL2NoZWNrb3V0LXN0YXRlJztcbmltcG9ydCAqIGFzIGZyb21BY3Rpb24gZnJvbSAnLi4vYWN0aW9ucy9pbmRleCc7XG5pbXBvcnQgeyBMT0dPVVQgfSBmcm9tICcuLi8uLi8uLi9hdXRoL3N0b3JlL2FjdGlvbnMvaW5kZXgnO1xuaW1wb3J0IHtcbiAgQ1VSUkVOQ1lfQ0hBTkdFLFxuICBMQU5HVUFHRV9DSEFOR0UsXG59IGZyb20gJy4uLy4uLy4uL3NpdGUtY29udGV4dC9zdG9yZS9hY3Rpb25zL2luZGV4JztcblxuaW1wb3J0ICogYXMgZnJvbUFkZHJlc3NWZXJpZmljYXRpb24gZnJvbSAnLi9hZGRyZXNzLXZlcmlmaWNhdGlvbi5yZWR1Y2VyJztcbmltcG9ydCAqIGFzIGZyb21DYXJkVHlwZXMgZnJvbSAnLi9jYXJkLXR5cGVzLnJlZHVjZXInO1xuaW1wb3J0ICogYXMgZnJvbUNoZWNrb3V0IGZyb20gJy4vY2hlY2tvdXQucmVkdWNlcic7XG5pbXBvcnQgeyBsb2FkZXJSZWR1Y2VyIH0gZnJvbSAnLi4vLi4vLi4vc3RhdGUvdXRpbHMvbG9hZGVyL2xvYWRlci5yZWR1Y2VyJztcblxuZXhwb3J0IGZ1bmN0aW9uIGdldFJlZHVjZXJzKCk6IEFjdGlvblJlZHVjZXJNYXA8Q2hlY2tvdXRTdGF0ZT4ge1xuICByZXR1cm4ge1xuICAgIHN0ZXBzOiBsb2FkZXJSZWR1Y2VyPENoZWNrb3V0U3RlcHNTdGF0ZT4oXG4gICAgICBDSEVDS09VVF9ERVRBSUxTLFxuICAgICAgZnJvbUNoZWNrb3V0LnJlZHVjZXJcbiAgICApLFxuICAgIGNhcmRUeXBlczogZnJvbUNhcmRUeXBlcy5yZWR1Y2VyLFxuICAgIGFkZHJlc3NWZXJpZmljYXRpb246IGZyb21BZGRyZXNzVmVyaWZpY2F0aW9uLnJlZHVjZXIsXG4gIH07XG59XG5cbmV4cG9ydCBjb25zdCByZWR1Y2VyVG9rZW46IEluamVjdGlvblRva2VuPFxuICBBY3Rpb25SZWR1Y2VyTWFwPENoZWNrb3V0U3RhdGU+XG4+ID0gbmV3IEluamVjdGlvblRva2VuPEFjdGlvblJlZHVjZXJNYXA8Q2hlY2tvdXRTdGF0ZT4+KCdDaGVja291dFJlZHVjZXJzJyk7XG5cbmV4cG9ydCBjb25zdCByZWR1Y2VyUHJvdmlkZXI6IFByb3ZpZGVyID0ge1xuICBwcm92aWRlOiByZWR1Y2VyVG9rZW4sXG4gIHVzZUZhY3Rvcnk6IGdldFJlZHVjZXJzLFxufTtcblxuZXhwb3J0IGZ1bmN0aW9uIGNsZWFyQ2hlY2tvdXRTdGF0ZShcbiAgcmVkdWNlcjogQWN0aW9uUmVkdWNlcjxDaGVja291dFN0YXRlPlxuKTogQWN0aW9uUmVkdWNlcjxDaGVja291dFN0YXRlPiB7XG4gIHJldHVybiBmdW5jdGlvbihzdGF0ZSwgYWN0aW9uKSB7XG4gICAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgICAgY2FzZSBMQU5HVUFHRV9DSEFOR0U6IHtcbiAgICAgICAgYWN0aW9uID0gbmV3IGZyb21BY3Rpb24uQ2hlY2tvdXRDbGVhck1pc2NzRGF0YSgpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGNhc2UgQ1VSUkVOQ1lfQ0hBTkdFOiB7XG4gICAgICAgIGFjdGlvbiA9IG5ldyBmcm9tQWN0aW9uLkNsZWFyU3VwcG9ydGVkRGVsaXZlcnlNb2RlcygpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGNhc2UgTE9HT1VUOiB7XG4gICAgICAgIGFjdGlvbiA9IG5ldyBmcm9tQWN0aW9uLkNsZWFyQ2hlY2tvdXREYXRhKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVkdWNlcihzdGF0ZSwgYWN0aW9uKTtcbiAgfTtcbn1cblxuZXhwb3J0IGNvbnN0IG1ldGFSZWR1Y2VyczogTWV0YVJlZHVjZXI8Q2hlY2tvdXRTdGF0ZT5bXSA9IFtjbGVhckNoZWNrb3V0U3RhdGVdO1xuIl19