import { createSelector } from '@ngrx/store';
import { getUserState } from './feature.selector';
var ɵ0 = function (state) { return state.titles; };
export var getTitlesState = createSelector(getUserState, ɵ0);
var ɵ1 = function (state) { return state.entities; };
export var getTitlesEntites = createSelector(getTitlesState, ɵ1);
var ɵ2 = function (entites) {
    return Object.keys(entites).map(function (code) { return entites[code]; });
};
export var getAllTitles = createSelector(getTitlesEntites, ɵ2);
export var titleSelectorFactory = function (code) {
    return createSelector(getTitlesEntites, function (entities) {
        return Object.keys(entities).length !== 0 ? entities[code] : null;
    });
};
export { ɵ0, ɵ1, ɵ2 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGl0bGVzLnNlbGVjdG9ycy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFydGFjdXMvY29yZS8iLCJzb3VyY2VzIjpbInNyYy91c2VyL3N0b3JlL3NlbGVjdG9ycy90aXRsZXMuc2VsZWN0b3JzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQW9CLE1BQU0sYUFBYSxDQUFDO0FBUS9ELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztTQUtqQixVQUFDLEtBQWdCLElBQUssT0FBQSxLQUFLLENBQUMsTUFBTSxFQUFaLENBQVk7QUFIbkUsTUFBTSxDQUFDLElBQU0sY0FBYyxHQUd2QixjQUFjLENBQUMsWUFBWSxLQUFxQyxDQUFDO1NBS2xDLFVBQUMsS0FBa0IsSUFBSyxPQUFBLEtBQUssQ0FBQyxRQUFRLEVBQWQsQ0FBYztBQUh6RSxNQUFNLENBQUMsSUFBTSxnQkFBZ0IsR0FHekIsY0FBYyxDQUFDLGNBQWMsS0FBeUMsQ0FBQztTQUt0QyxVQUFDLE9BQU87SUFDM0MsT0FBQSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxVQUFDLElBQUksSUFBSyxPQUFBLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBYixDQUFhLENBQUM7QUFBakQsQ0FBaUQ7QUFKbkQsTUFBTSxDQUFDLElBQU0sWUFBWSxHQUdyQixjQUFjLENBQUMsZ0JBQWdCLEtBRWxDLENBQUM7QUFFRixNQUFNLENBQUMsSUFBTSxvQkFBb0IsR0FBRyxVQUNsQyxJQUFZO0lBRVosT0FBQSxjQUFjLENBQUMsZ0JBQWdCLEVBQUUsVUFBQyxRQUFRO1FBQ3hDLE9BQUEsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxNQUFNLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUk7SUFBMUQsQ0FBMEQsQ0FDM0Q7QUFGRCxDQUVDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVTZWxlY3RvciwgTWVtb2l6ZWRTZWxlY3RvciB9IGZyb20gJ0BuZ3J4L3N0b3JlJztcbmltcG9ydCB7IFRpdGxlIH0gZnJvbSAnLi4vLi4vLi4vbW9kZWwvbWlzYy5tb2RlbCc7XG5pbXBvcnQge1xuICBTdGF0ZVdpdGhVc2VyLFxuICBUaXRsZUVudGl0aWVzLFxuICBUaXRsZXNTdGF0ZSxcbiAgVXNlclN0YXRlLFxufSBmcm9tICcuLi91c2VyLXN0YXRlJztcbmltcG9ydCB7IGdldFVzZXJTdGF0ZSB9IGZyb20gJy4vZmVhdHVyZS5zZWxlY3Rvcic7XG5cbmV4cG9ydCBjb25zdCBnZXRUaXRsZXNTdGF0ZTogTWVtb2l6ZWRTZWxlY3RvcjxcbiAgU3RhdGVXaXRoVXNlcixcbiAgVGl0bGVzU3RhdGVcbj4gPSBjcmVhdGVTZWxlY3RvcihnZXRVc2VyU3RhdGUsIChzdGF0ZTogVXNlclN0YXRlKSA9PiBzdGF0ZS50aXRsZXMpO1xuXG5leHBvcnQgY29uc3QgZ2V0VGl0bGVzRW50aXRlczogTWVtb2l6ZWRTZWxlY3RvcjxcbiAgU3RhdGVXaXRoVXNlcixcbiAgVGl0bGVFbnRpdGllc1xuPiA9IGNyZWF0ZVNlbGVjdG9yKGdldFRpdGxlc1N0YXRlLCAoc3RhdGU6IFRpdGxlc1N0YXRlKSA9PiBzdGF0ZS5lbnRpdGllcyk7XG5cbmV4cG9ydCBjb25zdCBnZXRBbGxUaXRsZXM6IE1lbW9pemVkU2VsZWN0b3I8XG4gIFN0YXRlV2l0aFVzZXIsXG4gIFRpdGxlW11cbj4gPSBjcmVhdGVTZWxlY3RvcihnZXRUaXRsZXNFbnRpdGVzLCAoZW50aXRlcykgPT5cbiAgT2JqZWN0LmtleXMoZW50aXRlcykubWFwKChjb2RlKSA9PiBlbnRpdGVzW2NvZGVdKVxuKTtcblxuZXhwb3J0IGNvbnN0IHRpdGxlU2VsZWN0b3JGYWN0b3J5ID0gKFxuICBjb2RlOiBzdHJpbmdcbik6IE1lbW9pemVkU2VsZWN0b3I8U3RhdGVXaXRoVXNlciwgVGl0bGU+ID0+XG4gIGNyZWF0ZVNlbGVjdG9yKGdldFRpdGxlc0VudGl0ZXMsIChlbnRpdGllcykgPT5cbiAgICBPYmplY3Qua2V5cyhlbnRpdGllcykubGVuZ3RoICE9PSAwID8gZW50aXRpZXNbY29kZV0gOiBudWxsXG4gICk7XG4iXX0=