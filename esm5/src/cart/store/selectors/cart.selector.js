import { createFeatureSelector, createSelector, } from '@ngrx/store';
import { StateLoaderSelectors } from '../../../state/utils/index';
import { CART_FEATURE, } from '../cart-state';
var getCartContentSelector = function (state) { return state.content; };
var ɵ0 = getCartContentSelector;
var getCartRefreshSelector = function (state) { return state.refresh; };
var ɵ1 = getCartRefreshSelector;
var getCartEntriesSelector = function (state) { return state.entries; };
var ɵ2 = getCartEntriesSelector;
var getCartMergeCompleteSelector = function (state) {
    return state.cartMergeComplete;
};
var ɵ3 = getCartMergeCompleteSelector;
export var getCartsState = createFeatureSelector(CART_FEATURE);
var ɵ4 = function (cartsState) { return cartsState.active; };
export var getActiveCartState = createSelector(getCartsState, ɵ4);
var ɵ5 = function (state) {
    return StateLoaderSelectors.loaderValueSelector(state);
};
export var getCartState = createSelector(getActiveCartState, ɵ5);
export var getCartContent = createSelector(getCartState, getCartContentSelector);
export var getCartRefresh = createSelector(getCartState, getCartRefreshSelector);
var ɵ6 = function (state) {
    return (StateLoaderSelectors.loaderSuccessSelector(state) &&
        !StateLoaderSelectors.loaderLoadingSelector(state) &&
        !StateLoaderSelectors.loaderValueSelector(state).refresh) ||
        (StateLoaderSelectors.loaderErrorSelector(state) &&
            !StateLoaderSelectors.loaderLoadingSelector(state) &&
            !StateLoaderSelectors.loaderValueSelector(state).refresh);
};
export var getCartLoaded = createSelector(getActiveCartState, ɵ6);
var ɵ7 = function (state) {
    return StateLoaderSelectors.loaderLoadingSelector(state);
};
export var getCartLoading = createSelector(getActiveCartState, ɵ7);
export var getCartMergeComplete = createSelector(getCartState, getCartMergeCompleteSelector);
export var getCartEntriesMap = createSelector(getCartState, getCartEntriesSelector);
export var getCartEntrySelectorFactory = function (productCode) {
    return createSelector(getCartEntriesMap, function (entries) {
        if (entries) {
            return entries[productCode];
        }
    });
};
var ɵ8 = function (entities) {
    return Object.keys(entities).map(function (code) { return entities[code]; });
};
export var getCartEntries = createSelector(getCartEntriesMap, ɵ8);
var ɵ9 = function (content) { return content.user; };
export var getCartUser = createSelector(getCartContent, ɵ9);
export { ɵ0, ɵ1, ɵ2, ɵ3, ɵ4, ɵ5, ɵ6, ɵ7, ɵ8, ɵ9 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FydC5zZWxlY3Rvci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzcGFydGFjdXMvY29yZS8iLCJzb3VyY2VzIjpbInNyYy9jYXJ0L3N0b3JlL3NlbGVjdG9ycy9jYXJ0LnNlbGVjdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCxxQkFBcUIsRUFDckIsY0FBYyxHQUVmLE1BQU0sYUFBYSxDQUFDO0FBR3JCLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRWxFLE9BQU8sRUFHTCxZQUFZLEdBRWIsTUFBTSxlQUFlLENBQUM7QUFHdkIsSUFBTSxzQkFBc0IsR0FBRyxVQUFDLEtBQWdCLElBQUssT0FBQSxLQUFLLENBQUMsT0FBTyxFQUFiLENBQWEsQ0FBQzs7QUFDbkUsSUFBTSxzQkFBc0IsR0FBRyxVQUFDLEtBQWdCLElBQUssT0FBQSxLQUFLLENBQUMsT0FBTyxFQUFiLENBQWEsQ0FBQzs7QUFDbkUsSUFBTSxzQkFBc0IsR0FBRyxVQUFDLEtBQWdCLElBQUssT0FBQSxLQUFLLENBQUMsT0FBTyxFQUFiLENBQWEsQ0FBQzs7QUFDbkUsSUFBTSw0QkFBNEIsR0FBRyxVQUFDLEtBQWdCO0lBQ3BELE9BQUEsS0FBSyxDQUFDLGlCQUFpQjtBQUF2QixDQUF1QixDQUFDOztBQUUxQixNQUFNLENBQUMsSUFBTSxhQUFhLEdBR3RCLHFCQUFxQixDQUFhLFlBQVksQ0FBQyxDQUFDO1NBT2xELFVBQUMsVUFBc0IsSUFBSyxPQUFBLFVBQVUsQ0FBQyxNQUFNLEVBQWpCLENBQWlCO0FBTC9DLE1BQU0sQ0FBQyxJQUFNLGtCQUFrQixHQUczQixjQUFjLENBQ2hCLGFBQWEsS0FFZCxDQUFDO1NBS3FDLFVBQUEsS0FBSztJQUMxQyxPQUFBLG9CQUFvQixDQUFDLG1CQUFtQixDQUFDLEtBQUssQ0FBQztBQUEvQyxDQUErQztBQUpqRCxNQUFNLENBQUMsSUFBTSxZQUFZLEdBR3JCLGNBQWMsQ0FBQyxrQkFBa0IsS0FFcEMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxJQUFNLGNBQWMsR0FHdkIsY0FBYyxDQUFDLFlBQVksRUFBRSxzQkFBc0IsQ0FBQyxDQUFDO0FBRXpELE1BQU0sQ0FBQyxJQUFNLGNBQWMsR0FHdkIsY0FBYyxDQUFDLFlBQVksRUFBRSxzQkFBc0IsQ0FBQyxDQUFDO1NBT3ZELFVBQUEsS0FBSztJQUNILE9BQUEsQ0FBQyxvQkFBb0IsQ0FBQyxxQkFBcUIsQ0FBQyxLQUFLLENBQUM7UUFDaEQsQ0FBQyxvQkFBb0IsQ0FBQyxxQkFBcUIsQ0FBQyxLQUFLLENBQUM7UUFDbEQsQ0FBQyxvQkFBb0IsQ0FBQyxtQkFBbUIsQ0FBQyxLQUFLLENBQUMsQ0FBQyxPQUFPLENBQUM7UUFDM0QsQ0FBQyxvQkFBb0IsQ0FBQyxtQkFBbUIsQ0FBQyxLQUFLLENBQUM7WUFDOUMsQ0FBQyxvQkFBb0IsQ0FBQyxxQkFBcUIsQ0FBQyxLQUFLLENBQUM7WUFDbEQsQ0FBQyxvQkFBb0IsQ0FBQyxtQkFBbUIsQ0FBQyxLQUFLLENBQUMsQ0FBQyxPQUFPLENBQUM7QUFMM0QsQ0FLMkQ7QUFYL0QsTUFBTSxDQUFDLElBQU0sYUFBYSxHQUd0QixjQUFjLENBQ2hCLGtCQUFrQixLQVFuQixDQUFDO1NBS3FDLFVBQUEsS0FBSztJQUMxQyxPQUFBLG9CQUFvQixDQUFDLHFCQUFxQixDQUFDLEtBQUssQ0FBQztBQUFqRCxDQUFpRDtBQUpuRCxNQUFNLENBQUMsSUFBTSxjQUFjLEdBR3ZCLGNBQWMsQ0FBQyxrQkFBa0IsS0FFcEMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxJQUFNLG9CQUFvQixHQUc3QixjQUFjLENBQUMsWUFBWSxFQUFFLDRCQUE0QixDQUFDLENBQUM7QUFFL0QsTUFBTSxDQUFDLElBQU0saUJBQWlCLEdBRzFCLGNBQWMsQ0FBQyxZQUFZLEVBQUUsc0JBQXNCLENBQUMsQ0FBQztBQUV6RCxNQUFNLENBQUMsSUFBTSwyQkFBMkIsR0FBRyxVQUN6QyxXQUFtQjtJQUVuQixPQUFPLGNBQWMsQ0FBQyxpQkFBaUIsRUFBRSxVQUFBLE9BQU87UUFDOUMsSUFBSSxPQUFPLEVBQUU7WUFDWCxPQUFPLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztTQUM3QjtJQUNILENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFDO1NBS29DLFVBQUEsUUFBUTtJQUM1QyxPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsR0FBRyxDQUFDLFVBQUEsSUFBSSxJQUFJLE9BQUEsUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFkLENBQWMsQ0FBQyxDQUFDO0FBQzNELENBQUM7QUFMRCxNQUFNLENBQUMsSUFBTSxjQUFjLEdBR3ZCLGNBQWMsQ0FBQyxpQkFBaUIsS0FFbEMsQ0FBQztTQUtnQyxVQUFBLE9BQU8sSUFBSSxPQUFBLE9BQU8sQ0FBQyxJQUFJLEVBQVosQ0FBWTtBQUgxRCxNQUFNLENBQUMsSUFBTSxXQUFXLEdBR3BCLGNBQWMsQ0FBQyxjQUFjLEtBQTBCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBjcmVhdGVGZWF0dXJlU2VsZWN0b3IsXG4gIGNyZWF0ZVNlbGVjdG9yLFxuICBNZW1vaXplZFNlbGVjdG9yLFxufSBmcm9tICdAbmdyeC9zdG9yZSc7XG5pbXBvcnQgeyBDYXJ0IH0gZnJvbSAnLi4vLi4vLi4vbW9kZWwvY2FydC5tb2RlbCc7XG5pbXBvcnQgeyBPcmRlckVudHJ5IH0gZnJvbSAnLi4vLi4vLi4vbW9kZWwvb3JkZXIubW9kZWwnO1xuaW1wb3J0IHsgU3RhdGVMb2FkZXJTZWxlY3RvcnMgfSBmcm9tICcuLi8uLi8uLi9zdGF0ZS91dGlscy9pbmRleCc7XG5pbXBvcnQgeyBMb2FkZXJTdGF0ZSB9IGZyb20gJy4uLy4uLy4uL3N0YXRlL3V0aWxzL2xvYWRlci9sb2FkZXItc3RhdGUnO1xuaW1wb3J0IHtcbiAgQ2FydHNTdGF0ZSxcbiAgQ2FydFN0YXRlLFxuICBDQVJUX0ZFQVRVUkUsXG4gIFN0YXRlV2l0aENhcnQsXG59IGZyb20gJy4uL2NhcnQtc3RhdGUnO1xuaW1wb3J0IHsgVXNlciB9IGZyb20gJy4uLy4uLy4uL21vZGVsL21pc2MubW9kZWwnO1xuXG5jb25zdCBnZXRDYXJ0Q29udGVudFNlbGVjdG9yID0gKHN0YXRlOiBDYXJ0U3RhdGUpID0+IHN0YXRlLmNvbnRlbnQ7XG5jb25zdCBnZXRDYXJ0UmVmcmVzaFNlbGVjdG9yID0gKHN0YXRlOiBDYXJ0U3RhdGUpID0+IHN0YXRlLnJlZnJlc2g7XG5jb25zdCBnZXRDYXJ0RW50cmllc1NlbGVjdG9yID0gKHN0YXRlOiBDYXJ0U3RhdGUpID0+IHN0YXRlLmVudHJpZXM7XG5jb25zdCBnZXRDYXJ0TWVyZ2VDb21wbGV0ZVNlbGVjdG9yID0gKHN0YXRlOiBDYXJ0U3RhdGUpID0+XG4gIHN0YXRlLmNhcnRNZXJnZUNvbXBsZXRlO1xuXG5leHBvcnQgY29uc3QgZ2V0Q2FydHNTdGF0ZTogTWVtb2l6ZWRTZWxlY3RvcjxcbiAgU3RhdGVXaXRoQ2FydCxcbiAgQ2FydHNTdGF0ZVxuPiA9IGNyZWF0ZUZlYXR1cmVTZWxlY3RvcjxDYXJ0c1N0YXRlPihDQVJUX0ZFQVRVUkUpO1xuXG5leHBvcnQgY29uc3QgZ2V0QWN0aXZlQ2FydFN0YXRlOiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhDYXJ0LFxuICBMb2FkZXJTdGF0ZTxDYXJ0U3RhdGU+XG4+ID0gY3JlYXRlU2VsZWN0b3IoXG4gIGdldENhcnRzU3RhdGUsXG4gIChjYXJ0c1N0YXRlOiBDYXJ0c1N0YXRlKSA9PiBjYXJ0c1N0YXRlLmFjdGl2ZVxuKTtcblxuZXhwb3J0IGNvbnN0IGdldENhcnRTdGF0ZTogTWVtb2l6ZWRTZWxlY3RvcjxcbiAgU3RhdGVXaXRoQ2FydCxcbiAgQ2FydFN0YXRlXG4+ID0gY3JlYXRlU2VsZWN0b3IoZ2V0QWN0aXZlQ2FydFN0YXRlLCBzdGF0ZSA9PlxuICBTdGF0ZUxvYWRlclNlbGVjdG9ycy5sb2FkZXJWYWx1ZVNlbGVjdG9yKHN0YXRlKVxuKTtcblxuZXhwb3J0IGNvbnN0IGdldENhcnRDb250ZW50OiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhDYXJ0LFxuICBDYXJ0XG4+ID0gY3JlYXRlU2VsZWN0b3IoZ2V0Q2FydFN0YXRlLCBnZXRDYXJ0Q29udGVudFNlbGVjdG9yKTtcblxuZXhwb3J0IGNvbnN0IGdldENhcnRSZWZyZXNoOiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhDYXJ0LFxuICBib29sZWFuXG4+ID0gY3JlYXRlU2VsZWN0b3IoZ2V0Q2FydFN0YXRlLCBnZXRDYXJ0UmVmcmVzaFNlbGVjdG9yKTtcblxuZXhwb3J0IGNvbnN0IGdldENhcnRMb2FkZWQ6IE1lbW9pemVkU2VsZWN0b3I8XG4gIFN0YXRlV2l0aENhcnQsXG4gIGJvb2xlYW5cbj4gPSBjcmVhdGVTZWxlY3RvcihcbiAgZ2V0QWN0aXZlQ2FydFN0YXRlLFxuICBzdGF0ZSA9PlxuICAgIChTdGF0ZUxvYWRlclNlbGVjdG9ycy5sb2FkZXJTdWNjZXNzU2VsZWN0b3Ioc3RhdGUpICYmXG4gICAgICAhU3RhdGVMb2FkZXJTZWxlY3RvcnMubG9hZGVyTG9hZGluZ1NlbGVjdG9yKHN0YXRlKSAmJlxuICAgICAgIVN0YXRlTG9hZGVyU2VsZWN0b3JzLmxvYWRlclZhbHVlU2VsZWN0b3Ioc3RhdGUpLnJlZnJlc2gpIHx8XG4gICAgKFN0YXRlTG9hZGVyU2VsZWN0b3JzLmxvYWRlckVycm9yU2VsZWN0b3Ioc3RhdGUpICYmXG4gICAgICAhU3RhdGVMb2FkZXJTZWxlY3RvcnMubG9hZGVyTG9hZGluZ1NlbGVjdG9yKHN0YXRlKSAmJlxuICAgICAgIVN0YXRlTG9hZGVyU2VsZWN0b3JzLmxvYWRlclZhbHVlU2VsZWN0b3Ioc3RhdGUpLnJlZnJlc2gpXG4pO1xuXG5leHBvcnQgY29uc3QgZ2V0Q2FydExvYWRpbmc6IE1lbW9pemVkU2VsZWN0b3I8XG4gIGFueSxcbiAgYm9vbGVhblxuPiA9IGNyZWF0ZVNlbGVjdG9yKGdldEFjdGl2ZUNhcnRTdGF0ZSwgc3RhdGUgPT5cbiAgU3RhdGVMb2FkZXJTZWxlY3RvcnMubG9hZGVyTG9hZGluZ1NlbGVjdG9yKHN0YXRlKVxuKTtcblxuZXhwb3J0IGNvbnN0IGdldENhcnRNZXJnZUNvbXBsZXRlOiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhDYXJ0LFxuICBib29sZWFuXG4+ID0gY3JlYXRlU2VsZWN0b3IoZ2V0Q2FydFN0YXRlLCBnZXRDYXJ0TWVyZ2VDb21wbGV0ZVNlbGVjdG9yKTtcblxuZXhwb3J0IGNvbnN0IGdldENhcnRFbnRyaWVzTWFwOiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhDYXJ0LFxuICB7IFtjb2RlOiBzdHJpbmddOiBPcmRlckVudHJ5IH1cbj4gPSBjcmVhdGVTZWxlY3RvcihnZXRDYXJ0U3RhdGUsIGdldENhcnRFbnRyaWVzU2VsZWN0b3IpO1xuXG5leHBvcnQgY29uc3QgZ2V0Q2FydEVudHJ5U2VsZWN0b3JGYWN0b3J5ID0gKFxuICBwcm9kdWN0Q29kZTogc3RyaW5nXG4pOiBNZW1vaXplZFNlbGVjdG9yPFN0YXRlV2l0aENhcnQsIE9yZGVyRW50cnk+ID0+IHtcbiAgcmV0dXJuIGNyZWF0ZVNlbGVjdG9yKGdldENhcnRFbnRyaWVzTWFwLCBlbnRyaWVzID0+IHtcbiAgICBpZiAoZW50cmllcykge1xuICAgICAgcmV0dXJuIGVudHJpZXNbcHJvZHVjdENvZGVdO1xuICAgIH1cbiAgfSk7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0Q2FydEVudHJpZXM6IE1lbW9pemVkU2VsZWN0b3I8XG4gIFN0YXRlV2l0aENhcnQsXG4gIE9yZGVyRW50cnlbXVxuPiA9IGNyZWF0ZVNlbGVjdG9yKGdldENhcnRFbnRyaWVzTWFwLCBlbnRpdGllcyA9PiB7XG4gIHJldHVybiBPYmplY3Qua2V5cyhlbnRpdGllcykubWFwKGNvZGUgPT4gZW50aXRpZXNbY29kZV0pO1xufSk7XG5cbmV4cG9ydCBjb25zdCBnZXRDYXJ0VXNlcjogTWVtb2l6ZWRTZWxlY3RvcjxcbiAgU3RhdGVXaXRoQ2FydCxcbiAgVXNlclxuPiA9IGNyZWF0ZVNlbGVjdG9yKGdldENhcnRDb250ZW50LCBjb250ZW50ID0+IGNvbnRlbnQudXNlcik7XG4iXX0=