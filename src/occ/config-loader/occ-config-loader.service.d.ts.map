{"version":3,"file":"occ-config-loader.service.d.ts","sources":["/home/travis/build/SAP/cloud-commerce-spartacus-storefront/dist/core/src/occ/config-loader/occ-config-loader.service.d.ts"],"sourcesContent":["import { StateKey, TransferState } from '@angular/platform-browser';\nimport { Observable } from 'rxjs';\nimport { I18nConfig } from '../../i18n/config/i18n-config';\nimport { SiteContextConfig } from '../../site-context/config/site-context-config';\nimport { OccLoadedConfig } from './occ-loaded-config';\nimport { OccLoadedConfigConverter } from './occ-loaded-config-converter';\nimport { OccSitesConfigLoader } from './occ-sites-config-loader';\nexport declare const EXTERNAL_CONFIG_TRANSFER_ID: StateKey<string>;\nexport declare class OccConfigLoaderService {\n    protected platform: any;\n    protected document: any;\n    protected config: any;\n    protected sitesConfigLoader: OccSitesConfigLoader;\n    protected converter: OccLoadedConfigConverter;\n    protected transferState: TransferState;\n    protected serverRequestUrl?: string;\n    constructor(platform: any, document: any, config: any, sitesConfigLoader: OccSitesConfigLoader, converter: OccLoadedConfigConverter, transferState: TransferState, serverRequestUrl?: string);\n    private get currentUrl();\n    /**\n     * Initializes the Spartacus config asynchronously basing on the external config\n     */\n    loadConfig(): Promise<I18nConfig | SiteContextConfig>;\n    /**\n     * Returns the external config\n     */\n    protected get(): Observable<OccLoadedConfig>;\n    /**\n     * Loads the external config from backend\n     */\n    protected load(): Observable<OccLoadedConfig>;\n    /**\n     * Tries to rehydrate external config in the browser from SSR\n     */\n    protected rehydrate(): OccLoadedConfig;\n    /**\n     * Transfers the given external config in SSR to the browser\n     *\n     * @param externalConfig\n     */\n    protected transfer(externalConfig: OccLoadedConfig): void;\n    protected getConfigChunks(externalConfig: OccLoadedConfig): (I18nConfig | SiteContextConfig)[];\n    private shouldReturnI18nChunk;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;"}