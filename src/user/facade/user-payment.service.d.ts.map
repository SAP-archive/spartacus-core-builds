{"version":3,"file":"user-payment.service.d.ts","sources":["/home/travis/build/SAP/cloud-commerce-spartacus-storefront/dist/core/src/user/facade/user-payment.service.d.ts"],"sourcesContent":["import { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../../auth/facade/auth.service';\nimport { Country } from '../../model/address.model';\nimport { PaymentDetails } from '../../model/cart.model';\nimport { StateWithProcess } from '../../process/store/process-state';\nimport { StateWithUser } from '../store/user-state';\nexport declare class UserPaymentService {\n    protected store: Store<StateWithUser | StateWithProcess<void>>;\n    protected authService?: AuthService;\n    constructor(store: Store<StateWithUser | StateWithProcess<void>>, authService: AuthService);\n    /**\n     * @deprecated since version 1.3\n     *  Use constructor(store: Store<StateWithUser | StateWithProcess<void>>,\n     *  authService: AuthService) instead\n     *\n     *  TODO(issue:#5628) Deprecated since 1.3.0\n     */\n    constructor(store: Store<StateWithUser | StateWithProcess<void>>);\n    /**\n     * Loads all user's payment methods.\n     */\n    loadPaymentMethods(): void;\n    /**\n     * Returns all user's payment methods\n     */\n    getPaymentMethods(): Observable<PaymentDetails[]>;\n    /**\n     * Returns a loading flag for payment methods\n     */\n    getPaymentMethodsLoading(): Observable<boolean>;\n    getPaymentMethodsLoadedSuccess(): Observable<boolean>;\n    /**\n     * Sets the payment as a default one\n     * @param paymentMethodId a payment method ID\n     */\n    setPaymentMethodAsDefault(paymentMethodId: string): void;\n    /**\n     * Deletes the payment method\n     *\n     * @param paymentMethodId a payment method ID\n     */\n    deletePaymentMethod(paymentMethodId: string): void;\n    /**\n     * Returns all billing countries\n     */\n    getAllBillingCountries(): Observable<Country[]>;\n    /**\n     * Retrieves billing countries\n     */\n    loadBillingCountries(): void;\n    /**\n     * Utility method to distinquish pre / post 1.3.0 in a convenient way.\n     *\n     */\n    private withUserId;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;"}