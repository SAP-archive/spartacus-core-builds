import { __extends } from "tslib";
import { USER_RETURN_REQUESTS, USER_RETURN_REQUEST_DETAILS, CANCEL_RETURN_PROCESS_ID, } from '../user-state';
import { LoaderFailAction, LoaderLoadAction, LoaderSuccessAction, LoaderResetAction, } from '../../../state/utils/loader/loader.action';
import { StateEntityLoaderActions } from '../../../state/utils/index';
import { PROCESS_FEATURE } from '../../../process/store/process-state';
export var CREATE_ORDER_RETURN_REQUEST = '[User] Create Order Return Request';
export var CREATE_ORDER_RETURN_REQUEST_FAIL = '[User] Create Order Return Request Fail';
export var CREATE_ORDER_RETURN_REQUEST_SUCCESS = '[User] Create Order Return Request Success';
export var LOAD_ORDER_RETURN_REQUEST = '[User] Load Order Return Request details';
export var LOAD_ORDER_RETURN_REQUEST_FAIL = '[User] Load Order Return Request details Fail';
export var LOAD_ORDER_RETURN_REQUEST_SUCCESS = '[User] Load Order Return Request details Success';
export var CANCEL_ORDER_RETURN_REQUEST = '[User] Cancel Order Return Request';
export var CANCEL_ORDER_RETURN_REQUEST_FAIL = '[User] Cancel Order Return Request Fail';
export var CANCEL_ORDER_RETURN_REQUEST_SUCCESS = '[User] Cancel Order Return Request Success';
export var LOAD_ORDER_RETURN_REQUEST_LIST = '[User] Load User Order Return Request List';
export var LOAD_ORDER_RETURN_REQUEST_LIST_FAIL = '[User] Load User Order Return Request List Fail';
export var LOAD_ORDER_RETURN_REQUEST_LIST_SUCCESS = '[User] Load User Order Return Request List Success';
export var CLEAR_ORDER_RETURN_REQUEST = '[User] Clear Order Return Request Details';
export var CLEAR_ORDER_RETURN_REQUEST_LIST = '[User] Clear Order Return Request List';
export var RESET_CANCEL_RETURN_PROCESS = '[User] Reset Cancel Return Request Process';
var CreateOrderReturnRequest = /** @class */ (function (_super) {
    __extends(CreateOrderReturnRequest, _super);
    function CreateOrderReturnRequest(payload) {
        var _this = _super.call(this, USER_RETURN_REQUEST_DETAILS) || this;
        _this.payload = payload;
        _this.type = CREATE_ORDER_RETURN_REQUEST;
        return _this;
    }
    return CreateOrderReturnRequest;
}(LoaderLoadAction));
export { CreateOrderReturnRequest };
var CreateOrderReturnRequestFail = /** @class */ (function (_super) {
    __extends(CreateOrderReturnRequestFail, _super);
    function CreateOrderReturnRequestFail(payload) {
        var _this = _super.call(this, USER_RETURN_REQUEST_DETAILS, payload) || this;
        _this.payload = payload;
        _this.type = CREATE_ORDER_RETURN_REQUEST_FAIL;
        return _this;
    }
    return CreateOrderReturnRequestFail;
}(LoaderFailAction));
export { CreateOrderReturnRequestFail };
var CreateOrderReturnRequestSuccess = /** @class */ (function (_super) {
    __extends(CreateOrderReturnRequestSuccess, _super);
    function CreateOrderReturnRequestSuccess(payload) {
        var _this = _super.call(this, USER_RETURN_REQUEST_DETAILS) || this;
        _this.payload = payload;
        _this.type = CREATE_ORDER_RETURN_REQUEST_SUCCESS;
        return _this;
    }
    return CreateOrderReturnRequestSuccess;
}(LoaderSuccessAction));
export { CreateOrderReturnRequestSuccess };
var LoadOrderReturnRequest = /** @class */ (function (_super) {
    __extends(LoadOrderReturnRequest, _super);
    function LoadOrderReturnRequest(payload) {
        var _this = _super.call(this, USER_RETURN_REQUEST_DETAILS) || this;
        _this.payload = payload;
        _this.type = LOAD_ORDER_RETURN_REQUEST;
        return _this;
    }
    return LoadOrderReturnRequest;
}(LoaderLoadAction));
export { LoadOrderReturnRequest };
var LoadOrderReturnRequestFail = /** @class */ (function (_super) {
    __extends(LoadOrderReturnRequestFail, _super);
    function LoadOrderReturnRequestFail(payload) {
        var _this = _super.call(this, USER_RETURN_REQUEST_DETAILS, payload) || this;
        _this.payload = payload;
        _this.type = LOAD_ORDER_RETURN_REQUEST_FAIL;
        return _this;
    }
    return LoadOrderReturnRequestFail;
}(LoaderFailAction));
export { LoadOrderReturnRequestFail };
var LoadOrderReturnRequestSuccess = /** @class */ (function (_super) {
    __extends(LoadOrderReturnRequestSuccess, _super);
    function LoadOrderReturnRequestSuccess(payload) {
        var _this = _super.call(this, USER_RETURN_REQUEST_DETAILS) || this;
        _this.payload = payload;
        _this.type = LOAD_ORDER_RETURN_REQUEST_SUCCESS;
        return _this;
    }
    return LoadOrderReturnRequestSuccess;
}(LoaderSuccessAction));
export { LoadOrderReturnRequestSuccess };
var CancelOrderReturnRequest = /** @class */ (function (_super) {
    __extends(CancelOrderReturnRequest, _super);
    function CancelOrderReturnRequest(payload) {
        var _this = _super.call(this, PROCESS_FEATURE, CANCEL_RETURN_PROCESS_ID) || this;
        _this.payload = payload;
        _this.type = CANCEL_ORDER_RETURN_REQUEST;
        return _this;
    }
    return CancelOrderReturnRequest;
}(StateEntityLoaderActions.EntityLoadAction));
export { CancelOrderReturnRequest };
var CancelOrderReturnRequestFail = /** @class */ (function (_super) {
    __extends(CancelOrderReturnRequestFail, _super);
    function CancelOrderReturnRequestFail(payload) {
        var _this = _super.call(this, PROCESS_FEATURE, CANCEL_RETURN_PROCESS_ID, payload) || this;
        _this.payload = payload;
        _this.type = CANCEL_ORDER_RETURN_REQUEST_FAIL;
        return _this;
    }
    return CancelOrderReturnRequestFail;
}(StateEntityLoaderActions.EntityFailAction));
export { CancelOrderReturnRequestFail };
var CancelOrderReturnRequestSuccess = /** @class */ (function (_super) {
    __extends(CancelOrderReturnRequestSuccess, _super);
    function CancelOrderReturnRequestSuccess() {
        var _this = _super.call(this, PROCESS_FEATURE, CANCEL_RETURN_PROCESS_ID) || this;
        _this.type = CANCEL_ORDER_RETURN_REQUEST_SUCCESS;
        return _this;
    }
    return CancelOrderReturnRequestSuccess;
}(StateEntityLoaderActions.EntitySuccessAction));
export { CancelOrderReturnRequestSuccess };
var LoadOrderReturnRequestList = /** @class */ (function (_super) {
    __extends(LoadOrderReturnRequestList, _super);
    function LoadOrderReturnRequestList(payload) {
        var _this = _super.call(this, USER_RETURN_REQUESTS) || this;
        _this.payload = payload;
        _this.type = LOAD_ORDER_RETURN_REQUEST_LIST;
        return _this;
    }
    return LoadOrderReturnRequestList;
}(LoaderLoadAction));
export { LoadOrderReturnRequestList };
var LoadOrderReturnRequestListFail = /** @class */ (function (_super) {
    __extends(LoadOrderReturnRequestListFail, _super);
    function LoadOrderReturnRequestListFail(payload) {
        var _this = _super.call(this, USER_RETURN_REQUESTS, payload) || this;
        _this.payload = payload;
        _this.type = LOAD_ORDER_RETURN_REQUEST_LIST_FAIL;
        return _this;
    }
    return LoadOrderReturnRequestListFail;
}(LoaderFailAction));
export { LoadOrderReturnRequestListFail };
var LoadOrderReturnRequestListSuccess = /** @class */ (function (_super) {
    __extends(LoadOrderReturnRequestListSuccess, _super);
    function LoadOrderReturnRequestListSuccess(payload) {
        var _this = _super.call(this, USER_RETURN_REQUESTS) || this;
        _this.payload = payload;
        _this.type = LOAD_ORDER_RETURN_REQUEST_LIST_SUCCESS;
        return _this;
    }
    return LoadOrderReturnRequestListSuccess;
}(LoaderSuccessAction));
export { LoadOrderReturnRequestListSuccess };
var ClearOrderReturnRequest = /** @class */ (function (_super) {
    __extends(ClearOrderReturnRequest, _super);
    function ClearOrderReturnRequest() {
        var _this = _super.call(this, USER_RETURN_REQUEST_DETAILS) || this;
        _this.type = CLEAR_ORDER_RETURN_REQUEST;
        return _this;
    }
    return ClearOrderReturnRequest;
}(LoaderResetAction));
export { ClearOrderReturnRequest };
var ClearOrderReturnRequestList = /** @class */ (function (_super) {
    __extends(ClearOrderReturnRequestList, _super);
    function ClearOrderReturnRequestList() {
        var _this = _super.call(this, USER_RETURN_REQUESTS) || this;
        _this.type = CLEAR_ORDER_RETURN_REQUEST_LIST;
        return _this;
    }
    return ClearOrderReturnRequestList;
}(LoaderResetAction));
export { ClearOrderReturnRequestList };
var ResetCancelReturnProcess = /** @class */ (function (_super) {
    __extends(ResetCancelReturnProcess, _super);
    function ResetCancelReturnProcess() {
        var _this = _super.call(this, PROCESS_FEATURE, CANCEL_RETURN_PROCESS_ID) || this;
        _this.type = RESET_CANCEL_RETURN_PROCESS;
        return _this;
    }
    return ResetCancelReturnProcess;
}(StateEntityLoaderActions.EntityResetAction));
export { ResetCancelReturnProcess };
//# sourceMappingURL=data:application/json;base64,