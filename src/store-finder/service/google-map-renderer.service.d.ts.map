{"version":3,"file":"google-map-renderer.service.d.ts","sources":["google-map-renderer.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { ExternalJsFileLoader } from './external-js-file-loader.service';\nimport { StoreDataService } from '../facade/store-data.service';\nimport { StoreFinderConfig } from '../config/store-finder-config';\nexport declare class GoogleMapRendererService {\n    protected config: StoreFinderConfig;\n    protected externalJsFileLoader: ExternalJsFileLoader;\n    protected storeDataService: StoreDataService;\n    private googleMap;\n    private markers;\n    constructor(config: StoreFinderConfig, externalJsFileLoader: ExternalJsFileLoader, storeDataService: StoreDataService);\n    /**\n     * Renders google map on the given element and draws markers on it.\n     * If map already exists it will use an existing map otherwise it will create one\n     * @param mapElement HTML element inside of which the map will be displayed\n     * @param locations array containign geo data to be displayed on the map\n     * @param selectMarkerHandler function to handle whenever a marker on a map is clicked\n     */\n    renderMap(mapElement: HTMLElement, locations: any[], selectMarkerHandler?: Function): void;\n    /**\n     * Centers the map to the given point\n     * @param latitute latitude of the new center\n     * @param longitude longitude of the new center\n     */\n    centerMap(latitute: number, longitude: number): void;\n    /**\n     * Defines and returns {@link google.maps.LatLng} representing a point where the map will be centered\n     * @param locations list of locations\n     */\n    private defineMapCenter;\n    /**\n     * Creates google map inside if the given HTML element centered to the given point\n     * @param mapElement {@link HTMLElement} inside of which the map will be created\n     * @param mapCenter {@link google.maps.LatLng} the point where the map will be centered\n     */\n    private initMap;\n    /**\n     * Erases the current map's markers and create a new one based on the given locations\n     * @param locations array of locations to be displayed on the map\n     * @param selectMarkerHandler function to handle whenever a marker on a map is clicked\n     */\n    private createMarkers;\n    /**\n     * Initialize and draw the map\n     * @param mapElement {@link HTMLElement} inside of which the map will be drawn\n     * @param locations array of locations to be displayed on the map\n     * @param selectMarkerHandler function to handle whenever a marker on a map is clicked\n     */\n    private drawMap;\n}\n"]}