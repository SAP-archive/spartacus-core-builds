{"version":3,"file":"unknown-error.handler.d.ts","sources":["unknown-error.handler.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { HttpResponseStatus } from '../../../models/response-status.model';\nimport { HttpErrorHandler } from '../http-error.handler';\nimport { Priority } from '../../../../util/applicable';\n/**\n * Unknown Error Handler works as an fallback, to handle errors that were\n * not handled by any other error handlers\n */\nexport declare class UnknownErrorHandler extends HttpErrorHandler {\n    responseStatus: HttpResponseStatus;\n    /**\n     * hasMatch always returns true, to mach all errors\n     */\n    hasMatch(_errorResponse: any): boolean;\n    handleError(): void;\n    /**\n     * Fallback priority assures that the handler is used as a last resort\n     */\n    getPriority(): Priority;\n}\n"]}