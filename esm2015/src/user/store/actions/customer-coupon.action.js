import { CUSTOMER_COUPONS, SUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID, UNSUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID, CLAIM_CUSTOMER_COUPON_PROCESS_ID, } from '../user-state';
import { LoaderLoadAction, LoaderFailAction, LoaderSuccessAction, LoaderResetAction, } from '../../../state/utils/loader/loader.action';
import { EntityFailAction, EntityLoadAction, EntityLoaderResetAction, EntitySuccessAction, } from '../../../state/utils/entity-loader/entity-loader.action';
import { PROCESS_FEATURE } from '../../../process/store';
export const LOAD_CUSTOMER_COUPONS = '[User] Load Customer Coupons';
export const LOAD_CUSTOMER_COUPONS_FAIL = '[User] Load Customer Coupons Fail';
export const LOAD_CUSTOMER_COUPONS_SUCCESS = '[User] Load Customer Coupons Success';
export const RESET_LOAD_CUSTOMER_COUPONS = '[User] Reset Load Customer Coupons';
export const SUBSCRIBE_CUSTOMER_COUPON = '[User] Subscribe Customer Notification Coupon';
export const SUBSCRIBE_CUSTOMER_COUPON_FAIL = '[User] Subscribe Customer Coupon Notification Fail';
export const SUBSCRIBE_CUSTOMER_COUPON_SUCCESS = '[User] Subscribe Customer Coupon Notification Success';
export const RESET_SUBSCRIBE_CUSTOMER_COUPON_PROCESS = '[User] Reset Subscribe Customer Coupon Process';
export const UNSUBSCRIBE_CUSTOMER_COUPON = '[User] Unsubscribe Customer Notification Coupon';
export const UNSUBSCRIBE_CUSTOMER_COUPON_FAIL = '[User] Unsubscribe Customer Coupon Notification Fail';
export const UNSUBSCRIBE_CUSTOMER_COUPON_SUCCESS = '[User] Unsubscribe Customer Coupon Notification Success';
export const RESET_UNSUBSCRIBE_CUSTOMER_COUPON_PROCESS = '[User] Reset Unsubscribe Customer Coupon Process';
export const CLAIM_CUSTOMER_COUPON = '[User] Claim Customer';
export const CLAIM_CUSTOMER_COUPON_FAIL = '[User] Claim Customer Fail';
export const CLAIM_CUSTOMER_COUPON_SUCCESS = '[User] Claim Customer Success';
export class LoadCustomerCoupons extends LoaderLoadAction {
    constructor(payload) {
        super(CUSTOMER_COUPONS);
        this.payload = payload;
        this.type = LOAD_CUSTOMER_COUPONS;
    }
}
export class LoadCustomerCouponsFail extends LoaderFailAction {
    constructor(payload) {
        super(CUSTOMER_COUPONS, payload);
        this.payload = payload;
        this.type = LOAD_CUSTOMER_COUPONS_FAIL;
    }
}
export class LoadCustomerCouponsSuccess extends LoaderSuccessAction {
    constructor(payload) {
        super(CUSTOMER_COUPONS);
        this.payload = payload;
        this.type = LOAD_CUSTOMER_COUPONS_SUCCESS;
    }
}
export class ResetLoadCustomerCoupons extends LoaderResetAction {
    constructor() {
        super(CUSTOMER_COUPONS);
        this.type = RESET_LOAD_CUSTOMER_COUPONS;
    }
}
// Subscribe coupon notification actions
export class SubscribeCustomerCoupon extends EntityLoadAction {
    constructor(payload) {
        super(PROCESS_FEATURE, SUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID);
        this.payload = payload;
        this.type = SUBSCRIBE_CUSTOMER_COUPON;
    }
}
export class SubscribeCustomerCouponFail extends EntityFailAction {
    constructor(payload) {
        super(PROCESS_FEATURE, SUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID, payload);
        this.payload = payload;
        this.type = SUBSCRIBE_CUSTOMER_COUPON_FAIL;
    }
}
export class SubscribeCustomerCouponSuccess extends EntitySuccessAction {
    constructor(payload) {
        super(PROCESS_FEATURE, SUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID, payload);
        this.payload = payload;
        this.type = SUBSCRIBE_CUSTOMER_COUPON_SUCCESS;
    }
}
export class ResetSubscribeCustomerCouponProcess extends EntityLoaderResetAction {
    constructor() {
        super(PROCESS_FEATURE, SUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID);
        this.type = RESET_SUBSCRIBE_CUSTOMER_COUPON_PROCESS;
    }
}
export class UnsubscribeCustomerCoupon extends EntityLoadAction {
    constructor(payload) {
        super(PROCESS_FEATURE, UNSUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID);
        this.payload = payload;
        this.type = UNSUBSCRIBE_CUSTOMER_COUPON;
    }
}
export class UnsubscribeCustomerCouponFail extends EntityFailAction {
    constructor(payload) {
        super(PROCESS_FEATURE, UNSUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID, payload);
        this.payload = payload;
        this.type = UNSUBSCRIBE_CUSTOMER_COUPON_FAIL;
    }
}
export class UnsubscribeCustomerCouponSuccess extends EntitySuccessAction {
    constructor(payload) {
        super(PROCESS_FEATURE, UNSUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID, payload);
        this.payload = payload;
        this.type = UNSUBSCRIBE_CUSTOMER_COUPON_SUCCESS;
    }
}
export class ResetUnsubscribeCustomerCouponProcess extends EntityLoaderResetAction {
    constructor() {
        super(PROCESS_FEATURE, UNSUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID);
        this.type = RESET_UNSUBSCRIBE_CUSTOMER_COUPON_PROCESS;
    }
}
export class ClaimCustomerCoupon extends EntityLoadAction {
    constructor(payload) {
        super(PROCESS_FEATURE, CLAIM_CUSTOMER_COUPON_PROCESS_ID);
        this.payload = payload;
        this.type = CLAIM_CUSTOMER_COUPON;
    }
}
export class ClaimCustomerCouponFail extends EntityFailAction {
    constructor(payload) {
        super(PROCESS_FEATURE, CLAIM_CUSTOMER_COUPON_PROCESS_ID, payload);
        this.payload = payload;
        this.type = CLAIM_CUSTOMER_COUPON_FAIL;
    }
}
export class ClaimCustomerCouponSuccess extends EntitySuccessAction {
    constructor(payload) {
        super(PROCESS_FEATURE, CLAIM_CUSTOMER_COUPON_PROCESS_ID, payload);
        this.payload = payload;
        this.type = CLAIM_CUSTOMER_COUPON_SUCCESS;
    }
}
//# sourceMappingURL=data:application/json;base64,