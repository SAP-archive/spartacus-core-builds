{"version":3,"file":"coupon-search-page-meta.resolver.d.ts","sources":["coupon-search-page-meta.resolver.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../../auth/user-auth/facade/auth.service';\nimport { BreadcrumbMeta, Page } from '../../cms/model/page.model';\nimport { PageBreadcrumbResolver, PageMetaResolver, PageTitleResolver } from '../../cms/page';\nimport { TranslationService } from '../../i18n/translation.service';\nimport { ProductSearchService } from '../../product/facade/product-search.service';\nimport { SemanticPathService } from '../../routing/configurable-routes/url-translation/semantic-path.service';\n/**\n * Resolves page meta data for the search result page, in case it's used\n * to query coupons. This is done by adding a `couponcode` query parameter\n * to the search page route.\n *\n * The page resolves an alternative page title and breadcrumb.\n */\nexport declare class CouponSearchPageResolver extends PageMetaResolver implements PageTitleResolver, PageBreadcrumbResolver {\n    protected productSearchService: ProductSearchService;\n    protected translation: TranslationService;\n    protected authService: AuthService;\n    protected route: ActivatedRoute;\n    protected semanticPathService: SemanticPathService;\n    protected total$: Observable<number>;\n    constructor(productSearchService: ProductSearchService, translation: TranslationService, authService: AuthService, route: ActivatedRoute, semanticPathService: SemanticPathService);\n    resolveBreadcrumbs(): Observable<BreadcrumbMeta[]>;\n    resolveTitle(): Observable<string>;\n    getScore(page: Page): number;\n    protected get couponCode(): string;\n}\n"]}