{"version":3,"file":"product-loading.service.d.ts","sources":["product-loading.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { Actions } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { Product } from '../../model/product.model';\nimport { LoadingScopesService } from '../../occ/services/loading-scopes.service';\nimport { StateWithProduct } from '../store/product-state';\nexport declare class ProductLoadingService {\n    protected store: Store<StateWithProduct>;\n    protected loadingScopes: LoadingScopesService;\n    protected actions$: Actions;\n    protected platformId: any;\n    protected products: {\n        [code: string]: {\n            [scope: string]: Observable<Product>;\n        };\n    };\n    constructor(store: Store<StateWithProduct>, loadingScopes: LoadingScopesService, actions$: Actions, platformId: any);\n    get(productCode: string, scopes: string[]): Observable<Product>;\n    protected initProductScopes(productCode: string, scopes: string[]): void;\n    protected getScopesIndex(scopes: string[]): string;\n    /**\n     * Creates observable for providing specified product data for the scope\n     *\n     * @param productCode\n     * @param scope\n     */\n    protected getProductForScope(productCode: string, scope: string): Observable<Product>;\n    /**\n     * Returns reload triggers for product per scope\n     *\n     * @param productCode\n     * @param scope\n     */\n    protected getProductReloadTriggers(productCode: string, scope: string): Observable<boolean>[];\n    /**\n     * Generic method that returns stream triggering reload by maxAge\n     *\n     * Could be refactored to separate service in future to use in other\n     * max age reload implementations\n     *\n     * @param loadStart$ Stream that emits on load start\n     * @param loadFinish$ Stream that emits on load finish\n     * @param maxAge max age\n     */\n    private getMaxAgeTrigger;\n}\n"]}